selector_to_html = {"a[href=\"#_CPPv4N12PayoffMatrix12PayoffMatrixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix12PayoffMatrixE6size_t\">\n<span id=\"_CPPv3N12PayoffMatrix12PayoffMatrixE6size_t\"></span><span id=\"_CPPv2N12PayoffMatrix12PayoffMatrixE6size_t\"></span><span id=\"PayoffMatrix::PayoffMatrix__s\"></span><span class=\"target\" id=\"classPayoffMatrix_1a32f96c3b8bc79739eb8d0e9d469e4e69\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PayoffMatrix</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_moves</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv412PayoffMatrix\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412PayoffMatrix\">\n<span id=\"_CPPv312PayoffMatrix\"></span><span id=\"_CPPv212PayoffMatrix\"></span><span id=\"PayoffMatrix\"></span><span class=\"target\" id=\"classPayoffMatrix\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PayoffMatrix</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK12PayoffMatrix8to_indexE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12PayoffMatrix8to_indexE6size_t6size_t\">\n<span id=\"_CPPv3NK12PayoffMatrix8to_indexE6size_t6size_t\"></span><span id=\"_CPPv2NK12PayoffMatrix8to_indexE6size_t6size_t\"></span><span id=\"PayoffMatrix::to_index__s.sCCE\"></span><span class=\"target\" id=\"classPayoffMatrix_1aaca31bd45b3d77337338ca18eb6a2a6e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_index</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">A</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">B</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12PayoffMatrix7SetupPDEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix7SetupPDEd\">\n<span id=\"_CPPv3N12PayoffMatrix7SetupPDEd\"></span><span id=\"_CPPv2N12PayoffMatrix7SetupPDEd\"></span><span id=\"PayoffMatrix::SetupPD__double\"></span><span class=\"target\" id=\"classPayoffMatrix_1a8f725f6bd5d0467c0efc31ae9a59dedb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetupPD</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">u</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12PayoffMatrix6SetValE6size_t6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix6SetValE6size_t6size_td\">\n<span id=\"_CPPv3N12PayoffMatrix6SetValE6size_t6size_td\"></span><span id=\"_CPPv2N12PayoffMatrix6SetValE6size_t6size_td\"></span><span id=\"PayoffMatrix::SetVal__s.s.double\"></span><span class=\"target\" id=\"classPayoffMatrix_1a6ef460a2cc69f2316db207348f136922\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetVal</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">self</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">other</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12PayoffMatrixclE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrixclE6size_t6size_t\">\n<span id=\"_CPPv3N12PayoffMatrixclE6size_t6size_t\"></span><span id=\"_CPPv2N12PayoffMatrixclE6size_t6size_t\"></span><span id=\"PayoffMatrix::call-operator__s.s\"></span><span class=\"target\" id=\"classPayoffMatrix_1aa7458c5efe38f725a81e0919c58f7082\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">A</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">B</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"#_CPPv4N12PayoffMatrix9num_movesE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix9num_movesE\">\n<span id=\"_CPPv3N12PayoffMatrix9num_movesE\"></span><span id=\"_CPPv2N12PayoffMatrix9num_movesE\"></span><span id=\"PayoffMatrix::num_moves__s\"></span><span class=\"target\" id=\"classPayoffMatrix_1af713cd1d130c4d7471bdbb373b6f5a3f\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">num_moves</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK12PayoffMatrixclE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12PayoffMatrixclE6size_t6size_t\">\n<span id=\"_CPPv3NK12PayoffMatrixclE6size_t6size_t\"></span><span id=\"_CPPv2NK12PayoffMatrixclE6size_t6size_t\"></span><span id=\"PayoffMatrix::call-operator__s.sC\"></span><span class=\"target\" id=\"classPayoffMatrix_1afbafcd593195f80314fd05698fd06e30\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">A</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">B</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK12PayoffMatrix7AsInputE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12PayoffMatrix7AsInputE6size_t\">\n<span id=\"_CPPv3NK12PayoffMatrix7AsInputE6size_t\"></span><span id=\"_CPPv2NK12PayoffMatrix7AsInputE6size_t\"></span><span id=\"PayoffMatrix::AsInput__sC\"></span><span class=\"target\" id=\"classPayoffMatrix_1a1e5daafbf24587fbdea24c11d2f207c4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsInput</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">player_id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12PayoffMatrix5ResetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix5ResetEv\">\n<span id=\"_CPPv3N12PayoffMatrix5ResetEv\"></span><span id=\"_CPPv2N12PayoffMatrix5ResetEv\"></span><span id=\"PayoffMatrix::Reset\"></span><span class=\"target\" id=\"classPayoffMatrix_1abf60f43507e0459669772ef4404cbe01\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Reset</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#payoffmatrix-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">PayoffMatrix.hpp<a class=\"headerlink\" href=\"#payoffmatrix-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple game theory payoff matrix. </p>", "a[href=\"#_CPPv4N12PayoffMatrix6move_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix6move_tE\">\n<span id=\"_CPPv3N12PayoffMatrix6move_tE\"></span><span id=\"_CPPv2N12PayoffMatrix6move_tE\"></span><span class=\"target\" id=\"classPayoffMatrix_1a3b496b4679bbc99df7df4f9ceea5efcc\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">move_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12PayoffMatrix14SetupSnowdriftEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix14SetupSnowdriftEd\">\n<span id=\"_CPPv3N12PayoffMatrix14SetupSnowdriftEd\"></span><span id=\"_CPPv2N12PayoffMatrix14SetupSnowdriftEd\"></span><span id=\"PayoffMatrix::SetupSnowdrift__double\"></span><span class=\"target\" id=\"classPayoffMatrix_1a88a12a5d898fc7687a81f293b19bffdd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetupSnowdrift</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cost</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12PayoffMatrix6payoffE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12PayoffMatrix6payoffE\">\n<span id=\"_CPPv3N12PayoffMatrix6payoffE\"></span><span id=\"_CPPv2N12PayoffMatrix6payoffE\"></span><span id=\"PayoffMatrix::payoff__vector:double:\"></span><span class=\"target\" id=\"classPayoffMatrix_1a27cab5cfa2791fa852d831f521e7fdf7\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">payoff</span></span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
