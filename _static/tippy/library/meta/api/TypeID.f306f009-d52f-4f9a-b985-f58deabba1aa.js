selector_to_html = {"a[href=\"#_CPPv4N6TypeID4InfoE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4InfoE\">\n<span id=\"_CPPv3N6TypeID4InfoE\"></span><span id=\"_CPPv2N6TypeID4InfoE\"></span><span id=\"TypeID::Info\"></span><span class=\"target\" id=\"structTypeID_1_1Info\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Info</span></span></span><br/></dt><dd><p>Subclassed by TypeID::InfoData&lt; T &gt;</p></dd>", "a[href=\"#_CPPv4NK6TypeID4Info14GetRemovePtrIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info14GetRemovePtrIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info14GetRemovePtrIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info14GetRemovePtrIDEv\"></span><span id=\"TypeID::Info::GetRemovePtrIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a6fb625c50e7913a6336de3fb2a258852\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemovePtrID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData6IsVoidEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData6IsVoidEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData6IsVoidEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData6IsVoidEv\"></span><span id=\"TypeID::InfoData::IsVoidC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a732908785223eff358dfa72714eaa4c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsVoid</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10FromDoubleEdK3PtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10FromDoubleEdK3PtrIvE\">\n<span id=\"_CPPv3NK6TypeID8InfoData10FromDoubleEdK3PtrIvE\"></span><span id=\"_CPPv2NK6TypeID8InfoData10FromDoubleEdK3PtrIvE\"></span><span id=\"TypeID::InfoData::FromDouble__double.Ptr:void:CC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ac413b86659b81837f5956ead5144ed0e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"p\"><span class=\"pre\">[[</span></span><span class=\"pre\">maybe_unused</span><span class=\"p\"><span class=\"pre\">]]</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"p\"><span class=\"pre\">[[</span></span><span class=\"pre\">maybe_unused</span><span class=\"p\"><span class=\"pre\">]]</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID22GetRemovePointerTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID22GetRemovePointerTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID22GetRemovePointerTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID22GetRemovePointerTypeIDEv\"></span><span id=\"TypeID::GetRemovePointerTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a867a0b7c7fa8e887f4f4c6c637894974\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemovePointerTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID7SetNameERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID7SetNameERKNSt6stringE\">\n<span id=\"_CPPv3N6TypeID7SetNameERKNSt6stringE\"></span><span id=\"_CPPv2N6TypeID7SetNameERKNSt6stringE\"></span><span id=\"TypeID::SetName__ssCR\"></span><span class=\"target\" id=\"structTypeID_1a5839cc6bd839ac730c7f9759cebf71a1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetName</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_name</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Update the name for ALL instances of this TypeID. </p></dd>", "a[href=\"#_CPPv4N6TypeID4InfoD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4InfoD0Ev\">\n<span id=\"_CPPv3N6TypeID4InfoD0Ev\"></span><span id=\"_CPPv2N6TypeID4InfoD0Ev\"></span><span id=\"TypeID::Info::~Info\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a2b484f392a52c6b251172b31e063ec30\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~Info</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData8ToDoubleEK3PtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData8ToDoubleEK3PtrIKvE\">\n<span id=\"_CPPv3NK6TypeID8InfoData8ToDoubleEK3PtrIKvE\"></span><span id=\"_CPPv2NK6TypeID8InfoData8ToDoubleEK3PtrIKvE\"></span><span id=\"TypeID::InfoData::ToDouble__Ptr:voidC:CC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a5f998c43add82446a0711a9c2ce4b54b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Treat the memory referred to by a void pointer as the current type, convert it to a double, and return that value. (Default to nan if no such conversion is possible.) </p></dd>", "a[href=\"#_CPPv4NK6TypeID4Info7IsClassEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info7IsClassEv\">\n<span id=\"_CPPv3NK6TypeID4Info7IsClassEv\"></span><span id=\"_CPPv2NK6TypeID4Info7IsClassEv\"></span><span id=\"TypeID::Info::IsClassC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a00b9228ef6da2ae8e87eb53f6546f2b4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsClass</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeIDltE6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDltE6TypeID\">\n<span id=\"_CPPv3NK6TypeIDltE6TypeID\"></span><span id=\"_CPPv2NK6TypeIDltE6TypeID\"></span><span id=\"TypeID::lt-operator__TypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a063b3a4b2df827dbafe55033eb3ada5c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID7IsArrayEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID7IsArrayEv\">\n<span id=\"_CPPv3NK6TypeID7IsArrayEv\"></span><span id=\"_CPPv2NK6TypeID7IsArrayEv\"></span><span id=\"TypeID::IsArrayC\"></span><span class=\"target\" id=\"structTypeID_1a7718cd00fe47698ae19ba6c9e278d30f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsArray</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info9IsPointerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info9IsPointerEv\">\n<span id=\"_CPPv3NK6TypeID4Info9IsPointerEv\"></span><span id=\"_CPPv2NK6TypeID4Info9IsPointerEv\"></span><span id=\"TypeID::Info::IsPointerC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1af18e7b61605f6f90f425e405a54379fd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsPointer</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info8ToStringEK3PtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info8ToStringEK3PtrIKvE\">\n<span id=\"_CPPv3NK6TypeID4Info8ToStringEK3PtrIKvE\"></span><span id=\"_CPPv2NK6TypeID4Info8ToStringEK3PtrIKvE\"></span><span id=\"TypeID::Info::ToString__Ptr:voidC:CC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a8ca4852855e8dc3bf7461377e72675d6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Treat the memory referred to by a void pointer as the current type, convert it to a string, and return that value. (Default to empty if no such conversion is possible.) </p></dd>", "a[href=\"#_CPPv4NK6TypeID23GetRemoveVolatileTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID23GetRemoveVolatileTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID23GetRemoveVolatileTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID23GetRemoveVolatileTypeIDEv\"></span><span id=\"TypeID::GetRemoveVolatileTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1ab75941cd285fad2ca822b1a84dfbbe5d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveVolatileTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info8ToDoubleEK3PtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info8ToDoubleEK3PtrIKvE\">\n<span id=\"_CPPv3NK6TypeID4Info8ToDoubleEK3PtrIKvE\"></span><span id=\"_CPPv2NK6TypeID4Info8ToDoubleEK3PtrIKvE\"></span><span id=\"TypeID::Info::ToDouble__Ptr:voidC:CC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1ac644e50817c755ff7cbeca11d200b47c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Treat the memory referred to by a void pointer as the current type, convert it to a double, and return that value. (Default to nan if no such conversion is possible.) </p></dd>", "a[href=\"#_CPPv414SetupTypeNamesv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414SetupTypeNamesv\">\n<span id=\"_CPPv314SetupTypeNamesv\"></span><span id=\"_CPPv214SetupTypeNamesv\"></span><span id=\"SetupTypeNames\"></span><span class=\"target\" id=\"TypeID_8hpp_1a28dc7f20f4109d44521460898f062f14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetupTypeNames</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a bunch of standard type names to be more readable. </p></dd>", "a[href=\"#_CPPv4NK6TypeID8ToDoubleEK3PtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8ToDoubleEK3PtrIKvE\">\n<span id=\"_CPPv3NK6TypeID8ToDoubleEK3PtrIKvE\"></span><span id=\"_CPPv2NK6TypeID8ToDoubleEK3PtrIKvE\"></span><span id=\"TypeID::ToDouble__Ptr:voidC:CC\"></span><span class=\"target\" id=\"structTypeID_1a0c287ecde69f7d7c6d60494c29d1fd11\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID4Info4nameE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4Info4nameE\">\n<span id=\"_CPPv3N6TypeID4Info4nameE\"></span><span id=\"_CPPv2N6TypeID4Info4nameE\"></span><span id=\"TypeID::Info::name__ss\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a8d6552e7c98d6f6c8d6e71cde3374b6f\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">name</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"[unknown</span> <span class=\"pre\">type]\"</span></span><br/></dt><dd><p>Unique (ideally human-readable) type name. </p></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10IsFunctionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10IsFunctionEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData10IsFunctionEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData10IsFunctionEv\"></span><span id=\"TypeID::InfoData::IsFunctionC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ac9799745488771c5565cfbfc03331ee7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID6TypeIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID6TypeIDE6size_t\">\n<span id=\"_CPPv3N6TypeID6TypeIDE6size_t\"></span><span id=\"_CPPv2N6TypeID6TypeIDE6size_t\"></span><span id=\"TypeID::TypeID__s\"></span><span class=\"target\" id=\"structTypeID_1ad74408f2dd60e076a442552ea6d3acdf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info12GetElementIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info12GetElementIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info12GetElementIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info12GetElementIDEv\"></span><span id=\"TypeID::Info::GetElementIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a905ae7e2201563cb7ad2ae7cd703a65a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetElementID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeIDcv6size_tEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDcv6size_tEv\">\n<span id=\"_CPPv3NK6TypeIDcv6size_tEv\"></span><span id=\"_CPPv2NK6TypeIDcv6size_tEv\"></span><span id=\"TypeID::castto-s-operatorC\"></span><span class=\"target\" id=\"structTypeID_1a1a607218ade62cf87f7848feb70ebb0d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E14GetTypePackIDs6vectorI6TypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14GetTypePackIDs6vectorI6TypeIDEv\">\n<span id=\"_CPPv3I0E14GetTypePackIDsv\"></span><span id=\"_CPPv2I0E14GetTypePackIDsv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1a9bc1e8ccf338bbfc21e3acd2cc83b6e0\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypePackIDs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Retrieve a vector of TypeIDs for a TypePack of types passed in. </p></dd>", "a[href=\"#_CPPv4NK6TypeID9IsTrivialEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID9IsTrivialEv\">\n<span id=\"_CPPv3NK6TypeID9IsTrivialEv\"></span><span id=\"_CPPv2NK6TypeID9IsTrivialEv\"></span><span id=\"TypeID::IsTrivialC\"></span><span class=\"target\" id=\"structTypeID_1a153e507a707cf2c1e8a4013149a11a0f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTrivial</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData12GetElementIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData12GetElementIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData12GetElementIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData12GetElementIDEv\"></span><span id=\"TypeID::InfoData::GetElementIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ad2355019c96e187d72968d0bf04cc3f5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetElementID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\">\n<span id=\"_CPPv3I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\"></span><span id=\"_CPPv2I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasEMPGetTypeName_3_01decoy__t_3_01T_00_01decltype_07T_1_1EMPGetTypeName_07_08_08_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasEMPGetTypeName</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"meta.html#_CPPv4I00E7decoy_t\" title=\"decoy_t\"><span class=\"n\"><span class=\"pre\">decoy_t</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\" title=\"HasEMPGetTypeName&lt;decoy_t&lt;T, decltype(T::EMPGetTypeName())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\" title=\"HasEMPGetTypeName&lt;decoy_t&lt;T, decltype(T::EMPGetTypeName())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">EMPGetTypeName</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10FromStringERKNSt6stringEK3PtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10FromStringERKNSt6stringEK3PtrIvE\">\n<span id=\"_CPPv3NK6TypeID4Info10FromStringERKNSt6stringEK3PtrIvE\"></span><span id=\"_CPPv2NK6TypeID4Info10FromStringERKNSt6stringEK3PtrIvE\"></span><span id=\"TypeID::Info::FromString__ssCR.Ptr:void:CC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a7f0b56e40c632479de9124c6e0b831cf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Take a string and a void pointer, treat the pointer as the correct type, and assign the string to it (if possible). Returns success. </p></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10FromDoubleEdK3PtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10FromDoubleEdK3PtrIvE\">\n<span id=\"_CPPv3NK6TypeID4Info10FromDoubleEdK3PtrIvE\"></span><span id=\"_CPPv2NK6TypeID4Info10FromDoubleEdK3PtrIvE\"></span><span id=\"TypeID::Info::FromDouble__double.Ptr:void:CC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a40771060bf17b2e564055ebb2e233c93\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Take a double and a void pointer, treat the pointer as the correct type, and assign the double to it (if possible). Returns success. </p></dd>", "a[href=\"#_CPPv4NK6TypeIDneE6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDneE6TypeID\">\n<span id=\"_CPPv3NK6TypeIDneE6TypeID\"></span><span id=\"_CPPv2NK6TypeIDneE6TypeID\"></span><span id=\"TypeID::neq-operator__TypeIDC\"></span><span class=\"target\" id=\"structTypeID_1af609dab48d443fdfbd3218c92422c721\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info7IsEmptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info7IsEmptyEv\">\n<span id=\"_CPPv3NK6TypeID4Info7IsEmptyEv\"></span><span id=\"_CPPv2NK6TypeID4Info7IsEmptyEv\"></span><span id=\"TypeID::Info::IsEmptyC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a572ac9cc826e2c62cc09b3bbdfee8315\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsEmpty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info6IsVoidEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info6IsVoidEv\">\n<span id=\"_CPPv3NK6TypeID4Info6IsVoidEv\"></span><span id=\"_CPPv2NK6TypeID4Info6IsVoidEv\"></span><span id=\"TypeID::Info::IsVoidC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a3430f8994c302c987f592f0dbaa23a07\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsVoid</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID8info_ptrE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID8info_ptrE\">\n<span id=\"_CPPv3N6TypeID8info_ptrE\"></span><span id=\"_CPPv2N6TypeID8info_ptrE\"></span><span id=\"TypeID::info_ptr__info_t\"></span><span class=\"target\" id=\"structTypeID_1a4191d9aa217107bb4f6be43360ed0bd1\"></span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID6info_tE\" title=\"TypeID::info_t\"><span class=\"n\"><span class=\"pre\">info_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">info_ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID11IsReferenceEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID11IsReferenceEv\">\n<span id=\"_CPPv3NK6TypeID11IsReferenceEv\"></span><span id=\"_CPPv2NK6TypeID11IsReferenceEv\"></span><span id=\"TypeID::IsReferenceC\"></span><span class=\"target\" id=\"structTypeID_1adb3b97cb58bff22faa338855dabd0bad\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsReference</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData7IsClassEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData7IsClassEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData7IsClassEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData7IsClassEv\"></span><span id=\"TypeID::InfoData::IsClassC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ac49edaaf6d29ddb9bb7534f4b026b8db\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsClass</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID6TypeIDE6info_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID6TypeIDE6info_t\">\n<span id=\"_CPPv3N6TypeID6TypeIDE6info_t\"></span><span id=\"_CPPv2N6TypeID6TypeIDE6info_t\"></span><span id=\"TypeID::TypeID__info_t\"></span><span class=\"target\" id=\"structTypeID_1a7ee040725918e98da75ec45b7bc9efbc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID6info_tE\" title=\"TypeID::info_t\"><span class=\"n\"><span class=\"pre\">info_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_info</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID7GetSizeEv\">\n<span id=\"_CPPv3NK6TypeID7GetSizeEv\"></span><span id=\"_CPPv2NK6TypeID7GetSizeEv\"></span><span id=\"TypeID::GetSizeC\"></span><span class=\"target\" id=\"structTypeID_1a4ab5b7cb0b69726b42eaad8fcc291777\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10IsVolatileEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10IsVolatileEv\">\n<span id=\"_CPPv3NK6TypeID4Info10IsVolatileEv\"></span><span id=\"_CPPv2NK6TypeID4Info10IsVolatileEv\"></span><span id=\"TypeID::Info::IsVolatileC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1af7bbdb0b21cd79890a85f34aa1045d92\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsVolatile</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID5GetIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID5GetIDEv\">\n<span id=\"_CPPv3NK6TypeID5GetIDEv\"></span><span id=\"_CPPv2NK6TypeID5GetIDEv\"></span><span id=\"TypeID::GetIDC\"></span><span class=\"target\" id=\"structTypeID_1a9776866399b4f028336cceda7a7c214f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get a unique numerical ID for this TypeID object. </p></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData13GetRemoveCVIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData13GetRemoveCVIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData13GetRemoveCVIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData13GetRemoveCVIDEv\"></span><span id=\"TypeID::InfoData::GetRemoveCVIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1abe6c8c037eef7cc2600c4e52b54f7716\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveCVID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID20GetRemoveConstTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID20GetRemoveConstTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID20GetRemoveConstTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID20GetRemoveConstTypeIDEv\"></span><span id=\"TypeID::GetRemoveConstTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a454a4806bd595dabe46331c5933b0f03\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveConstTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData11IsReferenceEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData11IsReferenceEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData11IsReferenceEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData11IsReferenceEv\"></span><span id=\"TypeID::InfoData::IsReferenceC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1aa73ef86a4e80e7d879a1486af048abb3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsReference</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID6TypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID6TypeIDEv\">\n<span id=\"_CPPv3N6TypeID6TypeIDEv\"></span><span id=\"_CPPv2N6TypeID6TypeIDEv\"></span><span id=\"TypeID::TypeID\"></span><span class=\"target\" id=\"structTypeID_1a7d8e6abe13828a3b579cceca1e971e68\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info21GetRemoveAllExtentsIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info21GetRemoveAllExtentsIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info21GetRemoveAllExtentsIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info21GetRemoveAllExtentsIDEv\"></span><span id=\"TypeID::Info::GetRemoveAllExtentsIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1abf936a2142ca2d222bdb4a36c735d056\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveAllExtentsID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID10IsVolatileEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID10IsVolatileEv\">\n<span id=\"_CPPv3NK6TypeID10IsVolatileEv\"></span><span id=\"_CPPv2NK6TypeID10IsVolatileEv\"></span><span id=\"TypeID::IsVolatileC\"></span><span class=\"target\" id=\"structTypeID_1aaf1e4d640f232df749d807aee9057d9b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsVolatile</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData8IsObjectEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData8IsObjectEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData8IsObjectEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData8IsObjectEv\"></span><span id=\"TypeID::InfoData::IsObjectC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a95cc4aa311599c4fae13d5faf1ca8584\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsObject</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN6TypeID8InfoDataE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN6TypeID8InfoDataE\">\n<span id=\"_CPPv3I0EN6TypeID8InfoDataE\"></span><span id=\"_CPPv2I0EN6TypeID8InfoDataE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTypeID_1_1InfoData\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InfoData</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID4InfoE\" title=\"TypeID::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv46TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46TypeID\">\n<span id=\"_CPPv36TypeID\"></span><span id=\"_CPPv26TypeID\"></span><span id=\"TypeID\"></span><span class=\"target\" id=\"structTypeID\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></span><br/></dt><dd><p>Basic TypeID data structure. </p></dd>", "a[href=\"#_CPPv4NK6TypeID4Info12IsArithmeticEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info12IsArithmeticEv\">\n<span id=\"_CPPv3NK6TypeID4Info12IsArithmeticEv\"></span><span id=\"_CPPv2NK6TypeID4Info12IsArithmeticEv\"></span><span id=\"TypeID::Info::IsArithmeticC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1af37b034a8cee3171f577570621d2d3dd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsArithmetic</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData21GetRemoveAllExtentsIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData21GetRemoveAllExtentsIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData21GetRemoveAllExtentsIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData21GetRemoveAllExtentsIDEv\"></span><span id=\"TypeID::InfoData::GetRemoveAllExtentsIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a836f55cd017c18a3b0c1bd2affcb9554\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveAllExtentsID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData7IsArrayEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData7IsArrayEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData7IsArrayEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData7IsArrayEv\"></span><span id=\"TypeID::InfoData::IsArrayC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a981a223c4943df46758699334416d011\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsArray</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData7IsConstEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData7IsConstEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData7IsConstEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData7IsConstEv\"></span><span id=\"TypeID::InfoData::IsConstC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ae993779987d79a08ac93f7af67572684\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsConst</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeIDgtE6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDgtE6TypeID\">\n<span id=\"_CPPv3NK6TypeIDgtE6TypeID\"></span><span id=\"_CPPv2NK6TypeIDgtE6TypeID\"></span><span id=\"TypeID::gt-operator__TypeIDC\"></span><span class=\"target\" id=\"structTypeID_1ac0e2cdf4d68158423863c00669e18852\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeIDD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeIDD0Ev\">\n<span id=\"_CPPv3N6TypeIDD0Ev\"></span><span id=\"_CPPv2N6TypeIDD0Ev\"></span><span id=\"TypeID::~TypeID\"></span><span class=\"target\" id=\"structTypeID_1a22ee670f81d0bf2ac354d8ff21020609\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~TypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData14GetRemovePtrIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData14GetRemovePtrIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData14GetRemovePtrIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData14GetRemovePtrIDEv\"></span><span id=\"TypeID::InfoData::GetRemovePtrIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a2fe5cede2f1a2feca1c65603377ee691\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemovePtrID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10FromStringERKNSt6stringEK3PtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10FromStringERKNSt6stringEK3PtrIvE\">\n<span id=\"_CPPv3NK6TypeID8InfoData10FromStringERKNSt6stringEK3PtrIvE\"></span><span id=\"_CPPv2NK6TypeID8InfoData10FromStringERKNSt6stringEK3PtrIvE\"></span><span id=\"TypeID::InfoData::FromString__ssCR.Ptr:void:CC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a367012fcafdba5c103f035bc65596d12\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Take a string and a void pointer, treat the pointer as the correct type, and assign the string to it (if possible). Returns success. </p></dd>", "a[href=\"#_CPPv4NK6TypeIDcvbEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDcvbEv\">\n<span id=\"_CPPv3NK6TypeIDcvbEv\"></span><span id=\"_CPPv2NK6TypeIDcvbEv\"></span><span id=\"TypeID::castto-b-operatorC\"></span><span class=\"target\" id=\"structTypeID_1a17339ed396b62b7b4b892c39d6f97e7a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID21GetRemoveExtentTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID21GetRemoveExtentTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID21GetRemoveExtentTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID21GetRemoveExtentTypeIDEv\"></span><span id=\"TypeID::GetRemoveExtentTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a618e270f7ded9ceafa3bea9f203f1737\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveExtentTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10GetDecayIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10GetDecayIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData10GetDecayIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData10GetDecayIDEv\"></span><span id=\"TypeID::InfoData::GetDecayIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a7bc1dc9e32e905fa1c8e0f5ef0d58e64\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDecayID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID14SetInitializedEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID14SetInitializedEb\">\n<span id=\"_CPPv3N6TypeID14SetInitializedEb\"></span><span id=\"_CPPv2N6TypeID14SetInitializedEb\"></span><span id=\"TypeID::SetInitialized__b\"></span><span class=\"target\" id=\"structTypeID_1ac10c5bcfe28a4cf2d12929e5aa158925\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetInitialized</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID4Info4InfoERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4Info4InfoERKNSt6stringE\">\n<span id=\"_CPPv3N6TypeID4Info4InfoERKNSt6stringE\"></span><span id=\"_CPPv2N6TypeID4Info4InfoERKNSt6stringE\"></span><span id=\"TypeID::Info::Info__ssCR\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a8520525732cdaafb608074af7df37d66\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Info</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_name</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID4Info4initE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4Info4initE\">\n<span id=\"_CPPv3N6TypeID4Info4initE\"></span><span id=\"_CPPv2N6TypeID4Info4initE\"></span><span id=\"TypeID::Info::init__b\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a4872330a2ea6fe386937307ca0c516ec\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">init</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><br/></dt><dd><p>Has this info been initialized yet? </p></dd>", "a[href=\"#_CPPv4N6TypeID17GetUnknownInfoPtrEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID17GetUnknownInfoPtrEv\">\n<span id=\"_CPPv3N6TypeID17GetUnknownInfoPtrEv\"></span><span id=\"_CPPv2N6TypeID17GetUnknownInfoPtrEv\"></span><span id=\"TypeID::GetUnknownInfoPtr\"></span><span class=\"target\" id=\"structTypeID_1a995ab9924969cdab5afc4f8ed21a6403\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID6info_tE\" title=\"TypeID::info_t\"><span class=\"n\"><span class=\"pre\">info_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUnknownInfoPtr</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info7GetSizeEv\">\n<span id=\"_CPPv3NK6TypeID4Info7GetSizeEv\"></span><span id=\"_CPPv2NK6TypeID4Info7GetSizeEv\"></span><span id=\"TypeID::Info::GetSizeC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1af589d8d5dbdb52e868aa571e7ce91b80\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return the size (in bytes) of objects of this type. </p></dd>", "a[href=\"#_CPPv4N6TypeID10FromDoubleEdK3PtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID10FromDoubleEdK3PtrIvE\">\n<span id=\"_CPPv3N6TypeID10FromDoubleEdK3PtrIvE\"></span><span id=\"_CPPv2N6TypeID10FromDoubleEdK3PtrIvE\"></span><span id=\"TypeID::FromDouble__double.Ptr:void:C\"></span><span class=\"target\" id=\"structTypeID_1a988d52018a959ceceaf20b96a517704f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID25GetRemoveAllExtentsTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID25GetRemoveAllExtentsTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID25GetRemoveAllExtentsTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID25GetRemoveAllExtentsTypeIDEv\"></span><span id=\"TypeID::GetRemoveAllExtentsTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a2dc8acf09e923d54842abb4cd327d833\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveAllExtentsTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID4Info4InfoEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4Info4InfoEv\">\n<span id=\"_CPPv3N6TypeID4Info4InfoEv\"></span><span id=\"_CPPv2N6TypeID4Info4InfoEv\"></span><span id=\"TypeID::Info::Info\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a1e713e7f4963055b64d472e99cf7bf63\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Info</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID6IsVoidEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID6IsVoidEv\">\n<span id=\"_CPPv3NK6TypeID6IsVoidEv\"></span><span id=\"_CPPv2NK6TypeID6IsVoidEv\"></span><span id=\"TypeID::IsVoidC\"></span><span class=\"target\" id=\"structTypeID_1a5bac4a4eec2c4a5bb0fcef31305945c2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsVoid</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10IsTypePackEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10IsTypePackEv\">\n<span id=\"_CPPv3NK6TypeID4Info10IsTypePackEv\"></span><span id=\"_CPPv2NK6TypeID4Info10IsTypePackEv\"></span><span id=\"TypeID::Info::IsTypePackC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a87e29506818730fb7d2e29729c0e0430\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTypePack</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID7IsEmptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID7IsEmptyEv\">\n<span id=\"_CPPv3NK6TypeID7IsEmptyEv\"></span><span id=\"_CPPv2NK6TypeID7IsEmptyEv\"></span><span id=\"TypeID::IsEmptyC\"></span><span class=\"target\" id=\"structTypeID_1a1aecf05d20df9cace7a1691163dadc1f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsEmpty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info11IsReferenceEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info11IsReferenceEv\">\n<span id=\"_CPPv3NK6TypeID4Info11IsReferenceEv\"></span><span id=\"_CPPv2NK6TypeID4Info11IsReferenceEv\"></span><span id=\"TypeID::Info::IsReferenceC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a38f2c2f4ae764cadb17935f4b8169f56\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsReference</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4IDpE10GetTypeIDs6vectorI6TypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE10GetTypeIDs6vectorI6TypeIDEv\">\n<span id=\"_CPPv3IDpE10GetTypeIDsv\"></span><span id=\"_CPPv2IDpE10GetTypeIDsv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1a1c9c2be04cbc68ee933d030c174e2c3a\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeIDs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Retrieve a vector of TypeIDs for a pack of types passed in. </p></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10IsVolatileEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10IsVolatileEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData10IsVolatileEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData10IsVolatileEv\"></span><span id=\"TypeID::InfoData::IsVolatileC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a7e352c4e73a6e3b6f1ba31daa9440093\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsVolatile</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData9IsPointerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData9IsPointerEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData9IsPointerEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData9IsPointerEv\"></span><span id=\"TypeID::InfoData::IsPointerC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a98d20c2bab8658fd6e9e6c7305f3845b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsPointer</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10IsAbstractEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10IsAbstractEv\">\n<span id=\"_CPPv3NK6TypeID4Info10IsAbstractEv\"></span><span id=\"_CPPv2NK6TypeID4Info10IsAbstractEv\"></span><span id=\"TypeID::Info::IsAbstractC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a1c3e1de5aaf7623c65fbae7bd3d54e16\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsAbstract</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0ENK6TypeID6IsTypeEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK6TypeID6IsTypeEbv\">\n<span id=\"_CPPv3I0ENK6TypeID6IsTypeEv\"></span><span id=\"_CPPv2I0ENK6TypeID6IsTypeEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTypeID_1a3463607af34d883c7282fc263b2276d9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsType</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData16GetRemoveConstIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData16GetRemoveConstIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData16GetRemoveConstIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData16GetRemoveConstIDEv\"></span><span id=\"TypeID::InfoData::GetRemoveConstIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a9d1b4b6ac04a46e69ff5183ef9156856\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveConstID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"meta.html#_CPPv4I00E7decoy_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7decoy_t\">\n<span id=\"_CPPv3I00E7decoy_t\"></span><span id=\"_CPPv2I00E7decoy_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aa4f756a7e078c5689cc1eb42033f4596\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">decoy_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7decoy_t\" title=\"decoy_t::REAL_TYPE\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeIDleE6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDleE6TypeID\">\n<span id=\"_CPPv3NK6TypeIDleE6TypeID\"></span><span id=\"_CPPv2NK6TypeIDleE6TypeID\"></span><span id=\"TypeID::lte-operator__TypeIDC\"></span><span class=\"target\" id=\"structTypeID_1ab0e2d65a43e31568ad8503b508268e66\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID14GetDecayTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID14GetDecayTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID14GetDecayTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID14GetDecayTypeIDEv\"></span><span id=\"TypeID::GetDecayTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1ad5adb849fa71b5fe936bf41dca423318\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDecayTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10GetDecayIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10GetDecayIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info10GetDecayIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info10GetDecayIDEv\"></span><span id=\"TypeID::Info::GetDecayIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a7c3b6a0acfc075418b09da57cf8487ff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDecayID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10IsAbstractEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10IsAbstractEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData10IsAbstractEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData10IsAbstractEv\"></span><span id=\"TypeID::InfoData::IsAbstractC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ad7d9d6c86d1ab078ad2a366ee3d10a2d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsAbstract</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData9IsTrivialEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData9IsTrivialEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData9IsTrivialEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData9IsTrivialEv\"></span><span id=\"TypeID::InfoData::IsTrivialC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1aeafe1f3718a515c689eedeaf117ea7d8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTrivial</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData17GetRemoveExtentIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData17GetRemoveExtentIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData17GetRemoveExtentIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData17GetRemoveExtentIDEv\"></span><span id=\"TypeID::InfoData::GetRemoveExtentIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a191527508d3a340e718c76e0940b01f0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveExtentID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData7GetSizeEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData7GetSizeEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData7GetSizeEv\"></span><span id=\"TypeID::InfoData::GetSizeC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ac7e7fc2ad113f2c29e04de53efcc19e4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Return the size (in bytes) of objects of this type. </p></dd>", "a[href=\"#_CPPv4NK6TypeID7IsConstEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID7IsConstEv\">\n<span id=\"_CPPv3NK6TypeID7IsConstEv\"></span><span id=\"_CPPv2NK6TypeID7IsConstEv\"></span><span id=\"TypeID::IsConstC\"></span><span class=\"target\" id=\"structTypeID_1a47def9157ad57abc987d19c8b5558db3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsConst</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#typeid-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypeID.hpp<a class=\"headerlink\" href=\"#typeid-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TypeID provides an easy way to convert types to strings. </p><p>TypeID provides an easy way to compare types, analyze them, and convert to strings. All TypeID objects are consistent within a type, and are ordinal and hashable.</p>", "a[href=\"#_CPPv4I0DpENK6TypeID8IsTypeInEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpENK6TypeID8IsTypeInEbv\">\n<span id=\"_CPPv3I0DpENK6TypeID8IsTypeInEv\"></span><span id=\"_CPPv2I0DpENK6TypeID8IsTypeInEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTypeID_1abf26ec4a6ee4eacc43ca1309cc2bf5cf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTypeIn</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData14GetRemoveRefIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData14GetRemoveRefIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData14GetRemoveRefIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData14GetRemoveRefIDEv\"></span><span id=\"TypeID::InfoData::GetRemoveRefIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a3ecaf9d584ec56b6a792923cf40e7716\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveRefID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID7GetNameEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID7GetNameEv\">\n<span id=\"_CPPv3NK6TypeID7GetNameEv\"></span><span id=\"_CPPv2NK6TypeID7GetNameEv\"></span><span id=\"TypeID::GetNameC\"></span><span class=\"target\" id=\"structTypeID_1a6ffecf3606a6515fe1a94a0c55ae0b9f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetName</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the name generated for this TypeID (ideally unique) </p></dd>", "a[href=\"#_CPPv4I00E17HasEMPGetTypeName\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E17HasEMPGetTypeName\">\n<span id=\"_CPPv3I00E17HasEMPGetTypeName\"></span><span id=\"_CPPv2I00E17HasEMPGetTypeName\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasEMPGetTypeName\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasEMPGetTypeName</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData10IsTypePackEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData10IsTypePackEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData10IsTypePackEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData10IsTypePackEv\"></span><span id=\"TypeID::InfoData::IsTypePackC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1a7f65aece5951f343939d6036577c3cf6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTypePack</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info13GetRemoveCVIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info13GetRemoveCVIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info13GetRemoveCVIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info13GetRemoveCVIDEv\"></span><span id=\"TypeID::Info::GetRemoveCVIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1aa724c7ebabfd3b21c19f137493df25b0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveCVID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID12IsArithmeticEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID12IsArithmeticEv\">\n<span id=\"_CPPv3NK6TypeID12IsArithmeticEv\"></span><span id=\"_CPPv2NK6TypeID12IsArithmeticEv\"></span><span id=\"TypeID::IsArithmeticC\"></span><span class=\"target\" id=\"structTypeID_1a81157b179470cac660e55698e036f571\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsArithmetic</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8IsObjectEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8IsObjectEv\">\n<span id=\"_CPPv3NK6TypeID8IsObjectEv\"></span><span id=\"_CPPv2NK6TypeID8IsObjectEv\"></span><span id=\"TypeID::IsObjectC\"></span><span class=\"target\" id=\"structTypeID_1aa25a4b8c07bc345f6517828551c69d5f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsObject</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData8ToStringEK3PtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData8ToStringEK3PtrIKvE\">\n<span id=\"_CPPv3NK6TypeID8InfoData8ToStringEK3PtrIKvE\"></span><span id=\"_CPPv2NK6TypeID8InfoData8ToStringEK3PtrIKvE\"></span><span id=\"TypeID::InfoData::ToString__Ptr:voidC:CC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ab65b84950a65d8b6af617601361b6290\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Treat the memory referred to by a void pointer as the current type, convert it to a string, and return that value. (Default to empty if no such conversion is possible.) </p></dd>", "a[href=\"#_CPPv4N6TypeID10FromStringERKNSt6stringEK3PtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID10FromStringERKNSt6stringEK3PtrIvE\">\n<span id=\"_CPPv3N6TypeID10FromStringERKNSt6stringEK3PtrIvE\"></span><span id=\"_CPPv2N6TypeID10FromStringERKNSt6stringEK3PtrIvE\"></span><span id=\"TypeID::FromString__ssCR.Ptr:void:C\"></span><span class=\"target\" id=\"structTypeID_1ae67adb4dbbd7ee75b76db5059ea38665\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info9IsTrivialEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info9IsTrivialEv\">\n<span id=\"_CPPv3NK6TypeID4Info9IsTrivialEv\"></span><span id=\"_CPPv2NK6TypeID4Info9IsTrivialEv\"></span><span id=\"TypeID::Info::IsTrivialC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a9840abb17e87b65962f89982e3fa08c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTrivial</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info19GetRemoveVolatileIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info19GetRemoveVolatileIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info19GetRemoveVolatileIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info19GetRemoveVolatileIDEv\"></span><span id=\"TypeID::Info::GetRemoveVolatileIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a411e8a94c67db66990e5fe16ac9e3ccf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveVolatileID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID6TypeIDERK6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID6TypeIDERK6TypeID\">\n<span id=\"_CPPv3N6TypeID6TypeIDERK6TypeID\"></span><span id=\"_CPPv2N6TypeID6TypeIDERK6TypeID\"></span><span id=\"TypeID::TypeID__TypeIDCR\"></span><span class=\"target\" id=\"structTypeID_1a0fbba94bf7fac7d62a58d1e4d2d3d177\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID6TypeIDERK6TypeID\" title=\"TypeID::TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeIDeqE6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDeqE6TypeID\">\n<span id=\"_CPPv3NK6TypeIDeqE6TypeID\"></span><span id=\"_CPPv2NK6TypeIDeqE6TypeID\"></span><span id=\"TypeID::eq-operator__TypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a6f8696e432400b170885a70186822761\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID7IsClassEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID7IsClassEv\">\n<span id=\"_CPPv3NK6TypeID7IsClassEv\"></span><span id=\"_CPPv2NK6TypeID7IsClassEv\"></span><span id=\"TypeID::IsClassC\"></span><span class=\"target\" id=\"structTypeID_1aecf36ccd898df0012f28afee190e4fe0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsClass</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8ToStringEK3PtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8ToStringEK3PtrIKvE\">\n<span id=\"_CPPv3NK6TypeID8ToStringEK3PtrIKvE\"></span><span id=\"_CPPv2NK6TypeID8ToStringEK3PtrIKvE\"></span><span id=\"TypeID::ToString__Ptr:voidC:CC\"></span><span class=\"target\" id=\"structTypeID_1abbbbee78c928c8d59650b4e4b202e7ec\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"#_CPPv4NK6TypeID4Info7IsArrayEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info7IsArrayEv\">\n<span id=\"_CPPv3NK6TypeID4Info7IsArrayEv\"></span><span id=\"_CPPv2NK6TypeID4Info7IsArrayEv\"></span><span id=\"TypeID::Info::IsArrayC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a39cf61d23d62892c1c4cbeb028716c36\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsArray</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID16GetElementTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID16GetElementTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID16GetElementTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID16GetElementTypeIDEv\"></span><span id=\"TypeID::GetElementTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1af3daeb1b18a1382ce09d5e44329634ff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetElementTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID17GetRemoveCVTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID17GetRemoveCVTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID17GetRemoveCVTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID17GetRemoveCVTypeIDEv\"></span><span id=\"TypeID::GetRemoveCVTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a042d6f43221c870bfe44922bb0261f53\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveCVTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID4Info4InfoERK4Info\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID4Info4InfoERK4Info\">\n<span id=\"_CPPv3N6TypeID4Info4InfoERK4Info\"></span><span id=\"_CPPv2N6TypeID4Info4InfoERK4Info\"></span><span id=\"TypeID::Info::Info__InfoCR\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a059255b342655b93dc36d5243056daf8\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Info</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID4Info4InfoERK4Info\" title=\"TypeID::Info::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info14GetRemoveRefIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info14GetRemoveRefIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info14GetRemoveRefIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info14GetRemoveRefIDEv\"></span><span id=\"TypeID::Info::GetRemoveRefIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1af057afb51ac54ae3467fb294d15db36f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveRefID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeIDaSERK6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeIDaSERK6TypeID\">\n<span id=\"_CPPv3N6TypeIDaSERK6TypeID\"></span><span id=\"_CPPv2N6TypeIDaSERK6TypeID\"></span><span id=\"TypeID::assign-operator__TypeIDCR\"></span><span class=\"target\" id=\"structTypeID_1a54526a13f7f5468599bd2c07c3b537de\"></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E9BuildInfo3PtrIN6TypeID4InfoEEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9BuildInfo3PtrIN6TypeID4InfoEEv\">\n<span id=\"_CPPv3I0E9BuildInfov\"></span><span id=\"_CPPv2I0E9BuildInfov\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1abed81d909f171abfd1fc47f1715d8ddc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID4InfoE\" title=\"TypeID::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildInfo</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build the information for a single TypeID. </p></dd>", "a[href=\"#_CPPv4NK6TypeID10IsTypePackEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID10IsTypePackEv\">\n<span id=\"_CPPv3NK6TypeID10IsTypePackEv\"></span><span id=\"_CPPv2NK6TypeID10IsTypePackEv\"></span><span id=\"TypeID::IsTypePackC\"></span><span class=\"target\" id=\"structTypeID_1a2936dd5193c19eb21766265ad21569ea\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsTypePack</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData19GetRemoveVolatileIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData19GetRemoveVolatileIDEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData19GetRemoveVolatileIDEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData19GetRemoveVolatileIDEv\"></span><span id=\"TypeID::InfoData::GetRemoveVolatileIDC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1adffea2b24f9af59ed0f7fe7f546cfa27\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveVolatileID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E9GetTypeID6TypeIDv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9GetTypeID6TypeIDv\">\n<span id=\"_CPPv3I0E9GetTypeIDv\"></span><span id=\"_CPPv2I0E9GetTypeIDv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1a3017b5e727a28628c6f20af3ba6154c7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Retrieve the correct TypeID for a given type. </p></dd>", "a[href=\"#_CPPv4NK6TypeID10IsAbstractEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID10IsAbstractEv\">\n<span id=\"_CPPv3NK6TypeID10IsAbstractEv\"></span><span id=\"_CPPv2NK6TypeID10IsAbstractEv\"></span><span id=\"TypeID::IsAbstractC\"></span><span class=\"target\" id=\"structTypeID_1a0e1aaadfbfb32f39f31dfdc4d0110af6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsAbstract</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeIDgeE6TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeIDgeE6TypeID\">\n<span id=\"_CPPv3NK6TypeIDgeE6TypeID\"></span><span id=\"_CPPv2NK6TypeIDgeE6TypeID\"></span><span id=\"TypeID::gte-operator__TypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a11a2f4037716ae01021206c3cedfa9f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID13IsInitializedEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID13IsInitializedEv\">\n<span id=\"_CPPv3NK6TypeID13IsInitializedEv\"></span><span id=\"_CPPv2NK6TypeID13IsInitializedEv\"></span><span id=\"TypeID::IsInitializedC\"></span><span class=\"target\" id=\"structTypeID_1ae795586d045f16e9a24ec5b98dbed1ca\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsInitialized</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info17GetRemoveExtentIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info17GetRemoveExtentIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info17GetRemoveExtentIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info17GetRemoveExtentIDEv\"></span><span id=\"TypeID::Info::GetRemoveExtentIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a544f1f501b2d75041f368e2148d12aee\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveExtentID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData7IsEmptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData7IsEmptyEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData7IsEmptyEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData7IsEmptyEv\"></span><span id=\"TypeID::InfoData::IsEmptyC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ab7705e6b959742680ad396137d85db3a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsEmpty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info16GetRemoveConstIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info16GetRemoveConstIDEv\">\n<span id=\"_CPPv3NK6TypeID4Info16GetRemoveConstIDEv\"></span><span id=\"_CPPv2NK6TypeID4Info16GetRemoveConstIDEv\"></span><span id=\"TypeID::Info::GetRemoveConstIDC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1ad2356524532232048db5d26d0ae3e17c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveConstID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info7IsConstEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info7IsConstEv\">\n<span id=\"_CPPv3NK6TypeID4Info7IsConstEv\"></span><span id=\"_CPPv2NK6TypeID4Info7IsConstEv\"></span><span id=\"TypeID::Info::IsConstC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a739efb7c90739c859f985de9b6a266ab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsConst</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info10IsFunctionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info10IsFunctionEv\">\n<span id=\"_CPPv3NK6TypeID4Info10IsFunctionEv\"></span><span id=\"_CPPv2NK6TypeID4Info10IsFunctionEv\"></span><span id=\"TypeID::Info::IsFunctionC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a70e684d22e8391c813e317f90cab442d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID9IsPointerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID9IsPointerEv\">\n<span id=\"_CPPv3NK6TypeID9IsPointerEv\"></span><span id=\"_CPPv2NK6TypeID9IsPointerEv\"></span><span id=\"TypeID::IsPointerC\"></span><span class=\"target\" id=\"structTypeID_1a7428ae399d6e88a874ea8f23beea3548\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsPointer</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID8InfoData12IsArithmeticEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID8InfoData12IsArithmeticEv\">\n<span id=\"_CPPv3NK6TypeID8InfoData12IsArithmeticEv\"></span><span id=\"_CPPv2NK6TypeID8InfoData12IsArithmeticEv\"></span><span id=\"TypeID::InfoData::IsArithmeticC\"></span><span class=\"target\" id=\"structTypeID_1_1InfoData_1ac231baf732f5904781a53cf869f58b03\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsArithmetic</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6TypeID6info_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6TypeID6info_tE\">\n<span id=\"_CPPv3N6TypeID6info_tE\"></span><span id=\"_CPPv2N6TypeID6info_tE\"></span><span class=\"target\" id=\"structTypeID_1a0d7fbb08eeaef80bd7e3af462172b07e\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">info_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID4InfoE\" title=\"TypeID::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID4Info8IsObjectEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID4Info8IsObjectEv\">\n<span id=\"_CPPv3NK6TypeID4Info8IsObjectEv\"></span><span id=\"_CPPv2NK6TypeID4Info8IsObjectEv\"></span><span id=\"TypeID::Info::IsObjectC\"></span><span class=\"target\" id=\"structTypeID_1_1Info_1a0793fa0b40f19635e9fdfa8c45e26d4a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsObject</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK6TypeID24GetRemoveReferenceTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6TypeID24GetRemoveReferenceTypeIDEv\">\n<span id=\"_CPPv3NK6TypeID24GetRemoveReferenceTypeIDEv\"></span><span id=\"_CPPv2NK6TypeID24GetRemoveReferenceTypeIDEv\"></span><span id=\"TypeID::GetRemoveReferenceTypeIDC\"></span><span class=\"target\" id=\"structTypeID_1a6a24ae697f39177a50949aa92fd7bf17\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRemoveReferenceTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
