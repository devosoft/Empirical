selector_to_html = {"a[href=\"../../../base/api/array.html#_CPPv4I0_6size_tE5array\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE5array\">\n<span id=\"_CPPv3I0_6size_tE5array\"></span><span id=\"_CPPv2I0_6size_tE5array\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_ELEMENTS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structarray\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">array</span></span></span><br/></dt><dd><p>We are in debug mode, so array has the same interface as std::array, but with extra bounds checking. Using vector as our base since it has the right pieces and is dynamic. </p></dd>", "a[href=\"#_CPPv4N2D310TreeLayout10TreeLayoutEP11JSONDataset\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout10TreeLayoutEP11JSONDataset\">\n<span id=\"_CPPv3N2D310TreeLayout10TreeLayoutEP11JSONDataset\"></span><span id=\"_CPPv2N2D310TreeLayout10TreeLayoutEP11JSONDataset\"></span><span id=\"D3::TreeLayout::TreeLayout__JSONDatasetP\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1a28f4f352423a7c4f4e0afb88e023d12d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TreeLayout</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"dataset.html#_CPPv4N2D311JSONDatasetE\" title=\"D3::JSONDataset\"><span class=\"n\"><span class=\"pre\">JSONDataset</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">dataset</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructor - handles creating a default DiagonalGenerator and links the specified dataset up to this object\u2019s data pointer. </p></dd>", "a[href=\"dataset.html#_CPPv4N2D311JSONDatasetE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D311JSONDatasetE\">\n<span id=\"_CPPv3N2D311JSONDatasetE\"></span><span id=\"_CPPv2N2D311JSONDatasetE\"></span><span id=\"D3::JSONDataset\"></span><span class=\"target\" id=\"classD3_1_1JSONDataset\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">JSONDataset</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"axis.html#_CPPv42D3\" title=\"D3\"><span class=\"n\"><span class=\"pre\">D3</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N2D37DatasetE\" title=\"D3::Dataset\"><span class=\"n\"><span class=\"pre\">Dataset</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN2D310TreeLayoutE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN2D310TreeLayoutE\">\n<span id=\"_CPPv3I0EN2D310TreeLayoutE\"></span><span id=\"_CPPv2I0EN2D310TreeLayoutE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NODE_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N2D312JSONTreeNodeE\" title=\"D3::JSONTreeNode\"><span class=\"n\"><span class=\"pre\">JSONTreeNode</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classD3_1_1TreeLayout\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TreeLayout</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"axis.html#_CPPv42D3\" title=\"D3\"><span class=\"n\"><span class=\"pre\">D3</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N2D36LayoutE\" title=\"D3::Layout\"><span class=\"n\"><span class=\"pre\">Layout</span></span></a><br/></dt><dd><p>A TreeLayout can be used to visualize hierarchical data as a tree (a series of edges connecting parent and child nodes).</p><p>Since hierarchical data is much more pleasant to store in JSON format than anything C++ can offer, the TreeLayout expects your data to be stored in a D3::JSONDataset<p>. Each node is expected to have, at a minimum, the following values:</p>\n<p>Calculating the tree layout will automatically create three additional values for each node:</p>\n\nYou can include any additional parameters that you want to use to store data. The dataset is expected to be an array containing one element: the root node object, which in turn has the other nodes nested inside it. You must provide a dataset to the TreeLayout constructor.</p><p>A TreeLayout must be templated off of a type that describes all of the values that a node contains (or at least the ones you care about using from C++, as well as x and y). This allows nodes to be passed back up to C++ without C++ throwing a fit about types. If you don\u2019t need access to any data other than name, parent, x, y, and depth from C++, you can use the default, JSONTreeNode.</p><p>If you need access to additional data, you can build structs to template TreeLayouts off with Empirical Introspective Tuple Structs (see JSONTreeNode as an example). Don\u2019t be scared by the complicated sounding name - you just need to list the names and types of values you care about. </p></dd>", "a[href=\"selection.html#_CPPv4N2D39SelectionE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D39SelectionE\">\n<span id=\"_CPPv3N2D39SelectionE\"></span><span id=\"_CPPv2N2D39SelectionE\"></span><span id=\"D3::Selection\"></span><span class=\"target\" id=\"classD3_1_1Selection\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Selection</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"axis.html#_CPPv42D3\" title=\"D3\"><span class=\"n\"><span class=\"pre\">D3</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4I0EN2D321SelectionOrTransitionE\" title=\"D3::SelectionOrTransition\"><span class=\"n\"><span class=\"pre\">SelectionOrTransition</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N2D39SelectionE\" title=\"D3::Selection\"><span class=\"n\"><span class=\"pre\">Selection</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p><a class=\"reference external\" href=\"https://github.com/d3/d3-3.x-api-reference/blob/master/Selections.md/\">Selections</a> are the primary way that d3 allows you to operate on DOM elements (i.e. objects on your webpage). A selection is effectively an array of DOM elements that you can act on at the same time and bind a collection of data to.</p><p>For a deep dive into how selections work in d3, see <a class=\"reference external\" href=\"https://bost.ocks.org/mike/selection/\">this article</a>. </p></dd>", "a[href=\"#_CPPv4N2D312JSONTreeNodeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D312JSONTreeNodeE\">\n<span id=\"_CPPv3N2D312JSONTreeNodeE\"></span><span id=\"_CPPv2N2D312JSONTreeNodeE\"></span><span id=\"D3::JSONTreeNode\"></span><span class=\"target\" id=\"structD3_1_1JSONTreeNode\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">JSONTreeNode</span></span></span><br/></dt><dd></dd>", "a[href=\"axis.html#_CPPv42D3\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv42D3\">\n<span id=\"_CPPv32D3\"></span><span id=\"_CPPv22D3\"></span><span id=\"D3\"></span><span class=\"target\" id=\"namespaceD3\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N2D310TreeLayout10SetDatasetEP11JSONDataset\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout10SetDatasetEP11JSONDataset\">\n<span id=\"_CPPv3N2D310TreeLayout10SetDatasetEP11JSONDataset\"></span><span id=\"_CPPv2N2D310TreeLayout10SetDatasetEP11JSONDataset\"></span><span id=\"D3::TreeLayout::SetDataset__JSONDatasetP\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1a77a7acd6cc506eb4c318aef01af905be\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDataset</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"dataset.html#_CPPv4N2D311JSONDatasetE\" title=\"D3::JSONDataset\"><span class=\"n\"><span class=\"pre\">JSONDataset</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">dataset</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change this TreeLayout\u2019s data to [dataset]. </p></dd>", "a[href=\"#layout-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">layout.hpp<a class=\"headerlink\" href=\"#layout-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools for laying out nodes in D3. </p>", "a[href=\"#_CPPv4N2D310TreeLayout7SetSizeEii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout7SetSizeEii\">\n<span id=\"_CPPv3N2D310TreeLayout7SetSizeEii\"></span><span id=\"_CPPv2N2D310TreeLayout7SetSizeEii\"></span><span id=\"D3::TreeLayout::SetSize__i.i\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1a1ef4c2359b0c175d46e7379c1558a736\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">w</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">h</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the width of the tree area to [w] and the height to [h]. </p></dd>", "a[href=\"#_CPPv4N2D310TreeLayout10TreeLayoutEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout10TreeLayoutEv\">\n<span id=\"_CPPv3N2D310TreeLayout10TreeLayoutEv\"></span><span id=\"_CPPv2N2D310TreeLayout10TreeLayoutEv\"></span><span id=\"D3::TreeLayout::TreeLayout\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1a88c83a2b2a4f6d2815facd8ab050f151\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TreeLayout</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Default constructor - if you use this you need connect a dataset with SetDataset. </p></dd>", "a[href=\"#_CPPv4N2D310TreeLayout21GenerateNodesAndLinksE9Selection\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout21GenerateNodesAndLinksE9Selection\">\n<span id=\"_CPPv3N2D310TreeLayout21GenerateNodesAndLinksE9Selection\"></span><span id=\"_CPPv2N2D310TreeLayout21GenerateNodesAndLinksE9Selection\"></span><span id=\"D3::TreeLayout::GenerateNodesAndLinks__Selection\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1a2567ed70ba3f9c33d7d9311209fe219a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../../base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"selection.html#_CPPv4N2D39SelectionE\" title=\"D3::Selection\"><span class=\"n\"><span class=\"pre\">Selection</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenerateNodesAndLinks</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"selection.html#_CPPv4N2D39SelectionE\" title=\"D3::Selection\"><span class=\"n\"><span class=\"pre\">Selection</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">svg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function does the heavy lifting of visualizing your data. It generates nodes and links between them based on this object\u2019s dataset. [svg] must be a selection containing a single svg element on which to draw the the visualization.</p><p>In case you want to further customize the tree, this method returns an array of selections, containing: the enter selection for nodes (i.e. a selection containing all nodes that were just added to the tree), the exit selection for nodes (i.e. a selection containing any nodes that are currently drawn but are no longer in the dataset), the enter selection for links, and the exit selection for links. </p></dd>", "a[href=\"#_CPPv4N2D36Layout6LayoutEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D36Layout6LayoutEv\">\n<span id=\"_CPPv3N2D36Layout6LayoutEv\"></span><span id=\"_CPPv2N2D36Layout6LayoutEv\"></span><span id=\"D3::Layout::Layout\"></span><span class=\"target\" id=\"classD3_1_1Layout_1a12f342004f5dfc3be9e33e61b840adf6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Layout</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N2D36LayoutE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D36LayoutE\">\n<span id=\"_CPPv3N2D36LayoutE\"></span><span id=\"_CPPv2N2D36LayoutE\"></span><span id=\"D3::Layout\"></span><span class=\"target\" id=\"classD3_1_1Layout\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Layout</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"axis.html#_CPPv42D3\" title=\"D3\"><span class=\"n\"><span class=\"pre\">D3</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"d3_init.html#_CPPv4N2D37D3_BaseE\" title=\"D3::D3_Base\"><span class=\"n\"><span class=\"pre\">D3_Base</span></span></a><br/></dt><dd><p>Subclassed by D3::TreeLayout&lt; NODE_TYPE &gt;, D3::TreeLayout&lt; SpatialGridTreeNode &gt;, D3::TreeLayout&lt; TreeNode &gt;</p></dd>", "a[href=\"svg_shapes.html#_CPPv4N2D313LinkGeneratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D313LinkGeneratorE\">\n<span id=\"_CPPv3N2D313LinkGeneratorE\"></span><span id=\"_CPPv2N2D313LinkGeneratorE\"></span><span id=\"D3::LinkGenerator\"></span><span class=\"target\" id=\"classD3_1_1LinkGenerator\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LinkGenerator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"axis.html#_CPPv42D3\" title=\"D3\"><span class=\"n\"><span class=\"pre\">D3</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N2D313LineGeneratorE\" title=\"D3::LineGenerator\"><span class=\"n\"><span class=\"pre\">LineGenerator</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4N2D310TreeLayout9make_lineE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout9make_lineE\">\n<span id=\"_CPPv3N2D310TreeLayout9make_lineE\"></span><span id=\"_CPPv2N2D310TreeLayout9make_lineE\"></span><span id=\"D3::TreeLayout::make_line__D3::LinkGeneratorP\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1a66e61f87ac3448f7ed35940753055e86\"></span><a class=\"reference internal\" href=\"axis.html#_CPPv42D3\" title=\"D3\"><span class=\"n\"><span class=\"pre\">D3</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"svg_shapes.html#_CPPv4N2D313LinkGeneratorE\" title=\"D3::LinkGenerator\"><span class=\"n\"><span class=\"pre\">LinkGenerator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">make_line</span></span></span><br/></dt><dd><p>Function used to make the lines for the edges in the tree. </p></dd>", "a[href=\"d3_init.html#_CPPv4N2D37D3_BaseE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D37D3_BaseE\">\n<span id=\"_CPPv3N2D37D3_BaseE\"></span><span id=\"_CPPv2N2D37D3_BaseE\"></span><span id=\"D3::D3_Base\"></span><span class=\"target\" id=\"classD3_1_1D3__Base\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_Base</span></span></span><br/></dt><dd><p>A base object that all D3 objects inherit from. Handles storing the object in Javascript You probably don\u2019t want to instantiate this directly </p><p>Subclassed by D3::Axis&lt; D3::LinearScale &gt;, D3::Axis&lt; SCALE_TYPE &gt;, D3::Category10Scale, D3::Category20bScale, D3::Category20cScale, D3::Category20Scale, D3::Dataset, D3::FormatFunction, D3::Histogram, D3::JSFunction, D3::JSObject, D3::Layout, D3::Scale, D3::SelectionOrTransition&lt; DERIVED &gt;, D3::SvgShapeGenerator, D3::ToolTip, D3::SelectionOrTransition&lt; Selection &gt;, D3::SelectionOrTransition&lt; Transition &gt;</p></dd>", "a[href=\"#_CPPv4N2D310TreeLayout4dataE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D310TreeLayout4dataE\">\n<span id=\"_CPPv3N2D310TreeLayout4dataE\"></span><span id=\"_CPPv2N2D310TreeLayout4dataE\"></span><span id=\"D3::TreeLayout::data__JSONDatasetP\"></span><span class=\"target\" id=\"classD3_1_1TreeLayout_1aba55df272309be1c31125e2415b06cc6\"></span><a class=\"reference internal\" href=\"dataset.html#_CPPv4N2D311JSONDatasetE\" title=\"D3::JSONDataset\"><span class=\"n\"><span class=\"pre\">JSONDataset</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data</span></span></span><br/></dt><dd><p>Pointer to the data - must be in hierarchical JSON format. </p></dd>", "a[href=\"#_CPPv4N2D36Layout6LayoutEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2D36Layout6LayoutEi\">\n<span id=\"_CPPv3N2D36Layout6LayoutEi\"></span><span id=\"_CPPv2N2D36Layout6LayoutEi\"></span><span id=\"D3::Layout::Layout__i\"></span><span class=\"target\" id=\"classD3_1_1Layout_1a74b002f4d7a5b6ca9cbb0522220e6da6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Layout</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
