selector_to_html = {"a[href=\"#c.D3_CALLBACK_METHOD_1_ARG\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_METHOD_1_ARG\">\n<span class=\"target\" id=\"utils_8hpp_1a3c17ba1952f09a3faf96d4a9ba9618df\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_METHOD_1_ARG</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">ARG1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>The same as D3_CALLBACK_METHOD_2_ARGS except for FUNCs that only accept a single argument (the string that might or might not be a function). </p></dd>", "a[href=\"#c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE\"]": "<dt class=\"sig sig-object cpp\" id=\"c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE\">\n<span class=\"target\" id=\"utils_8hpp_1a64f081cff8d86a2030cb892d29a34397\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE</span></span></span><span class=\"sig-paren\">(</span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Expects func_string to be a pre-defined variable that holds a string that may or may not be a function and checks to see if it is a function defined within and of the given namespaces. If it is, it stores that function in the variable func_string. Namespaces are checked in the order given and the first function found is used. </p></dd>", "a[href=\"#c.D3_CALLBACK_METHOD_2_ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_METHOD_2_ARGS\">\n<span class=\"target\" id=\"utils_8hpp_1aafbab29cc4a1707894dccfe213a9598f\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_METHOD_2_ARGS</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">ARG1</span></span>, <span class=\"n\"><span class=\"pre\">ARG2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.IS_JS_FUNCTION\"]": "<dt class=\"sig sig-object cpp\" id=\"c.IS_JS_FUNCTION\">\n<span class=\"target\" id=\"utils_8hpp_1accc993a2913e4ac6ec10954439e2c3b5\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IS_JS_FUNCTION</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FN</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A more descriptive wrapper for the check to see if something is a function in Javascript. </p></dd>", "a[href=\"#c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_OR_WINDOW\"]": "<dt class=\"sig sig-object cpp\" id=\"c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_OR_WINDOW\">\n<span class=\"target\" id=\"utils_8hpp_1a7f72d6870daf50885643f110e0d5623b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_OR_WINDOW</span></span></span><span class=\"sig-paren\">(</span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Expects func_string to be a pre-defined variable that holds a string that may or may not be a function and checks to see if it is a function defined within and of the given namespaces or the current window. If it is, it stores that function in the variable func_string. Namespaces are checked in the order given and the first function found is used. </p></dd>", "a[href=\"#c.D3_CALLBACK_METHOD_2_ARGS_IMPL\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_METHOD_2_ARGS_IMPL\">\n<span class=\"target\" id=\"utils_8hpp_1a727a43de490310403e1e29572cebecfb\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_METHOD_2_ARGS_IMPL</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">MACRO</span></span>, <span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">ARG1</span></span>, <span class=\"n\"><span class=\"pre\">ARG2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_2\"]": "<dt class=\"sig sig-object cpp\" id=\"c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_2\">\n<span class=\"target\" id=\"utils_8hpp_1afe157de7fc56aff67fd778cd2bd07a43\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_2</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">A1</span></span>, <span class=\"n\"><span class=\"pre\">A2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.D3_CALLBACK_FUNCTION_1_ARG\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_FUNCTION_1_ARG\">\n<span class=\"target\" id=\"utils_8hpp_1a0a3b298578884235f2c6e8f1966fcabb\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_FUNCTION_1_ARG</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">CALLBACK</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a Javascript function that accepts either a string indicating the name of a callback function or a normal string </p></dd>", "a[href=\"#c.D3_CALLBACK_METHOD_CPP_FUNCTION_2_ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_METHOD_CPP_FUNCTION_2_ARGS\">\n<span class=\"target\" id=\"utils_8hpp_1a1062be08f95c456f440bfbfe58860c6b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_METHOD_CPP_FUNCTION_2_ARGS</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">ARG1</span></span>, <span class=\"n\"><span class=\"pre\">CPP_FUN</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_WINDOW\"]": "<dt class=\"sig sig-object cpp\" id=\"c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_WINDOW\">\n<span class=\"target\" id=\"utils_8hpp_1a8eef707b7020b6a2f55402bbb5340c8e\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_WINDOW</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Expects func_string to be a pre-defined variable that holds a string that may or may not be a function and checks to see if it is a function defined within the current window. If it is, it stores that function in the variable func_string. </p></dd>", "a[href=\"#c.D3_CALLBACK_METHOD_1_ARG_IMPL\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_METHOD_1_ARG_IMPL\">\n<span class=\"target\" id=\"utils_8hpp_1a8e7e677e38904a03c7078a2238a99bb5\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_METHOD_1_ARG_IMPL</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">MACRO</span></span>, <span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">ARG1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.D3_CALLBACK_METHOD_CPP_FUNCTION_1_ARG\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_METHOD_CPP_FUNCTION_1_ARG\">\n<span class=\"target\" id=\"utils_8hpp_1a726d20ad44f81ca2307fe5957a17fc98\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_METHOD_CPP_FUNCTION_1_ARG</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">CPP_FUN</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv414StoreNewObjecti\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414StoreNewObjecti\">\n<span id=\"_CPPv314StoreNewObjecti\"></span><span id=\"_CPPv214StoreNewObjecti\"></span><span id=\"StoreNewObject__i\"></span><span class=\"target\" id=\"utils_8hpp_1aae53dc34edd015f92a25a4e64918d7b6\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StoreNewObject</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_3\"]": "<dt class=\"sig sig-object cpp\" id=\"c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_3\">\n<span class=\"target\" id=\"utils_8hpp_1a4c04dcd95956af9a2e290d43760d00d4\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_3</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">A1</span></span>, <span class=\"n\"><span class=\"pre\">A2</span></span>, <span class=\"n\"><span class=\"pre\">A3</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_1\"]": "<dt class=\"sig sig-object cpp\" id=\"c.CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_1\">\n<span class=\"target\" id=\"utils_8hpp_1a2b978863370c1e9376aa55263e2be4ff\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERT_FUNCSTRING_TO_FUNCTION_IF_IN_NAMESPACE_1</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">A1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#utils-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">utils.hpp<a class=\"headerlink\" href=\"#utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file contains macros used to build Empirical\u2019s C++ wrapper for D3. </p>", "a[href=\"#c.D3_CALLBACK_FUNCTION_2_ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"c.D3_CALLBACK_FUNCTION_2_ARGS\">\n<span class=\"target\" id=\"utils_8hpp_1a22b75f4b50f4af6721f49666fa6b1c06\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">D3_CALLBACK_FUNCTION_2_ARGS</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">FUNC</span></span>, <span class=\"n\"><span class=\"pre\">CALLBACK</span></span>, <span class=\"n\"><span class=\"pre\">ARG1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Same as D3_CALLBACK_FUNCTION_1_ARG, but accepts an additional argument, ARG1, that goes before the callback function in the call to FUNC </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
