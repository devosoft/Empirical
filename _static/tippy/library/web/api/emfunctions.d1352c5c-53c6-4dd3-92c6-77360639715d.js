selector_to_html = {"a[href=\"#_CPPv419GetElementAttributeRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419GetElementAttributeRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv319GetElementAttributeRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv219GetElementAttributeRKNSt6stringERKNSt6stringE\"></span><span id=\"GetElementAttribute__ssCR.ssCR\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a382fb9d51292679c188786c96a14db5f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetElementAttribute</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">attribute</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the value of. </p></dd>", "a[href=\"#_CPPv420GetWindowInnerHeightv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv420GetWindowInnerHeightv\">\n<span id=\"_CPPv320GetWindowInnerHeightv\"></span><span id=\"_CPPv220GetWindowInnerHeightv\"></span><span id=\"GetWindowInnerHeight\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a3a7a4896a0f7a2ba7a1cf84c99e202a1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWindowInnerHeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine with height of the current window. </p></dd>", "a[href=\"#_CPPv410OpenWindowRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410OpenWindowRKNSt6stringE\">\n<span id=\"_CPPv310OpenWindowRKNSt6stringE\"></span><span id=\"_CPPv210OpenWindowRKNSt6stringE\"></span><span id=\"OpenWindow__ssCR\"></span><span class=\"target\" id=\"emfunctions_8hpp_1ae6af4103795765715a5a88fa6700dcbd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OpenWindow</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">url</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv48OnResizeRKNSt8functionIFvvEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48OnResizeRKNSt8functionIFvvEEE\">\n<span id=\"_CPPv38OnResizeRKNSt8functionIFvvEEE\"></span><span id=\"_CPPv28OnResizeRKNSt8functionIFvvEEE\"></span><span class=\"target\" id=\"emfunctions_8hpp_1aeefb45ba631fd9f31a8a2e6b2b18fb60\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OnResize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a function to call whenever a window\u2019s size changes (no arguments). </p></dd>", "a[href=\"#_CPPv49DelayCallRKNSt8functionIFvvEEEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49DelayCallRKNSt8functionIFvvEEEi\">\n<span id=\"_CPPv39DelayCallRKNSt8functionIFvvEEEi\"></span><span id=\"_CPPv29DelayCallRKNSt8functionIFvvEEEi\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a8836c5e63dda0a1a34660fe0a0c9cfb4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DelayCall</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delay</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a function after a specified amount of time. </p></dd>", "a[href=\"#_CPPv48OnResizeRKNSt8functionIFviiEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48OnResizeRKNSt8functionIFviiEEE\">\n<span id=\"_CPPv38OnResizeRKNSt8functionIFviiEEE\"></span><span id=\"_CPPv28OnResizeRKNSt8functionIFviiEEE\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a96f5082d47293852748742e27b065b47\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OnResize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a function to call whenever a window\u2019s size changes (new size as arguments) </p></dd>", "a[href=\"#_CPPv419GetWindowInnerWidthv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419GetWindowInnerWidthv\">\n<span id=\"_CPPv319GetWindowInnerWidthv\"></span><span id=\"_CPPv219GetWindowInnerWidthv\"></span><span id=\"GetWindowInnerWidth\"></span><span class=\"target\" id=\"emfunctions_8hpp_1abd4581a24de66bdad0c4de20a736be8f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWindowInnerWidth</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine with width of the current window. </p></dd>", "a[href=\"#_CPPv418SetBackgroundColorKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418SetBackgroundColorKNSt6stringE\">\n<span id=\"_CPPv318SetBackgroundColorKNSt6stringE\"></span><span id=\"_CPPv218SetBackgroundColorKNSt6stringE\"></span><span id=\"SetBackgroundColor__ssC\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a8f507e75f25581b625e5625ae6766eb9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetBackgroundColor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">color</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the background color of this web page. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv48SetColorKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48SetColorKNSt6stringE\">\n<span id=\"_CPPv38SetColorKNSt6stringE\"></span><span id=\"_CPPv28SetColorKNSt6stringE\"></span><span id=\"SetColor__ssC\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a06fd79beb8e9ad87080defefb48388c4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetColor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">color</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv49text2htmlRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49text2htmlRKNSt6stringE\">\n<span id=\"_CPPv39text2htmlRKNSt6stringE\"></span><span id=\"_CPPv29text2htmlRKNSt6stringE\"></span><span id=\"text2html__ssCR\"></span><span class=\"target\" id=\"emfunctions_8hpp_1ae0e0f832df59d248cc00297ce2e1d250\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">text2html</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">text</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv47GetTimev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47GetTimev\">\n<span id=\"_CPPv37GetTimev\"></span><span id=\"_CPPv27GetTimev\"></span><span id=\"GetTime\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a0e47c74b5a3e6246b9936d96ff4c66b1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTime</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the current time, as provided by the web browser. </p></dd>", "a[href=\"#_CPPv49SetCursorPKc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49SetCursorPKc\">\n<span id=\"_CPPv39SetCursorPKc\"></span><span id=\"_CPPv29SetCursorPKc\"></span><span id=\"SetCursor__cCP\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a182c3ce14c2ecfb0ae3c16842acd0b5b\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetCursor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">type</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#c.AlertVar\"]": "<dt class=\"sig sig-object cpp\" id=\"c.AlertVar\">\n<span class=\"target\" id=\"emfunctions_8hpp_1a99e0920d1317ea4cdc7fc200421c66c6\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlertVar</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">VAR</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#emfunctions-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">emfunctions.hpp<a class=\"headerlink\" href=\"#emfunctions-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specialized, useful function for Empirical. </p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
