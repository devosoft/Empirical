selector_to_html = {"a[href=\"#_CPPv410ExceptInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ExceptInfo\">\n<span id=\"_CPPv310ExceptInfo\"></span><span id=\"_CPPv210ExceptInfo\"></span><span id=\"ExceptInfo\"></span><span class=\"target\" id=\"structExceptInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></span><br/></dt><dd><p>Information about an exception that has occured. </p></dd>", "a[href=\"#_CPPv4IDpE13InternalErrorvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE13InternalErrorvDpRR2Ts\">\n<span id=\"_CPPv3IDpE13InternalErrorDpRR2Ts\"></span><span id=\"_CPPv2IDpE13InternalErrorDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1aef349daa61329c7255594ef0d98eb7fd\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InternalError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE13InternalErrorvDpRR2Ts\" title=\"InternalError::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Original library implementers must have made an error. </p></dd>", "a[href=\"#_CPPv49HasExceptv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49HasExceptv\">\n<span id=\"_CPPv39HasExceptv\"></span><span id=\"_CPPv29HasExceptv\"></span><span id=\"HasExcept\"></span><span class=\"target\" id=\"errors_8hpp_1a9eecd70b09ef6b7a033c4016e7d88d2b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Are any exceptions waiting? </p></dd>", "a[href=\"#_CPPv4N10ExceptInfo4descE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ExceptInfo4descE\">\n<span id=\"_CPPv3N10ExceptInfo4descE\"></span><span id=\"_CPPv2N10ExceptInfo4descE\"></span><span id=\"ExceptInfo::desc__ss\"></span><span class=\"target\" id=\"structExceptInfo_1ae60f5f9434da8133ef08e398d1fe4469\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">desc</span></span></span><br/></dt><dd><p>A detailed description of thie exception. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv413TriggerExceptRKNSt6stringERKNSt6stringEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413TriggerExceptRKNSt6stringERKNSt6stringEb\">\n<span id=\"_CPPv313TriggerExceptRKNSt6stringERKNSt6stringEb\"></span><span id=\"_CPPv213TriggerExceptRKNSt6stringERKNSt6stringEb\"></span><span id=\"TriggerExcept__ssCR.ssCR.b\"></span><span class=\"target\" id=\"errors_8hpp_1a92104de71c243e643d6a28c81546622f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TriggerExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_desc</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_error</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide information about an exception that needs to be triggered. </p></dd>", "a[href=\"#_CPPv4IDpE11NotifyErrorvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11NotifyErrorvDpRR2Ts\">\n<span id=\"_CPPv3IDpE11NotifyErrorDpRR2Ts\"></span><span id=\"_CPPv2IDpE11NotifyErrorDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1a578ebcf9e13df44165c0352e0e204f6e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NotifyError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE11NotifyErrorvDpRR2Ts\" title=\"NotifyError::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>End user has done something resulting in an non-recoverable problem. </p></dd>", "a[href=\"#_CPPv49HasExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49HasExceptRKNSt6stringE\">\n<span id=\"_CPPv39HasExceptRKNSt6stringE\"></span><span id=\"_CPPv29HasExceptRKNSt6stringE\"></span><span id=\"HasExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1a37c84e221d4cebdda64d49ec5d35f721\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Are any exceptions of a particular type waiting? </p></dd>", "a[href=\"#_CPPv4IDpE12LibraryErrorvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE12LibraryErrorvDpRR2Ts\">\n<span id=\"_CPPv3IDpE12LibraryErrorDpRR2Ts\"></span><span id=\"_CPPv2IDpE12LibraryErrorDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1a318786ba8539c317a04998176837d007\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LibraryError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE12LibraryErrorvDpRR2Ts\" title=\"LibraryError::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Library user has made an error in how they are using the library. </p></dd>", "a[href=\"#_CPPv49PopExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49PopExceptRKNSt6stringE\">\n<span id=\"_CPPv39PopExceptRKNSt6stringE\"></span><span id=\"_CPPv29PopExceptRKNSt6stringE\"></span><span id=\"PopExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1aad6ee82ff22a219a351377433c54bed3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PopExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get and <em>remove</em> a waiting exception. </p></dd>", "a[href=\"#_CPPv4IDpE13NotifyWarningvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE13NotifyWarningvDpRR2Ts\">\n<span id=\"_CPPv3IDpE13NotifyWarningDpRR2Ts\"></span><span id=\"_CPPv2IDpE13NotifyWarningDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1a010025334ee21575de210d614eff8ade\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NotifyWarning</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE13NotifyWarningvDpRR2Ts\" title=\"NotifyWarning::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>End user has done something possibly a problem. </p></dd>", "a[href=\"#_CPPv411ClearExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ClearExceptRKNSt6stringE\">\n<span id=\"_CPPv311ClearExceptRKNSt6stringE\"></span><span id=\"_CPPv211ClearExceptRKNSt6stringE\"></span><span id=\"ClearExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1accb602bd42fc51f23c982d9c340e15ab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ClearExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all waiting exceptions of the desginated type. </p></dd>", "a[href=\"#_CPPv4IDpE6NotifyvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE6NotifyvDpRR2Ts\">\n<span id=\"_CPPv3IDpE6NotifyDpRR2Ts\"></span><span id=\"_CPPv2IDpE6NotifyDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1abf52c8f0b70c993c35c29b028739e970\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Notify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE6NotifyvDpRR2Ts\" title=\"Notify::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Send information to a program user (via standard error in native mode, or alert in Emscripten) </p></dd>", "a[href=\"#_CPPv49GetExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49GetExceptRKNSt6stringE\">\n<span id=\"_CPPv39GetExceptRKNSt6stringE\"></span><span id=\"_CPPv29GetExceptRKNSt6stringE\"></span><span id=\"GetExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1a8490b33df130adc96ec67f18c0387c52\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the first waiting exception. </p></dd>", "a[href=\"#errors-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">errors.hpp<a class=\"headerlink\" href=\"#errors-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to help manage various problems in command-line or Emscripten-based applications. </p><p>\nThere are three possible recipiants for all errors/warnings.<ul class=\"simple\">\n<li><p>The end-user if the problem stems from inputs they provided to the executable.</p></li>\n<li><p>The library user if the problem is due to mis-use of library functionality.</p></li>\n<li><p>The library developers if something that should be impossible occurs.</p></li>\n</ul>\n</p>", "a[href=\"#_CPPv412ClearExceptsv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ClearExceptsv\">\n<span id=\"_CPPv312ClearExceptsv\"></span><span id=\"_CPPv212ClearExceptsv\"></span><span id=\"ClearExcepts\"></span><span class=\"target\" id=\"errors_8hpp_1aa10b3ec653b246ba2759910a2e2a02e2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ClearExcepts</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all waiting exceptions. </p></dd>", "a[href=\"#_CPPv4N10ExceptInfo2idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ExceptInfo2idE\">\n<span id=\"_CPPv3N10ExceptInfo2idE\"></span><span id=\"_CPPv2N10ExceptInfo2idE\"></span><span id=\"ExceptInfo::id__ss\"></span><span class=\"target\" id=\"structExceptInfo_1abc237b2b04429d2ea0b2fe3883bc6ed9\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id</span></span></span><br/></dt><dd><p>A unique string ID for this exception type. </p></dd>", "a[href=\"#_CPPv412CountExceptsv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CountExceptsv\">\n<span id=\"_CPPv312CountExceptsv\"></span><span id=\"_CPPv212CountExceptsv\"></span><span id=\"CountExcepts\"></span><span class=\"target\" id=\"errors_8hpp_1a5fea0b0a53fbfb6d18d1a6907ba43569\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountExcepts</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>How many exceptions are waiting to be dealt with? </p></dd>", "a[href=\"#_CPPv414GetEmptyExceptv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414GetEmptyExceptv\">\n<span id=\"_CPPv314GetEmptyExceptv\"></span><span id=\"_CPPv214GetEmptyExceptv\"></span><span id=\"GetEmptyExcept\"></span><span class=\"target\" id=\"errors_8hpp_1a674c7784868982ed87ce8cb607755afd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEmptyExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Function to generate an empty exception (returned when an exception is checked, but none exist.) </p></dd>", "a[href=\"#_CPPv4IDpE14LibraryWarningvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE14LibraryWarningvDpRR2Ts\">\n<span id=\"_CPPv3IDpE14LibraryWarningDpRR2Ts\"></span><span id=\"_CPPv2IDpE14LibraryWarningDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1ac15add070021ddaa4d40feca493ac8de\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LibraryWarning</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE14LibraryWarningvDpRR2Ts\" title=\"LibraryWarning::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Library user has made an error in how they are using the library. </p></dd>", "a[href=\"#_CPPv4N10ExceptInfo16default_to_errorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ExceptInfo16default_to_errorE\">\n<span id=\"_CPPv3N10ExceptInfo16default_to_errorE\"></span><span id=\"_CPPv2N10ExceptInfo16default_to_errorE\"></span><span id=\"ExceptInfo::default_to_error__b\"></span><span class=\"target\" id=\"structExceptInfo_1a02d1efd7478a77f05dc651d1d3255013\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">default_to_error</span></span></span><br/></dt><dd><p>Should we default to an error (or a warning) if not resolved? </p></dd>", "a[href=\"#_CPPv412GetExceptMapv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412GetExceptMapv\">\n<span id=\"_CPPv312GetExceptMapv\"></span><span id=\"_CPPv212GetExceptMapv\"></span><span id=\"GetExceptMap\"></span><span class=\"target\" id=\"errors_8hpp_1a661f68af8c9fd048f43fe203099daabf\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetExceptMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A map of all exceptions that have occurred and are awaiting to be dealt with. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
