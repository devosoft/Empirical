selector_to_html = {"a[href=\"#_CPPv4N2cl10ArgManager10ArgManagerEiA_Pc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager10ArgManagerEiA_Pc\">\n<span id=\"_CPPv3N2cl10ArgManager10ArgManagerEiA_Pc\"></span><span id=\"_CPPv2N2cl10ArgManager10ArgManagerEiA_Pc\"></span><span id=\"cl::ArgManager::ArgManager__i.cPA\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1afdd5287580f012d7a947015e5daa7261\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">argc</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">argv</span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK2cl10ArgManager10HasUnknownERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK2cl10ArgManager10HasUnknownERNSt7ostreamE\">\n<span id=\"_CPPv3NK2cl10ArgManager10HasUnknownERNSt7ostreamE\"></span><span id=\"_CPPv2NK2cl10ArgManager10HasUnknownERNSt7ostreamE\"></span><span id=\"cl::ArgManager::HasUnknown__osRC\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a10573bdc9250bcd349ab10701b30d0b9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasUnknown</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cerr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if there are any unprocessed arguments, and if so, output an error. </p></dd>", "a[href=\"#_CPPv4N2cl10ArgManager20ProcessConfigOptionsER6ConfigRNSt7ostreamERKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager20ProcessConfigOptionsER6ConfigRNSt7ostreamERKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3N2cl10ArgManager20ProcessConfigOptionsER6ConfigRNSt7ostreamERKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv2N2cl10ArgManager20ProcessConfigOptionsER6ConfigRNSt7ostreamERKNSt6stringERKNSt6stringE\"></span><span id=\"cl::ArgManager::ProcessConfigOptions__ConfigR.osR.ssCR.ssCR\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a4ce10dc5e79bb22f680733c27a61bcb4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ProcessConfigOptions</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"config.html#_CPPv46Config\" title=\"Config\"><span class=\"n\"><span class=\"pre\">Config</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">config</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">cfg_file</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">macro_file</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert settings from a configure object to command-line arguments. Return bool for \u201cshould program proceed\u201d (i.e., true=continue, false=exit). </p></dd>", "a[href=\"#_CPPv4NK10ArgManager9HasUnusedERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10ArgManager9HasUnusedERNSt7ostreamE\">\n<span id=\"_CPPv3NK10ArgManager9HasUnusedERNSt7ostreamE\"></span><span id=\"_CPPv2NK10ArgManager9HasUnusedERNSt7ostreamE\"></span><span id=\"ArgManager::HasUnused__osRC\"></span><span class=\"target\" id=\"classArgManager_1a2d420d0c24db32c6e219464ded5bb083\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasUnused</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cerr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if there are any unused argument packs, and if so, output an error message. Returns true if there are any unused argument packs, false otherwise. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N10ArgManagerD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManagerD0Ev\">\n<span id=\"_CPPv3N10ArgManagerD0Ev\"></span><span id=\"_CPPv2N10ArgManagerD0Ev\"></span><span id=\"ArgManager::~ArgManager\"></span><span class=\"target\" id=\"classArgManager_1aad58f37eb5876575d3f1b31f7b6014bc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"#_CPPv4N10ArgManager15args_to_stringsEiA_Pc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager15args_to_stringsEiA_Pc\">\n<span id=\"_CPPv3N10ArgManager15args_to_stringsEiA_Pc\"></span><span id=\"_CPPv2N10ArgManager15args_to_stringsEiA_Pc\"></span><span id=\"ArgManager::args_to_strings__i.cPA\"></span><span class=\"target\" id=\"classArgManager_1a1b8570e7e380c04102a4018ad11aebc7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager6pack_tE\" title=\"ArgManager::pack_t\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">args_to_strings</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">argc</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">argv</span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert input arguments to a vector of strings for easier processing. </p></dd>", "a[href=\"#_CPPv4N7ArgSpec7ArgSpecEK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec7ArgSpecEK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\">\n<span id=\"_CPPv3N7ArgSpec7ArgSpecEK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\"></span><span id=\"_CPPv2N7ArgSpec7ArgSpecEK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\"></span><span class=\"target\" id=\"structArgSpec_1ae059e074d8cbb85f097666815331af5b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">quota_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">description_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"No</span> <span class=\"pre\">description</span> <span class=\"pre\">provided.\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">aliases_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"../../base/api/optional.html#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">callback_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">gobble_flags_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">flatten_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N2cl10ArgManager10ArgManagerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager10ArgManagerEv\">\n<span id=\"_CPPv3N2cl10ArgManager10ArgManagerEv\"></span><span id=\"_CPPv2N2cl10ArgManager10ArgManagerEv\"></span><span id=\"cl::ArgManager::ArgManager\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a99c74b40c23f00754ce097a70a4801e2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N2cl10ArgManagerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManagerE\">\n<span id=\"_CPPv3N2cl10ArgManagerE\"></span><span id=\"_CPPv2N2cl10ArgManagerE\"></span><span id=\"cl::ArgManager\"></span><span class=\"target\" id=\"classcl_1_1ArgManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A simple class to manage command-line arguments that were passed in. Derived from vector&lt;std::string&gt;, but with added functionality for argument handling. </p></dd>", "a[href=\"#_CPPv4N7ArgSpec7ArgSpecEK6size_tK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec7ArgSpecEK6size_tK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\">\n<span id=\"_CPPv3N7ArgSpec7ArgSpecEK6size_tK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\"></span><span id=\"_CPPv2N7ArgSpec7ArgSpecEK6size_tK6size_tKNSt6stringEKNSt13unordered_setINSt6stringEEEKNSt8functionIFv8optionalI6vectorINSt6stringEEEEEEKbKb\"></span><span class=\"target\" id=\"structArgSpec_1a0f61511281c66c961647f4401a1446a4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">most_quota_</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">least_quota_</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">description_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"No</span> <span class=\"pre\">description</span> <span class=\"pre\">provided.\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">aliases_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"../../base/api/optional.html#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">callback_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">gobble_flags_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">flatten_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N7ArgSpec11least_quotaE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec11least_quotaE\">\n<span id=\"_CPPv3N7ArgSpec11least_quotaE\"></span><span id=\"_CPPv2N7ArgSpec11least_quotaE\"></span><span id=\"ArgSpec::least_quota__s\"></span><span class=\"target\" id=\"structArgSpec_1a538f9f80dc4cc08275a76684fc149aee\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">least_quota</span></span></span><br/></dt><dd><p>Minimum words after flag required (enforced during parsing and on UseArg request) </p></dd>", "a[href=\"#_CPPv4N2cl10ArgManager8parent_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager8parent_tE\">\n<span id=\"_CPPv3N2cl10ArgManager8parent_tE\"></span><span id=\"_CPPv2N2cl10ArgManager8parent_tE\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a5a2b2c11d2682355ef0f45bd8d8f5209\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">parent_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"../../base/api/optional.html#_CPPv4I0E8optional\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8optional\">\n<span id=\"_CPPv3I0E8optional\"></span><span id=\"_CPPv2I0E8optional\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classoptional\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">optional</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">optional</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8optional\" title=\"optional::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10ArgManager10ArgManagerEiA_PcRK10spec_map_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager10ArgManagerEiA_PcRK10spec_map_t\">\n<span id=\"_CPPv3N10ArgManager10ArgManagerEiA_PcRK10spec_map_t\"></span><span id=\"_CPPv2N10ArgManager10ArgManagerEiA_PcRK10spec_map_t\"></span><span id=\"ArgManager::ArgManager__i.cPA.spec_map_tCR\"></span><span class=\"target\" id=\"classArgManager_1a89c1d2944f61f09adc68c37b8c3f48f2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">argc</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">argv</span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">specs_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\" title=\"ArgManager::make_builtin_specs\"><span class=\"n\"><span class=\"pre\">make_builtin_specs</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructor for raw command line arguments. This constructor is first in the constructor daisy chain. </p></dd>", "a[href=\"#_CPPv4N10ArgManager12UseCallbacksEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager12UseCallbacksEv\">\n<span id=\"_CPPv3N10ArgManager12UseCallbacksEv\"></span><span id=\"_CPPv2N10ArgManager12UseCallbacksEv\"></span><span id=\"ArgManager::UseCallbacks\"></span><span class=\"target\" id=\"classArgManager_1a645fec1dbc739eda11e52ef146d9696c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UseCallbacks</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Trigger all arguments with callbacks until all pertinent argument packs are consumed. </p></dd>", "a[href=\"#_CPPv4N10ArgManager5specsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager5specsE\">\n<span id=\"_CPPv3N10ArgManager5specsE\"></span><span id=\"_CPPv2N10ArgManager5specsE\"></span><span id=\"ArgManager::specs__spec_map_tC\"></span><span class=\"target\" id=\"classArgManager_1a13a4a5ce4ad134879cab51d7c9a9a5d5\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">specs</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10ArgManager10pack_map_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager10pack_map_tE\">\n<span id=\"_CPPv3N10ArgManager10pack_map_tE\"></span><span id=\"_CPPv2N10ArgManager10pack_map_tE\"></span><span class=\"target\" id=\"classArgManager_1a81e219685fa2e6b2c53244443411eb7c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pack_map_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager6pack_tE\" title=\"ArgManager::pack_t\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N7ArgSpec8callbackE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec8callbackE\">\n<span id=\"_CPPv3N7ArgSpec8callbackE\"></span><span id=\"_CPPv2N7ArgSpec8callbackE\"></span><span class=\"target\" id=\"structArgSpec_1a986ff62baae6869f1e2569e15d37b3e9\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"../../base/api/optional.html#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">callback</span></span></span><br/></dt><dd><p>Function that can process this flag and its arguments. </p></dd>", "a[href=\"#_CPPv4N7ArgSpec10most_quotaE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec10most_quotaE\">\n<span id=\"_CPPv3N7ArgSpec10most_quotaE\"></span><span id=\"_CPPv2N7ArgSpec10most_quotaE\"></span><span id=\"ArgSpec::most_quota__s\"></span><span class=\"target\" id=\"structArgSpec_1a37b6356508feaba16d9de5af98d1a6bd\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">most_quota</span></span></span><br/></dt><dd><p>Max words after flag to be used (enforced during parsing and on UseArg request) </p></dd>", "a[href=\"#_CPPv4N7ArgSpec7flattenE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec7flattenE\">\n<span id=\"_CPPv3N7ArgSpec7flattenE\"></span><span id=\"_CPPv2N7ArgSpec7flattenE\"></span><span id=\"ArgSpec::flatten__b\"></span><span class=\"target\" id=\"structArgSpec_1acd95dbeba8d27099ebb95dda07888609\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flatten</span></span></span><br/></dt><dd><p>If this flag is used multiple times, should we combine all argument packs? (e.g., a single list of words instead of a list of lists of words). </p></dd>", "a[href=\"#_CPPv4N2cl10ArgManager9arg_descsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager9arg_descsE\">\n<span id=\"_CPPv3N2cl10ArgManager9arg_descsE\"></span><span id=\"_CPPv2N2cl10ArgManager9arg_descsE\"></span><span id=\"cl::ArgManager::arg_descs__vector:ss:\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a7917a3fcbad2399fc183cf66f8e70283\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">arg_descs</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN2cl10ArgManager6UseArgEiRKNSt6stringER1TRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN2cl10ArgManager6UseArgEiRKNSt6stringER1TRKNSt6stringE\">\n<span id=\"_CPPv3I0EN2cl10ArgManager6UseArgERKNSt6stringER1TRKNSt6stringE\"></span><span id=\"_CPPv2I0EN2cl10ArgManager6UseArgERKNSt6stringER1TRKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classcl_1_1ArgManager_1a0ad79fe9cbc4ba66a0a5dfa5792e06b4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UseArg</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0EN2cl10ArgManager6UseArgEiRKNSt6stringER1TRKNSt6stringE\" title=\"cl::ArgManager::UseArg::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">var</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">desc</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>UseArg takes a name, a variable and an optional description. If the name exists, it uses the next argument to change the value of the variable. Return 1 if found, 0 if not found, and -1 if error (no value provided) </p></dd>", "a[href=\"#_CPPv4N10ArgManager5packsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager5packsE\">\n<span id=\"_CPPv3N10ArgManager5packsE\"></span><span id=\"_CPPv2N10ArgManager5packsE\"></span><span id=\"ArgManager::packs__pack_map_t\"></span><span class=\"target\" id=\"classArgManager_1aed79d1ae111cd219993e6733a2944658\"></span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10pack_map_tE\" title=\"ArgManager::pack_map_t\"><span class=\"n\"><span class=\"pre\">pack_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">packs</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK2cl10ArgManager11TestUnknownERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK2cl10ArgManager11TestUnknownERNSt7ostreamE\">\n<span id=\"_CPPv3NK2cl10ArgManager11TestUnknownERNSt7ostreamE\"></span><span id=\"_CPPv2NK2cl10ArgManager11TestUnknownERNSt7ostreamE\"></span><span id=\"cl::ArgManager::TestUnknown__osRC\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1aac829a7f2689fa4661f06754d83a195d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TestUnknown</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cerr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Leaving TestUnknown for backward compatability; returns opposite of HasUnknown(). </p></dd>", "a[href=\"#_CPPv4N10ArgManager12DealiasSpecsE10spec_map_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager12DealiasSpecsE10spec_map_t\">\n<span id=\"_CPPv3N10ArgManager12DealiasSpecsE10spec_map_t\"></span><span id=\"_CPPv2N10ArgManager12DealiasSpecsE10spec_map_t\"></span><span id=\"ArgManager::DealiasSpecs__spec_map_t\"></span><span class=\"target\" id=\"classArgManager_1ab74939a27b4b8540078159a8a7673a93\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DealiasSpecs</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">inSpecsMap</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N2cl10ArgManager7UseFlagERKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager7UseFlagERKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3N2cl10ArgManager7UseFlagERKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv2N2cl10ArgManager7UseFlagERKNSt6stringERKNSt6stringE\"></span><span id=\"cl::ArgManager::UseFlag__ssCR.ssCR\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a66a24c88e390a7136abfefd4f1614391\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UseFlag</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">desc</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>UseFlag takes a name and an optional description. If the name exists, return true, otherwise return false. </p></dd>", "a[href=\"#_CPPv4N10ArgManager10spec_map_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager10spec_map_tE\">\n<span id=\"_CPPv3N10ArgManager10spec_map_tE\"></span><span id=\"_CPPv2N10ArgManager10spec_map_tE\"></span><span class=\"target\" id=\"classArgManager_1af8d51c19bd403229a95460077ff7cd17\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47ArgSpec\" title=\"ArgSpec\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10ArgManager10ArgManagerEK6pack_tRK10spec_map_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager10ArgManagerEK6pack_tRK10spec_map_t\">\n<span id=\"_CPPv3N10ArgManager10ArgManagerEK6pack_tRK10spec_map_t\"></span><span id=\"_CPPv2N10ArgManager10ArgManagerEK6pack_tRK10spec_map_t\"></span><span id=\"ArgManager::ArgManager__pack_tC.spec_map_tCR\"></span><span class=\"target\" id=\"classArgManager_1ab1e7a71b17b1aacc87edf06ac72a72e1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager6pack_tE\" title=\"ArgManager::pack_t\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">specs_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\" title=\"ArgManager::make_builtin_specs\"><span class=\"n\"><span class=\"pre\">make_builtin_specs</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This constructor is second in the constructor daisy chain. </p></dd>", "a[href=\"#_CPPv4N2cl10ArgManagerD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManagerD0Ev\">\n<span id=\"_CPPv3N2cl10ArgManagerD0Ev\"></span><span id=\"_CPPv2N2cl10ArgManagerD0Ev\"></span><span id=\"cl::ArgManager::~ArgManager\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a690b8445bf3e5d6a5ea1ffeed6aa14cc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#argmanager-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ArgManager.hpp<a class=\"headerlink\" href=\"#argmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A tool for sythesizing command-line arguments, URL query params, and config files. </p>", "a[href=\"#_CPPv4NK10ArgManager15PrintDiagnosticERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10ArgManager15PrintDiagnosticERNSt7ostreamE\">\n<span id=\"_CPPv3NK10ArgManager15PrintDiagnosticERNSt7ostreamE\"></span><span id=\"_CPPv2NK10ArgManager15PrintDiagnosticERNSt7ostreamE\"></span><span id=\"ArgManager::PrintDiagnostic__osRC\"></span><span class=\"target\" id=\"classArgManager_1a19e280bf3837486acb431fc467f7c182\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintDiagnostic</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Print the current state of the ArgManager; provide diagnostic hints about argument packs remaining. </p></dd>", "a[href=\"#_CPPv47ArgSpec\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47ArgSpec\">\n<span id=\"_CPPv37ArgSpec\"></span><span id=\"_CPPv27ArgSpec\"></span><span id=\"ArgSpec\"></span><span class=\"target\" id=\"structArgSpec\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></span><br/></dt><dd><p>A helper struct for ArgManager that specifies a single argument type. Note that the primary argument name is specified as the keys of the specs map constructor argument for ArgManager. </p></dd>", "a[href=\"config.html#_CPPv46Config\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Config\">\n<span id=\"_CPPv36Config\"></span><span id=\"_CPPv26Config\"></span><span id=\"Config\"></span><span class=\"target\" id=\"classConfig\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Config</span></span></span><br/></dt><dd><p>Master configuration class that manages all of the settings. </p></dd>", "a[href=\"#_CPPv4N10ArgManager14ProcessBuiltinEK3PtrI6ConfigERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager14ProcessBuiltinEK3PtrI6ConfigERNSt7ostreamE\">\n<span id=\"_CPPv3N10ArgManager14ProcessBuiltinEK3PtrI6ConfigERNSt7ostreamE\"></span><span id=\"_CPPv2N10ArgManager14ProcessBuiltinEK3PtrI6ConfigERNSt7ostreamE\"></span><span id=\"ArgManager::ProcessBuiltin__Ptr:Config:C.osR\"></span><span class=\"target\" id=\"classArgManager_1a6ef4a548945710fce682b272ff174aae\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ProcessBuiltin</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"config.html#_CPPv46Config\" title=\"Config\"><span class=\"n\"><span class=\"pre\">Config</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">config</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Process builtin commands. Return bool for \u201cshould program proceed\u201d (i.e., true=continue, false=exit). </p></dd>", "a[href=\"#_CPPv4N10ArgManager6pack_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager6pack_tE\">\n<span id=\"_CPPv3N10ArgManager6pack_tE\"></span><span id=\"_CPPv2N10ArgManager6pack_tE\"></span><span class=\"target\" id=\"classArgManager_1a24f1b501947dd33f3d9dce93a87d7e5d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10ArgManager6UseArgERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager6UseArgERKNSt6stringE\">\n<span id=\"_CPPv3N10ArgManager6UseArgERKNSt6stringE\"></span><span id=\"_CPPv2N10ArgManager6UseArgERKNSt6stringE\"></span><span id=\"ArgManager::UseArg__ssCR\"></span><span class=\"target\" id=\"classArgManager_1af9c473c0aaa8a0f8f94990f966d2176e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/optional.html#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager6pack_tE\" title=\"ArgManager::pack_t\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UseArg</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>UseArg consumes an argument pack accessed by a certain name. </p></dd>", "a[href=\"#_CPPv4N2cl10ArgManager9arg_namesE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager9arg_namesE\">\n<span id=\"_CPPv3N2cl10ArgManager9arg_namesE\"></span><span id=\"_CPPv2N2cl10ArgManager9arg_namesE\"></span><span id=\"cl::ArgManager::arg_names__vector:ss:\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1af31b8804860bdb9faf8e5203b2ae49b8\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">arg_names</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N7ArgSpec12gobble_flagsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec12gobble_flagsE\">\n<span id=\"_CPPv3N7ArgSpec12gobble_flagsE\"></span><span id=\"_CPPv2N7ArgSpec12gobble_flagsE\"></span><span id=\"ArgSpec::gobble_flags__b\"></span><span class=\"target\" id=\"structArgSpec_1ad2cc0c30b15a38e5000424a583e09c52\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">gobble_flags</span></span></span><br/></dt><dd><p>Should this flag collect subsequent flags (that begin with -) as arguments? </p></dd>", "a[href=\"#_CPPv4N7ArgSpec7aliasesE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec7aliasesE\">\n<span id=\"_CPPv3N7ArgSpec7aliasesE\"></span><span id=\"_CPPv2N7ArgSpec7aliasesE\"></span><span id=\"ArgSpec::aliases__std::unordered_set:ss:\"></span><span class=\"target\" id=\"structArgSpec_1a9a5f2213149982527bdd56f31a300efc\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">aliases</span></span></span><br/></dt><dd><p>Set of alternate flag names that will trigger this flag. </p></dd>", "a[href=\"#_CPPv4N10ArgManager10ArgManagerERK10pack_map_tRK10spec_map_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager10ArgManagerERK10pack_map_tRK10spec_map_t\">\n<span id=\"_CPPv3N10ArgManager10ArgManagerERK10pack_map_tRK10spec_map_t\"></span><span id=\"_CPPv2N10ArgManager10ArgManagerERK10pack_map_tRK10spec_map_t\"></span><span id=\"ArgManager::ArgManager__pack_map_tCR.spec_map_tCR\"></span><span class=\"target\" id=\"classArgManager_1a21d7bc147c51ca2d02c0750a31b6e626\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10pack_map_tE\" title=\"ArgManager::pack_map_t\"><span class=\"n\"><span class=\"pre\">pack_map_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">packs_</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">specs_</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\" title=\"ArgManager::make_builtin_specs\"><span class=\"n\"><span class=\"pre\">make_builtin_specs</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Constructor that bypasses command line argument parsing where argument packs are provided directly, e.g., for use with URL query params. This constructor is last in the constructor daisy chain. </p></dd>", "a[href=\"#_CPPv4N2cl10ArgManager6UseArgERKNSt6stringER6ConfigRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManager6UseArgERKNSt6stringER6ConfigRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3N2cl10ArgManager6UseArgERKNSt6stringER6ConfigRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv2N2cl10ArgManager6UseArgERKNSt6stringER6ConfigRKNSt6stringERKNSt6stringE\"></span><span id=\"cl::ArgManager::UseArg__ssCR.ConfigR.ssCR.ssCR\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a1df7a3c31308fe2550f9c4e2a421d2c3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UseArg</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span>, <a class=\"reference internal\" href=\"config.html#_CPPv46Config\" title=\"Config\"><span class=\"n\"><span class=\"pre\">Config</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">config</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">cfg_name</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">desc</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>UseArg can also take a config object and a name, and use the argument to set the config object. </p></dd>", "a[href=\"#_CPPv4eqRK7ArgSpecRK7ArgSpec\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4eqRK7ArgSpecRK7ArgSpec\">\n<span id=\"_CPPv3eqRK7ArgSpecRK7ArgSpec\"></span><span id=\"_CPPv2eqRK7ArgSpecRK7ArgSpec\"></span><span id=\"eq-operator__ArgSpecCR.ArgSpecCR\"></span><span class=\"target\" id=\"ArgManager_8hpp_1a852f7230a0d01cbf0cd0ca469a157f6b\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47ArgSpec\" title=\"ArgSpec\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">lhs</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47ArgSpec\" title=\"ArgSpec\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rhs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK2cl10ArgManager9PrintHelpERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK2cl10ArgManager9PrintHelpERNSt7ostreamE\">\n<span id=\"_CPPv3NK2cl10ArgManager9PrintHelpERNSt7ostreamE\"></span><span id=\"_CPPv2NK2cl10ArgManager9PrintHelpERNSt7ostreamE\"></span><span id=\"cl::ArgManager::PrintHelp__osRC\"></span><span class=\"target\" id=\"classcl_1_1ArgManager_1a46851c00ced53b92be5472165af0be55\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintHelp</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Print information about all known argument types and what they\u2019re for; make pretty. </p></dd>", "a[href=\"#_CPPv4NK10ArgManager9PrintHelpERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10ArgManager9PrintHelpERNSt7ostreamE\">\n<span id=\"_CPPv3NK10ArgManager9PrintHelpERNSt7ostreamE\"></span><span id=\"_CPPv2NK10ArgManager9PrintHelpERNSt7ostreamE\"></span><span id=\"ArgManager::PrintHelp__osRC\"></span><span class=\"target\" id=\"classArgManager_1a5de1ca1fc24aaebadc5450ed8adeaf2e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintHelp</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cerr</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Print information about all known argument types and what they\u2019re for; make pretty. </p></dd>", "a[href=\"#_CPPv4N10ArgManager5parseE6pack_tRK10spec_map_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager5parseE6pack_tRK10spec_map_t\">\n<span id=\"_CPPv3N10ArgManager5parseE6pack_tRK10spec_map_t\"></span><span id=\"_CPPv2N10ArgManager5parseE6pack_tRK10spec_map_t\"></span><span id=\"ArgManager::parse__pack_t.spec_map_tCR\"></span><span class=\"target\" id=\"classArgManager_1ace8f4b909a130bf76ed461c8bb8d54dc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10pack_map_tE\" title=\"ArgManager::pack_map_t\"><span class=\"n\"><span class=\"pre\">pack_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">parse</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager6pack_tE\" title=\"ArgManager::pack_t\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">specs</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Use argument specifications to convert command line arguments to argument packs. </p></dd>", "a[href=\"#_CPPv4N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\">\n<span id=\"_CPPv3N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\"></span><span id=\"_CPPv2N10ArgManager18make_builtin_specsEK3PtrI6ConfigE\"></span><span id=\"ArgManager::make_builtin_specs__Ptr:Config:C\"></span><span class=\"target\" id=\"classArgManager_1a1389953e38b1e0e6dc39600815f3d643\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager10spec_map_tE\" title=\"ArgManager::spec_map_t\"><span class=\"n\"><span class=\"pre\">spec_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">make_builtin_specs</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"config.html#_CPPv46Config\" title=\"Config\"><span class=\"n\"><span class=\"pre\">Config</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">config</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make specs for builtin commands, including any config adjustment args. </p></dd>", "a[href=\"#_CPPv410ArgManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ArgManager\">\n<span id=\"_CPPv310ArgManager\"></span><span id=\"_CPPv210ArgManager\"></span><span id=\"ArgManager\"></span><span class=\"target\" id=\"classArgManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><br/></dt><dd><p>Manager for command line arguments and URL query params. </p></dd>", "a[href=\"#_CPPv4N10ArgManager11CallbackArgERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10ArgManager11CallbackArgERKNSt6stringE\">\n<span id=\"_CPPv3N10ArgManager11CallbackArgERKNSt6stringE\"></span><span id=\"_CPPv2N10ArgManager11CallbackArgERKNSt6stringE\"></span><span id=\"ArgManager::CallbackArg__ssCR\"></span><span class=\"target\" id=\"classArgManager_1ada2b952f67c9f42d295ea2bc371c565d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallbackArg</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Trigger the callback (if specified) for an argument, consuming an argument pack if available and callback present. If no argpack is available, the callback is triggered with nullopt. Return true if an argument pack was consumed, otherwise false. </p></dd>", "a[href=\"#_CPPv4NK10ArgManager7ViewArgERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10ArgManager7ViewArgERKNSt6stringE\">\n<span id=\"_CPPv3NK10ArgManager7ViewArgERKNSt6stringE\"></span><span id=\"_CPPv2NK10ArgManager7ViewArgERKNSt6stringE\"></span><span id=\"ArgManager::ViewArg__ssCRC\"></span><span class=\"target\" id=\"classArgManager_1af7664a54768189a08a64c77e1096d6b3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N10ArgManager6pack_tE\" title=\"ArgManager::pack_t\"><span class=\"n\"><span class=\"pre\">pack_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ViewArg</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>ViewArg provides, but doesn\u2019t comsume, all argument packs under a certain name. </p></dd>", "a[href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N7ArgSpec11descriptionE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7ArgSpec11descriptionE\">\n<span id=\"_CPPv3N7ArgSpec11descriptionE\"></span><span id=\"_CPPv2N7ArgSpec11descriptionE\"></span><span id=\"ArgSpec::description__ss\"></span><span class=\"target\" id=\"structArgSpec_1ac5d447e7c2119dd58f65942222c54978\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">description</span></span></span><br/></dt><dd><p>User-level description of this flag. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
