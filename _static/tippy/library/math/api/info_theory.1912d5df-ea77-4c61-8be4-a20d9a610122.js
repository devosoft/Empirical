selector_to_html = {"a[href=\"#_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\">\n<span id=\"_CPPv3I00E7EntropyRK9CONTAINER10WEIGHT_FUNd\"></span><span id=\"_CPPv2I00E7EntropyRK9CONTAINER10WEIGHT_FUNd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WEIGHT_FUN</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"info__theory_8hpp_1a11d9b50a770d467aff8255774e571323\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Entropy</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\" title=\"Entropy::CONTAINER\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">objs</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\" title=\"Entropy::WEIGHT_FUN\"><span class=\"n\"><span class=\"pre\">WEIGHT_FUN</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">total</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the entropy in a container of arbitrary objects. Args are a container, a function to extract the weight of each member, and an (optional) total weight. </p></dd>", "a[href=\"#_CPPv48Entropy2Kd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Entropy2Kd\">\n<span id=\"_CPPv38Entropy2Kd\"></span><span id=\"_CPPv28Entropy2Kd\"></span><span id=\"Entropy2__doubleCCE\"></span><span class=\"target\" id=\"info__theory_8hpp_1a0bb1bb57a63214ecb2364c385096c82c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Entropy2</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the entropy when their are two possibile states based on one state\u2019s probability. </p></dd>", "a[href=\"#info-theory-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">info_theory.hpp<a class=\"headerlink\" href=\"#info-theory-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to calculate Information Theory metrics. </p><p>\nInfo-theory formulas: H(X) = -SUM(X: p[x] log2 p[x]) H(X|Y) = H(XY) - H(Y) I(X:Y) = H(X) - H(X|Y) H2(p) = -p log2(p) - (1-p)log2(1-p) = H({p, 1-p})</p>", "a[href=\"#_CPPv4I0E7EntropydRK9CONTAINER\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7EntropydRK9CONTAINER\">\n<span id=\"_CPPv3I0E7EntropyRK9CONTAINER\"></span><span id=\"_CPPv2I0E7EntropyRK9CONTAINER\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"info__theory_8hpp_1a0090b1b2949e69ad692b124d4cec07c8\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Entropy</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7EntropydRK9CONTAINER\" title=\"Entropy::CONTAINER\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">weights</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector of weights to probabilities and return the entropy of the system. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
