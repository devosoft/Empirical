selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/Middle-square_method\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Middle-square_method.svg/320px-Middle-square_method.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>In mathematics and computer science, the <b>middle-square method</b> is a method of generating pseudorandom numbers. In practice it is a highly flawed method for many practical purposes, since its period is usually very short and it has some severe weaknesses; repeated enough times, the middle-square method will either begin repeatedly generating the same number or cycle to a previous number in the sequence and loop indefinitely.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Middle-square_method#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Middle-square_method.svg/320px-Middle-square_method.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>In mathematics and computer science, the <b>middle-square method</b> is a method of generating pseudorandom numbers. In practice it is a highly flawed method for many practical purposes, since its period is usually very short and it has some severe weaknesses; repeated enough times, the middle-square method will either begin repeatedly generating the same number or cycle to a previous number in the sequence and loop indefinitely.</p>", "a[href=\"#_CPPv4N6Random12RandFill87_5E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill87_5E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random12RandFill87_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random12RandFill87_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill87_5__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1ab464c73dc58e8e85350f00292001ea59\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill87_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random4Prob7PROB_75E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob7PROB_75E\">\n<span id=\"_CPPv3N6Random4Prob7PROB_75E\"></span><span id=\"_CPPv2N6Random4Prob7PROB_75E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543a36f1854d3be55f2fc966581f30c4a238\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_75</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random4ProbE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4ProbE\">\n<span id=\"_CPPv3N6Random4ProbE\"></span><span id=\"_CPPv2N6Random4ProbE\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543\"></span><span class=\"k\"><span class=\"pre\">enum</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Prob</span></span></span><br/></dt><dd><p>Enumeration for common probabilities. (not class, so can be referred to elsewhere as e.g., Random::PROB_50) </p><p><em>Values:</em></p></dd>", "a[href=\"#_CPPv4N6Random12RandFill37_5E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill37_5E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random12RandFill37_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random12RandFill37_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill37_5__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1a0706e71a8e34ee205b35b4532b0dc1ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill37_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random12RandFill87_5E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill87_5E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random12RandFill87_5E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random12RandFill87_5E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill87_5__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1ae238766bccda9b5fa1a45f6db97376fa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill87_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N16RandomStdAdaptor16RandomStdAdaptorER6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16RandomStdAdaptor16RandomStdAdaptorER6Random\">\n<span id=\"_CPPv3N16RandomStdAdaptor16RandomStdAdaptorER6Random\"></span><span id=\"_CPPv2N16RandomStdAdaptor16RandomStdAdaptorER6Random\"></span><span id=\"RandomStdAdaptor::RandomStdAdaptor__RandomR\"></span><span class=\"target\" id=\"structRandomStdAdaptor_1a8d1efadf0983c04a4d055033c43975a2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomStdAdaptor</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rng</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random14GetExponentialEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random14GetExponentialEd\">\n<span id=\"_CPPv3N6Random14GetExponentialEd\"></span><span id=\"_CPPv2N6Random14GetExponentialEd\"></span><span id=\"Random::GetExponential__double\"></span><span class=\"target\" id=\"classRandom_1aea45fd930be2480e95753ede92fd62e6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetExponential</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random variable drawn from an exponential distribution. </p></dd>", "a[href=\"#_CPPv4N6Random4Prob6PROB_0E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob6PROB_0E\">\n<span id=\"_CPPv3N6Random4Prob6PROB_0E\"></span><span id=\"_CPPv2N6Random4Prob6PROB_0E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543ab108ce3fec24e3bbfe7a01f5d0fd6a9a\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_0</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetNormalEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetNormalEv\">\n<span id=\"_CPPv3N6Random9GetNormalEv\"></span><span id=\"_CPPv2N6Random9GetNormalEv\"></span><span id=\"Random::GetNormal\"></span><span class=\"target\" id=\"classRandom_1a208d341ff9900f4b2958a9c1a3691137\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNormal</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Generate a random variable drawn from a unit normal distribution. </p></dd>", "a[href=\"#_CPPv4N6Random5valueE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random5valueE\">\n<span id=\"_CPPv3N6Random5valueE\"></span><span id=\"_CPPv2N6Random5valueE\"></span><span id=\"Random::value__uint64_t\"></span><span class=\"target\" id=\"classRandom_1a8ee57c6749ca888a5a974a9a15d03a77\"></span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>Current squaring value. </p></dd>", "a[href=\"#_CPPv4N6Random8RAND_CAPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random8RAND_CAPE\">\n<span id=\"_CPPv3N6Random8RAND_CAPE\"></span><span id=\"_CPPv2N6Random8RAND_CAPE\"></span><span id=\"Random::RAND_CAP__uint64_tC\"></span><span class=\"target\" id=\"classRandom_1afd612a9b50ee5422e3ace3dd600f8825\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RAND_CAP</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4294967296</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random12RandFill62_5E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill62_5E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random12RandFill62_5E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random12RandFill62_5E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill62_5__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1a383b0d26cf9165225912648d54da513f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill62_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N16RandomStdAdaptor13argument_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16RandomStdAdaptor13argument_typeE\">\n<span id=\"_CPPv3N16RandomStdAdaptor13argument_typeE\"></span><span id=\"_CPPv2N16RandomStdAdaptor13argument_typeE\"></span><span id=\"RandomStdAdaptor::argument_type\"></span><span class=\"target\" id=\"structRandomStdAdaptor_1a62b1fed0e6a8c600e53bd4df76a57c83\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">argument_type</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN6Random7GetUIntE8uint32_tK5RangeI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN6Random7GetUIntE8uint32_tK5RangeI1TE\">\n<span id=\"_CPPv3I0EN6Random7GetUIntEK5RangeI1TE\"></span><span id=\"_CPPv2I0EN6Random7GetUIntEK5RangeI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRandom_1ad366ef00ef4e1f41fd1515f516f34b26\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"Range.html#_CPPv4I0_bE5Range\" title=\"Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0EN6Random7GetUIntE8uint32_tK5RangeI1TE\" title=\"Random::GetUInt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">range</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random12RandFill12_5E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill12_5E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random12RandFill12_5E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random12RandFill12_5E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill12_5__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1a5e5e04a84a29a2709a278a4610984cbf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill12_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random8RandFillE9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random8RandFillE9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random8RandFillE9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random8RandFillE9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1a5a73c103732746802ac4a90139036f2f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Randomize a contiguous segment of memory. </p></dd>", "a[href=\"#_CPPv4N6RandomD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6RandomD0Ev\">\n<span id=\"_CPPv3N6RandomD0Ev\"></span><span id=\"_CPPv2N6RandomD0Ev\"></span><span id=\"Random::~Random\"></span><span class=\"target\" id=\"classRandom_1ac0d4eaf1f32df4600eb321cb8dbc0c55\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~Random</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9RandFill0E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9RandFill0E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random9RandFill0E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random9RandFill0E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill0__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1ae7f9eed406645ba758c7ea552832a395\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill0</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N16RandomStdAdaptorclEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16RandomStdAdaptorclEi\">\n<span id=\"_CPPv3N16RandomStdAdaptorclEi\"></span><span id=\"_CPPv2N16RandomStdAdaptorclEi\"></span><span id=\"RandomStdAdaptor::call-operator__i\"></span><span class=\"target\" id=\"structRandomStdAdaptor_1abbec15b59cea0088f3adbc988e087363\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">n</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random7GetUIntEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random7GetUIntEv\">\n<span id=\"_CPPv3N6Random7GetUIntEv\"></span><span id=\"_CPPv2N6Random7GetUIntEv\"></span><span id=\"Random::GetUInt\"></span><span class=\"target\" id=\"classRandom_1a14b75279cc935640004bd7ccfe60dbc5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9ResetSeedEK7int64_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9ResetSeedEK7int64_t\">\n<span id=\"_CPPv3N6Random9ResetSeedEK7int64_t\"></span><span id=\"_CPPv2N6Random9ResetSeedEK7int64_t\"></span><span id=\"Random::ResetSeed__int64_tC\"></span><span class=\"target\" id=\"classRandom_1a1f881158996871dccc0e5e7eed96b4bb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResetSeed</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int64_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">seed</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Starts a new sequence of pseudo random numbers. A negative seed means that the random number generator gets its seed from the current system time and the process memory. </p></dd>", "a[href=\"#_CPPv4NK6Random7GetSeedEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6Random7GetSeedEv\">\n<span id=\"_CPPv3NK6Random7GetSeedEv\"></span><span id=\"_CPPv2NK6Random7GetSeedEv\"></span><span id=\"Random::GetSeedC\"></span><span class=\"target\" id=\"classRandom_1a9dffa911bd9805daf79eb82810535e33\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSeed</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random6GetIntEKiKi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random6GetIntEKiKi\">\n<span id=\"_CPPv3N6Random6GetIntEKiKi\"></span><span id=\"_CPPv2N6Random6GetIntEKiKi\"></span><span id=\"Random::GetInt__iC.iC\"></span><span class=\"target\" id=\"classRandom_1a647ab2b51c9fd929b2115a95a2f18c34\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10RandFill25E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10RandFill25E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random10RandFill25E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random10RandFill25E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill25__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1ae23d27358c9b6a21e11441d735af8d94\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill25</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetBits50Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetBits50Ev\">\n<span id=\"_CPPv3N6Random9GetBits50Ev\"></span><span id=\"_CPPv2N6Random9GetBits50Ev\"></span><span id=\"Random::GetBits50\"></span><span class=\"target\" id=\"classRandom_1ab838dd5d1396925958c9898b30f5872d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits50</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#random-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Random.hpp<a class=\"headerlink\" href=\"#random-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A versatile and non-patterned pseudo-random-number generator. Status: RELEASE. </p>", "a[href=\"#_CPPv4N6Random9mem_ptr_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9mem_ptr_tE\">\n<span id=\"_CPPv3N6Random9mem_ptr_tE\"></span><span id=\"_CPPv2N6Random9mem_ptr_tE\"></span><span class=\"target\" id=\"classRandom_1a55407b7ceb232630514b27848b92951a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Shortcut type for all functions that deal witch chunks of memory. </p></dd>", "a[href=\"#_CPPv4N6Random1PEKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random1PEKd\">\n<span id=\"_CPPv3N6Random1PEKd\"></span><span id=\"_CPPv2N6Random1PEKd\"></span><span id=\"Random::P__doubleC\"></span><span class=\"target\" id=\"classRandom_1ae857bc9cc187281525de9b5f5e3daa7e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">P</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Tests a random value [0,1) against a given probability p, and returns true of false. </p></dd>", "a[href=\"#_CPPv4N6Random13original_seedE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random13original_seedE\">\n<span id=\"_CPPv3N6Random13original_seedE\"></span><span id=\"_CPPv2N6Random13original_seedE\"></span><span id=\"Random::original_seed__uint64_t\"></span><span class=\"target\" id=\"classRandom_1a8bbc2daa31fa84c73e148b08f98c4451\"></span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">original_seed</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>Seed to start sequence; initialized weyl_state. </p></dd>", "a[href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random5expRVE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random5expRVE\">\n<span id=\"_CPPv3N6Random5expRVE\"></span><span id=\"_CPPv2N6Random5expRVE\"></span><span id=\"Random::expRV__double\"></span><span class=\"target\" id=\"classRandom_1ac4a30df062142ab2706ad302f6c14425\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">expRV</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><br/></dt><dd><p>Exponential Random Variable for the randNormal function. </p></dd>", "a[href=\"#_CPPv4N6Random10RandFill75E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10RandFill75E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random10RandFill75E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random10RandFill75E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill75__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1ab2582748840e20fb60d0ff79dd0139ab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill75</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random12RandFill62_5E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill62_5E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random12RandFill62_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random12RandFill62_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill62_5__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1a92c10bac3e16d9f12013eaa0864a6466\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill62_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10GetPoissonEKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10GetPoissonEKd\">\n<span id=\"_CPPv3N6Random10GetPoissonEKd\"></span><span id=\"_CPPv2N6Random10GetPoissonEKd\"></span><span id=\"Random::GetPoisson__doubleC\"></span><span class=\"target\" id=\"classRandom_1a392b2efead5f44c4c0d2d8f6b44899f6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetPoisson</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mean</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random variable drawn from a Poisson distribution. </p></dd>", "a[href=\"#_CPPv4N6Random9GetDoubleEK5RangeIdE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetDoubleEK5RangeIdE\">\n<span id=\"_CPPv3N6Random9GetDoubleEK5RangeIdE\"></span><span id=\"_CPPv2N6Random9GetDoubleEK5RangeIdE\"></span><span id=\"Random::GetDouble__Range:double:C\"></span><span class=\"target\" id=\"classRandom_1a837fcab4a7c73dce7ee59487da8df69b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"Range.html#_CPPv4I0_bE5Range\" title=\"Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">range</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10RandFill75E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10RandFill75E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random10RandFill75E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random10RandFill75E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill75__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1aa2646c56432c5e283d628b3851ff71e5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill75</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10RandFill50E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10RandFill50E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random10RandFill50E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random10RandFill50E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill50__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1ac68765b291b769a15ee9fcba30692315\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill50</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10RandFill25E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10RandFill25E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random10RandFill25E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random10RandFill25E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill25__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1a465fce07583f835e9e6ac8fdcecbbc64\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill25</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN6Random7GetUIntE8uint32_tK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN6Random7GetUIntE8uint32_tK1T\">\n<span id=\"_CPPv3I0EN6Random7GetUIntEK1T\"></span><span id=\"_CPPv2I0EN6Random7GetUIntEK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRandom_1adb0c8e8de1be3bf58b13453aa397ba26\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN6Random7GetUIntE8uint32_tK1T\" title=\"Random::GetUInt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random8RandFillE9mem_ptr_tK6size_tKdK6size_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random8RandFillE9mem_ptr_tK6size_tKdK6size_tK6size_t\">\n<span id=\"_CPPv3N6Random8RandFillE9mem_ptr_tK6size_tKdK6size_tK6size_t\"></span><span id=\"_CPPv2N6Random8RandFillE9mem_ptr_tK6size_tKdK6size_tK6size_t\"></span><span id=\"Random::RandFill__mem_ptr_t.sC.doubleC.sC.sC\"></span><span class=\"target\" id=\"classRandom_1a5b2cd0616bd09a1901044ea4b3a498cd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Randomize a contiguous segment of memory with a given probability of each bit being on. </p></dd>", "a[href=\"#_CPPv4I_4ProbEN6Random9RandFillPEv9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_4ProbEN6Random9RandFillPEv9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3I_4ProbEN6Random9RandFillPE9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2I_4ProbEN6Random9RandFillPE9mem_ptr_tK6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N6Random4ProbE\" title=\"Random::Prob\"><span class=\"n\"><span class=\"pre\">Prob</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRandom_1a71820133fe2696fe5c37c723b18341bf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFillP</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Randomize a contiguous segment of memory. </p></dd>", "a[href=\"#_CPPv4N6Random9GetBits25Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetBits25Ev\">\n<span id=\"_CPPv3N6Random9GetBits25Ev\"></span><span id=\"_CPPv2N6Random9GetBits25Ev\"></span><span id=\"Random::GetBits25\"></span><span class=\"target\" id=\"classRandom_1a16e867fe8212a62e1e01180e8c2bd6be\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits25</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random4Prob9PROB_87_5E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob9PROB_87_5E\">\n<span id=\"_CPPv3N6Random4Prob9PROB_87_5E\"></span><span id=\"_CPPv2N6Random4Prob9PROB_87_5E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543a5102116e3fbea027626c537e1224da9e\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_87_5</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10StepEngineEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10StepEngineEv\">\n<span id=\"_CPPv3N6Random10StepEngineEv\"></span><span id=\"_CPPv2N6Random10StepEngineEv\"></span><span id=\"Random::StepEngine\"></span><span class=\"target\" id=\"classRandom_1a11e5019e5b57910cf8c471d0c71fa511\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StepEngine</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Advance pseudorandom number generation engine one step. </p></dd>", "a[href=\"#_CPPv4N6Random11GetBits62_5Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11GetBits62_5Ev\">\n<span id=\"_CPPv3N6Random11GetBits62_5Ev\"></span><span id=\"_CPPv2N6Random11GetBits62_5Ev\"></span><span id=\"Random::GetBits62_5\"></span><span class=\"target\" id=\"classRandom_1a07d4442b0ca9f2024bfc35b563e26e0d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits62_5</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random8RandFillE9mem_ptr_tK6size_tKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random8RandFillE9mem_ptr_tK6size_tKd\">\n<span id=\"_CPPv3N6Random8RandFillE9mem_ptr_tK6size_tKd\"></span><span id=\"_CPPv2N6Random8RandFillE9mem_ptr_tK6size_tKd\"></span><span id=\"Random::RandFill__mem_ptr_t.sC.doubleC\"></span><span class=\"target\" id=\"classRandom_1a18cd7e89494ff44da36872cf5455dc27\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Randomize a contiguous segment of memory with a given probability of each bit being on. </p></dd>", "a[href=\"#_CPPv4N6Random4Prob7PROB_50E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob7PROB_50E\">\n<span id=\"_CPPv3N6Random4Prob7PROB_50E\"></span><span id=\"_CPPv2N6Random4Prob7PROB_50E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543aa0a7e5eb1666224fb8c0a448ab09e164\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_50</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random3GetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random3GetEv\">\n<span id=\"_CPPv3N6Random3GetEv\"></span><span id=\"_CPPv2N6Random3GetEv\"></span><span id=\"Random::Get\"></span><span class=\"target\" id=\"classRandom_1add9f1be97ee50a94127a193f9e7b9234\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Basic Random number Returns a random number [0, RAND_CAP) </p></dd>", "a[href=\"Range.html#_CPPv4I0_bE5Range\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE5Range\">\n<span id=\"_CPPv3I0_bE5Range\"></span><span id=\"_CPPv2I0_bE5Range\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRange\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Range</span></span></span><br/></dt><dd><p>A range of values from a lower limit to and upper limit, of any provided type. </p></dd>", "a[href=\"#_CPPv4N6Random10RandFill50E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10RandFill50E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random10RandFill50E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random10RandFill50E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill50__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1af37b34b89c8d49873f5ac3ded1f8ee8c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill50</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I_4ProbEN6Random9RandFillPEv9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_4ProbEN6Random9RandFillPEv9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3I_4ProbEN6Random9RandFillPE9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2I_4ProbEN6Random9RandFillPE9mem_ptr_tK6size_t6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N6Random4ProbE\" title=\"Random::Prob\"><span class=\"n\"><span class=\"pre\">Prob</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRandom_1a6c391b9c6cf260486522ba2a3ebd030c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFillP</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"p\"><span class=\"pre\">[[</span></span><span class=\"pre\">maybe_unused</span><span class=\"p\"><span class=\"pre\">]]</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Randomize a contiguous segment of memory between specified bit positions. </p></dd>", "a[href=\"#_CPPv4N6Random6GetIntEK5RangeIiE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random6GetIntEK5RangeIiE\">\n<span id=\"_CPPv3N6Random6GetIntEK5RangeIiE\"></span><span id=\"_CPPv2N6Random6GetIntEK5RangeIiE\"></span><span id=\"Random::GetInt__Range:i:C\"></span><span class=\"target\" id=\"classRandom_1a1a057202efeed8cd3a11aa4abc6eb93f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"Range.html#_CPPv4I0_bE5Range\" title=\"Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">range</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetBits75Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetBits75Ev\">\n<span id=\"_CPPv3N6Random9GetBits75Ev\"></span><span id=\"_CPPv2N6Random9GetBits75Ev\"></span><span id=\"Random::GetBits75\"></span><span class=\"target\" id=\"classRandom_1acdd225603201d0140623dec288fbd382\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits75</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N16RandomStdAdaptor4_rngE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16RandomStdAdaptor4_rngE\">\n<span id=\"_CPPv3N16RandomStdAdaptor4_rngE\"></span><span id=\"_CPPv2N16RandomStdAdaptor4_rngE\"></span><span id=\"RandomStdAdaptor::_rng__RandomR\"></span><span class=\"target\" id=\"structRandomStdAdaptor_1a2d2b4d9b13e98ac45f2202bf4f92735f\"></span><a class=\"reference internal\" href=\"#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_rng</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random11GetBits87_5Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11GetBits87_5Ev\">\n<span id=\"_CPPv3N6Random11GetBits87_5Ev\"></span><span id=\"_CPPv2N6Random11GetBits87_5Ev\"></span><span id=\"Random::GetBits87_5\"></span><span class=\"target\" id=\"classRandom_1a7024d2f27fee89f5a8e9bb045879aa0f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits87_5</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random4Prob9PROB_37_5E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob9PROB_37_5E\">\n<span id=\"_CPPv3N6Random4Prob9PROB_37_5E\"></span><span id=\"_CPPv2N6Random4Prob9PROB_37_5E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543aea93438356ece79009af69e2f98a2532\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_37_5</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetUInt64Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetUInt64Ev\">\n<span id=\"_CPPv3N6Random9GetUInt64Ev\"></span><span id=\"_CPPv2N6Random9GetUInt64Ev\"></span><span id=\"Random::GetUInt64\"></span><span class=\"target\" id=\"classRandom_1aeda322f324d1eb022ba4746486eed027\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUInt64</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N16RandomStdAdaptor11result_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16RandomStdAdaptor11result_typeE\">\n<span id=\"_CPPv3N16RandomStdAdaptor11result_typeE\"></span><span id=\"_CPPv2N16RandomStdAdaptor11result_typeE\"></span><span id=\"RandomStdAdaptor::result_type\"></span><span class=\"target\" id=\"structRandomStdAdaptor_1abe6ec31487bbcc2f45c1e47df6bf79db\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">result_type</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetUInt64EK8uint64_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetUInt64EK8uint64_t\">\n<span id=\"_CPPv3N6Random9GetUInt64EK8uint64_t\"></span><span id=\"_CPPv2N6Random9GetUInt64EK8uint64_t\"></span><span id=\"Random::GetUInt64__uint64_tC\"></span><span class=\"target\" id=\"classRandom_1acf789547cecdffcfd460938962d47419\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUInt64</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random11RandFill100E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11RandFill100E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random11RandFill100E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random11RandFill100E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill100__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1a91682ccef0e39ec049e65c4b41557d90\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill100</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random5BYTE1E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random5BYTE1E\">\n<span id=\"_CPPv3N6Random5BYTE1E\"></span><span id=\"_CPPv2N6Random5BYTE1E\"></span><span id=\"Random::BYTE1__unsigned-cC\"></span><span class=\"target\" id=\"classRandom_1a2fd04a3587216f8455ac3eb97e736342\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BYTE1</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"m\"><span class=\"pre\">1</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random4Prob9PROB_62_5E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob9PROB_62_5E\">\n<span id=\"_CPPv3N6Random4Prob9PROB_62_5E\"></span><span id=\"_CPPv2N6Random4Prob9PROB_62_5E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543a8265609dc183cb0085699027e1f36f9a\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_62_5</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv46Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Random\">\n<span id=\"_CPPv36Random\"></span><span id=\"_CPPv26Random\"></span><span id=\"Random\"></span><span class=\"target\" id=\"classRandom\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Random</span></span></span><br/></dt><dd><p>Middle Square Weyl Sequence: A versatile and non-patterned pseudo-random-number generator. Based on: <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Middle-square_method\">https://en.wikipedia.org/wiki/Middle-square_method</a></p></dd>", "a[href=\"#_CPPv4N6Random4Prob8PROB_100E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob8PROB_100E\">\n<span id=\"_CPPv3N6Random4Prob8PROB_100E\"></span><span id=\"_CPPv2N6Random4Prob8PROB_100E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543a28da5cbf917f04d82b24a5439b08b9cd\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_100</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetDoubleEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetDoubleEv\">\n<span id=\"_CPPv3N6Random9GetDoubleEv\"></span><span id=\"_CPPv2N6Random9GetDoubleEv\"></span><span id=\"Random::GetDouble\"></span><span class=\"target\" id=\"classRandom_1adc4521109956ec579c979ad61af82d11\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random11GetBinomialEKdKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11GetBinomialEKdKd\">\n<span id=\"_CPPv3N6Random11GetBinomialEKdKd\"></span><span id=\"_CPPv2N6Random11GetBinomialEKdKd\"></span><span id=\"Random::GetBinomial__doubleC.doubleC\"></span><span class=\"target\" id=\"classRandom_1a27896557449eb78be3ee0b94bc808b0a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBinomial</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">n</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random variable drawn from a Binomial distribution.</p><p>This function is exact, but slow. <div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p>Random::GetApproxRandBinomial </p>\n</div>\n<div class=\"admonition seealso\">\n<p class=\"admonition-title\">See also</p>\n<p>Binomial in source/tools/Distribution.h </p>\n</div>\n</p></dd>", "a[href=\"#_CPPv4N6Random4Prob7PROB_25E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob7PROB_25E\">\n<span id=\"_CPPv3N6Random4Prob7PROB_25E\"></span><span id=\"_CPPv2N6Random4Prob7PROB_25E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543a11c002ff5cf6f99d1943bba75ae47dbe\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_25</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random11GetBits12_5Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11GetBits12_5Ev\">\n<span id=\"_CPPv3N6Random11GetBits12_5Ev\"></span><span id=\"_CPPv2N6Random11GetBits12_5Ev\"></span><span id=\"Random::GetBits12_5\"></span><span class=\"target\" id=\"classRandom_1a0d7386b091096363465d79f0795cb40f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits12_5</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random7GetByteEKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random7GetByteEKd\">\n<span id=\"_CPPv3N6Random7GetByteEKd\"></span><span id=\"_CPPv2N6Random7GetByteEKd\"></span><span id=\"Random::GetByte__doubleC\"></span><span class=\"target\" id=\"classRandom_1ae87036eef7c41f60f78146dea99301a2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetByte</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Full random byte with each bit being a one with a given probability. </p></dd>", "a[href=\"#_CPPv4N6Random10weyl_stateE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10weyl_stateE\">\n<span id=\"_CPPv3N6Random10weyl_stateE\"></span><span id=\"_CPPv2N6Random10weyl_stateE\"></span><span id=\"Random::weyl_state__uint64_t\"></span><span class=\"target\" id=\"classRandom_1a42e5bed5823f9e3d5592577a3d0db9af\"></span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">weyl_state</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>Weyl sequence state. </p></dd>", "a[href=\"#_CPPv4N6Random12RandFill12_5E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill12_5E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random12RandFill12_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random12RandFill12_5E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill12_5__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1a170badc3d925e596e5cf3ac620918f9f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill12_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetDoubleEKdKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetDoubleEKdKd\">\n<span id=\"_CPPv3N6Random9GetDoubleEKdKd\"></span><span id=\"_CPPv2N6Random9GetDoubleEKdKd\"></span><span id=\"Random::GetDouble__doubleC.doubleC\"></span><span class=\"target\" id=\"classRandom_1a366998aee6e46897addf760654103182\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random6GetIntEK7int32_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random6GetIntEK7int32_t\">\n<span id=\"_CPPv3N6Random6GetIntEK7int32_t\"></span><span id=\"_CPPv2N6Random6GetIntEK7int32_t\"></span><span id=\"Random::GetInt__int32_tC\"></span><span class=\"target\" id=\"classRandom_1a854661b3fb71b49978f66c2517ff7db0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv416RandomStdAdaptor\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416RandomStdAdaptor\">\n<span id=\"_CPPv316RandomStdAdaptor\"></span><span id=\"_CPPv216RandomStdAdaptor\"></span><span id=\"RandomStdAdaptor\"></span><span class=\"target\" id=\"structRandomStdAdaptor\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomStdAdaptor</span></span></span><br/></dt><dd><p>This is an adaptor to make Random behave like a proper STL random number generator. </p></dd>", "a[href=\"#_CPPv4N6Random12RandFill37_5E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12RandFill37_5E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random12RandFill37_5E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random12RandFill37_5E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill37_5__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1ae9fb590d6ebfdddb4bc6eee3b97de7a2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill37_5</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random9GetDoubleEKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetDoubleEKd\">\n<span id=\"_CPPv3N6Random9GetDoubleEKd\"></span><span id=\"_CPPv2N6Random9GetDoubleEKd\"></span><span id=\"Random::GetDouble__doubleC\"></span><span class=\"target\" id=\"classRandom_1abbdcb5767a3acec4969662edc3cee933\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random11GetBits37_5Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11GetBits37_5Ev\">\n<span id=\"_CPPv3N6Random11GetBits37_5Ev\"></span><span id=\"_CPPv2N6Random11GetBits37_5Ev\"></span><span id=\"Random::GetBits37_5\"></span><span class=\"target\" id=\"classRandom_1a202648566c52da8d7d96f0f8c0443234\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBits37_5</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random10GetPoissonEKdKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random10GetPoissonEKdKd\">\n<span id=\"_CPPv3N6Random10GetPoissonEKdKd\"></span><span id=\"_CPPv2N6Random10GetPoissonEKdKd\"></span><span id=\"Random::GetPoisson__doubleC.doubleC\"></span><span class=\"target\" id=\"classRandom_1adf974127f24c01a47f0fb3f95393d7d4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetPoisson</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">n</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random variable drawn from a Poisson distribution. </p></dd>", "a[href=\"#_CPPv4N6Random9STEP_SIZEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9STEP_SIZEE\">\n<span id=\"_CPPv3N6Random9STEP_SIZEE\"></span><span id=\"_CPPv2N6Random9STEP_SIZEE\"></span><span id=\"Random::STEP_SIZE__uint64_tC\"></span><span class=\"target\" id=\"classRandom_1a4f83e4a031fd9989ca88b8419f48aa59\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">STEP_SIZE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0xb5ad4eceda1ce2a9</span></span><br/></dt><dd><p>Weyl sequence step size. </p></dd>", "a[href=\"#_CPPv4N6Random9RandFill0E9mem_ptr_tK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9RandFill0E9mem_ptr_tK6size_t\">\n<span id=\"_CPPv3N6Random9RandFill0E9mem_ptr_tK6size_t\"></span><span id=\"_CPPv2N6Random9RandFill0E9mem_ptr_tK6size_t\"></span><span id=\"Random::RandFill0__mem_ptr_t.sC\"></span><span class=\"target\" id=\"classRandom_1a1bc64c6a63bc38b4316bed688c5016c8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill0</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00EN6Random7GetUIntE8uint32_tK2T1K2T2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN6Random7GetUIntE8uint32_tK2T1K2T2\">\n<span id=\"_CPPv3I00EN6Random7GetUIntEK2T1K2T2\"></span><span id=\"_CPPv2I00EN6Random7GetUIntEK2T1K2T2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRandom_1a0a5bb7427557a7338d23752f3ae949a6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUInt</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00EN6Random7GetUIntE8uint32_tK2T1K2T2\" title=\"Random::GetUInt::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00EN6Random7GetUIntE8uint32_tK2T1K2T2\" title=\"Random::GetUInt::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random6RandomEKi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random6RandomEKi\">\n<span id=\"_CPPv3N6Random6RandomEKi\"></span><span id=\"_CPPv2N6Random6RandomEKi\"></span><span id=\"Random::Random__iC\"></span><span class=\"target\" id=\"classRandom_1a48842ba6557558b53b3f8d4ad75854ec\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Random</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">seed</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Set up the random generator object with an optional seed value. </p></dd>", "a[href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\">\n<span id=\"_CPPv3I000E23sample_with_replacement15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\"></span><span id=\"_CPPv2I000E23sample_with_replacement15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ForwardIterator</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OutputIterator</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RNG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Random_8hpp_1aa797ed2399f9b332d6ad966f5b048542\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sample_with_replacement</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::ForwardIterator\"><span class=\"n\"><span class=\"pre\">ForwardIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">first</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::ForwardIterator\"><span class=\"n\"><span class=\"pre\">ForwardIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">last</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::OutputIterator\"><span class=\"n\"><span class=\"pre\">OutputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ofirst</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::OutputIterator\"><span class=\"n\"><span class=\"pre\">OutputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">olast</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::RNG\"><span class=\"n\"><span class=\"pre\">RNG</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rng</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Draw a sample (with replacement) from an input range, copying to the output range. </p></dd>", "a[href=\"#_CPPv4N6Random4Prob9PROB_12_5E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random4Prob9PROB_12_5E\">\n<span id=\"_CPPv3N6Random4Prob9PROB_12_5E\"></span><span id=\"_CPPv2N6Random4Prob9PROB_12_5E\"></span><span class=\"target\" id=\"classRandom_1a8cf2d1c0166f1439b7da141891ab5543a180f274bc8479ff42865bdfe19b5559a\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PROB_12_5</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random12GetGeometricEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random12GetGeometricEd\">\n<span id=\"_CPPv3N6Random12GetGeometricEd\"></span><span id=\"_CPPv2N6Random12GetGeometricEd\"></span><span id=\"Random::GetGeometric__double\"></span><span class=\"target\" id=\"classRandom_1a025b85479d032b115c6eef3d0fcc525f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetGeometric</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random variable drawn from a geometric distribution. </p></dd>", "a[href=\"#_CPPv4N6Random9GetNormalEKdKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random9GetNormalEKdKd\">\n<span id=\"_CPPv3N6Random9GetNormalEKdKd\"></span><span id=\"_CPPv2N6Random9GetNormalEKdKd\"></span><span id=\"Random::GetNormal__doubleC.doubleC\"></span><span class=\"target\" id=\"classRandom_1a7f635f769ee0ba48bd991da64947cb43\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNormal</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mean</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">std</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random16GetDoubleNonZeroEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random16GetDoubleNonZeroEv\">\n<span id=\"_CPPv3N6Random16GetDoubleNonZeroEv\"></span><span id=\"_CPPv2N6Random16GetDoubleNonZeroEv\"></span><span id=\"Random::GetDoubleNonZero\"></span><span class=\"target\" id=\"classRandom_1ade264dce29f8723ce7bc00947265cbaf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDoubleNonZero</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N6Random11RandFill100E9mem_ptr_tK6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6Random11RandFill100E9mem_ptr_tK6size_t6size_t6size_t\">\n<span id=\"_CPPv3N6Random11RandFill100E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"_CPPv2N6Random11RandFill100E9mem_ptr_tK6size_t6size_t6size_t\"></span><span id=\"Random::RandFill100__mem_ptr_t.sC.s.s\"></span><span class=\"target\" id=\"classRandom_1aa59ea8ebf4f1555910827ca64c505242\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandFill100</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6Random9mem_ptr_tE\" title=\"Random::mem_ptr_t\"><span class=\"n\"><span class=\"pre\">mem_ptr_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dest</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bytes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_bit</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
