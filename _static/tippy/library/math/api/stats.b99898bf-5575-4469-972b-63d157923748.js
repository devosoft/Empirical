selector_to_html = {"a[href=\"../../meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_ptr_type\">\n<span id=\"_CPPv3I0E11is_ptr_type\"></span><span id=\"_CPPv2I0E11is_ptr_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__ptr__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"../../meta/api/type_traits.html#_CPPv4I0E15remove_ptr_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15remove_ptr_type\">\n<span id=\"_CPPv3I0E15remove_ptr_type\"></span><span id=\"_CPPv2I0E15remove_ptr_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__ptr__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\">\n<span id=\"_CPPv3I0E4MeanR1C\"></span><span id=\"_CPPv2I0E4MeanR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1aaddf75b2570b9b76bcc1c2f8b1ae7cb2\"></span><a class=\"reference internal\" href=\"../../meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\" title=\"Mean::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Mean</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\" title=\"Mean::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the mean of the values in a container If values are pointers, they will be automatically de-referenced Values must be numeric. </p></dd>", "a[href=\"#_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\">\n<span id=\"_CPPv3I0E11UniqueCountR1C\"></span><span id=\"_CPPv2I0E11UniqueCountR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a1b29bc8e23ad18f2c620e1ad05285d23\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">!</span></span><a class=\"reference internal\" href=\"../../meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\" title=\"is_ptr_type\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\" title=\"UniqueCount::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UniqueCount</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\" title=\"UniqueCount::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Count the number of unique elements in a container. </p></dd>", "a[href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E9MinResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E9MinResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a3940dab91227be97620f448ab9a24361\"></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MinResult</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return the MINIMUM result. </p></dd>", "a[href=\"#_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\">\n<span id=\"_CPPv3I0E13StandardErrorR1C\"></span><span id=\"_CPPv2I0E13StandardErrorR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a9f96ca17fabc416fa2d74dc48609a29b\"></span><a class=\"reference internal\" href=\"../../meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardError::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StandardError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardError::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the standard error of the values in a container If values are pointers, they will be automatically de-referenced Values must be numeric. </p></dd>", "a[href=\"../../meta/api/meta.html#_CPPv4I00E12sfinae_decoy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E12sfinae_decoy\">\n<span id=\"_CPPv3I00E12sfinae_decoy\"></span><span id=\"_CPPv2I00E12sfinae_decoy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1afc8a980e8cee7112a4dca4a5b36e5673\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy::REAL_TYPE\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E13ApplyFunctionRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E13ApplyFunctionRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a5d281e9336fad564b0e97c329500320e\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ApplyFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return a vector of ALL results. </p></dd>", "a[href=\"#_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\">\n<span id=\"_CPPv3I00E16SumScalarResultsR1CRR3FUN\"></span><span id=\"_CPPv2I00E16SumScalarResultsR1CRR3FUN\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1af9527f9533152c895950c145a071a957\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SumScalarResults</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\" title=\"SumScalarResults::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\" title=\"SumScalarResults::FUN\"><span class=\"n\"><span class=\"pre\">FUN</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sum the RESULTS of scalar values in a container; if pointers to scalars, convert to scalar type. </p></dd>", "a[href=\"#_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\">\n<span id=\"_CPPv3I0E17StandardDeviationR1C\"></span><span id=\"_CPPv2I0E17StandardDeviationR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a7745484f6480a90bcfb3aae07595da06\"></span><a class=\"reference internal\" href=\"../../meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardDeviation::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StandardDeviation</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardDeviation::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the standard deviation of the values in a container If values are pointers, they will be automatically de-referenced Values must be numeric. </p></dd>", "a[href=\"#_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\">\n<span id=\"_CPPv3I0E6Median1C\"></span><span id=\"_CPPv2I0E6Median1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a5329660baa46acc2c19779f77a90717c\"></span><a class=\"reference internal\" href=\"../../meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\" title=\"Median::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Median</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\" title=\"Median::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E14ShannonEntropydR1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14ShannonEntropydR1C\">\n<span id=\"_CPPv3I0E14ShannonEntropyR1C\"></span><span id=\"_CPPv2I0E14ShannonEntropyR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a2a878401a96b1cb97804c5f5d99d0d40\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ShannonEntropy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E14ShannonEntropydR1C\" title=\"ShannonEntropy::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate Shannon Entropy of the members of the container passed. </p></dd>", "a[href=\"#_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\">\n<span id=\"_CPPv3I0E3SumR1C\"></span><span id=\"_CPPv2I0E3SumR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a2335c0dd94cb091a55d370cdfcd02378\"></span><a class=\"reference internal\" href=\"../../meta/api/type_traits.html#_CPPv4I0E15remove_ptr_type\" title=\"remove_ptr_type\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\" title=\"Sum::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sum</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\" title=\"Sum::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate sum of the values in a container; if pointers to scalars, convert to scalar type. </p></dd>", "a[href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E9MaxResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E9MaxResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a471275595b10ff4004e306f8b1c99374\"></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxResult</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return the MAXIMUM result. </p></dd>", "a[href=\"#_CPPv4I0E8VarianceDaR1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8VarianceDaR1C\">\n<span id=\"_CPPv3I0E8VarianceR1C\"></span><span id=\"_CPPv2I0E8VarianceR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a17b7f82c100d057ce3871cbe623f4fbf\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variance</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E8VarianceDaR1C\" title=\"Variance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate variance of the members of the container passed Only works on containers with a scalar member type </p></dd>", "a[href=\"#stats-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">stats.hpp<a class=\"headerlink\" href=\"#stats-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for calculating various statistics about an ensemble. </p>", "a[href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E10MeanResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E10MeanResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a192a527002cae8a7beab20cd860efdf1\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_scalar</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MeanResult</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return the AVERAGE result. Function must return a scalar (i.e. numeric) type. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
