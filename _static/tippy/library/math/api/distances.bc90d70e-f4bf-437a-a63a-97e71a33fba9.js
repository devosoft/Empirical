selector_to_html = {"a[href=\"../../meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_ptr_type\">\n<span id=\"_CPPv3I0E11is_ptr_type\"></span><span id=\"_CPPv2I0E11is_ptr_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__ptr__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\">\n<span id=\"_CPPv3I0E17EuclideanDistanceR1CR1C\"></span><span id=\"_CPPv2I0E17EuclideanDistanceR1CR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"distances_8hpp_1a8fab7eb3d80974ac1e6908945787abd2\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">!</span></span><a class=\"reference internal\" href=\"../../meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\" title=\"is_ptr_type\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\" title=\"EuclideanDistance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EuclideanDistance</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\" title=\"EuclideanDistance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\" title=\"EuclideanDistance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate Euclidean distance between two containers. If the containers contain a pointer type, the pointers will be de-referenced first. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#distances-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">distances.hpp<a class=\"headerlink\" href=\"#distances-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Library of commonly used distance functions. </p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
