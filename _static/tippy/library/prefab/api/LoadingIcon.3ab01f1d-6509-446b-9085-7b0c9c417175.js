selector_to_html = {"a[href=\"../../tools/api/string_utils.html#_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\">\n<span id=\"_CPPv3IDpE9to_stringDpRK2Ts\"></span><span id=\"_CPPv2IDpE9to_stringDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a7af65396b89bea62546ac7b6f7eda07f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\" title=\"to_string::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">values</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function does its best to convert any type to a string. Accepts any number of arguments and returns a single concatenated string. Conversions attempted for an object \u2018x\u2019 include (in order):<ul class=\"simple\">\n<li><p>Call a x.ToString()</p></li>\n<li><p>Call appropriate ToString(x) overload</p></li>\n<li><p>Pass x through stringstream </p></li>\n</ul>\n</p></dd>", "a[href=\"#_CPPv411LoadingIcon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411LoadingIcon\">\n<span id=\"_CPPv311LoadingIcon\"></span><span id=\"_CPPv211LoadingIcon\"></span><span id=\"LoadingIcon\"></span><span class=\"target\" id=\"classLoadingIcon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LoadingIcon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><br/></dt><dd><p>Use LoadingIcon class to add a loading glyph from the FontAwesome library to your web app. (<a class=\"reference external\" href=\"https://fontawesome.com/v4.7.0/icon/spinner\">https://fontawesome.com/v4.7.0/icon/spinner</a>) </p></dd>", "a[href=\"#_CPPv4N11LoadingIcon4iconE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11LoadingIcon4iconE\">\n<span id=\"_CPPv3N11LoadingIcon4iconE\"></span><span id=\"_CPPv2N11LoadingIcon4iconE\"></span><span id=\"LoadingIcon::icon__Element\"></span><span class=\"target\" id=\"classLoadingIcon_1ab35ec522524bf6c52e8913c5d01f8b1d\"></span><a class=\"reference internal\" href=\"../../web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">icon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><a class=\"reference internal\" href=\"../../tools/api/string_utils.html#_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\" title=\"to_string\"><span class=\"n\"><span class=\"pre\">to_string</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"s\"><span class=\"pre\">\"span\"</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"../../web/api/Element.html#_CPPv47Element\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47Element\">\n<span id=\"_CPPv37Element\"></span><span id=\"_CPPv27Element\"></span><span id=\"Element\"></span><span class=\"target\" id=\"classElement\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Element</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>A widget to track an element in an HTML file, and all of its contents. </p><p>Subclassed by CodeBlock, FontAwesomeIcon, LoadingIcon, ToggleSwitch</p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N11LoadingIcon11LoadingIconERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11LoadingIcon11LoadingIconERKNSt6stringE\">\n<span id=\"_CPPv3N11LoadingIcon11LoadingIconERKNSt6stringE\"></span><span id=\"_CPPv2N11LoadingIcon11LoadingIconERKNSt6stringE\"></span><span id=\"LoadingIcon::LoadingIcon__ssCR\"></span><span class=\"target\" id=\"classLoadingIcon_1a07c7e4aa0d6f6aebdfd00f9bccc1fb52\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LoadingIcon</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11LoadingIcon4textE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11LoadingIcon4textE\">\n<span id=\"_CPPv3N11LoadingIcon4textE\"></span><span id=\"_CPPv2N11LoadingIcon4textE\"></span><span id=\"LoadingIcon::text__Element\"></span><span class=\"target\" id=\"classLoadingIcon_1ab887eacc20169246ee43ce2333db21de\"></span><a class=\"reference internal\" href=\"../../web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">text</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><a class=\"reference internal\" href=\"../../tools/api/string_utils.html#_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\" title=\"to_string\"><span class=\"n\"><span class=\"pre\">to_string</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"s\"><span class=\"pre\">\"span\"</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"#loadingicon-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">LoadingIcon.hpp<a class=\"headerlink\" href=\"#loadingicon-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps Font Awesome\u2019s loading glyph. </p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
