selector_to_html = {"a[href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\">\n<span id=\"_CPPv3I00DpE8MergeNFARR2T1RR2T2DpRR2Ts\"></span><span id=\"_CPPv2I00DpE8MergeNFARR2T1RR2T2DpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"group__lexer__utilities_1gadce3bbc9ed385c58088b6a9133ec42f0\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MergeNFA</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\" title=\"MergeNFA::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\" title=\"MergeNFA::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\" title=\"MergeNFA::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">others</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge multiple automata (DFA, NFA, RegEx) into one NFA. </p></dd>", "a[href=\"#_CPPv4N9DFAStatus8sequenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9DFAStatus8sequenceE\">\n<span id=\"_CPPv3N9DFAStatus8sequenceE\"></span><span id=\"_CPPv2N9DFAStatus8sequenceE\"></span><span id=\"DFAStatus::sequence__ss\"></span><span class=\"target\" id=\"structDFAStatus_1a7d9fa4288543031f31afcc83e85113cf\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sequence</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E8MergeNFA3NFARR2T1\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8MergeNFA3NFARR2T1\">\n<span id=\"_CPPv3I0E8MergeNFARR2T1\"></span><span id=\"_CPPv2I0E8MergeNFARR2T1\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"group__lexer__utilities_1ga4b727106d906a24fb25bf80921ba194c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MergeNFA</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E8MergeNFA3NFARR2T1\" title=\"MergeNFA::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge multiple automata into one NFA (base case, single conversion) </p></dd>", "a[href=\"DFA.html#_CPPv43DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43DFA\">\n<span id=\"_CPPv33DFA\"></span><span id=\"_CPPv23DFA\"></span><span class=\"target\" id=\"DFA_8hpp_1ad1c1efdfe02f2da3144dbe50c2e10b8d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DFA</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_i0E4tDFA\" title=\"tDFA\"><span class=\"n\"><span class=\"pre\">tDFA</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Setup DFA to be a simple tDFA with the basic character set for symbols. </p></dd>", "a[href=\"#_CPPv46to_DFARK3NFAi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_DFARK3NFAi\">\n<span id=\"_CPPv36to_DFARK3NFAi\"></span><span id=\"_CPPv26to_DFARK3NFAi\"></span><span id=\"to_DFA__NFACR.i\"></span><span class=\"target\" id=\"group__lexer__utilities_1gae94b20491b436670fe9bda89bffd3df9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_DFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">nfa</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_invalid</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Systematic conversion of NFA to DFA\u2026 </p></dd>", "a[href=\"#_CPPv46to_NFARK3NFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_NFARK3NFA\">\n<span id=\"_CPPv36to_NFARK3NFA\"></span><span id=\"_CPPv26to_NFARK3NFA\"></span><span id=\"to_NFA__NFACR\"></span><span class=\"target\" id=\"group__lexer__utilities_1gacc9595a4f5d2c70ac537ee325271078b\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_NFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">nfa</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Converting NFA to MFA &amp;#8212; no change needed. </p></dd>", "a[href=\"#_CPPv49DFAStatus\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49DFAStatus\">\n<span id=\"_CPPv39DFAStatus\"></span><span id=\"_CPPv29DFAStatus\"></span><span id=\"DFAStatus\"></span><span class=\"target\" id=\"structDFAStatus\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DFAStatus</span></span></span><br/></dt><dd><p>Structure to track the current status of a DFA. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv411FindExampleRK3DFAK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411FindExampleRK3DFAK6size_t\">\n<span id=\"_CPPv311FindExampleRK3DFAK6size_t\"></span><span id=\"_CPPv211FindExampleRK3DFAK6size_t\"></span><span id=\"FindExample__DFACR.sC\"></span><span class=\"target\" id=\"group__lexer__utilities_1gac560765f5cef36272a32a17f19186764\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindExample</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dfa</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Method to find an example string that satisfies a DFA. </p></dd>", "a[href=\"NFA.html#_CPPv43NFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43NFA\">\n<span id=\"_CPPv33NFA\"></span><span id=\"_CPPv23NFA\"></span><span class=\"target\" id=\"NFA_8hpp_1a6264006192b7a64500e0b4d060e3e727\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NFA</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E4tNFA\" title=\"tNFA\"><span class=\"n\"><span class=\"pre\">tNFA</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>NFA is the most standard tNFA setup. </p></dd>", "a[href=\"#lexer-utils-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">lexer_utils.hpp<a class=\"headerlink\" href=\"#lexer-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of utilities to convert between NFAs and DFAs. </p>", "a[href=\"#_CPPv4N9DFAStatus5stateE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9DFAStatus5stateE\">\n<span id=\"_CPPv3N9DFAStatus5stateE\"></span><span id=\"_CPPv2N9DFAStatus5stateE\"></span><span id=\"DFAStatus::state__s\"></span><span class=\"target\" id=\"structDFAStatus_1a3313503edc0466655608f3823026d85b\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">state</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9DFAStatus9DFAStatusE6size_tRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9DFAStatus9DFAStatusE6size_tRKNSt6stringE\">\n<span id=\"_CPPv3N9DFAStatus9DFAStatusE6size_tRKNSt6stringE\"></span><span id=\"_CPPv2N9DFAStatus9DFAStatusE6size_tRKNSt6stringE\"></span><span id=\"DFAStatus::DFAStatus__s.ssCR\"></span><span class=\"target\" id=\"structDFAStatus_1a5177aaceb5f0f3890be0b20e44f3d655\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DFAStatus</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_state</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_seq</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv46to_NFARK3DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_NFARK3DFA\">\n<span id=\"_CPPv36to_NFARK3DFA\"></span><span id=\"_CPPv26to_NFARK3DFA\"></span><span id=\"to_NFA__DFACR\"></span><span class=\"target\" id=\"group__lexer__utilities_1ga83dca02a7f1443e14dfab94c293bcddb\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_NFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dfa</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Systematic up-conversion of DFA to NFA\u2026 </p></dd>", "a[href=\"#_CPPv46to_DFARK3DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_DFARK3DFA\">\n<span id=\"_CPPv36to_DFARK3DFA\"></span><span id=\"_CPPv26to_DFARK3DFA\"></span><span id=\"to_DFA__DFACR\"></span><span class=\"target\" id=\"group__lexer__utilities_1ga90b35165db31201b4092a7309c184f07\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_DFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dfa</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Converting DFA to DFA &amp;#8212; no change needed. </p></dd>", "a[href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\">\n<span id=\"_CPPv3I00DpE8MergeDFARR2T1RR2T2DpRR2Ts\"></span><span id=\"_CPPv2I00DpE8MergeDFARR2T1RR2T2DpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"group__lexer__utilities_1gab95c63a8f97e717e82b5450c0fa1db62\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MergeDFA</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\" title=\"MergeDFA::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\" title=\"MergeDFA::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\" title=\"MergeDFA::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">others</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge multiple automata (DFA, NFA, RegEx) into one DFA. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
