selector_to_html = {"a[href=\"#lexer-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Lexer.hpp<a class=\"headerlink\" href=\"#lexer-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A general-purpose, fast lexer. </p><p>\nBuild a lexer that can convert input strings or streams into a series of provided tokens.</p>", "a[href=\"#_CPPv4N11TokenStream11TokenStreamERK11TokenStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream11TokenStreamERK11TokenStream\">\n<span id=\"_CPPv3N11TokenStream11TokenStreamERK11TokenStream\"></span><span id=\"_CPPv2N11TokenStream11TokenStreamERK11TokenStream\"></span><span id=\"TokenStream::TokenStream__TokenStreamCR\"></span><span class=\"target\" id=\"classTokenStream_1afcd8356a1a1ade7f31372f6c99f98c65\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream11TokenStreamERK11TokenStream\" title=\"TokenStream::TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer7TokenOKEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer7TokenOKEi\">\n<span id=\"_CPPv3NK5Lexer7TokenOKEi\"></span><span id=\"_CPPv2NK5Lexer7TokenOKEi\"></span><span id=\"Lexer::TokenOK__iC\"></span><span class=\"target\" id=\"classLexer_1a6966ab288112eae2ea36b11fb6f5c1ea\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorcvbEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorcvbEv\">\n<span id=\"_CPPv3NK11TokenStream8IteratorcvbEv\"></span><span id=\"_CPPv2NK11TokenStream8IteratorcvbEv\"></span><span id=\"TokenStream::Iterator::castto-b-operatorC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a3987d7642c477b664f83a7a8feefd6d8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Token7line_idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Token7line_idE\">\n<span id=\"_CPPv3N5Token7line_idE\"></span><span id=\"_CPPv2N5Token7line_idE\"></span><span id=\"Token::line_id__s\"></span><span class=\"target\" id=\"structToken_1afcc9709a3eb24b02ea3525947bdced94\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">line_id</span></span></span><br/></dt><dd><p>Which line did this token start on? </p></dd>", "a[href=\"#_CPPv4N9TokenInfo4nameE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo4nameE\">\n<span id=\"_CPPv3N9TokenInfo4nameE\"></span><span id=\"_CPPv2N9TokenInfo4nameE\"></span><span id=\"TokenInfo::name__ss\"></span><span class=\"target\" id=\"structTokenInfo_1abadb358d66ec14e22fe14be755eb9761\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">name</span></span></span><br/></dt><dd><p>Name of this token type. </p></dd>", "a[href=\"#_CPPv4N5Lexer9token_setE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer9token_setE\">\n<span id=\"_CPPv3N5Lexer9token_setE\"></span><span id=\"_CPPv2N5Lexer9token_setE\"></span><span id=\"Lexer::token_set__vector:TokenInfo:\"></span><span class=\"target\" id=\"classLexer_1a316b86ef0e93af1a93c55e3af5ed5694\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">token_set</span></span></span><br/></dt><dd><p>List of all active tokens types. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorptEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorptEv\">\n<span id=\"_CPPv3NK11TokenStream8IteratorptEv\"></span><span id=\"_CPPv2NK11TokenStream8IteratorptEv\"></span><span id=\"TokenStream::Iterator::pointer-operatorC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a28f6a96a8d5103e81552211939247ee8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">-&gt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8IteratorppEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8IteratorppEv\">\n<span id=\"_CPPv3N11TokenStream8IteratorppEv\"></span><span id=\"_CPPv2N11TokenStream8IteratorppEv\"></span><span id=\"TokenStream::Iterator::inc-operator\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1af1097226febec4f83dc7e0e5e66be740\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">++</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8Iterator2tsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8Iterator2tsE\">\n<span id=\"_CPPv3N11TokenStream8Iterator2tsE\"></span><span id=\"_CPPv2N11TokenStream8Iterator2tsE\"></span><span id=\"TokenStream::Iterator::ts__Ptr:TokenStreamC:\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a51ad8ad4cb3cba75f29414574777ca00\"></span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ts</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream3endEv\">\n<span id=\"_CPPv3NK11TokenStream3endEv\"></span><span id=\"_CPPv2NK11TokenStream3endEv\"></span><span id=\"TokenStream::endC\"></span><span class=\"target\" id=\"classTokenStream_1ab0c44af7debab9a0eb495a3092f52046\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5TokencvRKNSt6stringEEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5TokencvRKNSt6stringEEv\">\n<span id=\"_CPPv3NK5TokencvRKNSt6stringEEv\"></span><span id=\"_CPPv2NK5TokencvRKNSt6stringEEv\"></span><span id=\"Token::castto-ssCR-operatorC\"></span><span class=\"target\" id=\"structToken_1af9c9e4f69d42be9d5dde29690ceac51d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Token will automatically convert to its matched sequence (lexeme) is used as a string. </p></dd>", "a[href=\"#_CPPv4N11TokenStream6tokensE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream6tokensE\">\n<span id=\"_CPPv3N11TokenStream6tokensE\"></span><span id=\"_CPPv2N11TokenStream6tokensE\"></span><span id=\"TokenStream::tokens__vector:Token:\"></span><span class=\"target\" id=\"classTokenStream_1a4eeaae50cddfc0e5774a68145dec3299\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tokens</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8IteratormmEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8IteratormmEv\">\n<span id=\"_CPPv3N11TokenStream8IteratormmEv\"></span><span id=\"_CPPv2N11TokenStream8IteratormmEv\"></span><span id=\"TokenStream::Iterator::dec-operator\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1adec2d376f5e5008e57308e016b9bb8ed\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">--</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8Iterator8IteratorERK11TokenStream6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8Iterator8IteratorERK11TokenStream6size_t\">\n<span id=\"_CPPv3N11TokenStream8Iterator8IteratorERK11TokenStream6size_t\"></span><span id=\"_CPPv2N11TokenStream8Iterator8IteratorERK11TokenStream6size_t\"></span><span id=\"TokenStream::Iterator::Iterator__TokenStreamCR.s\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a4bdb39559ab0be00bc9d2786337d6a3d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_ts</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer12GetNumTokensEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer12GetNumTokensEv\">\n<span id=\"_CPPv3NK5Lexer12GetNumTokensEv\"></span><span id=\"_CPPv2NK5Lexer12GetNumTokensEv\"></span><span id=\"Lexer::GetNumTokensC\"></span><span class=\"target\" id=\"classLexer_1ad37622d2438b39ab5f489e04ba09b755\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNumTokens</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many types of tokens can be identified in this Lexer? </p></dd>", "a[href=\"#_CPPv4N11TokenStream8IteratormmEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8IteratormmEi\">\n<span id=\"_CPPv3N11TokenStream8IteratormmEi\"></span><span id=\"_CPPv2N11TokenStream8IteratormmEi\"></span><span id=\"TokenStream::Iterator::dec-operator__i\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1ab6ff161bdaec9fd72440592ebbf3e4ba\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">--</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8Iterator14GetTokenStreamEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8Iterator14GetTokenStreamEv\">\n<span id=\"_CPPv3NK11TokenStream8Iterator14GetTokenStreamEv\"></span><span id=\"_CPPv2NK11TokenStream8Iterator14GetTokenStreamEv\"></span><span id=\"TokenStream::Iterator::GetTokenStreamC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a8fd1682fc42b717db88aea145639644e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTokenStream</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer5PrintERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer5PrintERNSt7ostreamE\">\n<span id=\"_CPPv3NK5Lexer5PrintERNSt7ostreamE\"></span><span id=\"_CPPv2NK5Lexer5PrintERNSt7ostreamE\"></span><span id=\"Lexer::Print__osRC\"></span><span class=\"target\" id=\"classLexer_1a5e67bfea5df55bf3218a78b07f5991fc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Print the full information about this lexer (for debugging) </p></dd>", "a[href=\"#_CPPv4N5Lexer12cur_token_idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer12cur_token_idE\">\n<span id=\"_CPPv3N5Lexer12cur_token_idE\"></span><span id=\"_CPPv2N5Lexer12cur_token_idE\"></span><span id=\"Lexer::cur_token_id__i\"></span><span class=\"target\" id=\"classLexer_1aa49f27c2807bedf7392ccd632ddcd8a8\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cur_token_id</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N5Lexer6MAX_IDE\" title=\"Lexer::MAX_ID\"><span class=\"n\"><span class=\"pre\">MAX_ID</span></span></a><br/></dt><dd><p>Which ID should the next new token get? </p></dd>", "a[href=\"#_CPPv4NK5Lexer8TokenizeENSt11string_viewERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer8TokenizeENSt11string_viewERKNSt6stringE\">\n<span id=\"_CPPv3NK5Lexer8TokenizeENSt11string_viewERKNSt6stringE\"></span><span id=\"_CPPv2NK5Lexer8TokenizeENSt11string_viewERKNSt6stringE\"></span><span id=\"Lexer::Tokenize__std::string_view.ssCRC\"></span><span class=\"target\" id=\"classLexer_1af9f4c85f5d8e5d6f2dc9bf031fc36916\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tokenize</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"in_view\"</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Turn an input string into a vector of tokens. </p></dd>", "a[href=\"#_CPPv4N9TokenInfo2idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo2idE\">\n<span id=\"_CPPv3N9TokenInfo2idE\"></span><span id=\"_CPPv2N9TokenInfo2idE\"></span><span id=\"TokenInfo::id__i\"></span><span class=\"target\" id=\"structTokenInfo_1ab9c0ff8ec2c582d0e55e80ae35ec6d7e\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id</span></span></span><br/></dt><dd><p>Unique id for token. </p></dd>", "a[href=\"#_CPPv4N5TokenaSERK5Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5TokenaSERK5Token\">\n<span id=\"_CPPv3N5TokenaSERK5Token\"></span><span id=\"_CPPv2N5TokenaSERK5Token\"></span><span id=\"Token::assign-operator__TokenCR\"></span><span class=\"target\" id=\"structToken_1a302f8febd87a9cca349ba76dfd782548\"></span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9TokenInfo9TokenInfoERR9TokenInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo9TokenInfoERR9TokenInfo\">\n<span id=\"_CPPv3N9TokenInfo9TokenInfoERR9TokenInfo\"></span><span id=\"_CPPv2N9TokenInfo9TokenInfoERR9TokenInfo\"></span><span id=\"TokenInfo::TokenInfo__TokenInfoRR\"></span><span class=\"target\" id=\"structTokenInfo_1a15938284dd0d90adc602a0dc16a7e8fc\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N9TokenInfo9TokenInfoERR9TokenInfo\" title=\"TokenInfo::TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream6GetPtrE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream6GetPtrE6size_t\">\n<span id=\"_CPPv3NK11TokenStream6GetPtrE6size_t\"></span><span id=\"_CPPv2NK11TokenStream6GetPtrE6size_t\"></span><span id=\"TokenStream::GetPtr__sC\"></span><span class=\"target\" id=\"classTokenStream_1ae5ab9c0530e5dd9f0246fd9bb26b5ac2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetPtr</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream7GetNameEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream7GetNameEv\">\n<span id=\"_CPPv3NK11TokenStream7GetNameEv\"></span><span id=\"_CPPv2NK11TokenStream7GetNameEv\"></span><span id=\"TokenStream::GetNameC\"></span><span class=\"target\" id=\"classTokenStream_1aff8992ae17bd1c43ea6ca7dd7e99ea2f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetName</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream3GetE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream3GetE6size_t\">\n<span id=\"_CPPv3NK11TokenStream3GetE6size_t\"></span><span id=\"_CPPv2NK11TokenStream3GetE6size_t\"></span><span id=\"TokenStream::Get__sC\"></span><span class=\"target\" id=\"classTokenStream_1a74328745796757322766a1b80137be6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer10DebugTokenEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer10DebugTokenEi\">\n<span id=\"_CPPv3NK5Lexer10DebugTokenEi\"></span><span id=\"_CPPv2NK5Lexer10DebugTokenEi\"></span><span id=\"Lexer::DebugToken__iC\"></span><span class=\"target\" id=\"classLexer_1acc27061c0d357b5d9244bf7356614b6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DebugToken</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">token_id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream4backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream4backEv\">\n<span id=\"_CPPv3NK11TokenStream4backEv\"></span><span id=\"_CPPv2NK11TokenStream4backEv\"></span><span id=\"TokenStream::backC\"></span><span class=\"target\" id=\"classTokenStream_1af6c7dfe37b89aa95cf3ec9edd94ef80b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5LexeraSERK5Lexer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5LexeraSERK5Lexer\">\n<span id=\"_CPPv3N5LexeraSERK5Lexer\"></span><span id=\"_CPPv2N5LexeraSERK5Lexer\"></span><span id=\"Lexer::assign-operator__LexerCR\"></span><span class=\"target\" id=\"classLexer_1a0cd1949b06fa81791ab4971532d1c093\"></span><a class=\"reference internal\" href=\"#_CPPv45Lexer\" title=\"Lexer\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Lexer\" title=\"Lexer\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N9TokenInfoaSERK9TokenInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfoaSERK9TokenInfo\">\n<span id=\"_CPPv3N9TokenInfoaSERK9TokenInfo\"></span><span id=\"_CPPv2N9TokenInfoaSERK9TokenInfo\"></span><span id=\"TokenInfo::assign-operator__TokenInfoCR\"></span><span class=\"target\" id=\"structTokenInfo_1a5c19aa66fceb35c69b51f874961e8216\"></span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Lexer14generate_lexerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer14generate_lexerE\">\n<span id=\"_CPPv3N5Lexer14generate_lexerE\"></span><span id=\"_CPPv2N5Lexer14generate_lexerE\"></span><span id=\"Lexer::generate_lexer__b\"></span><span class=\"target\" id=\"classLexer_1a64f3c2ec2447f1b20504493f77d3f64c\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">generate_lexer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><br/></dt><dd><p>Do we need to regenerate the lexer? </p></dd>", "a[href=\"#_CPPv4N5Lexer6MAX_IDE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer6MAX_IDE\">\n<span id=\"_CPPv3N5Lexer6MAX_IDE\"></span><span id=\"_CPPv2N5Lexer6MAX_IDE\"></span><span id=\"Lexer::MAX_ID__i\"></span><span class=\"target\" id=\"classLexer_1ae79ffdf7af4a152b2c5dab8523873a0c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_ID</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">255</span></span><br/></dt><dd><p>IDs count down so that first ones have priority. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorleERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorleERK8Iterator\">\n<span id=\"_CPPv3NK11TokenStream8IteratorleERK8Iterator\"></span><span id=\"_CPPv2NK11TokenStream8IteratorleERK8Iterator\"></span><span id=\"TokenStream::Iterator::lte-operator__IteratorCRC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a632c4a123237f29ae4050bfc4aa43cf5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer12GetTokenNameEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer12GetTokenNameEi\">\n<span id=\"_CPPv3NK5Lexer12GetTokenNameEi\"></span><span id=\"_CPPv2NK5Lexer12GetTokenNameEi\"></span><span id=\"Lexer::GetTokenName__iC\"></span><span class=\"target\" id=\"classLexer_1a5b3577faf85dcdb9506710ea3f097f4e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTokenName</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the name associated with a token type (you provide the ID) </p></dd>", "a[href=\"#_CPPv4N5Lexer5LexerERR5Lexer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer5LexerERR5Lexer\">\n<span id=\"_CPPv3N5Lexer5LexerERR5Lexer\"></span><span id=\"_CPPv2N5Lexer5LexerERR5Lexer\"></span><span id=\"Lexer::Lexer__LexerRR\"></span><span class=\"target\" id=\"classLexer_1a3275e598d15ba2c616ce3501160dbcac\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N5Lexer5LexerERR5Lexer\" title=\"Lexer::Lexer\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Token5TokenEiRKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Token5TokenEiRKNSt6stringE6size_t\">\n<span id=\"_CPPv3N5Token5TokenEiRKNSt6stringE6size_t\"></span><span id=\"_CPPv2N5Token5TokenEiRKNSt6stringE6size_t\"></span><span id=\"Token::Token__i.ssCR.s\"></span><span class=\"target\" id=\"structToken_1a633aa731ad0a99df63a6e7c93574e83d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Token</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_line</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Lexer8ERROR_IDE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer8ERROR_IDE\">\n<span id=\"_CPPv3N5Lexer8ERROR_IDE\"></span><span id=\"_CPPv2N5Lexer8ERROR_IDE\"></span><span id=\"Lexer::ERROR_ID__i\"></span><span class=\"target\" id=\"classLexer_1a521074d041690acc7e90ac072a076239\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ERROR_ID</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><br/></dt><dd><p>Code for unknown token ID. </p></dd>", "a[href=\"#_CPPv4NK5Lexer8TokenizeERNSt7istreamERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer8TokenizeERNSt7istreamERKNSt6stringE\">\n<span id=\"_CPPv3NK5Lexer8TokenizeERNSt7istreamERKNSt6stringE\"></span><span id=\"_CPPv2NK5Lexer8TokenizeERNSt7istreamERKNSt6stringE\"></span><span id=\"Lexer::Tokenize__isR.ssCRC\"></span><span class=\"target\" id=\"classLexer_1aad3233a4c4f0fc0d2fc1ed6b4dbe8f23\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tokenize</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"in_stream\"</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Turn an input stream of text into a vector of tokens. </p></dd>", "a[href=\"#_CPPv4N11TokenStreamaSERK11TokenStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStreamaSERK11TokenStream\">\n<span id=\"_CPPv3N11TokenStreamaSERK11TokenStream\"></span><span id=\"_CPPv2N11TokenStreamaSERK11TokenStream\"></span><span id=\"TokenStream::assign-operator__TokenStreamCR\"></span><span class=\"target\" id=\"classTokenStream_1a9a71a6006ef5932b8f71fbd7f5da7371\"></span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratoreqERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratoreqERK8Iterator\">\n<span id=\"_CPPv3NK11TokenStream8IteratoreqERK8Iterator\"></span><span id=\"_CPPv2NK11TokenStream8IteratoreqERK8Iterator\"></span><span id=\"TokenStream::Iterator::eq-operator__IteratorCRC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1afcc9df0292f026d9c1bd6d43fd84c150\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9TokenInfo5regexE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo5regexE\">\n<span id=\"_CPPv3N9TokenInfo5regexE\"></span><span id=\"_CPPv2N9TokenInfo5regexE\"></span><span id=\"TokenInfo::regex__RegEx\"></span><span class=\"target\" id=\"structTokenInfo_1a7f8e3b809b36f567bb9abce40d6f73c3\"></span><a class=\"reference internal\" href=\"RegEx.html#_CPPv45RegEx\" title=\"RegEx\"><span class=\"n\"><span class=\"pre\">RegEx</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">regex</span></span></span><br/></dt><dd><p>Pattern to describe token type. </p></dd>", "a[href=\"#_CPPv4N11TokenStream8Iterator8IteratorERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8Iterator8IteratorERK8Iterator\">\n<span id=\"_CPPv3N11TokenStream8Iterator8IteratorERK8Iterator\"></span><span id=\"_CPPv2N11TokenStream8Iterator8IteratorERK8Iterator\"></span><span id=\"TokenStream::Iterator::Iterator__IteratorCR\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a41552e2db87131cd9b4709241abc43f4\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8Iterator8IteratorERK8Iterator\" title=\"TokenStream::Iterator::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream5beginEv\">\n<span id=\"_CPPv3NK11TokenStream5beginEv\"></span><span id=\"_CPPv2NK11TokenStream5beginEv\"></span><span id=\"TokenStream::beginC\"></span><span class=\"target\" id=\"classTokenStream_1af96eafc7050ad7e7a7feb1d04ce395f8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv45Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Token\">\n<span id=\"_CPPv35Token\"></span><span id=\"_CPPv25Token\"></span><span id=\"Token\"></span><span class=\"target\" id=\"structToken\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Token</span></span></span><br/></dt><dd><p>Information about a token instance from an input stream. </p></dd>", "a[href=\"#_CPPv4NK5Lexer7ProcessERNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer7ProcessERNSt6stringE\">\n<span id=\"_CPPv3NK5Lexer7ProcessERNSt6stringE\"></span><span id=\"_CPPv2NK5Lexer7ProcessERNSt6stringE\"></span><span id=\"Lexer::Process__ssRC\"></span><span class=\"target\" id=\"classLexer_1a54878df84fc0cb5ecefa8307db5c71d6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Process</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_str</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Shortcut to process a string rather than a stream, chopping off one token each time. </p></dd>", "a[href=\"#_CPPv4NK5Lexer10GetTokenIDERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer10GetTokenIDERKNSt6stringE\">\n<span id=\"_CPPv3NK5Lexer10GetTokenIDERKNSt6stringE\"></span><span id=\"_CPPv2NK5Lexer10GetTokenIDERKNSt6stringE\"></span><span id=\"Lexer::GetTokenID__ssCRC\"></span><span class=\"target\" id=\"classLexer_1acf2b6229a72044c3f0fc75b2b5b3ce3b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTokenID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the ID associated with a token type (you provide the token name) </p></dd>", "a[href=\"#_CPPv4N5Lexer9token_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer9token_mapE\">\n<span id=\"_CPPv3N5Lexer9token_mapE\"></span><span id=\"_CPPv2N5Lexer9token_mapE\"></span><span id=\"Lexer::token_map__map:ss.i:\"></span><span class=\"target\" id=\"classLexer_1a906e844b0cd86beeccf3d2612883f73f\"></span><a class=\"reference internal\" href=\"../../base/api/map.html#_CPPv4I00DpE3map\" title=\"map\"><span class=\"n\"><span class=\"pre\">map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">token_map</span></span></span><br/></dt><dd><p>Map of token names to id. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8Iterator5ToPtrEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8Iterator5ToPtrEv\">\n<span id=\"_CPPv3NK11TokenStream8Iterator5ToPtrEv\"></span><span id=\"_CPPv2NK11TokenStream8Iterator5ToPtrEv\"></span><span id=\"TokenStream::Iterator::ToPtrC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a08ea4bc38420c09928d31049227c1e02\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToPtr</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream11TokenStreamERR11TokenStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream11TokenStreamERR11TokenStream\">\n<span id=\"_CPPv3N11TokenStream11TokenStreamERR11TokenStream\"></span><span id=\"_CPPv2N11TokenStream11TokenStreamERR11TokenStream\"></span><span id=\"TokenStream::TokenStream__TokenStreamRR\"></span><span class=\"target\" id=\"classTokenStream_1a761410fe9e6a3b0918fa06ed258fb17a\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream11TokenStreamERR11TokenStream\" title=\"TokenStream::TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Lexer8AddTokenERKNSt6stringERKNSt6stringEbbRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer8AddTokenERKNSt6stringERKNSt6stringEbbRKNSt6stringE\">\n<span id=\"_CPPv3N5Lexer8AddTokenERKNSt6stringERKNSt6stringEbbRKNSt6stringE\"></span><span id=\"_CPPv2N5Lexer8AddTokenERKNSt6stringERKNSt6stringEbbRKNSt6stringE\"></span><span id=\"Lexer::AddToken__ssCR.ssCR.b.b.ssCR\"></span><span class=\"target\" id=\"classLexer_1a445b6f8843cc676ba6885fed4d90b3b8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddToken</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">regex</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">save_lexeme</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">save_token</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">desc</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new token, specified by a name and the regex used to identify it. Note that token ids count down with highest IDs having priority. </p></dd>", "a[href=\"#_CPPv4N5LexeraSERR5Lexer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5LexeraSERR5Lexer\">\n<span id=\"_CPPv3N5LexeraSERR5Lexer\"></span><span id=\"_CPPv2N5LexeraSERR5Lexer\"></span><span id=\"Lexer::assign-operator__LexerRR\"></span><span class=\"target\" id=\"classLexer_1ad6b850abea9c87be3fb52ea3f5737adc\"></span><a class=\"reference internal\" href=\"#_CPPv45Lexer\" title=\"Lexer\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv45Lexer\" title=\"Lexer\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer7ProcessERNSt7istreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer7ProcessERNSt7istreamE\">\n<span id=\"_CPPv3NK5Lexer7ProcessERNSt7istreamE\"></span><span id=\"_CPPv2NK5Lexer7ProcessERNSt7istreamE\"></span><span id=\"Lexer::Process__isRC\"></span><span class=\"target\" id=\"classLexer_1a6638c990d909de27e0c606b0bec74ecf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Process</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the next token found in an input stream. Do so by examining one character at a time. Keep going as long as there is a chance of a valid lexeme (since we want to choose the longest one we can find.) Every time we do hit a valid lexeme, store it as the current \u201cbest\u201d and keep going. Once we hit a point where no other valid lexemes are possible, stop and return the best we\u2019ve found so far. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorltERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorltERK8Iterator\">\n<span id=\"_CPPv3NK11TokenStream8IteratorltERK8Iterator\"></span><span id=\"_CPPv2NK11TokenStream8IteratorltERK8Iterator\"></span><span id=\"TokenStream::Iterator::lt-operator__IteratorCRC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1af81231fb4f70a58b083fdeb5eec745a0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer7ToTokenENSt11string_viewE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer7ToTokenENSt11string_viewE\">\n<span id=\"_CPPv3NK5Lexer7ToTokenENSt11string_viewE\"></span><span id=\"_CPPv2NK5Lexer7ToTokenENSt11string_viewE\"></span><span id=\"Lexer::ToToken__std::string_viewC\"></span><span class=\"target\" id=\"classLexer_1a0c9a72a70a9f0eb73444e4a6f65b4f56\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToToken</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_str</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Shortcut to just get a single token. </p></dd>", "a[href=\"#_CPPv4N11TokenStream11TokenStreamERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream11TokenStreamERKNSt6stringE\">\n<span id=\"_CPPv3N11TokenStream11TokenStreamERKNSt6stringE\"></span><span id=\"_CPPv2N11TokenStream11TokenStreamERKNSt6stringE\"></span><span id=\"TokenStream::TokenStream__ssCR\"></span><span class=\"target\" id=\"classTokenStream_1a9ba8f01fe52e87fc8e70a9a9fc4ee957\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_name</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Lexer9lexer_dfaE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer9lexer_dfaE\">\n<span id=\"_CPPv3N5Lexer9lexer_dfaE\"></span><span id=\"_CPPv2N5Lexer9lexer_dfaE\"></span><span id=\"Lexer::lexer_dfa__DFA\"></span><span class=\"target\" id=\"classLexer_1a4faaf2de94c9dc6683223100a5143510\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">lexer_dfa</span></span></span><br/></dt><dd><p>Table driven lexer implementation. </p></dd>", "a[href=\"#_CPPv4NK5Lexer8TokenizeERK6vectorINSt6stringEERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer8TokenizeERK6vectorINSt6stringEERKNSt6stringE\">\n<span id=\"_CPPv3NK5Lexer8TokenizeERK6vectorINSt6stringEERKNSt6stringE\"></span><span id=\"_CPPv2NK5Lexer8TokenizeERK6vectorINSt6stringEERKNSt6stringE\"></span><span id=\"Lexer::Tokenize__vector:ss:CR.ssCRC\"></span><span class=\"target\" id=\"classLexer_1af9821433f7bbd851acbe4b70a961feb3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tokenize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str_v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"in_string</span> <span class=\"pre\">vector\"</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Turn a vector of strings into a vector of tokens. </p></dd>", "a[href=\"#_CPPv4N5Lexer6lexemeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer6lexemeE\">\n<span id=\"_CPPv3N5Lexer6lexemeE\"></span><span id=\"_CPPv2N5Lexer6lexemeE\"></span><span id=\"Lexer::lexeme__ss\"></span><span class=\"target\" id=\"classLexer_1a2df0f3b2ce2bbc03da92459d68c365d6\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">lexeme</span></span></span><br/></dt><dd><p>Current state of lexeme being generated. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream5PrintERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream5PrintERNSt7ostreamE\">\n<span id=\"_CPPv3NK11TokenStream5PrintERNSt7ostreamE\"></span><span id=\"_CPPv2NK11TokenStream5PrintERNSt7ostreamE\"></span><span id=\"TokenStream::Print__osRC\"></span><span class=\"target\" id=\"classTokenStream_1a44c955528a6c5ab9381b136e2c8a7caf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream11TokenStreamERK6vectorI5TokenERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream11TokenStreamERK6vectorI5TokenERKNSt6stringE\">\n<span id=\"_CPPv3N11TokenStream11TokenStreamERK6vectorI5TokenERKNSt6stringE\"></span><span id=\"_CPPv2N11TokenStream11TokenStreamERK6vectorI5TokenERKNSt6stringE\"></span><span id=\"TokenStream::TokenStream__vector:Token:CR.ssCR\"></span><span class=\"target\" id=\"classTokenStream_1ad1a1157fedf941cc5dbdb05222dbe4df\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_tokens</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_name</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer12GetSaveTokenEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer12GetSaveTokenEi\">\n<span id=\"_CPPv3NK5Lexer12GetSaveTokenEi\"></span><span id=\"_CPPv2NK5Lexer12GetSaveTokenEi\"></span><span id=\"Lexer::GetSaveToken__iC\"></span><span class=\"target\" id=\"classLexer_1ad7d56cac0eedf8fb253a8bb96277e6ce\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSaveToken</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Identify if a token should be saved. </p></dd>", "a[href=\"#_CPPv4N5Lexer5LexerERK5Lexer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer5LexerERK5Lexer\">\n<span id=\"_CPPv3N5Lexer5LexerERK5Lexer\"></span><span id=\"_CPPv2N5Lexer5LexerERK5Lexer\"></span><span id=\"Lexer::Lexer__LexerCR\"></span><span class=\"target\" id=\"classLexer_1ae868294d65394f011a29ed122c883f6b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N5Lexer5LexerERK5Lexer\" title=\"Lexer::Lexer\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8IteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8IteratorE\">\n<span id=\"_CPPv3N11TokenStream8IteratorE\"></span><span id=\"_CPPv2N11TokenStream8IteratorE\"></span><span id=\"TokenStream::Iterator\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8IteratorppEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8IteratorppEi\">\n<span id=\"_CPPv3N11TokenStream8IteratorppEi\"></span><span id=\"_CPPv2N11TokenStream8IteratorppEi\"></span><span id=\"TokenStream::Iterator::inc-operator__i\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1ab44c6663b2826677ceb155f9661584e1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">++</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK9TokenInfo5PrintERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TokenInfo5PrintERNSt7ostreamE\">\n<span id=\"_CPPv3NK9TokenInfo5PrintERNSt7ostreamE\"></span><span id=\"_CPPv2NK9TokenInfo5PrintERNSt7ostreamE\"></span><span id=\"TokenInfo::Print__osRC\"></span><span class=\"target\" id=\"structTokenInfo_1a746db74f417534756734c84ec0eb0947\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Print out the status of this token (for debugging) </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8Iterator7IsValidEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8Iterator7IsValidEv\">\n<span id=\"_CPPv3NK11TokenStream8Iterator7IsValidEv\"></span><span id=\"_CPPv2NK11TokenStream8Iterator7IsValidEv\"></span><span id=\"TokenStream::Iterator::IsValidC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a8267a47c5dbbb3c377321f8efa5c7df2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsValid</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Lexer5ResetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer5ResetEv\">\n<span id=\"_CPPv3N5Lexer5ResetEv\"></span><span id=\"_CPPv2N5Lexer5ResetEv\"></span><span id=\"Lexer::Reset\"></span><span class=\"target\" id=\"classLexer_1a48dbb740d0329148e7df9e03a7fabc22\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Reset</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorgtERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorgtERK8Iterator\">\n<span id=\"_CPPv3NK11TokenStream8IteratorgtERK8Iterator\"></span><span id=\"_CPPv2NK11TokenStream8IteratorgtERK8Iterator\"></span><span id=\"TokenStream::Iterator::gt-operator__IteratorCRC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a5ecdeb5adbcda027b4e76365f440dd6b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5LexerD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5LexerD0Ev\">\n<span id=\"_CPPv3N5LexerD0Ev\"></span><span id=\"_CPPv2N5LexerD0Ev\"></span><span id=\"Lexer::~Lexer\"></span><span class=\"target\" id=\"classLexer_1a7a26f238ff21f31d754e5770d3501c71\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~Lexer</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8Iterator5AtEndEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8Iterator5AtEndEv\">\n<span id=\"_CPPv3NK11TokenStream8Iterator5AtEndEv\"></span><span id=\"_CPPv2NK11TokenStream8Iterator5AtEndEv\"></span><span id=\"TokenStream::Iterator::AtEndC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a71378589074cd6ba211995bad00e57a0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AtEnd</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream4nameE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream4nameE\">\n<span id=\"_CPPv3N11TokenStream4nameE\"></span><span id=\"_CPPv2N11TokenStream4nameE\"></span><span id=\"TokenStream::name__ss\"></span><span class=\"target\" id=\"classTokenStream_1a3d1bc6ec0e90496a19e01081a24ed768\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">name</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv45Lexer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Lexer\">\n<span id=\"_CPPv35Lexer\"></span><span id=\"_CPPv25Lexer\"></span><span id=\"Lexer\"></span><span class=\"target\" id=\"classLexer\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></span><br/></dt><dd><p>A lexer with a set of token types (and associated regular expressions) </p></dd>", "a[href=\"#_CPPv4N11TokenStream9push_backERK5Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream9push_backERK5Token\">\n<span id=\"_CPPv3N11TokenStream9push_backERK5Token\"></span><span id=\"_CPPv2N11TokenStream9push_backERK5Token\"></span><span id=\"TokenStream::push_back__TokenCR\"></span><span class=\"target\" id=\"classTokenStream_1aa27e5a03e2596310834798b27366e282\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorgeERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorgeERK8Iterator\">\n<span id=\"_CPPv3NK11TokenStream8IteratorgeERK8Iterator\"></span><span id=\"_CPPv2NK11TokenStream8IteratorgeERK8Iterator\"></span><span id=\"TokenStream::Iterator::gte-operator__IteratorCRC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a9e772d9377cfa051f060eb3870b4aa3e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9TokenInfo4descE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo4descE\">\n<span id=\"_CPPv3N9TokenInfo4descE\"></span><span id=\"_CPPv2N9TokenInfo4descE\"></span><span id=\"TokenInfo::desc__ss\"></span><span class=\"target\" id=\"structTokenInfo_1a4af2c75d6b6059f88a35309cfed43219\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">desc</span></span></span><br/></dt><dd><p>More detailed description of this token type. </p></dd>", "a[href=\"#_CPPv4N5Lexer5LexerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer5LexerEv\">\n<span id=\"_CPPv3N5Lexer5LexerEv\"></span><span id=\"_CPPv2N5Lexer5LexerEv\"></span><span id=\"Lexer::Lexer\"></span><span class=\"target\" id=\"classLexer_1a4ece67400cc4fdf07d1dae1b586fa0e1\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Token5TokenERK5Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Token5TokenERK5Token\">\n<span id=\"_CPPv3N5Token5TokenERK5Token\"></span><span id=\"_CPPv2N5Token5TokenERK5Token\"></span><span id=\"Token::Token__TokenCR\"></span><span class=\"target\" id=\"structToken_1a350ebd7ea16caa846b858ecdb1c273c6\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Token</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N5Token5TokenERK5Token\" title=\"Token::Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9TokenInfo11save_lexemeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo11save_lexemeE\">\n<span id=\"_CPPv3N9TokenInfo11save_lexemeE\"></span><span id=\"_CPPv2N9TokenInfo11save_lexemeE\"></span><span id=\"TokenInfo::save_lexeme__b\"></span><span class=\"target\" id=\"structTokenInfo_1a55baf57b47fb25de1cbeb2e78e2250a2\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">save_lexeme</span></span></span><br/></dt><dd><p>Preserve the lexeme for this token? </p></dd>", "a[href=\"#_CPPv4N9TokenInfo9TokenInfoEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo9TokenInfoEv\">\n<span id=\"_CPPv3N9TokenInfo9TokenInfoEv\"></span><span id=\"_CPPv2N9TokenInfo9TokenInfoEv\"></span><span id=\"TokenInfo::TokenInfo\"></span><span class=\"target\" id=\"structTokenInfo_1a2c5574dee34a4ba209ca1b976a1b51d0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9TokenInfo10save_tokenE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo10save_tokenE\">\n<span id=\"_CPPv3N9TokenInfo10save_tokenE\"></span><span id=\"_CPPv2N9TokenInfo10save_tokenE\"></span><span id=\"TokenInfo::save_token__b\"></span><span class=\"target\" id=\"structTokenInfo_1ab7c84c22d121dc6f5d57ee86ed8915bb\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">save_token</span></span></span><br/></dt><dd><p>Keep token at all? (Whitespace and comments are often discarded). </p></dd>", "a[href=\"#_CPPv4NK11TokenStream4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream4sizeEv\">\n<span id=\"_CPPv3NK11TokenStream4sizeEv\"></span><span id=\"_CPPv2NK11TokenStream4sizeEv\"></span><span id=\"TokenStream::sizeC\"></span><span class=\"target\" id=\"classTokenStream_1af4c880ec98557424099c0dcdafbd0023\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Lexer11ERROR_TOKENEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer11ERROR_TOKENEv\">\n<span id=\"_CPPv3N5Lexer11ERROR_TOKENEv\"></span><span id=\"_CPPv2N5Lexer11ERROR_TOKENEv\"></span><span id=\"Lexer::ERROR_TOKEN\"></span><span class=\"target\" id=\"classLexer_1ad7bfcef82c597fc6c7c93f38fc5ddfd0\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ERROR_TOKEN</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"#_CPPv4NK5Lexer12GetTokenInfoEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer12GetTokenInfoEi\">\n<span id=\"_CPPv3NK5Lexer12GetTokenInfoEi\"></span><span id=\"_CPPv2NK5Lexer12GetTokenInfoEi\"></span><span id=\"Lexer::GetTokenInfo__iC\"></span><span class=\"target\" id=\"classLexer_1a557a0b9627431e279525fb52c8074e00\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTokenInfo</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the full information about a token (you provide the id) </p></dd>", "a[href=\"#_CPPv4N9TokenInfo9TokenInfoERK9TokenInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo9TokenInfoERK9TokenInfo\">\n<span id=\"_CPPv3N9TokenInfo9TokenInfoERK9TokenInfo\"></span><span id=\"_CPPv2N9TokenInfo9TokenInfoERK9TokenInfo\"></span><span id=\"TokenInfo::TokenInfo__TokenInfoCR\"></span><span class=\"target\" id=\"structTokenInfo_1a45a98a617f3544811472d9927ba7ba3d\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N9TokenInfo9TokenInfoERK9TokenInfo\" title=\"TokenInfo::TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8Iterator3posE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8Iterator3posE\">\n<span id=\"_CPPv3N11TokenStream8Iterator3posE\"></span><span id=\"_CPPv2N11TokenStream8Iterator3posE\"></span><span id=\"TokenStream::Iterator::pos__s\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a5d95c1f4ec63e7c9b89a32acda530c16\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pos</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11TokenStream8Iterator8GetIndexEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8Iterator8GetIndexEv\">\n<span id=\"_CPPv3NK11TokenStream8Iterator8GetIndexEv\"></span><span id=\"_CPPv2NK11TokenStream8Iterator8GetIndexEv\"></span><span id=\"TokenStream::Iterator::GetIndexC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1aa6766773adfb469e992ad8bbc1d466fc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv411TokenStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411TokenStream\">\n<span id=\"_CPPv311TokenStream\"></span><span id=\"_CPPv211TokenStream\"></span><span id=\"TokenStream\"></span><span class=\"target\" id=\"classTokenStream\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N9TokenInfoaSERR9TokenInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfoaSERR9TokenInfo\">\n<span id=\"_CPPv3N9TokenInfoaSERR9TokenInfo\"></span><span id=\"_CPPv2N9TokenInfoaSERR9TokenInfo\"></span><span id=\"TokenInfo::assign-operator__TokenInfoRR\"></span><span class=\"target\" id=\"structTokenInfo_1a7d65d5ef2a85e40f2b4381a6f6eff79c\"></span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv49TokenInfo\" title=\"TokenInfo\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"DFA.html#_CPPv43DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43DFA\">\n<span id=\"_CPPv33DFA\"></span><span id=\"_CPPv23DFA\"></span><span class=\"target\" id=\"DFA_8hpp_1ad1c1efdfe02f2da3144dbe50c2e10b8d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DFA</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_i0E4tDFA\" title=\"tDFA\"><span class=\"n\"><span class=\"pre\">tDFA</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Setup DFA to be a simple tDFA with the basic character set for symbols. </p></dd>", "a[href=\"#_CPPv4N11TokenStreamaSERR11TokenStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStreamaSERR11TokenStream\">\n<span id=\"_CPPv3N11TokenStreamaSERR11TokenStream\"></span><span id=\"_CPPv2N11TokenStreamaSERR11TokenStream\"></span><span id=\"TokenStream::assign-operator__TokenStreamRR\"></span><span class=\"target\" id=\"classTokenStream_1aff0dacefcb6415cb69efc771e84c3d79\"></span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv411TokenStream\" title=\"TokenStream\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Token6lexemeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Token6lexemeE\">\n<span id=\"_CPPv3N5Token6lexemeE\"></span><span id=\"_CPPv2N5Token6lexemeE\"></span><span id=\"Token::lexeme__ss\"></span><span class=\"target\" id=\"structToken_1abbff29ede445ed4a8520580f12490832\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">lexeme</span></span></span><br/></dt><dd><p>Sequence matched by this token (or empty if not saved) </p></dd>", "a[href=\"#_CPPv4N5Token2idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Token2idE\">\n<span id=\"_CPPv3N5Token2idE\"></span><span id=\"_CPPv2N5Token2idE\"></span><span id=\"Token::id__i\"></span><span class=\"target\" id=\"structToken_1aa17500abc453e3d873c385f9eb47fa53\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id</span></span></span><br/></dt><dd><p>Which type of token is this? </p></dd>", "a[href=\"#_CPPv4NK5TokencviEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5TokencviEv\">\n<span id=\"_CPPv3NK5TokencviEv\"></span><span id=\"_CPPv2NK5TokencviEv\"></span><span id=\"Token::castto-i-operatorC\"></span><span class=\"target\" id=\"structToken_1ae9a4eb419bd82fc8eda72543a4a1d452\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Token will automatically convert to its ID if used as an int. </p></dd>", "a[href=\"#_CPPv49TokenInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49TokenInfo\">\n<span id=\"_CPPv39TokenInfo\"></span><span id=\"_CPPv29TokenInfo\"></span><span id=\"TokenInfo\"></span><span class=\"target\" id=\"structTokenInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></span><br/></dt><dd><p>Information about an individual TYPE of token to be processed within a Lexer. </p></dd>", "a[href=\"#_CPPv4N5TokenaSERR5Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5TokenaSERR5Token\">\n<span id=\"_CPPv3N5TokenaSERR5Token\"></span><span id=\"_CPPv2N5TokenaSERR5Token\"></span><span id=\"Token::assign-operator__TokenRR\"></span><span class=\"target\" id=\"structToken_1a4f45441b8d2dfe881c448377d4ca2cd4\"></span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"../../base/api/map.html#_CPPv4I00DpE3map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE3map\">\n<span id=\"_CPPv3I00DpE3map\"></span><span id=\"_CPPv2I00DpE3map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">map</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE3map\" title=\"map::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE3map\" title=\"map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE3map\" title=\"map::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TokenStream8IteratoraSERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TokenStream8IteratoraSERK8Iterator\">\n<span id=\"_CPPv3N11TokenStream8IteratoraSERK8Iterator\"></span><span id=\"_CPPv2N11TokenStream8IteratoraSERK8Iterator\"></span><span id=\"TokenStream::Iterator::assign-operator__IteratorCR\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1aa8095229e2cb0bd93bc17cf38c7be80e\"></span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer8GenerateEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer8GenerateEv\">\n<span id=\"_CPPv3NK5Lexer8GenerateEv\"></span><span id=\"_CPPv2NK5Lexer8GenerateEv\"></span><span id=\"Lexer::GenerateC\"></span><span class=\"target\" id=\"classLexer_1a1d50338fb1866797103228bbce5b966b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Generate</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Create the NFA that will identify the current set of tokens in a sequence. </p></dd>", "a[href=\"#_CPPv4N9TokenInfo9TokenInfoERKNSt6stringERKNSt6stringEibbRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TokenInfo9TokenInfoERKNSt6stringERKNSt6stringEibbRKNSt6stringE\">\n<span id=\"_CPPv3N9TokenInfo9TokenInfoERKNSt6stringERKNSt6stringEibbRKNSt6stringE\"></span><span id=\"_CPPv2N9TokenInfo9TokenInfoERKNSt6stringERKNSt6stringEibbRKNSt6stringE\"></span><span id=\"TokenInfo::TokenInfo__ssCR.ssCR.i.b.b.ssCR\"></span><span class=\"target\" id=\"structTokenInfo_1a46b8bd0f1a4f07edbde37edea1f01ec5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_name</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_regex</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_save_l</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_save_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_desc</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Token5TokenERR5Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Token5TokenERR5Token\">\n<span id=\"_CPPv3N5Token5TokenERR5Token\"></span><span id=\"_CPPv2N5Token5TokenERR5Token\"></span><span id=\"Token::Token__TokenRR\"></span><span class=\"target\" id=\"structToken_1afc9d412fe95cc74013031eb46eb5d924\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Token</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N5Token5TokenERR5Token\" title=\"Token::Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer9GetLexemeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer9GetLexemeEv\">\n<span id=\"_CPPv3NK5Lexer9GetLexemeEv\"></span><span id=\"_CPPv2NK5Lexer9GetLexemeEv\"></span><span id=\"Lexer::GetLexemeC\"></span><span class=\"target\" id=\"classLexer_1a20b5c02c882a9ddf905d8db13804a940\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetLexeme</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the lexeme associated with the last token identified. </p></dd>", "a[href=\"RegEx.html#_CPPv45RegEx\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45RegEx\">\n<span id=\"_CPPv35RegEx\"></span><span id=\"_CPPv25RegEx\"></span><span id=\"RegEx\"></span><span class=\"target\" id=\"classRegEx\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RegEx</span></span></span><br/></dt><dd><p>A basic regular expression handler. </p></dd>", "a[href=\"#_CPPv4N5Lexer11IgnoreTokenERKNSt6stringERKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Lexer11IgnoreTokenERKNSt6stringERKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3N5Lexer11IgnoreTokenERKNSt6stringERKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv2N5Lexer11IgnoreTokenERKNSt6stringERKNSt6stringERKNSt6stringE\"></span><span id=\"Lexer::IgnoreToken__ssCR.ssCR.ssCR\"></span><span class=\"target\" id=\"classLexer_1a996a512b38750ba70bdd65c01e62ddd9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IgnoreToken</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">regex</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">desc</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a token to ignore, specified by a name and the regex used to identify it. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratorneERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratorneERK8Iterator\">\n<span id=\"_CPPv3NK11TokenStream8IteratorneERK8Iterator\"></span><span id=\"_CPPv2NK11TokenStream8IteratorneERK8Iterator\"></span><span id=\"TokenStream::Iterator::neq-operator__IteratorCRC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1a531a9217b953269b30725fc120025f43\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TokenStream8IteratorE\" title=\"TokenStream::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK5Lexer11DebugStringENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Lexer11DebugStringENSt6stringE\">\n<span id=\"_CPPv3NK5Lexer11DebugStringENSt6stringE\"></span><span id=\"_CPPv2NK5Lexer11DebugStringENSt6stringE\"></span><span id=\"Lexer::DebugString__ssC\"></span><span class=\"target\" id=\"classLexer_1aa2380789f12974f433012f2be35a83ab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DebugString</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_string</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Try out the lexer on a string and demonstrate how it\u2019s tokenized. </p></dd>", "a[href=\"#_CPPv4NK11TokenStream8IteratormlEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11TokenStream8IteratormlEv\">\n<span id=\"_CPPv3NK11TokenStream8IteratormlEv\"></span><span id=\"_CPPv2NK11TokenStream8IteratormlEv\"></span><span id=\"TokenStream::Iterator::mul-operatorC\"></span><span class=\"target\" id=\"classTokenStream_1_1Iterator_1af300691a30bc28351ce53346503de113\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Token\" title=\"Token\"><span class=\"n\"><span class=\"pre\">Token</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">*</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
