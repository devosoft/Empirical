selector_to_html = {"a[href=\"#_CPPv4IDpE11CappedAlertv6size_tDp8TYPE_SET\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11CappedAlertv6size_tDp8TYPE_SET\">\n<span id=\"_CPPv3IDpE11CappedAlert6size_tDp8TYPE_SET\"></span><span id=\"_CPPv2IDpE11CappedAlert6size_tDp8TYPE_SET\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE_SET</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"alert_8hpp_1aaab893b14cd54d1978b31329e3551597\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CappedAlert</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cap</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE11CappedAlertv6size_tDp8TYPE_SET\" title=\"CappedAlert::TYPE_SET\"><span class=\"n\"><span class=\"pre\">TYPE_SET</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">inputs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A version of Alert that will cap how many times it can go off. </p></dd>", "a[href=\"#_CPPv45AlertRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45AlertRKNSt6stringE\">\n<span id=\"_CPPv35AlertRKNSt6stringE\"></span><span id=\"_CPPv25AlertRKNSt6stringE\"></span><span id=\"Alert__ssCR\"></span><span class=\"target\" id=\"alert_8hpp_1af4fddfdeef00c84e7d80cd71e73426bb\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Alert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Send msg to cerr if in C++, or show msg in an alert box if compiled to Javascript Input can be any number of arguments of any types as long as the can be converted to strings with to_string(). </p></dd>", "a[href=\"#_CPPv4N8AlertObj8AlertObjERKNSt6stringEbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObj8AlertObjERKNSt6stringEbb\">\n<span id=\"_CPPv3N8AlertObj8AlertObjERKNSt6stringEbb\"></span><span id=\"_CPPv2N8AlertObj8AlertObjERKNSt6stringEbb\"></span><span id=\"AlertObj::AlertObj__ssCR.b.b\"></span><span class=\"target\" id=\"structAlertObj_1ae801b4e957ce0b90ff78bf382470b75f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlertObj</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_msg</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_on_c</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_on_d</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8AlertObj10SetMessageERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObj10SetMessageERKNSt6stringE\">\n<span id=\"_CPPv3N8AlertObj10SetMessageERKNSt6stringE\"></span><span id=\"_CPPv2N8AlertObj10SetMessageERKNSt6stringE\"></span><span id=\"AlertObj::SetMessage__ssCR\"></span><span class=\"target\" id=\"structAlertObj_1acabc2ee0f12d8dccfc6276554986b2b6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMessage</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv48AlertObj\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48AlertObj\">\n<span id=\"_CPPv38AlertObj\"></span><span id=\"_CPPv28AlertObj\"></span><span id=\"AlertObj\"></span><span class=\"target\" id=\"structAlertObj\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlertObj</span></span></span><br/></dt><dd><p>An object that will automatically output a message during construction or destruction, usually for use in debugging to disentangle timings. </p></dd>", "a[href=\"#_CPPv4N8AlertObj7TriggerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObj7TriggerEv\">\n<span id=\"_CPPv3N8AlertObj7TriggerEv\"></span><span id=\"_CPPv2N8AlertObj7TriggerEv\"></span><span id=\"AlertObj::Trigger\"></span><span class=\"target\" id=\"structAlertObj_1a611a9d0be4871a4f65bcf419d05fb532\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Trigger</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N8AlertObj12on_constructE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObj12on_constructE\">\n<span id=\"_CPPv3N8AlertObj12on_constructE\"></span><span id=\"_CPPv2N8AlertObj12on_constructE\"></span><span id=\"AlertObj::on_construct__b\"></span><span class=\"target\" id=\"structAlertObj_1a607c49ee0de069538af242bbbfad17cc\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">on_construct</span></span></span><br/></dt><dd><p>Should the message print automatically during construction? </p></dd>", "a[href=\"#_CPPv4N8AlertObjD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObjD0Ev\">\n<span id=\"_CPPv3N8AlertObjD0Ev\"></span><span id=\"_CPPv2N8AlertObjD0Ev\"></span><span id=\"AlertObj::~AlertObj\"></span><span class=\"target\" id=\"structAlertObj_1ab5118f688b61871fb7ebf7ed8ad6e27b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~AlertObj</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#alert-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">alert.hpp<a class=\"headerlink\" href=\"#alert-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Define an Alert function that goes to std::cerr in c++ or to Alert() in Javascript. Status: RELEASE. </p>", "a[href=\"#_CPPv4N8AlertObj11on_destructE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObj11on_destructE\">\n<span id=\"_CPPv3N8AlertObj11on_destructE\"></span><span id=\"_CPPv2N8AlertObj11on_destructE\"></span><span id=\"AlertObj::on_destruct__b\"></span><span class=\"target\" id=\"structAlertObj_1acc1c0ee3aa6c9e7059988c37acd556ec\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">on_destruct</span></span></span><br/></dt><dd><p>Should the message print automatically during destruction? </p></dd>", "a[href=\"#_CPPv4N8AlertObj3msgE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8AlertObj3msgE\">\n<span id=\"_CPPv3N8AlertObj3msgE\"></span><span id=\"_CPPv2N8AlertObj3msgE\"></span><span id=\"AlertObj::msg__ss\"></span><span class=\"target\" id=\"structAlertObj_1a0edd1cece768e6d9d8c19d5622de8aaa\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">msg</span></span></span><br/></dt><dd><p>Message for the alert to print. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
