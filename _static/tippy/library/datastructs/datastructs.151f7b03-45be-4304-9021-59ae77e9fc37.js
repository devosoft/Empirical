selector_to_html = {"a[href=\"api/IndexSet.html#_CPPv4N9IndexBits9IndexBitsERK9IndexBits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits9IndexBitsERK9IndexBits\">\n<span id=\"_CPPv3N9IndexBits9IndexBitsERK9IndexBits\"></span><span id=\"_CPPv2N9IndexBits9IndexBitsERK9IndexBits\"></span><span id=\"IndexBits::IndexBits__IndexBitsCR\"></span><span class=\"target\" id=\"classIndexBits_1abba5cf8cab8b205ea3dd012e8ffb9fa1\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N9IndexBits9IndexBitsERK9IndexBits\" title=\"IndexBits::IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE13destroy_rangeEP1TP1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE13destroy_rangeEP1TP1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE13destroy_rangeEP1TP1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE13destroy_rangeEP1TP1T\"></span><span id=\"SmallVectorTemplateBase:T.true:::destroy_range__TP.TP\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a58714daa7ff9540337721da5bb5a95e7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">destroy_range</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0E7TypeMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7TypeMap\">\n<span id=\"_CPPv3I0E7TypeMap\"></span><span id=\"_CPPv2I0E7TypeMap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeMap</span></span></span><br/></dt><dd><p>A map of types to objects. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_t4NONEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_t4NONEE\">\n<span id=\"_CPPv3N8IndexSet7index_t4NONEE\"></span><span id=\"_CPPv2N8IndexSet7index_t4NONEE\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800ab50339a10e1de285ac99d4c3990b8693\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NONE</span></span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap8max_sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap8max_sizeEv\">\n<span id=\"_CPPv3NK7TypeMap8max_sizeEv\"></span><span id=\"_CPPv2NK7TypeMap8max_sizeEv\"></span><span id=\"TypeMap::max_sizeC\"></span><span class=\"target\" id=\"classTypeMap_1a8674cfb2cb7c0ee0898f0a499e49b9f6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">max_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html#_CPPv4NK6ra_set5emptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_set5emptyEv\">\n<span id=\"_CPPv3NK6ra_set5emptyEv\"></span><span id=\"_CPPv2NK6ra_set5emptyEv\"></span><span id=\"ra_set::emptyC\"></span><span class=\"target\" id=\"classra__set_1a279a8278a2a1be6b58adf7d91daa909a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Are there any values in this ra_set? </p></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map4AtIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map4AtIDE6size_t\">\n<span id=\"_CPPv3NK6ra_map4AtIDE6size_t\"></span><span id=\"_CPPv2NK6ra_map4AtIDE6size_t\"></span><span id=\"ra_map::AtID__sC\"></span><span class=\"target\" id=\"classra__map_1a5bd455ea10e5e8e3d79efa7f53c58700\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AtID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv413IndexRangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413IndexRangeSet\">\n<span id=\"_CPPv313IndexRangeSet\"></span><span id=\"_CPPv213IndexRangeSet\"></span><span id=\"IndexRangeSet\"></span><span class=\"target\" id=\"classIndexRangeSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></span><br/></dt><dd><p>IndexRanges is a class to maintain a series of ranges of indexes. The ranges will always be kept sorted and non-adjacent (i.e., there will always be at least one index missing between two ranges). </p></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\">\n<span id=\"_CPPv3I00E4FindRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span id=\"_CPPv2I00E4FindRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1acb6aa08d9a389ff147cf5868a8522807\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Find</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"Find::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"Find::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"Find::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">mapped_type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dval</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map, run find() member function, and return the result found (or default value if no results found). </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set6ra_setERK6ra_set\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set6ra_setERK6ra_set\">\n<span id=\"_CPPv3N6ra_set6ra_setERK6ra_set\"></span><span id=\"_CPPv2N6ra_set6ra_setERK6ra_set\"></span><span id=\"ra_set::ra_set__ra_setCR\"></span><span class=\"target\" id=\"classra__set_1ad4c016c8ba863503efdf0161e79dc0b1\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_set6ra_setERK6ra_set\" title=\"ra_set::ra_set\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_t6RANGESE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_t6RANGESE\">\n<span id=\"_CPPv3N8IndexSet7index_t6RANGESE\"></span><span id=\"_CPPv2N8IndexSet7index_t6RANGESE\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800aa38e66ffb7ec3fbbd28bcbedeec0cd7d\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RANGES</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMapixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMapixE6size_t\">\n<span id=\"_CPPv3N8IndexMapixE6size_t\"></span><span id=\"_CPPv2N8IndexMapixE6size_t\"></span><span id=\"IndexMap::subscript-operator__s\"></span><span class=\"target\" id=\"classIndexMap_1ad9ddaf1ab485b3d81bfcc91e6e5400ae\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8IndexMap5ProxyE\" title=\"IndexMap::Proxy\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Index into a specified ID. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4I0_jE11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_jE11SmallVector\">\n<span id=\"_CPPv3I0_jE11SmallVector\"></span><span id=\"_CPPv2I0_jE11SmallVector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">private</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SmallVectorStorage</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>This is a \u2018vector\u2019 (really, a variable-sized array), optimized for the case when the array is small. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal \u201csmall\u201d cases to be fast without losing generality for large inputs.</p><p>Note that this does not attempt to be exception safe. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph5GraphE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph5GraphE6size_t\">\n<span id=\"_CPPv3N5Graph5GraphE6size_t\"></span><span id=\"_CPPv2N5Graph5GraphE6size_t\"></span><span id=\"Graph::Graph__s\"></span><span class=\"target\" id=\"classGraph_1a67565a4b7bb447fdaffc4b791625ae52\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Graph</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_nodes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a new graph with the specified number of nodes. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache10QueueCacheEK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache10QueueCacheEK6size_t\">\n<span id=\"_CPPv3N10QueueCache10QueueCacheEK6size_t\"></span><span id=\"_CPPv2N10QueueCache10QueueCacheEK6size_t\"></span><span id=\"QueueCache::QueueCache__sC\"></span><span class=\"target\" id=\"classQueueCache_1ab014d60c267ffdfaef3224d040b52304\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">QueueCache</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_capacity</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::DefaultCapacity\"><span class=\"n\"><span class=\"pre\">DefaultCapacity</span></span></a><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratorgeERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratorgeERK8Iterator\">\n<span id=\"_CPPv3NK16reference_vector8IteratorgeERK8Iterator\"></span><span id=\"_CPPv2NK16reference_vector8IteratorgeERK8Iterator\"></span><span id=\"reference_vector::Iterator::gte-operator__IteratorCRC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1ad54d4713ab55deb991609bbb6e51e2c0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap4sizeEv\">\n<span id=\"_CPPv3NK12SmallFifoMap4sizeEv\"></span><span id=\"_CPPv2NK12SmallFifoMap4sizeEv\"></span><span id=\"SmallFifoMap::sizeC\"></span><span class=\"target\" id=\"classSmallFifoMap_1ab3f6f1d504fdf0a059580c184021a079\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many key-value pairs are in the cache? </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_mapaSERK6ra_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_mapaSERK6ra_map\">\n<span id=\"_CPPv3N6ra_mapaSERK6ra_map\"></span><span id=\"_CPPv2N6ra_mapaSERK6ra_map\"></span><span id=\"ra_map::assign-operator__ra_mapCR\"></span><span class=\"target\" id=\"classra__map_1a901f23e5fa7bc84df36c469992a9494b\"></span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map6this_tE\" title=\"ra_map::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_t5VALS2E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_t5VALS2E\">\n<span id=\"_CPPv3N8IndexSet7index_t5VALS2E\"></span><span id=\"_CPPv2N8IndexSet7index_t5VALS2E\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800a51c67f8844f94a3a5962e82569a20b62\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VALS2</span></span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt18unordered_multisetI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt18unordered_multisetI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a14d64d0b371edc9278e7d6ad7b4e6351\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_multiset</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::unordered_multiset has a particular element without modifying the set in any way. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map3GetE8key_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map3GetE8key_type\">\n<span id=\"_CPPv3N11valsort_map3GetE8key_type\"></span><span id=\"_CPPv2N11valsort_map3GetE8key_type\"></span><span id=\"valsort_map::Get__key_type\"></span><span class=\"target\" id=\"classvalsort__map_1a46d996c0f21d8cbd3961aac00ce71bd0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map11mapped_typeE\" title=\"valsort_map::mapped_type\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map8key_typeE\" title=\"valsort_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap9GetWeightEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap9GetWeightEv\">\n<span id=\"_CPPv3NK8IndexMap9GetWeightEv\"></span><span id=\"_CPPv2NK8IndexMap9GetWeightEv\"></span><span id=\"IndexMap::GetWeightC\"></span><span class=\"target\" id=\"classIndexMap_1a5945b22ad556370ffc6a1b30783ae4c8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>What is the total weight of all indices in this map? </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap8PushBackEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap8PushBackEd\">\n<span id=\"_CPPv3N8IndexMap8PushBackEd\"></span><span id=\"_CPPv2N8IndexMap8PushBackEd\"></span><span id=\"IndexMap::PushBack__double\"></span><span class=\"target\" id=\"classIndexMap_1a9a0d865da9c424f8a75580e5ff19a125\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PushBack</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Added a new value to the end of the index map. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap5ProxyE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap5ProxyE\">\n<span id=\"_CPPv3N8IndexMap5ProxyE\"></span><span id=\"_CPPv2N8IndexMap5ProxyE\"></span><span id=\"IndexMap::Proxy\"></span><span class=\"target\" id=\"classIndexMap_1_1Proxy\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></span><br/></dt><dd><p>A Proxy class so that an index can be treated as an l-value. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap5emptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap5emptyEv\">\n<span id=\"_CPPv3NK12SmallFifoMap5emptyEv\"></span><span id=\"_CPPv2NK12SmallFifoMap5emptyEv\"></span><span id=\"SmallFifoMap::emptyC\"></span><span class=\"target\" id=\"classSmallFifoMap_1acdbcc213358d4657d72003bba6c94082\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Does the cache contain any key-value pairs? </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBaseI1TXtrueEE18uninitialized_moveE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1aea307dc0fc89bbeec1bfd201dd48495d\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_move</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_move::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements into it as needed. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4NK9TimeQueue7GetTimeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TimeQueue7GetTimeEv\">\n<span id=\"_CPPv3NK9TimeQueue7GetTimeEv\"></span><span id=\"_CPPv2NK9TimeQueue7GetTimeEv\"></span><span id=\"TimeQueue::GetTimeC\"></span><span class=\"target\" id=\"classTimeQueue_1a1fb4ffb0dcf3e23c5ec651adfb151a2d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTime</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4NK11valsort_map4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11valsort_map4sizeEv\">\n<span id=\"_CPPv3NK11valsort_map4sizeEv\"></span><span id=\"_CPPv2NK11valsort_map4sizeEv\"></span><span id=\"valsort_map::sizeC\"></span><span class=\"target\" id=\"classvalsort__map_1a8dc17f77035507bec4ab6abfc5b36ce3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t\">\n<span id=\"_CPPv3I0E8RemoveAtR6vectorI1TE6size_t\"></span><span id=\"_CPPv2I0E8RemoveAtR6vectorI1TE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a4f4f418c6c499a70baae73b119c81a34\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t\" title=\"RemoveAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove value at an index. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv411tree_parent6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411tree_parent6size_t\">\n<span id=\"_CPPv311tree_parent6size_t\"></span><span id=\"_CPPv211tree_parent6size_t\"></span><span id=\"tree_parent__sCE\"></span><span class=\"target\" id=\"vector__utils_8hpp_1a2220e9d3e324731e491413bd6991c323\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tree_parent</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv48StringID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48StringID\">\n<span id=\"_CPPv38StringID\"></span><span id=\"_CPPv28StringID\"></span><span id=\"StringID\"></span><span class=\"target\" id=\"classStringID\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringID</span></span></span><br/></dt><dd><p>A small class for maintaining unique string IDs. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map8crvbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map8crvbeginEv\">\n<span id=\"_CPPv3N11valsort_map8crvbeginEv\"></span><span id=\"_CPPv2N11valsort_map8crvbeginEv\"></span><span id=\"valsort_map::crvbegin\"></span><span class=\"target\" id=\"classvalsort__map_1abab7632f433196c0cffb8a0ff45b070c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">crvbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK15SmallVectorBase8capacityEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15SmallVectorBase8capacityEv\">\n<span id=\"_CPPv3NK15SmallVectorBase8capacityEv\"></span><span id=\"_CPPv2NK15SmallVectorBase8capacityEv\"></span><span id=\"SmallVectorBase::capacityC\"></span><span class=\"target\" id=\"classSmallVectorBase_1a13d3c5b0c01b69140ba1bbe3c2125433\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\">\n<span id=\"_CPPv3I00EN11SmallVector11SmallVectorE4ItTy4ItTy\"></span><span id=\"_CPPv2I00EN11SmallVector11SmallVectorE4ItTy4ItTy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_convertible</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator_traits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\" title=\"SmallVector::SmallVector::ItTy\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator_category</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">input_iterator_tag</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVector_1a3f985c5b6c04248022e4b4fdd873d990\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\" title=\"SmallVector::SmallVector::ItTy\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">S</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\" title=\"SmallVector::SmallVector::ItTy\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector10iterator_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector10iterator_tE\">\n<span id=\"_CPPv3N16reference_vector10iterator_tE\"></span><span id=\"_CPPv2N16reference_vector10iterator_tE\"></span><span class=\"target\" id=\"classreference__vector_1ad8f4bb015e69898a6f1a6aa2319d8061\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">iterator_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_mapaSERR6ra_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_mapaSERR6ra_map\">\n<span id=\"_CPPv3N6ra_mapaSERR6ra_map\"></span><span id=\"_CPPv2N6ra_mapaSERR6ra_map\"></span><span id=\"ra_map::assign-operator__ra_mapRR\"></span><span class=\"target\" id=\"classra__map_1a55a437b29c0e451d5dc3195082b3b5a5\"></span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map6this_tE\" title=\"ra_map::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph10RemoveEdgeE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph10RemoveEdgeE6size_t6size_t\">\n<span id=\"_CPPv3N5Graph10RemoveEdgeE6size_t6size_t\"></span><span id=\"_CPPv2N5Graph10RemoveEdgeE6size_t6size_t\"></span><span id=\"Graph::RemoveEdge__s.s\"></span><span class=\"target\" id=\"classGraph_1a8036b9675e13b81e28c52a5172d41a27\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveEdge</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove a specified edge from this graph. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4I0EN11BloomFilter6insertEvRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11BloomFilter6insertEvRK1T\">\n<span id=\"_CPPv3I0EN11BloomFilter6insertERK1T\"></span><span id=\"_CPPv2I0EN11BloomFilter6insertERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1a1d2ee8087b559a2f42526c043421c8b6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11BloomFilter6insertEvRK1T\" title=\"BloomFilter::insert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">t</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector6resizeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector6resizeE6size_t\">\n<span id=\"_CPPv3N16reference_vector6resizeE6size_t\"></span><span id=\"_CPPv2N16reference_vector6resizeE6size_t\"></span><span id=\"reference_vector::resize__s\"></span><span class=\"target\" id=\"classreference__vector_1a20d64cdd27e9f449a58c83c922da6e2f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">resize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter8containsEPKhKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter8containsEPKhKNSt6size_tE\">\n<span id=\"_CPPv3NK11BloomFilter8containsEPKhKNSt6size_tE\"></span><span id=\"_CPPv2NK11BloomFilter8containsEPKhKNSt6size_tE\"></span><span id=\"BloomFilter::contains__unsigned-cCP.std::sCC\"></span><span class=\"target\" id=\"classBloomFilter_1a3307c4b0b3134998337551b811e4a587\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">key_begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue8ItemInfoE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue8ItemInfoE\">\n<span id=\"_CPPv3N9TimeQueue8ItemInfoE\"></span><span id=\"_CPPv2N9TimeQueue8ItemInfoE\"></span><span id=\"TimeQueue::ItemInfo\"></span><span class=\"target\" id=\"structTimeQueue_1_1ItemInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ItemInfo</span></span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map11mapped_typeE\">\n<span id=\"_CPPv3N11valsort_map11mapped_typeE\"></span><span id=\"_CPPv2N11valsort_map11mapped_typeE\"></span><span class=\"target\" id=\"classvalsort__map_1a2d93a807d26fb418bf09d85dd37600f8\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11valsort_map\" title=\"valsort_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap14const_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap14const_iteratorE\">\n<span id=\"_CPPv3N12SmallFifoMap14const_iteratorE\"></span><span id=\"_CPPv2N12SmallFifoMap14const_iteratorE\"></span><span class=\"target\" id=\"classSmallFifoMap_1ad0e6e1f0d2f7f4f3a69392c217417af2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap9storage_tE\" title=\"SmallFifoMap::storage_t\"><span class=\"n\"><span class=\"pre\">storage_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon9referenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon9referenceE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon9referenceE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon9referenceE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a294931fdbb5f41e0d63bbef6d05dd16a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue11RefillQueueEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue11RefillQueueEv\">\n<span id=\"_CPPv3N9TimeQueue11RefillQueueEv\"></span><span id=\"_CPPv2N9TimeQueue11RefillQueueEv\"></span><span id=\"TimeQueue::RefillQueue\"></span><span class=\"target\" id=\"classTimeQueue_1aa48ae95368d80c514ab304dc4cb84b13\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RefillQueue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph7HasEdgeE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph7HasEdgeE6size_t6size_t\">\n<span id=\"_CPPv3NK5Graph7HasEdgeE6size_t6size_t\"></span><span id=\"_CPPv2NK5Graph7HasEdgeE6size_t6size_t\"></span><span id=\"Graph::HasEdge__s.sC\"></span><span class=\"target\" id=\"classGraph_1a6debfeb8549dafdd90f9e84722ffb315\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasEdge</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine if a specific edge is included in this graph. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap14ResolveRefreshEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap14ResolveRefreshEv\">\n<span id=\"_CPPv3NK8IndexMap14ResolveRefreshEv\"></span><span id=\"_CPPv2NK8IndexMap14ResolveRefreshEv\"></span><span id=\"IndexMap::ResolveRefreshC\"></span><span class=\"target\" id=\"classIndexMap_1a04ae28c71a8defcb7b16fd56c5fbe7f2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResolveRefresh</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Check if we need to do a refresh, and if so do it! </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\"></span><span id=\"SmallVectorTemplateBase::SmallVectorTemplateBase__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a30fe9504a6f2e15a27a13e72293186ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratorneERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratorneERK8Iterator\">\n<span id=\"_CPPv3NK16reference_vector8IteratorneERK8Iterator\"></span><span id=\"_CPPv2NK16reference_vector8IteratorneERK8Iterator\"></span><span id=\"reference_vector::Iterator::neq-operator__IteratorCRC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a2654f9d0fde74ca1ab8947afcb439721\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">UnorderedIndexMap.hpp<a class=\"headerlink\" href=\"#unorderedindexmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple class to weight items differently within a container and return the correct index. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Convert to a template that acts as a glorified vector, simplifying random selection? </p>\n<p>Should operator[] index by element count or by weight? </p>\n</dd></dl>\n</p>", "a[href=\"api/map_utils.html#_CPPv4I0E4KeysDaRK5MAP_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4KeysDaRK5MAP_T\">\n<span id=\"_CPPv3I0E4KeysRK5MAP_T\"></span><span id=\"_CPPv2I0E4KeysRK5MAP_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a960bc425ed3dd21c167321beb8a3c0f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Keys</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4KeysDaRK5MAP_T\" title=\"Keys::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8Iterator5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8Iterator5beginEv\">\n<span id=\"_CPPv3N16reference_vector8Iterator5beginEv\"></span><span id=\"_CPPv2N16reference_vector8Iterator5beginEv\"></span><span id=\"reference_vector::Iterator::begin\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a6fc968515325c81658dacfbc7a1b6958\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return an iterator pointing to the first position in the vector. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5GraphaSERR5Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5GraphaSERR5Graph\">\n<span id=\"_CPPv3N5GraphaSERR5Graph\"></span><span id=\"_CPPv2N5GraphaSERR5Graph\"></span><span id=\"Graph::assign-operator__GraphRR\"></span><span class=\"target\" id=\"classGraph_1a14da756c7e346c651e8cf14df2437d4a\"></span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Move operator. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set6insertERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set6insertERK1T\">\n<span id=\"_CPPv3N6ra_set6insertERK1T\"></span><span id=\"_CPPv2N6ra_set6insertERK1T\"></span><span id=\"ra_set::insert__TCR\"></span><span class=\"target\" id=\"classra__set_1a05395091a10f041a28488c2f24ba4fc0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a new value into container. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E10differenceRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E10differenceRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1aa44efff0d32ade9bdbd317ace2d227f1\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but not S2) </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue8ItemInfo6timingE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue8ItemInfo6timingE\">\n<span id=\"_CPPv3N9TimeQueue8ItemInfo6timingE\"></span><span id=\"_CPPv2N9TimeQueue8ItemInfo6timingE\"></span><span id=\"TimeQueue::ItemInfo::timing__double\"></span><span class=\"target\" id=\"structTimeQueue_1_1ItemInfo_1a0eece3636d3dea7297bd07310350b70f\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">timing</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_t4BITSE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_t4BITSE\">\n<span id=\"_CPPv3N8IndexSet7index_t4BITSE\"></span><span id=\"_CPPv2N8IndexSet7index_t4BITSE\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800a6886e0d29007ca152880b30d73ca2adc\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BITS</span></span></span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString13DynamicStringEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString13DynamicStringEv\">\n<span id=\"_CPPv3N13DynamicString13DynamicStringEv\"></span><span id=\"_CPPv2N13DynamicString13DynamicStringEv\"></span><span id=\"DynamicString::DynamicString\"></span><span class=\"target\" id=\"classDynamicString_1a903cb081512fb42fa79be3b12f19cc10\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph15GetMaskedDegreeE6size_tRK9BitVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph15GetMaskedDegreeE6size_tRK9BitVector\">\n<span id=\"_CPPv3NK5Graph15GetMaskedDegreeE6size_tRK9BitVector\"></span><span id=\"_CPPv2NK5Graph15GetMaskedDegreeE6size_tRK9BitVector\"></span><span id=\"Graph::GetMaskedDegree__s.BitVectorCRC\"></span><span class=\"target\" id=\"classGraph_1a12fc3810371c51305c1007e73e495872\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetMaskedDegree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">mask</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get how many of a set of nodes that a specified node is connected to. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\">\n<span id=\"_CPPv3I0E10BuildRange1T1T1T\"></span><span id=\"_CPPv2I0E10BuildRange1T1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a8cdebb7580467e8bc106045fc61a8abc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildRange</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">step</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a vector with a range of values from min to max at the provided step size. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4anRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4anRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3anRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2anRK11BloomFilterRK11BloomFilter\"></span><span id=\"and-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1a5441f6b0a6ba8de8439e1d63e6f2f404\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the intersection of two Bloom filters. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4NK6ra_setixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_setixE6size_t\">\n<span id=\"_CPPv3NK6ra_setixE6size_t\"></span><span id=\"_CPPv2NK6ra_setixE6size_t\"></span><span id=\"ra_set::subscript-operator__sC\"></span><span class=\"target\" id=\"classra__set_1ae19e4280adeb52734fbb7e90e184ba0d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Index into the ra_set, similar to a vector. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map5countERK5KEY_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map5countERK5KEY_T\">\n<span id=\"_CPPv3NK6ra_map5countERK5KEY_T\"></span><span id=\"_CPPv2NK6ra_map5countERK5KEY_T\"></span><span id=\"ra_map::count__KEY_TCRC\"></span><span class=\"target\" id=\"classra__map_1affbc8df018a0461a57454bf61fc02dd9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">count</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter35desired_false_positive_probability_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter35desired_false_positive_probability_E\">\n<span id=\"_CPPv3N11BloomFilter35desired_false_positive_probability_E\"></span><span id=\"_CPPv2N11BloomFilter35desired_false_positive_probability_E\"></span><span id=\"BloomFilter::desired_false_positive_probability___double\"></span><span class=\"target\" id=\"classBloomFilter_1ab7fc6f8c84beffc8766c7a4b75271b07\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">desired_false_positive_probability_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMapaSERR8IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMapaSERR8IndexMap\">\n<span id=\"_CPPv3N8IndexMapaSERR8IndexMap\"></span><span id=\"_CPPv2N8IndexMapaSERR8IndexMap\"></span><span id=\"IndexMap::assign-operator__IndexMapRR\"></span><span class=\"target\" id=\"classIndexMap_1a62ab1a29ac0aedebad6426b1677e8a1e\"></span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK10IndexRange7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10IndexRange7GetSizeEv\">\n<span id=\"_CPPv3NK10IndexRange7GetSizeEv\"></span><span id=\"_CPPv2NK10IndexRange7GetSizeEv\"></span><span id=\"IndexRange::GetSizeC\"></span><span class=\"target\" id=\"classIndexRange_1a0db243a9fb8ad9e982fd25c3680156a3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/span_utils.html#_CPPv4I0ENStlsERNSt7ostreamERNSt7ostreamENSt4spanI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENStlsERNSt7ostreamERNSt7ostreamENSt4spanI1TEE\">\n<span id=\"_CPPv3I0ENStlsERNSt7ostreamENSt4spanI1TEE\"></span><span id=\"_CPPv2I0ENStlsERNSt7ostreamENSt4spanI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1aad4804467f5fb81fb78cdbcc563ffc4e\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0ENStlsERNSt7ostreamERNSt7ostreamENSt4spanI1TEE\" title=\"std::operator&lt;&lt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E7HeapifyvR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7HeapifyvR6vectorI1TE\">\n<span id=\"_CPPv3I0E7HeapifyR6vectorI1TE\"></span><span id=\"_CPPv2I0E7HeapifyR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ae3662640df9c938c52f39f7e9e114f11\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Heapify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7HeapifyvR6vectorI1TE\" title=\"Heapify::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Heapify all elements in a vector. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap14ResolveRefreshEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap14ResolveRefreshEv\">\n<span id=\"_CPPv3NK17UnorderedIndexMap14ResolveRefreshEv\"></span><span id=\"_CPPv2NK17UnorderedIndexMap14ResolveRefreshEv\"></span><span id=\"UnorderedIndexMap::ResolveRefreshC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a6cdb0c028bcc7d9047b48772df52b371\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResolveRefresh</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Check if we need to do a refresh, and if so do it! </p></dd>", "a[href=\"api/Cache.html#_CPPv4I00000E5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000E5Cache\">\n<span id=\"_CPPv3I00000E5Cache\"></span><span id=\"_CPPv2I00000E5Cache\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HASH</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PRED</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classCache\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVector11SmallVectorENSt16initializer_listI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorENSt16initializer_listI1TEE\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorENSt16initializer_listI1TEE\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorENSt16initializer_listI1TEE\"></span><span id=\"SmallVector::SmallVector__std::initializer_list:T:\"></span><span class=\"target\" id=\"classSmallVector_1a9efd8435e708fd56b863e409a9321c8d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">IL</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFiltereqERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFiltereqERK11BloomFilter\">\n<span id=\"_CPPv3NK11BloomFiltereqERK11BloomFilter\"></span><span id=\"_CPPv2NK11BloomFiltereqERK11BloomFilter\"></span><span id=\"BloomFilter::eq-operator__BloomFilterCRC\"></span><span class=\"target\" id=\"classBloomFilter_1a0f61f91d3bdb7a4ea3e5ef516ae74348\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vectoraSERR16reference_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vectoraSERR16reference_vector\">\n<span id=\"_CPPv3N16reference_vectoraSERR16reference_vector\"></span><span id=\"_CPPv2N16reference_vectoraSERR16reference_vector\"></span><span id=\"reference_vector::assign-operator__reference_vectorRR\"></span><span class=\"target\" id=\"classreference__vector_1af476dc1179d2fa99730d0469cdf99913\"></span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector6this_tE\" title=\"reference_vector::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map11mapped_typeE\">\n<span id=\"_CPPv3N6ra_map11mapped_typeE\"></span><span id=\"_CPPv2N6ra_map11mapped_typeE\"></span><span class=\"target\" id=\"classra__map_1aece75c547f232c1a91aa6cd5059ceff8\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\"></span><span id=\"SmallVectorTemplateCommon::grow_pod__s.s\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a2dfb61a14d06b920747a7a1cc8659837\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow_pod</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinCapacity</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">TSize</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv411BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411BloomFilter\">\n<span id=\"_CPPv311BloomFilter\"></span><span id=\"_CPPv211BloomFilter\"></span><span id=\"BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><br/></dt><dd><p>This class implements a Bloom filter, which is a memory-efficient data structure for identifying values that have been seen before (with a tunable probability of a false positive - thinking that we have already seen a value when we actually haven\u2019t) </p><p>Subclassed by CompressibleBloomFilter</p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap8IndexMapE6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap8IndexMapE6size_td\">\n<span id=\"_CPPv3N8IndexMap8IndexMapE6size_td\"></span><span id=\"_CPPv2N8IndexMap8IndexMapE6size_td\"></span><span id=\"IndexMap::IndexMap__s.double\"></span><span class=\"target\" id=\"classIndexMap_1a00dcf0eda6b993877ed07bf05d32504d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_items</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">init_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK9IndexBits3HasE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9IndexBits3HasE6size_t\">\n<span id=\"_CPPv3NK9IndexBits3HasE6size_t\"></span><span id=\"_CPPv2NK9IndexBits3HasE6size_t\"></span><span id=\"IndexBits::Has__sC\"></span><span class=\"target\" id=\"classIndexBits_1a810efaf3ab4e5fadc440584be8ecd430\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4I000EN12SmallFifoMap3setEvRR1KRR1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000EN12SmallFifoMap3setEvRR1KRR1V\">\n<span id=\"_CPPv3I000EN12SmallFifoMap3setERR1KRR1V\"></span><span id=\"_CPPv2I000EN12SmallFifoMap3setERR1KRR1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">K</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if_t</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_convertible</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000EN12SmallFifoMap3setEvRR1KRR1V\" title=\"SmallFifoMap::set::K\"><span class=\"n\"><span class=\"pre\">K</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"p\"><span class=\"pre\">}</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">&amp;&amp;</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_convertible</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000EN12SmallFifoMap3setEvRR1KRR1V\" title=\"SmallFifoMap::set::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"p\"><span class=\"pre\">}</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallFifoMap_1a1a8ce561c725ca263a6ac8c871ddc918\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000EN12SmallFifoMap3setEvRR1KRR1V\" title=\"SmallFifoMap::set::K\"><span class=\"n\"><span class=\"pre\">K</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000EN12SmallFifoMap3setEvRR1KRR1V\" title=\"SmallFifoMap::set::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Put a key-value pair in the cache. </p></dd>", "a[href=\"api/IndexSet.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">IndexSet.hpp<a class=\"headerlink\" href=\"#indexset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Collection of indices, ideally optimized for memory size. </p>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVectoraSERK11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSERK11SmallVector\">\n<span id=\"_CPPv3N11SmallVectoraSERK11SmallVector\"></span><span id=\"_CPPv2N11SmallVectoraSERK11SmallVector\"></span><span id=\"SmallVector::assign-operator__SmallVectorCR\"></span><span class=\"target\" id=\"classSmallVector_1a4270ad76513034fd190c56e589ba08c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK13IndexRangeSet12GetNumRangesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13IndexRangeSet12GetNumRangesEv\">\n<span id=\"_CPPv3NK13IndexRangeSet12GetNumRangesEv\"></span><span id=\"_CPPv2NK13IndexRangeSet12GetNumRangesEv\"></span><span id=\"IndexRangeSet::GetNumRangesC\"></span><span class=\"target\" id=\"classIndexRangeSet_1a103626d11e6e7fe9562fd770b8eee0c6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNumRanges</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraphaSERK13WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraphaSERK13WeightedGraph\">\n<span id=\"_CPPv3N13WeightedGraphaSERK13WeightedGraph\"></span><span id=\"_CPPv2N13WeightedGraphaSERK13WeightedGraph\"></span><span id=\"WeightedGraph::assign-operator__WeightedGraphCR\"></span><span class=\"target\" id=\"classWeightedGraph_1a14fba8c7513bf98f239650bf759eb7c1\"></span><a class=\"reference internal\" href=\"#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Copy operator. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt8multisetI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt8multisetI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a69c02dd6fb246dc87f81c116bcd828b2\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multiset</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::multiset has a particular element without modifying the set in any way. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8Iterator8IteratorERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8Iterator8IteratorERK8Iterator\">\n<span id=\"_CPPv3N16reference_vector8Iterator8IteratorERK8Iterator\"></span><span id=\"_CPPv2N16reference_vector8Iterator8IteratorERK8Iterator\"></span><span id=\"reference_vector::Iterator::Iterator__IteratorCR\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1acc351e3fe07efad019d02c967e9a6eaf\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8Iterator8IteratorERK8Iterator\" title=\"reference_vector::Iterator::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue13UpdateMinimumEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue13UpdateMinimumEd\">\n<span id=\"_CPPv3N9TimeQueue13UpdateMinimumEd\"></span><span id=\"_CPPv2N9TimeQueue13UpdateMinimumEd\"></span><span id=\"TimeQueue::UpdateMinimum__double\"></span><span class=\"target\" id=\"classTimeQueue_1ab855c6c884e0000ce790aecaaefe2225\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UpdateMinimum</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_min</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8Iterator2itE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8Iterator2itE\">\n<span id=\"_CPPv3N16reference_vector8Iterator2itE\"></span><span id=\"_CPPv2N16reference_vector8Iterator2itE\"></span><span id=\"reference_vector::Iterator::it__vec_t::iterator\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1abe65bd56329ee5f77f2958997a1f2aa8\"></span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector5vec_tE\" title=\"reference_vector::vec_t\"><span class=\"n\"><span class=\"pre\">vec_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">it</span></span></span><br/></dt><dd><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Add a const interator, and probably a reverse iterator. </p>\n</dd></dl>\n</p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVectoraSERR15SmallVectorImplI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSERR15SmallVectorImplI1TE\">\n<span id=\"_CPPv3N11SmallVectoraSERR15SmallVectorImplI1TE\"></span><span id=\"_CPPv2N11SmallVectoraSERR15SmallVectorImplI1TE\"></span><span id=\"SmallVector::assign-operator__SmallVectorImpl:T:RR\"></span><span class=\"target\" id=\"classSmallVector_1a3427695fb4f191c88fc30fe82af4bbf5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMapaSERR17UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMapaSERR17UnorderedIndexMap\">\n<span id=\"_CPPv3N17UnorderedIndexMapaSERR17UnorderedIndexMap\"></span><span id=\"_CPPv2N17UnorderedIndexMapaSERR17UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap::assign-operator__UnorderedIndexMapRR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a7584a403edf4b2475db5d86beab89bc9\"></span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet13IndexRangeSetERK13IndexRangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet13IndexRangeSetERK13IndexRangeSet\">\n<span id=\"_CPPv3N13IndexRangeSet13IndexRangeSetERK13IndexRangeSet\"></span><span id=\"_CPPv2N13IndexRangeSet13IndexRangeSetERK13IndexRangeSet\"></span><span id=\"IndexRangeSet::IndexRangeSet__IndexRangeSetCR\"></span><span class=\"target\" id=\"classIndexRangeSet_1a8bde35f7ff6b012826e066ecfbf854db\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13IndexRangeSet13IndexRangeSetERK13IndexRangeSet\" title=\"IndexRangeSet::IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph13PrintDirectedERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph13PrintDirectedERNSt7ostreamE\">\n<span id=\"_CPPv3N5Graph13PrintDirectedERNSt7ostreamE\"></span><span id=\"_CPPv2N5Graph13PrintDirectedERNSt7ostreamE\"></span><span id=\"Graph::PrintDirected__osR\"></span><span class=\"target\" id=\"classGraph_1a740e64eb1179b370159e11eada6b35ee\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintDirected</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print a directed graph to the provided output stream (defaulting to standard out) </p></dd>", "a[href=\"api/graph_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">graph_utils.hpp<a class=\"headerlink\" href=\"#graph-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file provides a number of tools for manipulating graphs. </p>", "a[href=\"api/BloomFilter.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BloomFilter.hpp<a class=\"headerlink\" href=\"#bloomfilter-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A Bloom filter implementation. </p><p><dl class=\"simple\">\n<dt><strong>Copyright</strong></dt><dd><p>Arash Partow, 2000 (modified slightly by Emily Dolson) </p>\n</dd>\n</dl>\n</p>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache9cache_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache9cache_mapE\">\n<span id=\"_CPPv3N10QueueCache9cache_mapE\"></span><span id=\"_CPPv2N10QueueCache9cache_mapE\"></span><span id=\"QueueCache::cache_map__cache_map_t\"></span><span class=\"target\" id=\"classQueueCache_1a9974ce1a477200db953c8f8b74100cc3\"></span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache11cache_map_tE\" title=\"QueueCache::cache_map_t\"><span class=\"n\"><span class=\"pre\">cache_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cache_map</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK9IndexBits11_CalcOffsetE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9IndexBits11_CalcOffsetE6size_t\">\n<span id=\"_CPPv3NK9IndexBits11_CalcOffsetE6size_t\"></span><span id=\"_CPPv2NK9IndexBits11_CalcOffsetE6size_t\"></span><span id=\"IndexBits::_CalcOffset__sC\"></span><span class=\"target\" id=\"classIndexBits_1a54171d3bfa45860d3c69ca9cef5c83a1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_CalcOffset</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache5EmptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache5EmptyEv\">\n<span id=\"_CPPv3NK10QueueCache5EmptyEv\"></span><span id=\"_CPPv2NK10QueueCache5EmptyEv\"></span><span id=\"QueueCache::EmptyC\"></span><span class=\"target\" id=\"classQueueCache_1a3db090e0ca11adb3ff6fcc6575e6a4db\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Empty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if cache has any elements. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter10bit_table_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10bit_table_E\">\n<span id=\"_CPPv3N11BloomFilter10bit_table_E\"></span><span id=\"_CPPv2N11BloomFilter10bit_table_E\"></span><span id=\"BloomFilter::bit_table___std::vector:unsigned-c:\"></span><span class=\"target\" id=\"classBloomFilter_1a534f10c3b005789989fc03809047546c\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bit_table_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4I00_6size_tE12SmallFifoMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE12SmallFifoMap\">\n<span id=\"_CPPv3I00_6size_tE12SmallFifoMap\"></span><span id=\"_CPPv2I00_6size_tE12SmallFifoMap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallFifoMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallFifoMap</span></span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap9StringMapERR9StringMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap9StringMapERR9StringMap\">\n<span id=\"_CPPv3N9StringMap9StringMapERR9StringMap\"></span><span id=\"_CPPv2N9StringMap9StringMapERR9StringMap\"></span><span id=\"StringMap::StringMap__StringMapRR\"></span><span class=\"target\" id=\"classStringMap_1a51db83a91af0f0bd9b6e1d72799275ef\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N9StringMap9StringMapERR9StringMap\" title=\"StringMap::StringMap\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8IteratormlEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8IteratormlEv\">\n<span id=\"_CPPv3N16reference_vector8IteratormlEv\"></span><span id=\"_CPPv2N16reference_vector8IteratormlEv\"></span><span id=\"reference_vector::Iterator::mul-operator\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1ad5107fded77c7479a18c64c3474deea9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">*</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a reference to the element pointed to by this iterator; may advance iterator. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap3getERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap3getERK3Key\">\n<span id=\"_CPPv3NK12SmallFifoMap3getERK3Key\"></span><span id=\"_CPPv2NK12SmallFifoMap3getERK3Key\"></span><span id=\"SmallFifoMap::get__KeyCRC\"></span><span class=\"target\" id=\"classSmallFifoMap_1a562fca86e5ff25a5c3214581249d1da4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get corresponding value from cache. Return nullptr if key not in cache. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue8AsStringEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue8AsStringEv\">\n<span id=\"_CPPv3N9TimeQueue8AsStringEv\"></span><span id=\"_CPPv2N9TimeQueue8AsStringEv\"></span><span id=\"TimeQueue::AsString\"></span><span class=\"target\" id=\"classTimeQueue_1a0e944e552411d54e6cb420764de13122\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsString</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet8IndexSetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet8IndexSetEv\">\n<span id=\"_CPPv3N8IndexSet8IndexSetEv\"></span><span id=\"_CPPv2N8IndexSet8IndexSetEv\"></span><span id=\"IndexSet::IndexSet\"></span><span class=\"target\" id=\"classIndexSet_1a229743c6bb49193a2d0cfe15f26e5599\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratorgtERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratorgtERK8Iterator\">\n<span id=\"_CPPv3NK16reference_vector8IteratorgtERK8Iterator\"></span><span id=\"_CPPv2NK16reference_vector8IteratorgtERK8Iterator\"></span><span id=\"reference_vector::Iterator::gt-operator__IteratorCRC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a76ac28e36e56744ad7290756d75c7d37\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap15difference_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap15difference_typeE\">\n<span id=\"_CPPv3N7TypeMap15difference_typeE\"></span><span id=\"_CPPv2N7TypeMap15difference_typeE\"></span><span class=\"target\" id=\"classTypeMap_1a71261b6a7a84fa1e61252ad6315e8f7f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">difference_type</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph7GetNodeEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph7GetNodeEi\">\n<span id=\"_CPPv3N5Graph7GetNodeEi\"></span><span id=\"_CPPv2N5Graph7GetNodeEi\"></span><span id=\"Graph::GetNode__i\"></span><span class=\"target\" id=\"classGraph_1a780a879710cd980019e79054092efa01\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Node</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNode</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">i</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap6AdjustE6size_tKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap6AdjustE6size_tKd\">\n<span id=\"_CPPv3N17UnorderedIndexMap6AdjustE6size_tKd\"></span><span id=\"_CPPv2N17UnorderedIndexMap6AdjustE6size_tKd\"></span><span id=\"UnorderedIndexMap::Adjust__s.doubleC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a31e034072908d3dcd1e10f542ffdd87e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Adjust</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter11table_size_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11table_size_E\">\n<span id=\"_CPPv3N11BloomFilter11table_size_E\"></span><span id=\"_CPPv2N11BloomFilter11table_size_E\"></span><span id=\"BloomFilter::table_size___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1abbe006e347118a3f0bf138762aebae04\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">table_size_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap5IndexEd6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap5IndexEd6size_t\">\n<span id=\"_CPPv3NK8IndexMap5IndexEd6size_t\"></span><span id=\"_CPPv2NK8IndexMap5IndexEd6size_t\"></span><span id=\"IndexMap::Index__double.sC\"></span><span class=\"target\" id=\"classIndexMap_1a1b7c992be35a1e9e6ba505e94fcd4163\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Index</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cur_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine the ID at the specified index position. </p></dd>", "a[href=\"api/Bool.html#_CPPv4N4BoolaSEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolaSEb\">\n<span id=\"_CPPv3N4BoolaSEb\"></span><span id=\"_CPPv2N4BoolaSEb\"></span><span id=\"Bool::assign-operator__b\"></span><span class=\"target\" id=\"classBool_1aa88c65c05c6073f71e180ce7c00819e1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVector11SmallVectorEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorEv\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorEv\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorEv\"></span><span id=\"SmallVector::SmallVector\"></span><span class=\"target\" id=\"classSmallVector_1a22e956337a6a835026a7a6d5a52ffba9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\">\n<span id=\"_CPPv3I0E11RemoveValueR6vectorI1TERK1T6size_t\"></span><span id=\"_CPPv2I0E11RemoveValueR6vectorI1TERK1T6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a73bb33bf06bc252bbd410a274143bae9\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveValue</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\" title=\"RemoveValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\" title=\"RemoveValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove the first value after start_pos with a given value. Return if removal successful. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter9cell_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter9cell_typeE\">\n<span id=\"_CPPv3N11BloomFilter9cell_typeE\"></span><span id=\"_CPPv2N11BloomFilter9cell_typeE\"></span><span id=\"BloomFilter::cell_type\"></span><span class=\"target\" id=\"classBloomFilter_1a62537022cc49f9fb602caf03e2ca5edf\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cell_type</span></span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ra_map.hpp<a class=\"headerlink\" href=\"#ra-map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a Random Access Map template. </p><p>\nA random access map allows for simple traversal by index and a guarantee that a value at a given index will always be at that index unless any map element is deleted. This allows storage of indices for maps with a fixed layout, resulting in easy access. </p>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFiltereOERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFiltereOERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFiltereOERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFiltereOERK11BloomFilter\"></span><span id=\"BloomFilter::xor-assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1a9c906a06da8590aaf43a5fc55bfa8e71\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the difference of two Bloom filters. </p></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph11HasEdgePairE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph11HasEdgePairE6size_t6size_t\">\n<span id=\"_CPPv3NK5Graph11HasEdgePairE6size_t6size_t\"></span><span id=\"_CPPv2NK5Graph11HasEdgePairE6size_t6size_t\"></span><span id=\"Graph::HasEdgePair__s.sC\"></span><span class=\"target\" id=\"classGraph_1a71372a38343c244b1f0ff1109618ef2a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasEdgePair</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine if edges exist in both directions between a pair of vertices. </p></dd>", "a[href=\"api/Bool.html#_CPPv4NK4BoolcvbEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK4BoolcvbEv\">\n<span id=\"_CPPv3NK4BoolcvbEv\"></span><span id=\"_CPPv2NK4BoolcvbEv\"></span><span id=\"Bool::castto-b-operatorC\"></span><span class=\"target\" id=\"classBool_1a52cd2f9f076c4dc7f67cb31e7a5ed402\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Conversion of this proxy to Boolean (as an rvalue) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits4bitsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits4bitsE\">\n<span id=\"_CPPv3N9IndexBits4bitsE\"></span><span id=\"_CPPv2N9IndexBits4bitsE\"></span><span id=\"IndexBits::bits__BitVector\"></span><span class=\"target\" id=\"classIndexBits_1ac4be0d4a4a140d17df4d5e4715d62edf\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bits</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv48IndexSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48IndexSet\">\n<span id=\"_CPPv38IndexSet\"></span><span id=\"_CPPv28IndexSet\"></span><span id=\"IndexSet\"></span><span class=\"target\" id=\"classIndexSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexSet</span></span></span><br/></dt><dd><p>IndexSet maintains a collection of indices that can be easily manipulated. It will try to adjust representation to maintain speed and memory efficiency. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6hasherE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6hasherE\">\n<span id=\"_CPPv3N6ra_map6hasherE\"></span><span id=\"_CPPv2N6ra_map6hasherE\"></span><span class=\"target\" id=\"classra__map_1a1cc60bbf3b67fd23c257723afe974902\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hasher</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Hash\"><span class=\"n\"><span class=\"pre\">Hash</span></span></a><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv49IndexBits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49IndexBits\">\n<span id=\"_CPPv39IndexBits\"></span><span id=\"_CPPv29IndexBits\"></span><span id=\"IndexBits\"></span><span class=\"target\" id=\"classIndexBits\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></span><br/></dt><dd><p>A class to maintain a set of indices with a bit vector to represent them. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector16reference_vectorEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector16reference_vectorEv\">\n<span id=\"_CPPv3N16reference_vector16reference_vectorEv\"></span><span id=\"_CPPv2N16reference_vector16reference_vectorEv\"></span><span id=\"reference_vector::reference_vector\"></span><span class=\"target\" id=\"classreference__vector_1ab3fc9cf0b28e9d0efd0acf41d20f220d\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv48bit_mask\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48bit_mask\">\n<span id=\"_CPPv38bit_mask\"></span><span id=\"_CPPv28bit_mask\"></span><span id=\"bit_mask__unsigned-cCA\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1ad8efa1f72bd4e98e84492918f19bd2a2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bit_mask</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference internal\" href=\"#_CPPv413bits_per_char\" title=\"bits_per_char\"><span class=\"n\"><span class=\"pre\">bits_per_char</span></span></a><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">0x01</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x02</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x04</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x08</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x10</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x20</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x40</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x80</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon4dataEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon4dataEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon4dataEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon4dataEv\"></span><span id=\"SmallVectorTemplateCommon::data\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a9ae68f1b88908d02925e4099d05b294d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon7pointerE\" title=\"SmallVectorTemplateCommon::pointer\"><span class=\"n\"><span class=\"pre\">pointer</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a pointer to the vector\u2019s buffer, even if empty(). </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4orRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4orRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3orRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2orRK11BloomFilterRK11BloomFilter\"></span><span id=\"or-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1affc9c2fad7d9c9e3f909afe7ea909e22\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the union of two Bloom filters. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraphaSERR13WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraphaSERR13WeightedGraph\">\n<span id=\"_CPPv3N13WeightedGraphaSERR13WeightedGraph\"></span><span id=\"_CPPv2N13WeightedGraphaSERR13WeightedGraph\"></span><span id=\"WeightedGraph::assign-operator__WeightedGraphRR\"></span><span class=\"target\" id=\"classWeightedGraph_1a09e3e4043733f4743e92b69f08653f72\"></span><a class=\"reference internal\" href=\"#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Move operator. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap8IndexMapERK8IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap8IndexMapERK8IndexMap\">\n<span id=\"_CPPv3N8IndexMap8IndexMapERK8IndexMap\"></span><span id=\"_CPPv2N8IndexMap8IndexMapERK8IndexMap\"></span><span id=\"IndexMap::IndexMap__IndexMapCR\"></span><span class=\"target\" id=\"classIndexMap_1a02ab26ae171299a59301ee705bd1b8bd\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8IndexMap8IndexMapERK8IndexMap\" title=\"IndexMap::IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache8iteratorE\">\n<span id=\"_CPPv3N10QueueCache8iteratorE\"></span><span id=\"_CPPv2N10QueueCache8iteratorE\"></span><span class=\"target\" id=\"classQueueCache_1a253eb27b16ad61f527e1502183a74f9e\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map9key_equalE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map9key_equalE\">\n<span id=\"_CPPv3N6ra_map9key_equalE\"></span><span id=\"_CPPv2N6ra_map9key_equalE\"></span><span class=\"target\" id=\"classra__map_1af76e6e48a69dda7d127a7c0c4e5af9f9\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_equal</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KeyEqual\"><span class=\"n\"><span class=\"pre\">KeyEqual</span></span></a><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERK6vectorIdE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERK6vectorIdE\">\n<span id=\"_CPPv3N17UnorderedIndexMap17UnorderedIndexMapERK6vectorIdE\"></span><span id=\"_CPPv2N17UnorderedIndexMap17UnorderedIndexMapERK6vectorIdE\"></span><span id=\"UnorderedIndexMap::UnorderedIndexMap__vector:double:CR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aa7125c09f12c432b8db5eae0e01b06ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_weights</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct an UnorderedIndexMap with a specified initial set of weights. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap7GetProbE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap7GetProbE6size_t\">\n<span id=\"_CPPv3NK8IndexMap7GetProbE6size_t\"></span><span id=\"_CPPv2NK8IndexMap7GetProbE6size_t\"></span><span id=\"IndexMap::GetProb__sC\"></span><span class=\"target\" id=\"classIndexMap_1ade1753e20dede23e03b9fa1ed530cfc8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetProb</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>What is the probability of the specified index being selected? </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6ra_mapERK6ra_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6ra_mapERK6ra_map\">\n<span id=\"_CPPv3N6ra_map6ra_mapERK6ra_map\"></span><span id=\"_CPPv2N6ra_map6ra_mapERK6ra_map\"></span><span id=\"ra_map::ra_map__ra_mapCR\"></span><span class=\"target\" id=\"classra__map_1a3a6170377f6f481d5c9862209b3335af\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map6ra_mapERK6ra_map\" title=\"ra_map::ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypeMap.hpp<a class=\"headerlink\" href=\"#typemap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A class that will map types to values of a designated type. </p>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8Iterator3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8Iterator3endEv\">\n<span id=\"_CPPv3N16reference_vector8Iterator3endEv\"></span><span id=\"_CPPv2N16reference_vector8Iterator3endEv\"></span><span id=\"reference_vector::Iterator::end\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a13823aac6754f5d5e440eadf216b0b0f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return an iterator pointing to just past the end of the vector. </p></dd>", "a[href=\"api/tuple_utils.html#_CPPv4I0E10tuple_sizeiv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10tuple_sizeiv\">\n<span id=\"_CPPv3I0E10tuple_sizev\"></span><span id=\"_CPPv2I0E10tuple_sizev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a6f5170d2c5ddb41e1a3d902b2c8e0e97\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tuple_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Quick way to calculate tuple size. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4eoRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4eoRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3eoRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2eoRK11BloomFilterRK11BloomFilter\"></span><span id=\"xor-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1adbc4f4be9c78d021b39358b5887d49c5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the difference of two Bloom filters. </p></dd>", "a[href=\"api/map_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">map_utils.hpp<a class=\"headerlink\" href=\"#map-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate maps. </p>", "a[href=\"api/tuple_struct.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">tuple_struct.hpp<a class=\"headerlink\" href=\"#tuple-struct-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>These macros will build a tuple and accessors to that tuple\u2019s members inside of a class definintion. </p><p>\n\u201cBut WHY???\u201d you ask. Let me explain: Keeping a tuple allows us to easily track the members in the stuct or class, and makes possible powerful types of reflection including identifying all members and performing an action on each (such as serialization). Since tuples instantiate members directly, these benefits should come at no cost to performance.</p>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap4cendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap4cendEv\">\n<span id=\"_CPPv3NK12SmallFifoMap4cendEv\"></span><span id=\"_CPPv2NK12SmallFifoMap4cendEv\"></span><span id=\"SmallFifoMap::cendC\"></span><span class=\"target\" id=\"classSmallFifoMap_1a6a642881a12b9146ad05db196a2a3eab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap14const_iteratorE\" title=\"SmallFifoMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N8StringID8StringIDERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8StringID8StringIDERKNSt6stringE\">\n<span id=\"_CPPv3N8StringID8StringIDERKNSt6stringE\"></span><span id=\"_CPPv2N8StringID8StringIDERKNSt6stringE\"></span><span id=\"StringID::StringID__ssCR\"></span><span class=\"target\" id=\"classStringID_1abcd182fde16c9be8fd2b08cda16d6f32\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap9val_map_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap9val_map_tE\">\n<span id=\"_CPPv3N7TypeMap9val_map_tE\"></span><span id=\"_CPPv2N7TypeMap9val_map_tE\"></span><span class=\"target\" id=\"classTypeMap_1a45b899171bda2d590f629e89a78faf89\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7TypeMap\" title=\"TypeMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap7storageE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap7storageE\">\n<span id=\"_CPPv3N12SmallFifoMap7storageE\"></span><span id=\"_CPPv2N12SmallFifoMap7storageE\"></span><span id=\"SmallFifoMap::storage__storage_t\"></span><span class=\"target\" id=\"classSmallFifoMap_1a0271ad86c0fde4a8ea3c78fdc7262569\"></span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap9storage_tE\" title=\"SmallFifoMap::storage_t\"><span class=\"n\"><span class=\"pre\">storage_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">storage</span></span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap5ClearEv\">\n<span id=\"_CPPv3N17UnorderedIndexMap5ClearEv\"></span><span id=\"_CPPv2N17UnorderedIndexMap5ClearEv\"></span><span id=\"UnorderedIndexMap::Clear\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1ab6b980580d19ec52f435157ab0a440f8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reset all item weights to zero. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilteraSERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilteraSERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilteraSERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilteraSERK11BloomFilter\"></span><span id=\"BloomFilter::assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1a1f9fddf38c4428cf5291e6dc03b3a370\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap7weightsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap7weightsE\">\n<span id=\"_CPPv3N8IndexMap7weightsE\"></span><span id=\"_CPPv2N8IndexMap7weightsE\"></span><span id=\"IndexMap::weights__vector:double:\"></span><span class=\"target\" id=\"classIndexMap_1a505b65ef56674c4deeff842b01181e15\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">weights</span></span></span><br/></dt><dd><p>The total weights in each sub-tree. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache6DeleteEKN11cache_map_t8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache6DeleteEKN11cache_map_t8iteratorE\">\n<span id=\"_CPPv3N10QueueCache6DeleteEKN11cache_map_t8iteratorE\"></span><span id=\"_CPPv2N10QueueCache6DeleteEKN11cache_map_t8iteratorE\"></span><span id=\"QueueCache::Delete__cache_map_t::iteratorC\"></span><span class=\"target\" id=\"classQueueCache_1a102c737cb65ee9e070814d8bbed7324f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Delete</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache11cache_map_tE\" title=\"QueueCache::cache_map_t\"><span class=\"n\"><span class=\"pre\">cache_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">it</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map7crbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map7crbeginEv\">\n<span id=\"_CPPv3N11valsort_map7crbeginEv\"></span><span id=\"_CPPv2N11valsort_map7crbeginEv\"></span><span id=\"valsort_map::crbegin\"></span><span class=\"target\" id=\"classvalsort__map_1a429d39c0b380b84559a0a71f00ec6e83\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">crbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMapixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMapixE6size_t\">\n<span id=\"_CPPv3N9StringMapixE6size_t\"></span><span id=\"_CPPv2N9StringMapixE6size_t\"></span><span id=\"StringMap::subscript-operator__s\"></span><span class=\"target\" id=\"classStringMap_1a44b252a79fbeccca9935000578ab6e7d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet6rangesE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet6rangesE\">\n<span id=\"_CPPv3N8IndexSet6rangesE\"></span><span id=\"_CPPv2N8IndexSet6rangesE\"></span><span id=\"IndexSet::ranges__IndexRangeSet\"></span><span class=\"target\" id=\"classIndexSet_1a0ae10f555d01d577972625cd16887e70\"></span><a class=\"reference internal\" href=\"#_CPPv413IndexRangeSet\" title=\"IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ranges</span></span></span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv416load_graph_tableRNSt7istreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416load_graph_tableRNSt7istreamE\">\n<span id=\"_CPPv316load_graph_tableRNSt7istreamE\"></span><span id=\"_CPPv216load_graph_tableRNSt7istreamE\"></span><span id=\"load_graph_table__isR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a473acf770b8a95b5a611e35e9af7d69f\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_table</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Load a graph from a connection matrix. Format: Number of vertices followed by v^2 0\u2019s or 1\u2019s Example: \u201c3 0 1 0 1 0 0 0 0 1\u201d </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap11ResizeClearE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap11ResizeClearE6size_t\">\n<span id=\"_CPPv3N8IndexMap11ResizeClearE6size_t\"></span><span id=\"_CPPv2N8IndexMap11ResizeClearE6size_t\"></span><span id=\"IndexMap::ResizeClear__s\"></span><span class=\"target\" id=\"classIndexMap_1a382a94b3c4b2442b5bd4ec1fccd3453f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResizeClear</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change the size of this map AND change all weights to zero. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSetUt1_3E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSetUt1_3E\">\n<span id=\"_CPPv3N8IndexSetUt1_3E\"></span><span class=\"target\" id=\"classIndexSet_1a1f02751cae24e7d87e3accec41fda61b\"></span><span class=\"k\"><span class=\"pre\">union</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48IndexSet\" title=\"IndexSet\"><span class=\"n\"><span class=\"pre\">IndexSet</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">[anonymous]</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">[anonymous]</span></span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMapixERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMapixERK3Key\">\n<span id=\"_CPPv3N12SmallFifoMapixERK3Key\"></span><span id=\"_CPPv2N12SmallFifoMapixERK3Key\"></span><span id=\"SmallFifoMap::subscript-operator__KeyCR\"></span><span class=\"target\" id=\"classSmallFifoMap_1afdfaeaaed1999facff5ef7b56183c41a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get corresponding value from cache. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4NK9TimeQueue8ItemInfoltERK8ItemInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TimeQueue8ItemInfoltERK8ItemInfo\">\n<span id=\"_CPPv3NK9TimeQueue8ItemInfoltERK8ItemInfo\"></span><span id=\"_CPPv2NK9TimeQueue8ItemInfoltERK8ItemInfo\"></span><span id=\"TimeQueue::ItemInfo::lt-operator__ItemInfoCRC\"></span><span class=\"target\" id=\"structTimeQueue_1_1ItemInfo_1a1a497114821d1b091a0416bcc74f2848\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N9TimeQueue8ItemInfoE\" title=\"TimeQueue::ItemInfo\"><span class=\"n\"><span class=\"pre\">ItemInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6insertERR10value_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6insertERR10value_type\">\n<span id=\"_CPPv3N6ra_map6insertERR10value_type\"></span><span id=\"_CPPv2N6ra_map6insertERR10value_type\"></span><span id=\"ra_map::insert__value_typeRR\"></span><span class=\"target\" id=\"classra__map_1a3361af1af1ea03865b066185a57b80a7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map10value_typeE\" title=\"ra_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a new value into container by move; return position. </p></dd>", "a[href=\"api/graph_utils.html#_CPPv416build_graph_tree6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416build_graph_tree6size_tR6Random\">\n<span id=\"_CPPv316build_graph_tree6size_tR6Random\"></span><span id=\"_CPPv216build_graph_tree6size_tR6Random\"></span><span id=\"build_graph_tree__s.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a2cf638418a66250cfe7d73e54611f1d9\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_tree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random tree graph (new vertices are repeatedly attached to a random position in a tree as it is constructed.) </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector5beginEv\">\n<span id=\"_CPPv3N16reference_vector5beginEv\"></span><span id=\"_CPPv2N16reference_vector5beginEv\"></span><span id=\"reference_vector::begin\"></span><span class=\"target\" id=\"classreference__vector_1a85bbd06f28f0eb4704484d587fd650c2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\">\n<span id=\"_CPPv3I00E6ToUMapRK6vectorI1TE\"></span><span id=\"_CPPv2I00E6ToUMapRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aea94f4a86c96bb9c1ded857ba4524407\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\" title=\"ToUMap::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\" title=\"ToUMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToUMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\" title=\"ToUMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_vec</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector into a map. </p></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\">\n<span id=\"_CPPv3I00E8flip_mapRKNSt3mapI1A1BEE\"></span><span id=\"_CPPv2I00E8flip_mapRKNSt3mapI1A1BEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">B</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a2d4f7b90688a003ae4d8202fe879cd7e\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flip_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">src</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an std::map&lt;A,B&gt; and return the flipped map (now multimap to be safe): std::multimap&lt;B,A&gt; </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E7FindMin1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7FindMin1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E7FindMinRK6vectorI1TE\"></span><span id=\"_CPPv2I0E7FindMinRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a18e2f47e87446c429a9219206fbb0b68\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMin1TRK6vectorI1TE\" title=\"FindMin::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMin</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMin1TRK6vectorI1TE\" title=\"FindMin::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the minimum value in a vector. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap9num_itemsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap9num_itemsE\">\n<span id=\"_CPPv3N17UnorderedIndexMap9num_itemsE\"></span><span id=\"_CPPv2N17UnorderedIndexMap9num_itemsE\"></span><span id=\"UnorderedIndexMap::num_items__s\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a5642868dc267ded7e2478298b4d4c745\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">num_items</span></span></span><br/></dt><dd><p>Num items stored in this UnorderedIndexMap. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv410tree_right6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410tree_right6size_t\">\n<span id=\"_CPPv310tree_right6size_t\"></span><span id=\"_CPPv210tree_right6size_t\"></span><span id=\"tree_right__sCE\"></span><span class=\"target\" id=\"vector__utils_8hpp_1a41baa90bc7887ea694c6408c9c9e0e8c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tree_right</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8Iterator8IteratorERKN5vec_t8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8Iterator8IteratorERKN5vec_t8iteratorE\">\n<span id=\"_CPPv3N16reference_vector8Iterator8IteratorERKN5vec_t8iteratorE\"></span><span id=\"_CPPv2N16reference_vector8Iterator8IteratorERKN5vec_t8iteratorE\"></span><span id=\"reference_vector::Iterator::Iterator__vec_t::iteratorCR\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a5bc18ee3ab82734ac378b1559c789c7e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector5vec_tE\" title=\"reference_vector::vec_t\"><span class=\"n\"><span class=\"pre\">vec_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_it</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap11zero_offsetE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap11zero_offsetE\">\n<span id=\"_CPPv3N8IndexMap11zero_offsetE\"></span><span id=\"_CPPv2N8IndexMap11zero_offsetE\"></span><span id=\"IndexMap::zero_offset__s\"></span><span class=\"target\" id=\"classIndexMap_1a12868ce54866995aec42daac165457f7\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">zero_offset</span></span></span><br/></dt><dd><p>Position of id zero. </p></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph7GetSizeEv\">\n<span id=\"_CPPv3NK5Graph7GetSizeEv\"></span><span id=\"_CPPv2NK5Graph7GetSizeEv\"></span><span id=\"Graph::GetSizeC\"></span><span class=\"target\" id=\"classGraph_1adb1a2e6f369607faa11b625c537e9c18\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get number of vertices in this graph. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSetD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSetD0Ev\">\n<span id=\"_CPPv3N8IndexSetD0Ev\"></span><span id=\"_CPPv2N8IndexSetD0Ev\"></span><span id=\"IndexSet::~IndexSet\"></span><span class=\"target\" id=\"classIndexSet_1a47310e2f97812a7697960854e2067dee\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~IndexSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\">\n<span id=\"_CPPv3I00E11GetConstRefRK5MAP_TRK5KEY_T\"></span><span id=\"_CPPv2I00E11GetConstRefRK5MAP_TRK5KEY_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a98ddb4b8a7b6fdc71968a36c51e19172\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetConstRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\" title=\"GetConstRef::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\" title=\"GetConstRef::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map and element, run find() member function, and return a reference to the result found; trip assert if the result is not present. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set6ra_setEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set6ra_setEv\">\n<span id=\"_CPPv3N6ra_set6ra_setEv\"></span><span id=\"_CPPv2N6ra_set6ra_setEv\"></span><span id=\"ra_set::ra_set\"></span><span class=\"target\" id=\"classra__set_1aaff9aaa1563dc92b03b097749198740c\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ra_set.hpp<a class=\"headerlink\" href=\"#ra-set-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a Random Access Set template. </p>", "a[href=\"api/vector_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">vector_utils.hpp<a class=\"headerlink\" href=\"#vector-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate vector. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>consider adding a work-around to avoid vector&lt;bool&gt; ? </p>\n<p>speed up Append to count all additions at once, resize, and fill them in. </p>\n</dd></dl>\n</p>", "a[href=\"api/vector_utils.html#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\">\n<span id=\"_CPPv3I00E8ToVectorRKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\"></span><span id=\"_CPPv2I00E8ToVectorRKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1afae1ba18acc64a78c749db9c8cc88271\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">default_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index_cap</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">32768</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an unordered map to a vector. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratorleERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratorleERK8Iterator\">\n<span id=\"_CPPv3NK16reference_vector8IteratorleERK8Iterator\"></span><span id=\"_CPPv2NK16reference_vector8IteratorleERK8Iterator\"></span><span id=\"reference_vector::Iterator::lte-operator__IteratorCRC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a379fd630e9301d7aef4b0f914724d7cf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/tuple_utils.html#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\">\n<span id=\"_CPPv3I00E12TupleIterateR7TUPLE_TRK5FUN_T\"></span><span id=\"_CPPv2I00E12TupleIterateR7TUPLE_TRK5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a25ed5449a8aa424858a55dfa93c16a87\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleIterate</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\" title=\"TupleIterate::TUPLE_T\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\" title=\"TupleIterate::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a provided function on each element of a tuple. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter20generate_unique_saltEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter20generate_unique_saltEv\">\n<span id=\"_CPPv3N11BloomFilter20generate_unique_saltEv\"></span><span id=\"_CPPv2N11BloomFilter20generate_unique_saltEv\"></span><span id=\"BloomFilter::generate_unique_salt\"></span><span class=\"target\" id=\"classBloomFilter_1a7e94502aa932cd7d86369b3f32fa80d7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">generate_unique_salt</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap5beginEv\">\n<span id=\"_CPPv3N7TypeMap5beginEv\"></span><span id=\"_CPPv2N7TypeMap5beginEv\"></span><span id=\"TypeMap::begin\"></span><span class=\"target\" id=\"classTypeMap_1a8adff6c233d4586b54add4b17a692cca\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap8iteratorE\" title=\"TypeMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK10IndexRange6GetEndEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10IndexRange6GetEndEv\">\n<span id=\"_CPPv3NK10IndexRange6GetEndEv\"></span><span id=\"_CPPv2NK10IndexRange6GetEndEv\"></span><span id=\"IndexRange::GetEndC\"></span><span class=\"target\" id=\"classIndexRange_1adc0d230838767096302f9eb753709b14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEnd</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv416build_graph_grid6size_t6size_tR6Randomd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416build_graph_grid6size_t6size_tR6Randomd\">\n<span id=\"_CPPv316build_graph_grid6size_t6size_tR6Randomd\"></span><span id=\"_CPPv216build_graph_grid6size_t6size_tR6Randomd\"></span><span id=\"build_graph_grid__s.s.RandomR.double\"></span><span class=\"target\" id=\"graph__utils_8hpp_1af048fc2d965ecf8e1661b7d8035385e8\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_grid</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">width</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">height</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">prob_use</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a graph with width x height vertices setup into a grid structure. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter11salt_count_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11salt_count_E\">\n<span id=\"_CPPv3N11BloomFilter11salt_count_E\"></span><span id=\"_CPPv2N11BloomFilter11salt_count_E\"></span><span id=\"BloomFilter::salt_count___unsigned-i\"></span><span class=\"target\" id=\"classBloomFilter_1aa2882cfc2f923e8862421b9c8e58461a\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">salt_count_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache11cache_map_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache11cache_map_tE\">\n<span id=\"_CPPv3N10QueueCache11cache_map_tE\"></span><span id=\"_CPPv2N10QueueCache11cache_map_tE\"></span><span class=\"target\" id=\"classQueueCache_1aa45f3aef85deb83c8406430cd428b7f1\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cache_map_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Hash\"><span class=\"n\"><span class=\"pre\">Hash</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Pred\"><span class=\"n\"><span class=\"pre\">Pred</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache9key_equalE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache9key_equalE\">\n<span id=\"_CPPv3N5Cache9key_equalE\"></span><span id=\"_CPPv2N5Cache9key_equalE\"></span><span class=\"target\" id=\"classCache_1a2adad29a4fd4f977cf66ec1255dafd0d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_equal</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::PRED\"><span class=\"n\"><span class=\"pre\">PRED</span></span></a><br/></dt><dd><p>Function to test if two values are identical. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilterntEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilterntEv\">\n<span id=\"_CPPv3NK11BloomFilterntEv\"></span><span id=\"_CPPv2NK11BloomFilterntEv\"></span><span id=\"BloomFilter::not-operatorC\"></span><span class=\"target\" id=\"classBloomFilter_1ad4b4b482af6cf2c8d67a35c3cfa68c6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap3endEv\">\n<span id=\"_CPPv3NK12SmallFifoMap3endEv\"></span><span id=\"_CPPv2NK12SmallFifoMap3endEv\"></span><span id=\"SmallFifoMap::endC\"></span><span class=\"target\" id=\"classSmallFifoMap_1af22a3c6022e81fabdcdd6b18eeb55d0b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap14const_iteratorE\" title=\"SmallFifoMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\">\n<span id=\"_CPPv3I0E5Slice6vectorI1TEii\"></span><span id=\"_CPPv2I0E5Slice6vectorI1TEii\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a957174f9fb5266bd582d9c79e31997c9\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\" title=\"Slice::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Slice</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\" title=\"Slice::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vec</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns a vector containing a chunk of elements from</p></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5ClearEv\">\n<span id=\"_CPPv3N5Cache5ClearEv\"></span><span id=\"_CPPv2N5Cache5ClearEv\"></span><span id=\"Cache::Clear\"></span><span class=\"target\" id=\"classCache_1ada3ff5ec5c435a0194e64dbaa2e7be1b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Erase contents of cache. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\">\n<span id=\"_CPPv3NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"_CPPv2NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"CompressibleBloomFilter::compute_indices__bloom_typeCR.std::sR.std::sRC\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1a22cf829a161da46dbad1bfdd42fa83ba\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compute_indices</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bloom_type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit_index</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0EN7TypeMap4findE8iteratorv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN7TypeMap4findE8iteratorv\">\n<span id=\"_CPPv3I0EN7TypeMap4findEv\"></span><span id=\"_CPPv2I0EN7TypeMap4findEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1a5fa6e06b885c6e69cfb54de5432817c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap8iteratorE\" title=\"TypeMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4N4BoolpLEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolpLEb\">\n<span id=\"_CPPv3N4BoolpLEb\"></span><span id=\"_CPPv2N4BoolpLEb\"></span><span id=\"Bool::add-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a344bd6824bf31150ed0fd6970b6749dd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">+=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map7pointerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map7pointerE\">\n<span id=\"_CPPv3N6ra_map7pointerE\"></span><span id=\"_CPPv2N6ra_map7pointerE\"></span><span class=\"target\" id=\"classra__map_1a48826b9c1ba63114c5c126eb0e033f64\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator_traits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Allocator\"><span class=\"n\"><span class=\"pre\">Allocator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pointer</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap5beginEv\">\n<span id=\"_CPPv3N12SmallFifoMap5beginEv\"></span><span id=\"_CPPv2N12SmallFifoMap5beginEv\"></span><span id=\"SmallFifoMap::begin\"></span><span class=\"target\" id=\"classSmallFifoMap_1a84cdb443c7705e157fa158bbce1998a5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap8iteratorE\" title=\"SmallFifoMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon8iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon8iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon8iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a37715bfda8dc4e2a1f1ea98c2b22b770\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache14const_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache14const_iteratorE\">\n<span id=\"_CPPv3N10QueueCache14const_iteratorE\"></span><span id=\"_CPPv2N10QueueCache14const_iteratorE\"></span><span class=\"target\" id=\"classQueueCache_1a2a57da5512b9d16c76b4a96fc8e5b70f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_setaSERR6ra_set\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_setaSERR6ra_set\">\n<span id=\"_CPPv3N6ra_setaSERR6ra_set\"></span><span id=\"_CPPv2N6ra_setaSERR6ra_set\"></span><span id=\"ra_set::assign-operator__ra_setRR\"></span><span class=\"target\" id=\"classra__set_1ae0bbb0df8639aaba70c530aa66504518\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph12GetEdgeCountEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph12GetEdgeCountEv\">\n<span id=\"_CPPv3NK5Graph12GetEdgeCountEv\"></span><span id=\"_CPPv2NK5Graph12GetEdgeCountEv\"></span><span id=\"Graph::GetEdgeCountC\"></span><span class=\"target\" id=\"classGraph_1a32d04d9ffdb2e903bed69afc221f0e1c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEdgeCount</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the total number of edges in this graph. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBitsaSERK9IndexBits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBitsaSERK9IndexBits\">\n<span id=\"_CPPv3N9IndexBitsaSERK9IndexBits\"></span><span id=\"_CPPv2N9IndexBitsaSERK9IndexBits\"></span><span id=\"IndexBits::assign-operator__IndexBitsCR\"></span><span class=\"target\" id=\"classIndexBits_1afa32c0bba03162dd0f442f277a0a841a\"></span><a class=\"reference internal\" href=\"#_CPPv49IndexBits\" title=\"IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv49IndexBits\" title=\"IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet3SetE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet3SetE6size_t\">\n<span id=\"_CPPv3N8IndexSet3SetE6size_t\"></span><span id=\"_CPPv2N8IndexSet3SetE6size_t\"></span><span id=\"IndexSet::Set__s\"></span><span class=\"target\" id=\"classIndexSet_1a59ba8139134dfaf40caad8b3adf98e8a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Set</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4N4BooldVEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BooldVEb\">\n<span id=\"_CPPv3N4BooldVEb\"></span><span id=\"_CPPv2N4BooldVEb\"></span><span id=\"Bool::div-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1ac8871323848ebbffe1be86c49132c350\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">/=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap3GetE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap3GetE6size_t\">\n<span id=\"_CPPv3N9StringMap3GetE6size_t\"></span><span id=\"_CPPv2N9StringMap3GetE6size_t\"></span><span id=\"StringMap::Get__s\"></span><span class=\"target\" id=\"classStringMap_1a014526f1ffc7b7f0ebd50e64fcf0fb1a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVector11SmallVectorE6size_tRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorE6size_tRK1T\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorE6size_tRK1T\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorE6size_tRK1T\"></span><span id=\"SmallVector::SmallVector__s.TCR\"></span><span class=\"target\" id=\"classSmallVector_1a2487b10ed3bc91cedba6dfab74119ff2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">explicit</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Value</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt13unordered_setI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt13unordered_setI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a0f82f63004b09090c6dfc5e24b0598a2\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::unordered_set has a particular element without modifying the set in any way. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache3endEv\">\n<span id=\"_CPPv3NK10QueueCache3endEv\"></span><span id=\"_CPPv2NK10QueueCache3endEv\"></span><span id=\"QueueCache::endC\"></span><span class=\"target\" id=\"classQueueCache_1a3bc2ef516bb7eff3164faaee3d9aa94d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a constant iterator to one past the end of the cache queue. Alias of cend() </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap3endEv\">\n<span id=\"_CPPv3N7TypeMap3endEv\"></span><span id=\"_CPPv2N7TypeMap3endEv\"></span><span id=\"TypeMap::end\"></span><span class=\"target\" id=\"classTypeMap_1ab7ee5e93e92836eceab159ce16c4c4eb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap8iteratorE\" title=\"TypeMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon4backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon4backEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon4backEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon4backEv\"></span><span id=\"SmallVectorTemplateCommon::backC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a3d8c76f8f213debf4e936c52ec568a14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\" title=\"SmallVectorTemplateCommon::const_reference\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4NK11valsort_map9SortOrderclERK10value_typeRK10value_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11valsort_map9SortOrderclERK10value_typeRK10value_type\">\n<span id=\"_CPPv3NK11valsort_map9SortOrderclERK10value_typeRK10value_type\"></span><span id=\"_CPPv2NK11valsort_map9SortOrderclERK10value_typeRK10value_type\"></span><span id=\"valsort_map::SortOrder::call-operator__value_typeCR.value_typeCRC\"></span><span class=\"target\" id=\"structvalsort__map_1_1SortOrder_1a02730671f7606929942992a3e8a2343f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map10value_typeE\" title=\"valsort_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map10value_typeE\" title=\"valsort_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector5beginEv\">\n<span id=\"_CPPv3NK16reference_vector5beginEv\"></span><span id=\"_CPPv2NK16reference_vector5beginEv\"></span><span id=\"reference_vector::beginC\"></span><span class=\"target\" id=\"classreference__vector_1acc924f24a72fe4f045df96e07bf4bbb6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E20symmetric_differenceRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E20symmetric_differenceRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a1641b0e518450220ed0799f9f5e9ddeb\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange10IndexRangeE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange10IndexRangeE6size_t6size_t\">\n<span id=\"_CPPv3N10IndexRange10IndexRangeE6size_t6size_t\"></span><span id=\"_CPPv2N10IndexRange10IndexRangeE6size_t6size_t\"></span><span id=\"IndexRange::IndexRange__s.s\"></span><span class=\"target\" id=\"classIndexRange_1a0368b8c3e4c831492200d2d09e256074\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_start</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_end</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap5IndexEd6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap5IndexEd6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap5IndexEd6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap5IndexEd6size_t\"></span><span id=\"UnorderedIndexMap::Index__double.sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a3d114f142355c7ec83e00a3716c04861\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Index</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cur_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine the ID at the specified index position. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMapaSERK8IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMapaSERK8IndexMap\">\n<span id=\"_CPPv3N8IndexMapaSERK8IndexMap\"></span><span id=\"_CPPv2N8IndexMapaSERK8IndexMap\"></span><span id=\"IndexMap::assign-operator__IndexMapCR\"></span><span class=\"target\" id=\"classIndexMap_1a5caedbe0b763b285d92855ad93dc3007\"></span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap5ProxyE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap5ProxyE\">\n<span id=\"_CPPv3N17UnorderedIndexMap5ProxyE\"></span><span id=\"_CPPv2N17UnorderedIndexMap5ProxyE\"></span><span id=\"UnorderedIndexMap::Proxy\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1_1Proxy\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></span><br/></dt><dd><p>A Proxy class so that an index can be treated as an l-value. </p></dd>", "a[href=\"api/DynamicString.html#_CPPv413DynamicString\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413DynamicString\">\n<span id=\"_CPPv313DynamicString\"></span><span id=\"_CPPv213DynamicString\"></span><span id=\"DynamicString\"></span><span class=\"target\" id=\"classDynamicString\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></span><br/></dt><dd><p>A string handler where some sections can be fixed strings, while others update dynamically based on functions. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCacheixERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCacheixERK3Key\">\n<span id=\"_CPPv3N10QueueCacheixERK3Key\"></span><span id=\"_CPPv2N10QueueCacheixERK3Key\"></span><span id=\"QueueCache::subscript-operator__KeyCR\"></span><span class=\"target\" id=\"classQueueCache_1af4ea83faf593ed2be6fe0aa413009b6c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">index</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get an element from cache if found, and creates it otherwise. Value type must have a default constructor and an assignment operator. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange8SetStartE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange8SetStartE6size_t\">\n<span id=\"_CPPv3N10IndexRange8SetStartE6size_t\"></span><span id=\"_CPPv2N10IndexRange8SetStartE6size_t\"></span><span id=\"IndexRange::SetStart__s\"></span><span class=\"target\" id=\"classIndexRange_1a04d4c7d67c60fbbe33205705c8fe59cd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetStart</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/hash_utils.html#_CPPv4I0_6size_tE13ContainerHash\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE13ContainerHash\">\n<span id=\"_CPPv3I0_6size_tE13ContainerHash\"></span><span id=\"_CPPv2I0_6size_tE13ContainerHash\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Container</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Seed</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structContainerHash\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ContainerHash</span></span></span><br/></dt><dd><p>This structure serves as a hash for containers that are iterable. Use as a drop-in replacement for std::hash. </p></dd>", "a[href=\"api/map_utils.html#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\">\n<span id=\"_CPPv3I000E5AllOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span id=\"_CPPv2I000E5AllOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a3b696476533b932b72a134d091b43433\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AllOf</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AllOf::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AllOf::ELEMENT_T\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AllOf::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4N4BoolmLEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolmLEb\">\n<span id=\"_CPPv3N4BoolmLEb\"></span><span id=\"_CPPv2N4BoolmLEb\"></span><span id=\"Bool::mul-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a978c7b11e8c71c3dba76044f291bc8ee\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">*=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue8min_waitE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue8min_waitE\">\n<span id=\"_CPPv3N9TimeQueue8min_waitE\"></span><span id=\"_CPPv2N9TimeQueue8min_waitE\"></span><span id=\"TimeQueue::min_wait__double\"></span><span class=\"target\" id=\"classTimeQueue_1a9e3662069db45a6fef3b53f722717c8e\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">min_wait</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0</span></span><br/></dt><dd><p>Minimum amount of time for the next event. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon7isSmallEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon7isSmallEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon7isSmallEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon7isSmallEv\"></span><span id=\"SmallVectorTemplateCommon::isSmallC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1adb19bdd477f7976f538e07ee7bc4960f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">isSmall</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return true if this is a smallvector which has not had dynamic memory allocated for it. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector4sizeEv\">\n<span id=\"_CPPv3NK16reference_vector4sizeEv\"></span><span id=\"_CPPv2NK16reference_vector4sizeEv\"></span><span id=\"reference_vector::sizeC\"></span><span class=\"target\" id=\"classreference__vector_1abccdd6dc655461322ef3f32f056b6e9c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap6ResizeE6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap6ResizeE6size_td\">\n<span id=\"_CPPv3N8IndexMap6ResizeE6size_td\"></span><span id=\"_CPPv2N8IndexMap6ResizeE6size_td\"></span><span id=\"IndexMap::Resize__s.double\"></span><span class=\"target\" id=\"classIndexMap_1a5af97c2b2729a52ebf8f7cd6a527e5cd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Resize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">def_value</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change the number of indices in the map. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph5nodesE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph5nodesE\">\n<span id=\"_CPPv3N5Graph5nodesE\"></span><span id=\"_CPPv2N5Graph5nodesE\"></span><span id=\"Graph::nodes__vector:Node:\"></span><span class=\"target\" id=\"classGraph_1a71b5e16eb9e0670fea3ecee3526abb41\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">Node</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">nodes</span></span></span><br/></dt><dd><p>Set of vertices in this graph. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E5ScalevR6vectorI1TE1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5ScalevR6vectorI1TE1T\">\n<span id=\"_CPPv3I0E5ScaleR6vectorI1TE1T\"></span><span id=\"_CPPv2I0E5ScaleR6vectorI1TE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a9236d106592d442696b88292d519434d\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Scale</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5ScalevR6vectorI1TE1T\" title=\"Scale::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E5ScalevR6vectorI1TE1T\" title=\"Scale::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">scale</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Scale all elements of a vector by the same value. </p></dd>", "a[href=\"api/DynamicString.html#_CPPv4NK13DynamicStringixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13DynamicStringixE6size_t\">\n<span id=\"_CPPv3NK13DynamicStringixE6size_t\"></span><span id=\"_CPPv2NK13DynamicStringixE6size_t\"></span><span id=\"DynamicString::subscript-operator__sC\"></span><span class=\"target\" id=\"classDynamicString_1adc8e555673f42a17b229c76867c83f14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Index in to a specific component (not a specific character, since size is variable) and return it\u2019s associated string. </p></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache5CacheERK5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5CacheERK5Cache\">\n<span id=\"_CPPv3N5Cache5CacheERK5Cache\"></span><span id=\"_CPPv2N5Cache5CacheERK5Cache\"></span><span id=\"Cache::Cache__CacheCR\"></span><span class=\"target\" id=\"classCache_1a2fec89707f61ef9302383ab21cc796c7\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N5Cache5CacheERK5Cache\" title=\"Cache::Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap5Proxy2idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap5Proxy2idE\">\n<span id=\"_CPPv3N17UnorderedIndexMap5Proxy2idE\"></span><span id=\"_CPPv2N17UnorderedIndexMap5Proxy2idE\"></span><span id=\"UnorderedIndexMap::Proxy::id__s\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1_1Proxy_1a66ec378e7b3fcb14c001cadcfc2a10ca\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id</span></span></span><br/></dt><dd><p>Which id does it represent? </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache4cendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache4cendEv\">\n<span id=\"_CPPv3NK10QueueCache4cendEv\"></span><span id=\"_CPPv2NK10QueueCache4cendEv\"></span><span id=\"QueueCache::cendC\"></span><span class=\"target\" id=\"classQueueCache_1accf509c4c73fb8681843b9a9e1e24770\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a constant iterator to one past the end of the cache queue. </p></dd>", "a[href=\"api/reference_vector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">reference_vector.hpp<a class=\"headerlink\" href=\"#reference-vector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A version of vector that holds only references to objects. Be careful! </p>", "a[href=\"api/tuple_utils.html#_CPPv4NK9TupleHashclERK7tuple_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TupleHashclERK7tuple_t\">\n<span id=\"_CPPv3NK9TupleHashclERK7tuple_t\"></span><span id=\"_CPPv2NK9TupleHashclERK7tuple_t\"></span><span id=\"TupleHash::call-operator__tuple_tCRC\"></span><span class=\"target\" id=\"structTupleHash_1a97ad84187162a1d0c9c2fbd7cf42c0b8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N9TupleHash7tuple_tE\" title=\"TupleHash::tuple_t\"><span class=\"n\"><span class=\"pre\">tuple_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache5CacheERR5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5CacheERR5Cache\">\n<span id=\"_CPPv3N5Cache5CacheERR5Cache\"></span><span id=\"_CPPv2N5Cache5CacheERR5Cache\"></span><span id=\"Cache::Cache__CacheRR\"></span><span class=\"target\" id=\"classCache_1add7a9afadaee205a99cfe4103bb0c311\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N5Cache5CacheERR5Cache\" title=\"Cache::Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E9set_union6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E9set_union6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a3ee7a5a9bf4ee410571ccb36d2ca075c\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString6AppendERK7value_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString6AppendERK7value_t\">\n<span id=\"_CPPv3N13DynamicString6AppendERK7value_t\"></span><span id=\"_CPPv2N13DynamicString6AppendERK7value_t\"></span><span id=\"DynamicString::Append__value_tCR\"></span><span class=\"target\" id=\"classDynamicString_1a67f9dce1f945db4379e0aaf6d581b2b2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413DynamicString\" title=\"DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13DynamicString7value_tE\" title=\"DynamicString::value_t\"><span class=\"n\"><span class=\"pre\">value_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new function to the end of the DynamicString. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon14const_iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon14const_iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a8f3a22cb05d362e32e30ea01db8916b5\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommonixE9size_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommonixE9size_type\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"SmallVectorTemplateCommon::subscript-operator__size_type\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a9e7df5dc792db5783a15ef265162347c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\" title=\"SmallVectorTemplateCommon::reference\"><span class=\"n\"><span class=\"pre\">reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">idx</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E7HeapifybR6vectorI1TE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7HeapifybR6vectorI1TE6size_t\">\n<span id=\"_CPPv3I0E7HeapifyR6vectorI1TE6size_t\"></span><span id=\"_CPPv2I0E7HeapifyR6vectorI1TE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a55e8e7ced57347dc549c94e48e9a9bba\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Heapify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7HeapifybR6vectorI1TE6size_t\" title=\"Heapify::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Heapify an individual node in a vector. </p></dd>", "a[href=\"#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter11BloomFilterERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11BloomFilterERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilter11BloomFilterERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilter11BloomFilterERK11BloomFilter\"></span><span id=\"BloomFilter::BloomFilter__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1aa9342a94a473fe36b7c10aac241be37f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter11BloomFilterERK11BloomFilter\" title=\"BloomFilter::BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">filter</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4I0_bE23SmallVectorTemplateBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE23SmallVectorTemplateBase\">\n<span id=\"_CPPv3I0_bE23SmallVectorTemplateBase\"></span><span id=\"_CPPv2I0_bE23SmallVectorTemplateBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_trivially_copyable</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; - This is where we put method implementations that are designed to work with non-POD-like T\u2019s. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRangeaSERK10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRangeaSERK10IndexRange\">\n<span id=\"_CPPv3N10IndexRangeaSERK10IndexRange\"></span><span id=\"_CPPv2N10IndexRangeaSERK10IndexRange\"></span><span id=\"IndexRange::assign-operator__IndexRangeCR\"></span><span class=\"target\" id=\"classIndexRange_1a85e83a63d03cf44b07babe08d904db87\"></span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon7pointerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon7pointerE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon7pointerE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon7pointerE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1aa6fd739ace4f8ee847832e2a31b97c0b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange6AppendE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange6AppendE10IndexRange\">\n<span id=\"_CPPv3N10IndexRange6AppendE10IndexRange\"></span><span id=\"_CPPv2N10IndexRange6AppendE10IndexRange\"></span><span id=\"IndexRange::Append__IndexRange\"></span><span class=\"target\" id=\"classIndexRange_1a525a962809d42cd048ab3f10c4821400\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Extend the current range with a new one. Must be perfectly adjacent! </p></dd>", "a[href=\"api/Graph.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Graph.hpp<a class=\"headerlink\" href=\"#graph-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple, fast class for managing vertices (nodes) and edges. </p>", "a[href=\"api/TimeQueue.html#_CPPv4I0E9TimeQueue\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9TimeQueue\">\n<span id=\"_CPPv3I0E9TimeQueue\"></span><span id=\"_CPPv2I0E9TimeQueue\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTimeQueue\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TimeQueue</span></span></span><br/></dt><dd><p>A TimeQueue is used to track when \u201citems\u201d are ready. Insert() items with the time they should be triggered. Must be at least min_wait in the future. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4NK9TimeQueue7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TimeQueue7GetSizeEv\">\n<span id=\"_CPPv3NK9TimeQueue7GetSizeEv\"></span><span id=\"_CPPv2NK9TimeQueue7GetSizeEv\"></span><span id=\"TimeQueue::GetSizeC\"></span><span class=\"target\" id=\"classTimeQueue_1a3f8b0052c83448b3b298dbb98aff23b0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK8IndexSet3HasE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexSet3HasE6size_t\">\n<span id=\"_CPPv3NK8IndexSet3HasE6size_t\"></span><span id=\"_CPPv2NK8IndexSet3HasE6size_t\"></span><span id=\"IndexSet::Has__sC\"></span><span class=\"target\" id=\"classIndexSet_1acfb754d4b7289297dad43d2cd5d9b0b8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK9IndexBits7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9IndexBits7GetSizeEv\">\n<span id=\"_CPPv3NK9IndexBits7GetSizeEv\"></span><span id=\"_CPPv2NK9IndexBits7GetSizeEv\"></span><span id=\"IndexBits::GetSizeC\"></span><span class=\"target\" id=\"classIndexBits_1adff4dfafecc29714d217781549084f7c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/span_utils.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange5startE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange5startE\">\n<span id=\"_CPPv3N10IndexRange5startE\"></span><span id=\"_CPPv2N10IndexRange5startE\"></span><span id=\"IndexRange::start__s\"></span><span class=\"target\" id=\"classIndexRange_1a7f4baca12c5048b87f23bd56839330fa\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">start</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map9size_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map9size_typeE\">\n<span id=\"_CPPv3N6ra_map9size_typeE\"></span><span id=\"_CPPv2N6ra_map9size_typeE\"></span><span class=\"target\" id=\"classra__map_1a3bf4c333e1205ffbe612e9d48e08de72\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK9IndexBits12GetNumRangesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9IndexBits12GetNumRangesEv\">\n<span id=\"_CPPv3NK9IndexBits12GetNumRangesEv\"></span><span id=\"_CPPv2NK9IndexBits12GetNumRangesEv\"></span><span id=\"IndexBits::GetNumRangesC\"></span><span class=\"target\" id=\"classIndexBits_1aaa5541cbef758774ef5703a26c894cfc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNumRanges</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E7Product1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7Product1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E7ProductRK6vectorI1TE\"></span><span id=\"_CPPv2I0E7ProductRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a9e56fe4f5e29bd0eebb87fbd14df11f2\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Product1TRK6vectorI1TE\" title=\"Product::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Product</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Product1TRK6vectorI1TE\" title=\"Product::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Multiply all of the contents of a vector. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet11_Index_Vals3id3E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet11_Index_Vals3id3E\">\n<span id=\"_CPPv3N8IndexSet11_Index_Vals3id3E\"></span><span id=\"_CPPv2N8IndexSet11_Index_Vals3id3E\"></span><span id=\"IndexSet::_Index_Vals::id3__s\"></span><span class=\"target\" id=\"structIndexSet_1_1__Index__Vals_1a33a37db9db316f37b3234e464c8e14d7\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id3</span></span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap9StringMapEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap9StringMapEv\">\n<span id=\"_CPPv3N9StringMap9StringMapEv\"></span><span id=\"_CPPv2N9StringMap9StringMapEv\"></span><span id=\"StringMap::StringMap\"></span><span class=\"target\" id=\"classStringMap_1ab4d4e8889249c1831d1ce691f97c5be8\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\">\n<span id=\"_CPPv3NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\"></span><span id=\"_CPPv2NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\"></span><span id=\"BloomFilter::hash_ap__unsigned-cCP.std::s.bloom_typeC\"></span><span class=\"target\" id=\"classBloomFilter_1a91fc2009fe762255430ced75bec2b17e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_ap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">remaining_length</span></span>, <a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet13IndexRangeSetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet13IndexRangeSetEv\">\n<span id=\"_CPPv3N13IndexRangeSet13IndexRangeSetEv\"></span><span id=\"_CPPv2N13IndexRangeSet13IndexRangeSetEv\"></span><span id=\"IndexRangeSet::IndexRangeSet\"></span><span class=\"target\" id=\"classIndexRangeSet_1a3cdf5f1093946d867d80acc1426640ff\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache6DeleteERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache6DeleteERK3Key\">\n<span id=\"_CPPv3N10QueueCache6DeleteERK3Key\"></span><span id=\"_CPPv2N10QueueCache6DeleteERK3Key\"></span><span id=\"QueueCache::Delete__KeyCR\"></span><span class=\"target\" id=\"classQueueCache_1ac53a5ba7dfaf821c395d98bf4aa7b3a9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Delete</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Delete element from cache. </p></dd>", "a[href=\"api/graph_utils.html#_CPPv427build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv427build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\">\n<span id=\"_CPPv327build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\"></span><span id=\"_CPPv227build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\"></span><span id=\"build_weighted_graph_random__s.s.s.s.RandomR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1aefe33643a71e9c23219ef56d94852a2a\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_weighted_graph_random</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_weight</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_weight</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">connected</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random, WEIGHTED graph with the specified number of vertices, edges, and range of edge weights. If connected is set, start by building a tree. Then connect random (unconnected) pairs of vertices until the proper number of edges are included. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap7RightIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap7RightIDE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap7RightIDE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap7RightIDE6size_t\"></span><span id=\"UnorderedIndexMap::RightID__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a0b509e42ae6f6b5ec05a9a93bb3448f2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RightID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Which ID is the right child of the ID provided? </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap5Proxy5ProxyER17UnorderedIndexMap6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap5Proxy5ProxyER17UnorderedIndexMap6size_t\">\n<span id=\"_CPPv3N17UnorderedIndexMap5Proxy5ProxyER17UnorderedIndexMap6size_t\"></span><span id=\"_CPPv2N17UnorderedIndexMap5Proxy5ProxyER17UnorderedIndexMap6size_t\"></span><span id=\"UnorderedIndexMap::Proxy::Proxy__UnorderedIndexMapR.s\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1_1Proxy_1a64421397438fad0ff234379d44679682\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_im</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph6ResizeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph6ResizeE6size_t\">\n<span id=\"_CPPv3N5Graph6ResizeE6size_t\"></span><span id=\"_CPPv2N5Graph6ResizeE6size_t\"></span><span id=\"Graph::Resize__s\"></span><span class=\"target\" id=\"classGraph_1a171c1de7d235ed9aec42e588a9f40f29\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Resize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change the number of vertices in this graph. </p></dd>", "a[href=\"api/StringMap.html#_CPPv4N8StringID7str_ptrE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8StringID7str_ptrE\">\n<span id=\"_CPPv3N8StringID7str_ptrE\"></span><span id=\"_CPPv2N8StringID7str_ptrE\"></span><span id=\"StringID::str_ptr__Ptr:ssC:\"></span><span class=\"target\" id=\"classStringID_1ad44deb3c1129c9ac33434bd7d8a49953\"></span><a class=\"reference internal\" href=\"../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">str_ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"api/hash_utils.html#_CPPv412szudzik_hash8uint32_t8uint32_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412szudzik_hash8uint32_t8uint32_t\">\n<span id=\"_CPPv312szudzik_hash8uint32_t8uint32_t\"></span><span id=\"_CPPv212szudzik_hash8uint32_t8uint32_t\"></span><span id=\"szudzik_hash__uint32_t.uint32_t\"></span><span class=\"target\" id=\"hash__utils_8hpp_1a06b7b3fbca659dae55c50ee377cf5f63\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">szudzik_hash</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">a_</span></span>, <span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b_</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Generate a unique long from a pair of ints. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue8cur_timeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue8cur_timeE\">\n<span id=\"_CPPv3N9TimeQueue8cur_timeE\"></span><span id=\"_CPPv2N9TimeQueue8cur_timeE\"></span><span id=\"TimeQueue::cur_time__double\"></span><span class=\"target\" id=\"classTimeQueue_1ab2e4868922144a89006a205d16168957\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cur_time</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><br/></dt><dd><p>What time are we up to? </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap14CalcZeroOffsetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap14CalcZeroOffsetEv\">\n<span id=\"_CPPv3NK8IndexMap14CalcZeroOffsetEv\"></span><span id=\"_CPPv2NK8IndexMap14CalcZeroOffsetEv\"></span><span id=\"IndexMap::CalcZeroOffsetC\"></span><span class=\"target\" id=\"classIndexMap_1a6473bd238a54c1eefcaee2eeb93c0384\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CalcZeroOffset</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Sift through the nodes to find where index zero maps to. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet6AppendE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet6AppendE10IndexRange\">\n<span id=\"_CPPv3N13IndexRangeSet6AppendE10IndexRange\"></span><span id=\"_CPPv2N13IndexRangeSet6AppendE10IndexRange\"></span><span id=\"IndexRangeSet::Append__IndexRange\"></span><span class=\"target\" id=\"classIndexRangeSet_1a3291281c4a4ec1765db2be0b499dca1f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add an entire range that belongs at the end of the sets. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6this_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6this_tE\">\n<span id=\"_CPPv3N6ra_map6this_tE\"></span><span id=\"_CPPv2N6ra_map6this_tE\"></span><span class=\"target\" id=\"classra__map_1ad192f38c26a59478bf6ceb84f49a9527\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">this_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Hash\"><span class=\"n\"><span class=\"pre\">Hash</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KeyEqual\"><span class=\"n\"><span class=\"pre\">KeyEqual</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Allocator\"><span class=\"n\"><span class=\"pre\">Allocator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue6InsertE1Td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue6InsertE1Td\">\n<span id=\"_CPPv3N9TimeQueue6InsertE1Td\"></span><span id=\"_CPPv2N9TimeQueue6InsertE1Td\"></span><span id=\"TimeQueue::Insert__T.double\"></span><span class=\"target\" id=\"classTimeQueue_1adafd4a8bec20fdef3c29d7b62c043abc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Insert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E9TimeQueue\" title=\"TimeQueue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_item</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">trigger_time</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new item to the TimeQueue. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set6ra_setERR6ra_set\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set6ra_setERR6ra_set\">\n<span id=\"_CPPv3N6ra_set6ra_setERR6ra_set\"></span><span id=\"_CPPv2N6ra_set6ra_setERR6ra_set\"></span><span id=\"ra_set::ra_set__ra_setRR\"></span><span class=\"target\" id=\"classra__set_1ae6b470324dd2f6b6f50880874e80a0cc\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_set6ra_setERR6ra_set\" title=\"ra_set::ra_set\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK10IndexRange11IsConnectedE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10IndexRange11IsConnectedE10IndexRange\">\n<span id=\"_CPPv3NK10IndexRange11IsConnectedE10IndexRange\"></span><span id=\"_CPPv2NK10IndexRange11IsConnectedE10IndexRange\"></span><span id=\"IndexRange::IsConnected__IndexRangeC\"></span><span class=\"target\" id=\"classIndexRange_1a0a07c06e82e510218d8c453304037215\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsConnected</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Will identify if two ranges are next to each other or overlapping. </p></dd>", "a[href=\"api/Bool.html#_CPPv4N4BooloREb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BooloREb\">\n<span id=\"_CPPv3N4BooloREb\"></span><span id=\"_CPPv2N4BooloREb\"></span><span id=\"Bool::or-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a8f7cefd8894b73d4d3b05b1a2a59dcc0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter10hash_countEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10hash_countEv\">\n<span id=\"_CPPv3N11BloomFilter10hash_countEv\"></span><span id=\"_CPPv2N11BloomFilter10hash_countEv\"></span><span id=\"BloomFilter::hash_count\"></span><span class=\"target\" id=\"classBloomFilter_1a7f294062dc7ef3f6624da47ba33608d0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_count</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NR13IndexRangeSet9GetRangesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NR13IndexRangeSet9GetRangesEv\">\n<span id=\"_CPPv3NR13IndexRangeSet9GetRangesEv\"></span><span id=\"_CPPv2NR13IndexRangeSet9GetRangesEv\"></span><span id=\"IndexRangeSet::GetRangesR\"></span><span class=\"target\" id=\"classIndexRangeSet_1a804e151d2386428e58a99dd0320ed4f4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRanges</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4NStrsERNSt7istreamER4Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NStrsERNSt7istreamER4Bool\">\n<span id=\"_CPPv3NStrsERNSt7istreamER4Bool\"></span><span id=\"_CPPv2NStrsERNSt7istreamER4Bool\"></span><span id=\"std::rshift-operator__isR.BoolR\"></span><span class=\"target\" id=\"Bool_8hpp_1a8ef0a047f6f890eabe6acd3cf49063da\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;&gt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup operator&lt;&lt; to work with ostream (must be in std to work) </p></dd>", "a[href=\"api/Graph.html#_CPPv45Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Graph\">\n<span id=\"_CPPv35Graph\"></span><span id=\"_CPPv25Graph\"></span><span id=\"Graph\"></span><span class=\"target\" id=\"classGraph\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Graph</span></span></span><br/></dt><dd><p>A graph class that maintains a set of vertices (nodes) and edges (connecting pairs of nodes) </p><p>Subclassed by WeightedGraph</p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap7RawProbE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap7RawProbE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap7RawProbE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap7RawProbE6size_t\"></span><span id=\"UnorderedIndexMap::RawProb__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a80e84677b01f4617eb477cae041a7c81\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawProb</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>What is the probability of the specified index being selected? </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\">\n<span id=\"_CPPv3I0ENK11BloomFilter13contains_noneEK13InputIteratorK13InputIterator\"></span><span id=\"_CPPv2I0ENK11BloomFilter13contains_noneEK13InputIteratorK13InputIterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1ad5689794dcd401fc9b408ed14db9b167\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_none::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains_none</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_none::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_none::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Checks whether its possible that the Bloom filter has seen none of the elements within the specified range. If so, returns <code class=\"docutils literal notranslate\"><span class=\"pre\">end</span></code>. Otherwise returns an iterator to the first element that has possible previously been added to the Bloom filter. </p></dd>", "a[href=\"api/Bool.html#_CPPv44Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Bool\">\n<span id=\"_CPPv34Bool\"></span><span id=\"_CPPv24Bool\"></span><span id=\"Bool\"></span><span class=\"target\" id=\"classBool\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bool</span></span></span><br/></dt><dd><p>A simple replacement for bool type that doesn\u2019t trip up std::vector. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap9RawAdjustE6size_tKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap9RawAdjustE6size_tKd\">\n<span id=\"_CPPv3N8IndexMap9RawAdjustE6size_tKd\"></span><span id=\"_CPPv2N8IndexMap9RawAdjustE6size_tKd\"></span><span id=\"IndexMap::RawAdjust__s.doubleC\"></span><span class=\"target\" id=\"classIndexMap_1ae9d8a3fa78d8a898b62fd33075bdcc13\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawAdjust</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adjust the weight associated with a particular index in the map. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N23CompressibleBloomFilter8compressERKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23CompressibleBloomFilter8compressERKd\">\n<span id=\"_CPPv3N23CompressibleBloomFilter8compressERKd\"></span><span id=\"_CPPv2N23CompressibleBloomFilter8compressERKd\"></span><span id=\"CompressibleBloomFilter::compress__doubleCR\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1a70dea5716a0c17112154468f2a8a383a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compress</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">percentage</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compress the Bloom filter </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4I0ENK11BloomFilter8containsEbRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK11BloomFilter8containsEbRK1T\">\n<span id=\"_CPPv3I0ENK11BloomFilter8containsERK1T\"></span><span id=\"_CPPv2I0ENK11BloomFilter8containsERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1af5966de6f5aaaa9c095f31bf00d8dd43\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter8containsEbRK1T\" title=\"BloomFilter::contains::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">t</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache14allocator_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache14allocator_typeE\">\n<span id=\"_CPPv3N5Cache14allocator_typeE\"></span><span id=\"_CPPv2N5Cache14allocator_typeE\"></span><span class=\"target\" id=\"classCache_1ae287d047884940d00bbcf4f09e866dfd\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">allocator_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::ALLOC\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></a><br/></dt><dd><p>Function to allocate new space. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap9GetWeightE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap9GetWeightE6size_t\">\n<span id=\"_CPPv3NK8IndexMap9GetWeightE6size_t\"></span><span id=\"_CPPv2NK8IndexMap9GetWeightE6size_t\"></span><span id=\"IndexMap::GetWeight__sC\"></span><span class=\"target\" id=\"classIndexMap_1a39d7cc8433d6a8916a52cbf63f0a349f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>What is the current weight of the specified index? </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBase18uninitialized_moveE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBase18uninitialized_moveE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_1a0cf6e5e179e83d829e94a45114c73f91\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_move</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_move::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move the range [I, E) into the uninitialized memory starting with \u201cDest\u201d, constructing elements as needed. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter11BloomFilterERK15BloomParameters\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11BloomFilterERK15BloomParameters\">\n<span id=\"_CPPv3N11BloomFilter11BloomFilterERK15BloomParameters\"></span><span id=\"_CPPv2N11BloomFilter11BloomFilterERK15BloomParameters\"></span><span id=\"BloomFilter::BloomFilter__BloomParametersCR\"></span><span class=\"target\" id=\"classBloomFilter_1a316698c1d13011d287ada354c23a26db\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">BloomParameters</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph8PrintSymERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph8PrintSymERNSt7ostreamE\">\n<span id=\"_CPPv3N5Graph8PrintSymERNSt7ostreamE\"></span><span id=\"_CPPv2N5Graph8PrintSymERNSt7ostreamE\"></span><span id=\"Graph::PrintSym__osR\"></span><span class=\"target\" id=\"classGraph_1adf495a5ea1b7f95e62d79a81f3a7376b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintSym</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print a symmetric graph to the provided output stream (defaulting to standard out) </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratorltERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratorltERK8Iterator\">\n<span id=\"_CPPv3NK16reference_vector8IteratorltERK8Iterator\"></span><span id=\"_CPPv2NK16reference_vector8IteratorltERK8Iterator\"></span><span id=\"reference_vector::Iterator::lt-operator__IteratorCRC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a7d2ecb9c4483645921bd8425f26de396\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet6AppendE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet6AppendE6size_t\">\n<span id=\"_CPPv3N13IndexRangeSet6AppendE6size_t\"></span><span id=\"_CPPv2N13IndexRangeSet6AppendE6size_t\"></span><span id=\"IndexRangeSet::Append__s\"></span><span class=\"target\" id=\"classIndexRangeSet_1ac816d310c246e899d751589a2a65dafd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new value that belongs at the end of the sets. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E12intersectionRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E12intersectionRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a1f5b05e51d70b526d7884d02baf5a8bd\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits6offsetE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits6offsetE\">\n<span id=\"_CPPv3N9IndexBits6offsetE\"></span><span id=\"_CPPv2N9IndexBits6offsetE\"></span><span id=\"IndexBits::offset__s\"></span><span class=\"target\" id=\"classIndexBits_1a0b05450b9b01bb0d8ae0b4779f7b0693\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">offset</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\">\n<span id=\"_CPPv3I0E5ToMapRK6vectorI1TE\"></span><span id=\"_CPPv2I0E5ToMapRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1adfe77c7f8224eb83ee314cf42f8fb5b3\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\" title=\"ToMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\" title=\"ToMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_vec</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector into a map. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap8IndexMapE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap8IndexMapE6size_t\">\n<span id=\"_CPPv3N8IndexMap8IndexMapE6size_t\"></span><span id=\"_CPPv2N8IndexMap8IndexMapE6size_t\"></span><span id=\"IndexMap::IndexMap__s\"></span><span class=\"target\" id=\"classIndexMap_1a35fc45fd4de48c9e792224a5de054879\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_items</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct an IndexMap where num_items is the maximum number of items that can be placed into the data structure. All item weights default to zero. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv415SmallVectorBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415SmallVectorBase\">\n<span id=\"_CPPv315SmallVectorBase\"></span><span id=\"_CPPv215SmallVectorBase\"></span><span id=\"SmallVectorBase\"></span><span class=\"target\" id=\"classSmallVectorBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><br/></dt><dd><p>This is all the non-templated stuff common to all SmallVectors. </p><p>Subclassed by SmallVectorTemplateCommon&lt; T, typename &gt;, SmallVectorTemplateCommon&lt; T &gt;</p></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK13IndexRangeSet3HasE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13IndexRangeSet3HasE6size_t\">\n<span id=\"_CPPv3NK13IndexRangeSet3HasE6size_t\"></span><span id=\"_CPPv2NK13IndexRangeSet3HasE6size_t\"></span><span id=\"IndexRangeSet::Has__sC\"></span><span class=\"target\" id=\"classIndexRangeSet_1a130395be6242047898c1edf37ca3373e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph11AddEdgePairE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph11AddEdgePairE6size_t6size_t\">\n<span id=\"_CPPv3N5Graph11AddEdgePairE6size_t6size_t\"></span><span id=\"_CPPv2N5Graph11AddEdgePairE6size_t6size_t\"></span><span id=\"Graph::AddEdgePair__s.s\"></span><span class=\"target\" id=\"classGraph_1a5379f8408d06126d644cbde846796ad6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddEdgePair</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a pair of edges between two vertices (in both directions) </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map10value_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map10value_typeE\">\n<span id=\"_CPPv3N11valsort_map10value_typeE\"></span><span id=\"_CPPv2N11valsort_map10value_typeE\"></span><span class=\"target\" id=\"classvalsort__map_1aa266bbd2928fdaff106fbc942aecd20a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11valsort_map\" title=\"valsort_map::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11valsort_map\" title=\"valsort_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMapixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMapixE6size_t\">\n<span id=\"_CPPv3NK8IndexMapixE6size_t\"></span><span id=\"_CPPv2NK8IndexMapixE6size_t\"></span><span id=\"IndexMap::subscript-operator__sC\"></span><span class=\"target\" id=\"classIndexMap_1aa636d12c6b74a05564119d5f5c6d82f6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4IDpEN6ra_map7emplaceE6size_tDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN6ra_map7emplaceE6size_tDpRR2Ts\">\n<span id=\"_CPPv3IDpEN6ra_map7emplaceEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN6ra_map7emplaceEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classra__map_1afe926ae3654b253315bf7ca9eb47bc6b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">emplace</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN6ra_map7emplaceE6size_tDpRR2Ts\" title=\"ra_map::emplace::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a new value in place in a container container; return position. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet4typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet4typeE\">\n<span id=\"_CPPv3N8IndexSet4typeE\"></span><span id=\"_CPPv2N8IndexSet4typeE\"></span><span id=\"IndexSet::type__index_t\"></span><span class=\"target\" id=\"classIndexSet_1a27fd05ef7898b421b9acf244cf463e77\"></span><a class=\"reference internal\" href=\"#_CPPv4N8IndexSet7index_tE\" title=\"IndexSet::index_t\"><span class=\"n\"><span class=\"pre\">index_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8IndexSet7index_tE\" title=\"IndexSet::index_t\"><span class=\"n\"><span class=\"pre\">index_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N8IndexSet7index_t4NONEE\" title=\"IndexSet::index_t::NONE\"><span class=\"n\"><span class=\"pre\">NONE</span></span></a><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map4cendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map4cendEv\">\n<span id=\"_CPPv3N11valsort_map4cendEv\"></span><span id=\"_CPPv2N11valsort_map4cendEv\"></span><span id=\"valsort_map::cend\"></span><span class=\"target\" id=\"classvalsort__map_1a25eb528a0fb18e9ca9f38d9c8b211fd1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache8key_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache8key_typeE\">\n<span id=\"_CPPv3N5Cache8key_typeE\"></span><span id=\"_CPPv2N5Cache8key_typeE\"></span><span class=\"target\" id=\"classCache_1a98ae073a4c3439547f34c91382d0d264\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><br/></dt><dd><p>Type we are using to look up values. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E10HeapInsertvR6vectorI1TE1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10HeapInsertvR6vectorI1TE1T\">\n<span id=\"_CPPv3I0E10HeapInsertR6vectorI1TE1T\"></span><span id=\"_CPPv2I0E10HeapInsertR6vectorI1TE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ae969dc9a73886eab921014c8affc76ca\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HeapInsert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10HeapInsertvR6vectorI1TE1T\" title=\"HeapInsert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10HeapInsertvR6vectorI1TE1T\" title=\"HeapInsert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a new element into a heap. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vectoraSERK16reference_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vectoraSERK16reference_vector\">\n<span id=\"_CPPv3N16reference_vectoraSERK16reference_vector\"></span><span id=\"_CPPv2N16reference_vectoraSERK16reference_vector\"></span><span id=\"reference_vector::assign-operator__reference_vectorCR\"></span><span class=\"target\" id=\"classreference__vector_1ae5abb363263851399d1fa75c131688d9\"></span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector6this_tE\" title=\"reference_vector::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase8grow_podEPv6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase8grow_podEPv6size_t6size_t\">\n<span id=\"_CPPv3N15SmallVectorBase8grow_podEPv6size_t6size_t\"></span><span id=\"_CPPv2N15SmallVectorBase8grow_podEPv6size_t6size_t\"></span><span id=\"SmallVectorBase::grow_pod__voidP.s.s\"></span><span class=\"target\" id=\"classSmallVectorBase_1a5ba96e7471231416524a01151b6aad5a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow_pod</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">FirstEl</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinCapacity</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">TSize</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This is an implementation of the grow() method which only works on POD-like data types and is out of line to reduce code duplication. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVectorD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectorD0Ev\">\n<span id=\"_CPPv3N11SmallVectorD0Ev\"></span><span id=\"_CPPv2N11SmallVectorD0Ev\"></span><span id=\"SmallVector::~SmallVector\"></span><span class=\"target\" id=\"classSmallVector_1a5a28e9af4d04f6b8a973d279dd84f1d7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4I0DpE21AlignedCharArrayUnion\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE21AlignedCharArrayUnion\">\n<span id=\"_CPPv3I0DpE21AlignedCharArrayUnion\"></span><span id=\"_CPPv2I0DpE21AlignedCharArrayUnion\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAlignedCharArrayUnion\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlignedCharArrayUnion</span></span></span><br/></dt><dd><p>A suitably aligned and sized character array member which can hold elements of any type.</p><p>These types may be arrays, structs, or any other types. This exposes a <code class=\"docutils literal notranslate\"><span class=\"pre\">buffer</span></code> member which can be used as suitable storage for a placement new of any of these types. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter10table_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10table_typeE\">\n<span id=\"_CPPv3N11BloomFilter10table_typeE\"></span><span id=\"_CPPv2N11BloomFilter10table_typeE\"></span><span id=\"BloomFilter::table_type\"></span><span class=\"target\" id=\"classBloomFilter_1a52bdac3bb3f8a70160024b81232ae6ce\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">table_type</span></span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph5MergeERK5Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph5MergeERK5Graph\">\n<span id=\"_CPPv3N5Graph5MergeERK5Graph\"></span><span id=\"_CPPv2N5Graph5MergeERK5Graph\"></span><span id=\"Graph::Merge__GraphCR\"></span><span class=\"target\" id=\"classGraph_1a42b78f23fd73f69172c42d4463be03da\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Merge</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_graph</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge a second graph into this one. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratormlEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratormlEv\">\n<span id=\"_CPPv3NK16reference_vector8IteratormlEv\"></span><span id=\"_CPPv2NK16reference_vector8IteratormlEv\"></span><span id=\"reference_vector::Iterator::mul-operatorC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a99fa64b570f1f8ef568f94dc698e4df9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">*</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a const reference to the element pointed to by this iterator. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector5vec_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector5vec_tE\">\n<span id=\"_CPPv3N16reference_vector5vec_tE\"></span><span id=\"_CPPv2N16reference_vector5vec_tE\"></span><span class=\"target\" id=\"classreference__vector_1af58adfbe16699965020ec6684e1093ff\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vec_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange10IndexRangeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange10IndexRangeE6size_t\">\n<span id=\"_CPPv3N10IndexRange10IndexRangeE6size_t\"></span><span id=\"_CPPv2N10IndexRange10IndexRangeE6size_t\"></span><span id=\"IndexRange::IndexRange__s\"></span><span class=\"target\" id=\"classIndexRange_1ab45f224d512011d62f88c457466c45e2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map4cendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map4cendEv\">\n<span id=\"_CPPv3NK6ra_map4cendEv\"></span><span id=\"_CPPv2NK6ra_map4cendEv\"></span><span id=\"ra_map::cendC\"></span><span class=\"target\" id=\"classra__map_1a84a54740a80ad22b514f9728eb63cd2f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4I0E16reference_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16reference_vector\">\n<span id=\"_CPPv3I0E16reference_vector\"></span><span id=\"_CPPv2I0E16reference_vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classreference__vector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache3GetERK3KeyRKNSt8functionIF5ValueRK3KeyEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache3GetERK3KeyRKNSt8functionIF5ValueRK3KeyEEE\">\n<span id=\"_CPPv3N10QueueCache3GetERK3KeyRKNSt8functionIF5ValueRK3KeyEEE\"></span><span id=\"_CPPv2N10QueueCache3GetERK3KeyRKNSt8functionIF5ValueRK3KeyEEE\"></span><span class=\"target\" id=\"classQueueCache_1afdd74bbede8424bc4aae5eb191cc86fb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n\"><span class=\"pre\">k</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache10DefaultFunERK3Key\" title=\"QueueCache::DefaultFun\"><span class=\"n\"><span class=\"pre\">DefaultFun</span></span></a><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get an element from cache. By default, this method throws an exception if the element is not in cache. This behaviour can be changed by specifying a callable as a second parameter, which must return a Value. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph5MergeERK13WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph5MergeERK13WeightedGraph\">\n<span id=\"_CPPv3N13WeightedGraph5MergeERK13WeightedGraph\"></span><span id=\"_CPPv2N13WeightedGraph5MergeERK13WeightedGraph\"></span><span id=\"WeightedGraph::Merge__WeightedGraphCR\"></span><span class=\"target\" id=\"classWeightedGraph_1abfa1454cc14ae26289a5d438634bb690\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Merge</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_graph</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge two WeightedGraphs into one. </p></dd>", "a[href=\"api/tuple_utils.html#_CPPv4N9TupleHash5fun_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TupleHash5fun_tE\">\n<span id=\"_CPPv3N9TupleHash5fun_tE\"></span><span id=\"_CPPv2N9TupleHash5fun_tE\"></span><span class=\"target\" id=\"structTupleHash_1af32d6660756d6f1407003bd125270cf3\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE9TupleHash\" title=\"TupleHash::TYPES\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4I00000E6ra_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000E6ra_map\">\n<span id=\"_CPPv3I00000E6ra_map\"></span><span id=\"_CPPv2I00000E6ra_map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hash</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KeyEqual</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Allocator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classra__map\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></span><br/></dt><dd><p>This class uses a combination of a hashtable (std::unordered_map) and vector to lookup insert, lookup, and delete values in constant time, while still being able to step through all values (albeit in an arbitrary order).</p></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK13IndexRangeSet6GetEndEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13IndexRangeSet6GetEndEv\">\n<span id=\"_CPPv3NK13IndexRangeSet6GetEndEv\"></span><span id=\"_CPPv2NK13IndexRangeSet6GetEndEv\"></span><span id=\"IndexRangeSet::GetEndC\"></span><span class=\"target\" id=\"classIndexRangeSet_1a75ec0a7a2e5022406bb8499d328090c8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEnd</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6ra_mapERR6ra_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6ra_mapERR6ra_map\">\n<span id=\"_CPPv3N6ra_map6ra_mapERR6ra_map\"></span><span id=\"_CPPv2N6ra_map6ra_mapERR6ra_map\"></span><span id=\"ra_map::ra_map__ra_mapRR\"></span><span class=\"target\" id=\"classra__map_1abf9451880df1b75d80a2a2654428579c\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map6ra_mapERR6ra_map\" title=\"ra_map::ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5CacheaSERR5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5CacheaSERR5Cache\">\n<span id=\"_CPPv3N5CacheaSERR5Cache\"></span><span id=\"_CPPv2N5CacheaSERR5Cache\"></span><span id=\"Cache::assign-operator__CacheRR\"></span><span class=\"target\" id=\"classCache_1a068176399fa9d8686618050c9660b333\"></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv415build_graph_dag6size_t6size_tR6Randomb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415build_graph_dag6size_t6size_tR6Randomb\">\n<span id=\"_CPPv315build_graph_dag6size_t6size_tR6Randomb\"></span><span id=\"_CPPv215build_graph_dag6size_t6size_tR6Randomb\"></span><span id=\"build_graph_dag__s.s.RandomR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1aa6418dfc15940c8acea806cfa71ec298\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_dag</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">connected</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random, graph with the specified number of vertices and edges. If connected is set, start by building a tree. Then connect random (unconnected) pairs of vertices until the proper number of edges are included. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap9RawWeightE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap9RawWeightE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap9RawWeightE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap9RawWeightE6size_t\"></span><span id=\"UnorderedIndexMap::RawWeight__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1abe19f18694a1df1cc071ba4e1a8384a9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>What is the current weight of the specified index? </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMappLER17UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMappLER17UnorderedIndexMap\">\n<span id=\"_CPPv3N17UnorderedIndexMappLER17UnorderedIndexMap\"></span><span id=\"_CPPv2N17UnorderedIndexMappLER17UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap::add-assign-operator__UnorderedIndexMapR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1ae309b3bd7f2232dfa38b3dde8480d6f6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">+=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add the weights in another index map to this one. </p></dd>", "a[href=\"api/Cache.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Cache.hpp<a class=\"headerlink\" href=\"#cache-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>similar to an std::unordered_map, but all lookups come with a function to generate the result should the lookup fail. </p>", "a[href=\"api/IndexSet.html#_CPPv4NK9IndexBits8GetStartEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9IndexBits8GetStartEv\">\n<span id=\"_CPPv3NK9IndexBits8GetStartEv\"></span><span id=\"_CPPv2NK9IndexBits8GetStartEv\"></span><span id=\"IndexBits::GetStartC\"></span><span class=\"target\" id=\"classIndexBits_1abfab2c2936307fdbbc3fe4375dfecb52\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetStart</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache12cache_list_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache12cache_list_tE\">\n<span id=\"_CPPv3N10QueueCache12cache_list_tE\"></span><span id=\"_CPPv2N10QueueCache12cache_list_tE\"></span><span class=\"target\" id=\"classQueueCache_1a205e9a2ddaaa29ad2cfb0837e86cf355\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet11_Index_Vals3id2E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet11_Index_Vals3id2E\">\n<span id=\"_CPPv3N8IndexSet11_Index_Vals3id2E\"></span><span id=\"_CPPv2N8IndexSet11_Index_Vals3id2E\"></span><span id=\"IndexSet::_Index_Vals::id2__s\"></span><span class=\"target\" id=\"structIndexSet_1_1__Index__Vals_1abfe3fb78fb13abc33930e13306b5b2c6\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id2</span></span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map15const_referenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map15const_referenceE\">\n<span id=\"_CPPv3N6ra_map15const_referenceE\"></span><span id=\"_CPPv2N6ra_map15const_referenceE\"></span><span class=\"target\" id=\"classra__map_1a9d538c74d89ad451afbe0dbd1872f704\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map10value_typeE\" title=\"ra_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap9AdjustAllEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap9AdjustAllEd\">\n<span id=\"_CPPv3N17UnorderedIndexMap9AdjustAllEd\"></span><span id=\"_CPPv2N17UnorderedIndexMap9AdjustAllEd\"></span><span id=\"UnorderedIndexMap::AdjustAll__double\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a518187ce834f558660ad208e1f5330a6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AdjustAll</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adjust all index weights to the single weight provided. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph6ResizeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph6ResizeE6size_t\">\n<span id=\"_CPPv3N13WeightedGraph6ResizeE6size_t\"></span><span id=\"_CPPv2N13WeightedGraph6ResizeE6size_t\"></span><span id=\"WeightedGraph::Resize__s\"></span><span class=\"target\" id=\"classWeightedGraph_1a62bb65ac35384856f74eeb5d1376a2cf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Resize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter6insertERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter6insertERKNSt6stringE\">\n<span id=\"_CPPv3N11BloomFilter6insertERKNSt6stringE\"></span><span id=\"_CPPv2N11BloomFilter6insertERKNSt6stringE\"></span><span id=\"BloomFilter::insert__ssCR\"></span><span class=\"target\" id=\"classBloomFilter_1a9d4f3ab39f0f15693c773c5bee16ebe5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap6LeftIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap6LeftIDE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap6LeftIDE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap6LeftIDE6size_t\"></span><span id=\"UnorderedIndexMap::LeftID__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aa57eaadec290da22d91814b470b4b51f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LeftID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Which ID is the left child of the ID provided? </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E8PopFront1TR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8PopFront1TR6vectorI1TE\">\n<span id=\"_CPPv3I0E8PopFrontR6vectorI1TE\"></span><span id=\"_CPPv2I0E8PopFrontR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a0ad38bf93e634290ce5d76fb6dc99e15\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E8PopFront1TR6vectorI1TE\" title=\"PopFront::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PopFront</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8PopFront1TR6vectorI1TE\" title=\"PopFront::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove and return the first element of a vector. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\"></span><span id=\"SmallVector::SmallVector__SmallVectorImpl:T:RR\"></span><span class=\"target\" id=\"classSmallVector_1a20bd8e3c47fd908f0ba817a3288d5c4a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon4rendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon4rendEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon4rendEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon4rendEv\"></span><span id=\"SmallVectorTemplateCommon::rendC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a0803bb21434cceab635a6240c1e470aa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\" title=\"SmallVectorTemplateCommon::const_reverse_iterator\"><span class=\"n\"><span class=\"pre\">const_reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits9IndexBitsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits9IndexBitsEv\">\n<span id=\"_CPPv3N9IndexBits9IndexBitsEv\"></span><span id=\"_CPPv2N9IndexBits9IndexBitsEv\"></span><span id=\"IndexBits::IndexBits\"></span><span class=\"target\" id=\"classIndexBits_1a00d5f33365cd7e4f5d1542232314bb7b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString6AppendERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString6AppendERKNSt6stringE\">\n<span id=\"_CPPv3N13DynamicString6AppendERKNSt6stringE\"></span><span id=\"_CPPv2N13DynamicString6AppendERKNSt6stringE\"></span><span id=\"DynamicString::Append__ssCR\"></span><span class=\"target\" id=\"classDynamicString_1a2e5104718f14e901dcd70343dde1ae44\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413DynamicString\" title=\"DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_text</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add new std::string text to the end of the DynamicString. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph5GraphERR5Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph5GraphERR5Graph\">\n<span id=\"_CPPv3N5Graph5GraphERR5Graph\"></span><span id=\"_CPPv2N5Graph5GraphERR5Graph\"></span><span id=\"Graph::Graph__GraphRR\"></span><span class=\"target\" id=\"classGraph_1ade809d353b640b9c2773d71d4f57d57d\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Graph</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N5Graph5GraphERR5Graph\" title=\"Graph::Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Move constructor. </p></dd>", "a[href=\"api/Bool.html#_CPPv4N4BoolaNEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolaNEb\">\n<span id=\"_CPPv3N4BoolaNEb\"></span><span id=\"_CPPv2N4BoolaNEb\"></span><span id=\"Bool::and-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a753eee2f7e7f51fe38ed35f1f81f0c6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compound assignement operators using Bool as lvalue. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set6id_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set6id_mapE\">\n<span id=\"_CPPv3N6ra_set6id_mapE\"></span><span id=\"_CPPv2N6ra_set6id_mapE\"></span><span id=\"ra_set::id_map__map:T.s:\"></span><span class=\"target\" id=\"classra__set_1a1b1165527a90b6a92920b7089dbf1c6c\"></span><a class=\"reference internal\" href=\"../base/api/map.html#_CPPv4I00DpE3map\" title=\"map\"><span class=\"n\"><span class=\"pre\">map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id_map</span></span></span><br/></dt><dd><p>A map of where to find values in vector. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E3Sum1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Sum1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E3SumRK6vectorI1TE\"></span><span id=\"_CPPv2I0E3SumRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ace91b531d342555583ad92b013eb1067\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Sum1TRK6vectorI1TE\" title=\"Sum::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sum</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Sum1TRK6vectorI1TE\" title=\"Sum::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sum all of the contents of a vector. </p></dd>", "a[href=\"api/Graph.html#_CPPv413WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413WeightedGraph\">\n<span id=\"_CPPv313WeightedGraph\"></span><span id=\"_CPPv213WeightedGraph\"></span><span id=\"WeightedGraph\"></span><span class=\"target\" id=\"classWeightedGraph\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><br/></dt><dd><p>A graph class that maintains a set of vertices (nodes), edges (connecting pairs of nodes), and edge weights </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap13needs_refreshE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap13needs_refreshE\">\n<span id=\"_CPPv3N8IndexMap13needs_refreshE\"></span><span id=\"_CPPv2N8IndexMap13needs_refreshE\"></span><span id=\"IndexMap::needs_refresh__b\"></span><span class=\"target\" id=\"classIndexMap_1a9b770fdd62ea9ecc7fac92a1d7655182\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">needs_refresh</span></span></span><br/></dt><dd><p>Are tree weights out of date? </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMapixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMapixE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMapixE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMapixE6size_t\"></span><span id=\"UnorderedIndexMap::subscript-operator__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a98b8591301595b43e3ad3bc8979c1ceb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv425build_weighted_graph_tree6size_t6size_t6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv425build_weighted_graph_tree6size_t6size_t6size_tR6Random\">\n<span id=\"_CPPv325build_weighted_graph_tree6size_t6size_t6size_tR6Random\"></span><span id=\"_CPPv225build_weighted_graph_tree6size_t6size_t6size_tR6Random\"></span><span id=\"build_weighted_graph_tree__s.s.s.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a55df2803a637ce5c3f62edfe3dd25b00\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_weighted_graph_tree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_weight</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_weight</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random WEIGHTED tree graph (new vertices are repeatedly attached to a random position in a tree as it is constructed.) </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVectoraSERR11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSERR11SmallVector\">\n<span id=\"_CPPv3N11SmallVectoraSERR11SmallVector\"></span><span id=\"_CPPv2N11SmallVectoraSERR11SmallVector\"></span><span id=\"SmallVector::assign-operator__SmallVectorRR\"></span><span class=\"target\" id=\"classSmallVector_1acdb292d7d3cae024f219405ffe8a50a0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE23SmallVectorTemplateBaseE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE23SmallVectorTemplateBaseE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE23SmallVectorTemplateBaseE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE23SmallVectorTemplateBaseE6size_t\"></span><span id=\"SmallVectorTemplateBase:T.true:::SmallVectorTemplateBase__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a343c5866634a7eccadd737ab8f09f77d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\">\n<span id=\"_CPPv3I00E7FindRefRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span id=\"_CPPv2I00E7FindRefRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a4de0d9947945a8c3110beb8b9e594298\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"FindRef::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"FindRef::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"FindRef::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">mapped_type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dval</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map and element, run find() member function, and return a reference to the result found (or default value if no results found). </p></dd>", "a[href=\"api/graph_utils.html#_CPPv422build_graph_clique_set6size_t6size_tR6Randomd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv422build_graph_clique_set6size_t6size_tR6Randomd\">\n<span id=\"_CPPv322build_graph_clique_set6size_t6size_tR6Randomd\"></span><span id=\"_CPPv222build_graph_clique_set6size_t6size_tR6Randomd\"></span><span id=\"build_graph_clique_set__s.s.RandomR.double\"></span><span class=\"target\" id=\"graph__utils_8hpp_1ad9a0b182bfc05519644c82f198f5f34d\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_clique_set</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">clique_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">clique_count</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extra_prob</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.5</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a set of cliques (such that one member of each can be part of an independent set) and then links them together </p></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString3SetE6size_tRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString3SetE6size_tRKNSt6stringE\">\n<span id=\"_CPPv3N13DynamicString3SetE6size_tRKNSt6stringE\"></span><span id=\"_CPPv2N13DynamicString3SetE6size_tRKNSt6stringE\"></span><span id=\"DynamicString::Set__s.ssCR\"></span><span class=\"target\" id=\"classDynamicString_1acb65a3131d1984e91df89203c5cb9af4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413DynamicString\" title=\"DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Set</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_text</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the value of a specified component to the provided std::string text. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap7GetSizeEv\">\n<span id=\"_CPPv3NK8IndexMap7GetSizeEv\"></span><span id=\"_CPPv2NK8IndexMap7GetSizeEv\"></span><span id=\"IndexMap::GetSizeC\"></span><span class=\"target\" id=\"classIndexMap_1a1478e2ddfa45da41da38ea7b62968215\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many indices are in this map? </p></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMapixERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMapixERKNSt6stringE\">\n<span id=\"_CPPv3N9StringMapixERKNSt6stringE\"></span><span id=\"_CPPv2N9StringMapixERKNSt6stringE\"></span><span id=\"StringMap::subscript-operator__ssCR\"></span><span class=\"target\" id=\"classStringMap_1a9b4ccba2aa500f0651bd50097ae11a46\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E9set_unionRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E9set_unionRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a161397f90d067faced17e696bd025f96\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vectorixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vectorixE6size_t\">\n<span id=\"_CPPv3N16reference_vectorixE6size_t\"></span><span id=\"_CPPv2N16reference_vectorixE6size_t\"></span><span id=\"reference_vector::subscript-operator__s\"></span><span class=\"target\" id=\"classreference__vector_1acf0b7176bbf765e8fd667fd889b82c77\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00E25SmallVectorTemplateCommon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E25SmallVectorTemplateCommon\">\n<span id=\"_CPPv3I00E25SmallVectorTemplateCommon\"></span><span id=\"_CPPv2I00E25SmallVectorTemplateCommon\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateCommon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv415SmallVectorBase\" title=\"SmallVectorBase\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></a><br/></dt><dd><p>This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD. The extra dummy template argument is used by ArrayRef to avoid unnecessarily requiring T to be complete. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap12ToExternalIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap12ToExternalIDE6size_t\">\n<span id=\"_CPPv3NK8IndexMap12ToExternalIDE6size_t\"></span><span id=\"_CPPv2NK8IndexMap12ToExternalIDE6size_t\"></span><span id=\"IndexMap::ToExternalID__sC\"></span><span class=\"target\" id=\"classIndexMap_1a346d46c2dc9b3a08806d407216266f7f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToExternalID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Convert and internal position to the item ID to which it refers. </p></dd>", "a[href=\"api/TimeQueue.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TimeQueue.hpp<a class=\"headerlink\" href=\"#timequeue-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A priority queue for timings, always marching forward. </p><p>\nA TimeQueue maintains a fast priority queue where a user inserts a set of items with a time that they should be triggered and can request information of which comes next.</p>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph11AddEdgePairE6size_t6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph11AddEdgePairE6size_t6size_td\">\n<span id=\"_CPPv3N13WeightedGraph11AddEdgePairE6size_t6size_td\"></span><span id=\"_CPPv2N13WeightedGraph11AddEdgePairE6size_t6size_td\"></span><span id=\"WeightedGraph::AddEdgePair__s.s.double\"></span><span class=\"target\" id=\"classWeightedGraph_1a2f47d1e19134c712bf0feea36ec951ba\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddEdgePair</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>When Adding an edge pair, must also provide a weight. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange10IndexRangeERK10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange10IndexRangeERK10IndexRange\">\n<span id=\"_CPPv3N10IndexRange10IndexRangeERK10IndexRange\"></span><span id=\"_CPPv2N10IndexRange10IndexRangeERK10IndexRange\"></span><span id=\"IndexRange::IndexRange__IndexRangeCR\"></span><span class=\"target\" id=\"classIndexRange_1abb7d455bee55cf913e8a4c8850449a63\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10IndexRange10IndexRangeERK10IndexRange\" title=\"IndexRange::IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK15SmallVectorBase5emptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15SmallVectorBase5emptyEv\">\n<span id=\"_CPPv3NK15SmallVectorBase5emptyEv\"></span><span id=\"_CPPv2NK15SmallVectorBase5emptyEv\"></span><span id=\"SmallVectorBase::emptyC\"></span><span class=\"target\" id=\"classSmallVectorBase_1af081190de1d0bb6e81abd4a4a518f265\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase6BeginXE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase6BeginXE\">\n<span id=\"_CPPv3N15SmallVectorBase6BeginXE\"></span><span id=\"_CPPv2N15SmallVectorBase6BeginXE\"></span><span id=\"SmallVectorBase::BeginX__voidP\"></span><span class=\"target\" id=\"classSmallVectorBase_1a195b52bcbf3489bd687dfa9af5f7191f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BeginX</span></span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4I0E9StringMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9StringMap\">\n<span id=\"_CPPv3I0E9StringMap\"></span><span id=\"_CPPv2I0E9StringMap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classStringMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></span><br/></dt><dd><p>A class that wraps maps of strings to allow for effective optimizations. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0EN7TypeMap5eraseE9size_typev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN7TypeMap5eraseE9size_typev\">\n<span id=\"_CPPv3I0EN7TypeMap5eraseEv\"></span><span id=\"_CPPv2I0EN7TypeMap5eraseEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1a5a5dfe6f3035038c7a9f1ff287901de1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9size_typeE\" title=\"TypeMap::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">erase</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap5ProxycvdEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap5ProxycvdEv\">\n<span id=\"_CPPv3NK17UnorderedIndexMap5ProxycvdEv\"></span><span id=\"_CPPv2NK17UnorderedIndexMap5ProxycvdEv\"></span><span id=\"UnorderedIndexMap::Proxy::castto-double-operatorC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1_1Proxy_1aa283185b1dd66537eff63087350a7c7a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap5emptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap5emptyEv\">\n<span id=\"_CPPv3NK7TypeMap5emptyEv\"></span><span id=\"_CPPv2NK7TypeMap5emptyEv\"></span><span id=\"TypeMap::emptyC\"></span><span class=\"target\" id=\"classTypeMap_1a554073aa9ba13f16cbda2f2e2d976175\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap5Proxy9index_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap5Proxy9index_mapE\">\n<span id=\"_CPPv3N8IndexMap5Proxy9index_mapE\"></span><span id=\"_CPPv2N8IndexMap5Proxy9index_mapE\"></span><span id=\"IndexMap::Proxy::index_map__IndexMapR\"></span><span class=\"target\" id=\"classIndexMap_1_1Proxy_1a3884b850d37df23b1bb102e17079f6b8\"></span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">index_map</span></span></span><br/></dt><dd><p>Which index map is this proxy from? </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange3endE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange3endE\">\n<span id=\"_CPPv3N10IndexRange3endE\"></span><span id=\"_CPPv2N10IndexRange3endE\"></span><span id=\"IndexRange::end__s\"></span><span class=\"target\" id=\"classIndexRange_1a6a7beac4da1c2a424a8a5fabfae3747b\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon6rbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon6rbeginEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"SmallVectorTemplateCommon::rbeginC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ad2bec2897f0f55500350d2ccdc52d382\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\" title=\"SmallVectorTemplateCommon::const_reverse_iterator\"><span class=\"n\"><span class=\"pre\">const_reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap8capacityEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap8capacityEv\">\n<span id=\"_CPPv3N12SmallFifoMap8capacityEv\"></span><span id=\"_CPPv2N12SmallFifoMap8capacityEv\"></span><span id=\"SmallFifoMap::capacityCE\"></span><span class=\"target\" id=\"classSmallFifoMap_1abc1a7bc1731c33e33344289c487e7307\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>How many key-value pairs can the cache contain? </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap9num_nodesE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap9num_nodesE\">\n<span id=\"_CPPv3N17UnorderedIndexMap9num_nodesE\"></span><span id=\"_CPPv2N17UnorderedIndexMap9num_nodesE\"></span><span id=\"UnorderedIndexMap::num_nodes__s\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a039f7fd9055da6f2531322555deca46b\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">num_nodes</span></span></span><br/></dt><dd><p>Num internal nodes to organize items (num_items-1) </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\">\n<span id=\"_CPPv3I00E8FindEvalRK6vectorI1TERK3FUN6size_t\"></span><span id=\"_CPPv2I00E8FindEvalRK6vectorI1TERK3FUN6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a0550b47bed442410c7921b63c92d3b3c\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindEval</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\" title=\"FindEval::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\" title=\"FindEval::FUN\"><span class=\"n\"><span class=\"pre\">FUN</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the first index where the provided function returns true; return -1 otherwise. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0ENK7TypeMap5countE6size_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK7TypeMap5countE6size_tv\">\n<span id=\"_CPPv3I0ENK7TypeMap5countEv\"></span><span id=\"_CPPv2I0ENK7TypeMap5countEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1a2e8862d150f88c589dca34abfcfff0ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">count</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t6size_t\">\n<span id=\"_CPPv3I0E8RemoveAtR6vectorI1TE6size_t6size_t\"></span><span id=\"_CPPv2I0E8RemoveAtR6vectorI1TE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1accc468b1ecf80373cbf5f89e46a12b1e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t6size_t\" title=\"RemoveAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">count</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove values starting at an index. </p></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache5EraseERK3KEY\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5EraseERK3KEY\">\n<span id=\"_CPPv3N5Cache5EraseERK3KEY\"></span><span id=\"_CPPv2N5Cache5EraseERK3KEY\"></span><span id=\"Cache::Erase__KEYCR\"></span><span class=\"target\" id=\"classCache_1a595eda448926c629183decbf0a416a75\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Erase</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">k</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Erase a specific entry from cache. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap8ParentIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap8ParentIDE6size_t\">\n<span id=\"_CPPv3NK8IndexMap8ParentIDE6size_t\"></span><span id=\"_CPPv2NK8IndexMap8ParentIDE6size_t\"></span><span id=\"IndexMap::ParentID__sC\"></span><span class=\"target\" id=\"classIndexMap_1a7aaba11af573a162e86219267d7ce74a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ParentID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Which ID is the parent of the ID provided? </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map8layout_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map8layout_tE\">\n<span id=\"_CPPv3N6ra_map8layout_tE\"></span><span id=\"_CPPv2N6ra_map8layout_tE\"></span><span class=\"target\" id=\"classra__map_1a3b3d216774d08641790779d97367b191\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">layout_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/unordered_map.html#_CPPv4I00DpE13unordered_map\" title=\"unordered_map\"><span class=\"n\"><span class=\"pre\">unordered_map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Hash\"><span class=\"n\"><span class=\"pre\">Hash</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KeyEqual\"><span class=\"n\"><span class=\"pre\">KeyEqual</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMapmIER17UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMapmIER17UnorderedIndexMap\">\n<span id=\"_CPPv3N17UnorderedIndexMapmIER17UnorderedIndexMap\"></span><span id=\"_CPPv2N17UnorderedIndexMapmIER17UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap::sub-assign-operator__UnorderedIndexMapR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1ac5376acc813880b54ba151abefa00c92\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">-=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Substract the weights from another index map from this one. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommonixE9size_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommonixE9size_type\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"SmallVectorTemplateCommon::subscript-operator__size_typeC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a19208581995e8616a3ee8a68e680bff9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\" title=\"SmallVectorTemplateCommon::const_reference\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">idx</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter13effective_fppEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter13effective_fppEv\">\n<span id=\"_CPPv3NK11BloomFilter13effective_fppEv\"></span><span id=\"_CPPv2NK11BloomFilter13effective_fppEv\"></span><span id=\"BloomFilter::effective_fppC\"></span><span class=\"target\" id=\"classBloomFilter_1a7016bd51a78a530ca9625219341ea203\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">effective_fpp</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Calculate effective false positive probability. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap6cbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap6cbeginEv\">\n<span id=\"_CPPv3NK12SmallFifoMap6cbeginEv\"></span><span id=\"_CPPv2NK12SmallFifoMap6cbeginEv\"></span><span id=\"SmallFifoMap::cbeginC\"></span><span class=\"target\" id=\"classSmallFifoMap_1a2a778bfa354eb8e5792b8924249c5951\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap14const_iteratorE\" title=\"SmallFifoMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\">\n<span id=\"_CPPv3I0E6insertRNSt3setI1TEERKNSt3setI1TEE\"></span><span id=\"_CPPv2I0E6insertRNSt3setI1TEERKNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1ad8d2198a8bda743a036f342219394c79\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\" title=\"insert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\" title=\"insert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert the full contents of s2 into s1. </p></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph10GetEdgeSetE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph10GetEdgeSetE6size_t\">\n<span id=\"_CPPv3NK5Graph10GetEdgeSetE6size_t\"></span><span id=\"_CPPv2NK5Graph10GetEdgeSetE6size_t\"></span><span id=\"Graph::GetEdgeSet__sC\"></span><span class=\"target\" id=\"classGraph_1addaa88a45859706b347f4950df88b351\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEdgeSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the set of nodes that a specified node is connected to. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph8PrintSymERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph8PrintSymERNSt7ostreamE\">\n<span id=\"_CPPv3N13WeightedGraph8PrintSymERNSt7ostreamE\"></span><span id=\"_CPPv2N13WeightedGraph8PrintSymERNSt7ostreamE\"></span><span id=\"WeightedGraph::PrintSym__osR\"></span><span class=\"target\" id=\"classWeightedGraph_1aa4364a0c460035540c26c8e0e29fd51e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintSym</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print a symmetric graph to the provided output stream (defaulting to standard out) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet4bitsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet4bitsE\">\n<span id=\"_CPPv3N8IndexSet4bitsE\"></span><span id=\"_CPPv2N8IndexSet4bitsE\"></span><span id=\"IndexSet::bits__IndexBits\"></span><span class=\"target\" id=\"classIndexSet_1a179645d9b8d675655314474516643bed\"></span><a class=\"reference internal\" href=\"#_CPPv49IndexBits\" title=\"IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bits</span></span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8Iterator5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8Iterator5beginEv\">\n<span id=\"_CPPv3NK16reference_vector8Iterator5beginEv\"></span><span id=\"_CPPv2NK16reference_vector8Iterator5beginEv\"></span><span id=\"reference_vector::Iterator::beginC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a9933b653b34061c8f074951b031060df\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a const iterator pointing to the first position in the vector. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap5beginEv\">\n<span id=\"_CPPv3NK7TypeMap5beginEv\"></span><span id=\"_CPPv2NK7TypeMap5beginEv\"></span><span id=\"TypeMap::beginC\"></span><span class=\"target\" id=\"classTypeMap_1a5c7ccb1edf7708c60a22811696b136b3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap14const_iteratorE\" title=\"TypeMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap3endEv\">\n<span id=\"_CPPv3NK7TypeMap3endEv\"></span><span id=\"_CPPv2NK7TypeMap3endEv\"></span><span id=\"TypeMap::endC\"></span><span class=\"target\" id=\"classTypeMap_1a1f8968832c067a503ffe89fe611baa2b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap14const_iteratorE\" title=\"TypeMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERR17UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERR17UnorderedIndexMap\">\n<span id=\"_CPPv3N17UnorderedIndexMap17UnorderedIndexMapERR17UnorderedIndexMap\"></span><span id=\"_CPPv2N17UnorderedIndexMap17UnorderedIndexMapERR17UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap::UnorderedIndexMap__UnorderedIndexMapRR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1ab78fbe44f3e386b346f539d94edee681\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERR17UnorderedIndexMap\" title=\"UnorderedIndexMap::UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/span_utils.html#_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\">\n<span id=\"_CPPv3I0_6size_tE7to_span5arrayI1T4SIZEE\"></span><span id=\"_CPPv2I0_6size_tE7to_span5arrayI1T4SIZEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a55b6bdad46590ed946eefa1aca76ecb3\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_span</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\" title=\"to_span::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\" title=\"to_span::SIZE\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">a</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an array to an equivalent span. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap7val_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap7val_mapE\">\n<span id=\"_CPPv3N7TypeMap7val_mapE\"></span><span id=\"_CPPv2N7TypeMap7val_mapE\"></span><span id=\"TypeMap::val_map__val_map_t\"></span><span class=\"target\" id=\"classTypeMap_1a018e7905c0a18a45d844fcbd2eeac32b\"></span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">val_map</span></span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map4AtIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map4AtIDE6size_t\">\n<span id=\"_CPPv3N6ra_map4AtIDE6size_t\"></span><span id=\"_CPPv2N6ra_map4AtIDE6size_t\"></span><span id=\"ra_map::AtID__s\"></span><span class=\"target\" id=\"classra__map_1a922a54ed2ee6c399d5e18c4bb30630b2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AtID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map8key_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map8key_typeE\">\n<span id=\"_CPPv3N6ra_map8key_typeE\"></span><span id=\"_CPPv2N6ra_map8key_typeE\"></span><span class=\"target\" id=\"classra__map_1a0aecb90db32b50aa72519790b941c3ab\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon4dataEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon4dataEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon4dataEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon4dataEv\"></span><span id=\"SmallVectorTemplateCommon::dataC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ac7d6a4a2acaa6ead0a52fd67622a3728\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon13const_pointerE\" title=\"SmallVectorTemplateCommon::const_pointer\"><span class=\"n\"><span class=\"pre\">const_pointer</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a pointer to the vector\u2019s buffer, even if empty(). </p></dd>", "a[href=\"api/Cache.html#_CPPv4NK5Cache4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Cache4sizeEv\">\n<span id=\"_CPPv3NK5Cache4sizeEv\"></span><span id=\"_CPPv2NK5Cache4sizeEv\"></span><span id=\"Cache::sizeC\"></span><span class=\"target\" id=\"classCache_1a1fc393ec99adde6b494efbb96094a60f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many entries are stored in the cache? </p></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString3strEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString3strEv\">\n<span id=\"_CPPv3N13DynamicString3strEv\"></span><span id=\"_CPPv2N13DynamicString3strEv\"></span><span id=\"DynamicString::str\"></span><span class=\"target\" id=\"classDynamicString_1ab3cf163e43d77cb221086213c72f6461\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">str</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert to an std::string. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv413bits_per_char\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413bits_per_char\">\n<span id=\"_CPPv313bits_per_char\"></span><span id=\"_CPPv213bits_per_char\"></span><span id=\"bits_per_char__std::sC\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1af7f0947bbb7d57153df699c642db6a38\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bits_per_char</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x08</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap9storage_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap9storage_tE\">\n<span id=\"_CPPv3N12SmallFifoMap9storage_tE\"></span><span id=\"_CPPv2N12SmallFifoMap9storage_tE\"></span><span class=\"target\" id=\"classSmallFifoMap_1a95d6c1c2971874b1c49b95689e5b0046\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">storage_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap10value_typeE\" title=\"SmallFifoMap::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8IteratoraSERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8IteratoraSERK8Iterator\">\n<span id=\"_CPPv3N16reference_vector8IteratoraSERK8Iterator\"></span><span id=\"_CPPv2N16reference_vector8IteratoraSERK8Iterator\"></span><span id=\"reference_vector::Iterator::assign-operator__IteratorCR\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a7b6d3e4fc1d93fc75fccd68a1cab83b0\"></span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\">\n<span id=\"_CPPv3N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\"></span><span id=\"_CPPv2N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\"></span><span class=\"target\" id=\"classCache_1ac164626f8bc2528159063d0b19a758ff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">k</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n\"><span class=\"pre\">k</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">calc_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A version of Get that allows calls with const references instead of pass-by-value. </p></dd>", "a[href=\"api/Cache.html#_CPPv4NK5Cache3HasERK3KEY\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Cache3HasERK3KEY\">\n<span id=\"_CPPv3NK5Cache3HasERK3KEY\"></span><span id=\"_CPPv2NK5Cache3HasERK3KEY\"></span><span id=\"Cache::Has__KEYCRC\"></span><span class=\"target\" id=\"classCache_1af10e93c376aa1f89a1f3cf0d707adad0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">k</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine if a specific key is already in the cache. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set4valsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set4valsE\">\n<span id=\"_CPPv3N6ra_set4valsE\"></span><span id=\"_CPPv2N6ra_set4valsE\"></span><span id=\"ra_set::vals__vector:T:\"></span><span class=\"target\" id=\"classra__set_1a929f926d59a28badd2432b1365ded004\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vals</span></span></span><br/></dt><dd><p>A vector of all values contained. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBaseI1TXtrueEE18uninitialized_copyE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1ab1683afda4536c3fb1ce506e3e1eb055\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_copy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements into it as needed. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraphD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraphD0Ev\">\n<span id=\"_CPPv3N13WeightedGraphD0Ev\"></span><span id=\"_CPPv2N13WeightedGraphD0Ev\"></span><span id=\"WeightedGraph::~WeightedGraph\"></span><span class=\"target\" id=\"classWeightedGraph_1ad7b4a5c8206772f9f4fb5906c0d64923\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~WeightedGraph</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon10getFirstElEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon10getFirstElEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon10getFirstElEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon10getFirstElEv\"></span><span id=\"SmallVectorTemplateCommon::getFirstElC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a65957051634f2f7815f1df8d2b41262a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getFirstEl</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Find the address of the first element. For this pointer math to be valid with small-size of 0 for T with lots of alignment, it\u2019s important that SmallVectorStorage is properly-aligned even for small-size of 0. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap7GetSizeEv\">\n<span id=\"_CPPv3NK17UnorderedIndexMap7GetSizeEv\"></span><span id=\"_CPPv2NK17UnorderedIndexMap7GetSizeEv\"></span><span id=\"UnorderedIndexMap::GetSizeC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aff2dd0cf609260c9e31b49b650aadaeb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many indices are in this map? </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet6InsertE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet6InsertE10IndexRange\">\n<span id=\"_CPPv3N13IndexRangeSet6InsertE10IndexRange\"></span><span id=\"_CPPv2N13IndexRangeSet6InsertE10IndexRange\"></span><span id=\"IndexRangeSet::Insert__IndexRange\"></span><span class=\"target\" id=\"classIndexRangeSet_1a539577a36e4d2129780106e64a04b4d1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Insert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a whole range into this set, merging other ranges as needed. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map6crvendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map6crvendEv\">\n<span id=\"_CPPv3N11valsort_map6crvendEv\"></span><span id=\"_CPPv2N11valsort_map6crvendEv\"></span><span id=\"valsort_map::crvend\"></span><span class=\"target\" id=\"classvalsort__map_1a0242939df396f9283df281997eb1824e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">crvend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache6hasherE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache6hasherE\">\n<span id=\"_CPPv3N5Cache6hasherE\"></span><span id=\"_CPPv2N5Cache6hasherE\"></span><span class=\"target\" id=\"classCache_1a87595d787bef3005f373c5f4ef6499c2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hasher</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::HASH\"><span class=\"n\"><span class=\"pre\">HASH</span></span></a><br/></dt><dd><p>Hash method to use. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon3endEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon3endEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon3endEv\"></span><span id=\"SmallVectorTemplateCommon::endC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a14f35120de1fed9fe22b1edf43435479\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\" title=\"SmallVectorTemplateCommon::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratorcvbEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratorcvbEv\">\n<span id=\"_CPPv3NK16reference_vector8IteratorcvbEv\"></span><span id=\"_CPPv2NK16reference_vector8IteratorcvbEv\"></span><span id=\"reference_vector::Iterator::castto-b-operatorC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a41b3aa538cdc71f699236f6d2b8c56bb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Is this iterator pointing to a valid position in the vector? </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap14local_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap14local_iteratorE\">\n<span id=\"_CPPv3N7TypeMap14local_iteratorE\"></span><span id=\"_CPPv2N7TypeMap14local_iteratorE\"></span><span class=\"target\" id=\"classTypeMap_1a89873290c35ec6d95efcc4e5e5e0a11d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">local_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">local_iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph13WeightedGraphERR13WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph13WeightedGraphERR13WeightedGraph\">\n<span id=\"_CPPv3N13WeightedGraph13WeightedGraphERR13WeightedGraph\"></span><span id=\"_CPPv2N13WeightedGraph13WeightedGraphERR13WeightedGraph\"></span><span id=\"WeightedGraph::WeightedGraph__WeightedGraphRR\"></span><span class=\"target\" id=\"classWeightedGraph_1acdca48b522e8ec3f8ff93022e0f778f5\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N13WeightedGraph13WeightedGraphERR13WeightedGraph\" title=\"WeightedGraph::WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Move constructor. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter8containsEPKcRKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter8containsEPKcRKNSt6size_tE\">\n<span id=\"_CPPv3NK11BloomFilter8containsEPKcRKNSt6size_tE\"></span><span id=\"_CPPv2NK11BloomFilter8containsEPKcRKNSt6size_tE\"></span><span id=\"BloomFilter::contains__cCP.std::sCRC\"></span><span class=\"target\" id=\"classBloomFilter_1acd8d4ee2fcc4925eec44635f36e1b0be\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\">\n<span id=\"_CPPv3I0E7FlattenRK6vectorI6vectorI1TEE\"></span><span id=\"_CPPv2I0E7FlattenRK6vectorI6vectorI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a7a8f06161f12018974429b4d71be53a2\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\" title=\"Flatten::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Flatten</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\" title=\"Flatten::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">vv</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Collapse a vector of vectors into a single vector. </p></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap3GetERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap3GetERKNSt6stringE\">\n<span id=\"_CPPv3N9StringMap3GetERKNSt6stringE\"></span><span id=\"_CPPv2N9StringMap3GetERKNSt6stringE\"></span><span id=\"StringMap::Get__ssCR\"></span><span class=\"target\" id=\"classStringMap_1a6859b0261a0c1f6edc4c29547ebf978e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map8item_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map8item_mapE\">\n<span id=\"_CPPv3N11valsort_map8item_mapE\"></span><span id=\"_CPPv2N11valsort_map8item_mapE\"></span><span id=\"valsort_map::item_map__std::map:Key.T:\"></span><span class=\"target\" id=\"classvalsort__map_1a89039e1ad62144a956ae7c6286076864\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E11valsort_map\" title=\"valsort_map::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11valsort_map\" title=\"valsort_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">item_map</span></span></span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\">\n<span id=\"_CPPv3I000E5AnyOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span id=\"_CPPv2I000E5AnyOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a32d410cd508859a5c9ed0737e793a249\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyOf</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AnyOf::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AnyOf::ELEMENT_T\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AnyOf::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue5ResetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue5ResetEv\">\n<span id=\"_CPPv3N9TimeQueue5ResetEv\"></span><span id=\"_CPPv2N9TimeQueue5ResetEv\"></span><span id=\"TimeQueue::Reset\"></span><span class=\"target\" id=\"classTimeQueue_1ad27836ccb492a49c7bbbbacda9d1e81a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Reset</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Empty the TimeQueue and start over at time zero. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue11item_bufferE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue11item_bufferE\">\n<span id=\"_CPPv3N9TimeQueue11item_bufferE\"></span><span id=\"_CPPv2N9TimeQueue11item_bufferE\"></span><span id=\"TimeQueue::item_buffer__vector:ItemInfo:\"></span><span class=\"target\" id=\"classTimeQueue_1ab35ef334998195ff32d2b7523326abf2\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N9TimeQueue8ItemInfoE\" title=\"TimeQueue::ItemInfo\"><span class=\"n\"><span class=\"pre\">ItemInfo</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">item_buffer</span></span></span><br/></dt><dd><p>Unsorted events out of current range. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon10value_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon10value_typeE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon10value_typeE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon10value_typeE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a0b9c16390f5922b958b09d94fc120ca2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap6LeftIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap6LeftIDE6size_t\">\n<span id=\"_CPPv3NK8IndexMap6LeftIDE6size_t\"></span><span id=\"_CPPv2NK8IndexMap6LeftIDE6size_t\"></span><span id=\"IndexMap::LeftID__sC\"></span><span class=\"target\" id=\"classIndexMap_1a25d7f42a17aa73d0deba1afdfbea2f47\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LeftID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Which ID is the left child of the ID provided? </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBase9push_backERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase9push_backERK1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase9push_backERK1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase9push_backERK1T\"></span><span id=\"SmallVectorTemplateBase::push_back__TCR\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a50e91e9e0cf04cbe575f9efeec9023dc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Elt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap8ParentIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap8ParentIDE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap8ParentIDE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap8ParentIDE6size_t\"></span><span id=\"UnorderedIndexMap::ParentID__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1abffce2ae0725d1801bddc53bcd52fb37\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ParentID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Which ID is the parent of the ID provided? </p></dd>", "a[href=\"api/hash_utils.html#_CPPv4I0E4HashNSt6size_tERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4HashNSt6size_tERK1T\">\n<span id=\"_CPPv3I0E4HashRK1T\"></span><span id=\"_CPPv2I0E4HashRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"hash__utils_8hpp_1af91507e033cc52d5483cf97953f89d86\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hash</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4HashNSt6size_tERK1T\" title=\"Hash::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph14RemoveEdgePairE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph14RemoveEdgePairE6size_t6size_t\">\n<span id=\"_CPPv3N5Graph14RemoveEdgePairE6size_t6size_t\"></span><span id=\"_CPPv2N5Graph14RemoveEdgePairE6size_t6size_t\"></span><span id=\"Graph::RemoveEdgePair__s.s\"></span><span class=\"target\" id=\"classGraph_1aa125f3da61e5d534f928ec376dacdc6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveEdgePair</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove edges in both directions between a pair of vertices. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph10GetWeightsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph10GetWeightsEv\">\n<span id=\"_CPPv3N13WeightedGraph10GetWeightsEv\"></span><span id=\"_CPPv2N13WeightedGraph10GetWeightsEv\"></span><span id=\"WeightedGraph::GetWeights\"></span><span class=\"target\" id=\"classWeightedGraph_1a9e84453b9b6d47332f224fd133007aa3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWeights</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap20const_local_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap20const_local_iteratorE\">\n<span id=\"_CPPv3N7TypeMap20const_local_iteratorE\"></span><span id=\"_CPPv2N7TypeMap20const_local_iteratorE\"></span><span class=\"target\" id=\"classTypeMap_1a7809dc5e1620db14f1afef1c665542bf\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_local_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_local_iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map5crendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map5crendEv\">\n<span id=\"_CPPv3N11valsort_map5crendEv\"></span><span id=\"_CPPv2N11valsort_map5crendEv\"></span><span id=\"valsort_map::crend\"></span><span class=\"target\" id=\"classvalsort__map_1a0c78089c358850818003deb62c8aa500\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">crend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMapmIER8IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMapmIER8IndexMap\">\n<span id=\"_CPPv3N8IndexMapmIER8IndexMap\"></span><span id=\"_CPPv2N8IndexMapmIER8IndexMap\"></span><span id=\"IndexMap::sub-assign-operator__IndexMapR\"></span><span class=\"target\" id=\"classIndexMap_1a80cb5ee726ba6a7712c8a5b9e2bfd7fc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">-=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Substract the weights from another index map from this one. </p></dd>", "a[href=\"api/Bool.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bool.hpp<a class=\"headerlink\" href=\"#bool-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A bool representation that doesn\u2019t trip up std::vector. </p>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBase9push_backERR1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase9push_backERR1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase9push_backERR1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase9push_backERR1T\"></span><span id=\"SmallVectorTemplateBase::push_back__TRR\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1abf215f3cd8654517c1bef007eb49e002\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Elt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue10item_queueE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue10item_queueE\">\n<span id=\"_CPPv3N9TimeQueue10item_queueE\"></span><span id=\"_CPPv2N9TimeQueue10item_queueE\"></span><span id=\"TimeQueue::item_queue__vector:ItemInfo:\"></span><span class=\"target\" id=\"classTimeQueue_1ab4901c3baac484ea52290c1ce27452b8\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N9TimeQueue8ItemInfoE\" title=\"TimeQueue::ItemInfo\"><span class=\"n\"><span class=\"pre\">ItemInfo</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">item_queue</span></span></span><br/></dt><dd><p>Sorted events to be triggered. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6insertERK10value_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6insertERK10value_type\">\n<span id=\"_CPPv3N6ra_map6insertERK10value_type\"></span><span id=\"_CPPv2N6ra_map6insertERK10value_type\"></span><span id=\"ra_map::insert__value_typeCR\"></span><span class=\"target\" id=\"classra__map_1a8ab79b277a07bfbacf5db6795d1e11d0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map10value_typeE\" title=\"ra_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a new value into container by copy; return position. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits6InsertE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits6InsertE10IndexRange\">\n<span id=\"_CPPv3N9IndexBits6InsertE10IndexRange\"></span><span id=\"_CPPv2N9IndexBits6InsertE10IndexRange\"></span><span id=\"IndexBits::Insert__IndexRange\"></span><span class=\"target\" id=\"classIndexBits_1aef42332abaf8792e9fda51e878fbc561\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Insert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache5beginEv\">\n<span id=\"_CPPv3NK10QueueCache5beginEv\"></span><span id=\"_CPPv2NK10QueueCache5beginEv\"></span><span id=\"QueueCache::beginC\"></span><span class=\"target\" id=\"classQueueCache_1a66bfcbc41f43b56e256a816b586352fd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a constant iterator to the beginning of the cache queue. Alias of cbegin() </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap7GetProbE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap7GetProbE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap7GetProbE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap7GetProbE6size_t\"></span><span id=\"UnorderedIndexMap::GetProb__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a69c987b00532ab42038c23a9c8d94070\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetProb</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N8StringID12GetStringSetEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8StringID12GetStringSetEv\">\n<span id=\"_CPPv3N8StringID12GetStringSetEv\"></span><span id=\"_CPPv2N8StringID12GetStringSetEv\"></span><span id=\"StringID::GetStringSet\"></span><span class=\"target\" id=\"classStringID_1a0c476d31941f26bee96b9a189d7101a6\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetStringSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Pointer to a unique instance of this string. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph7AddEdgeE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph7AddEdgeE6size_t6size_t\">\n<span id=\"_CPPv3N5Graph7AddEdgeE6size_t6size_t\"></span><span id=\"_CPPv2N5Graph7AddEdgeE6size_t6size_t\"></span><span id=\"Graph::AddEdge__s.s\"></span><span class=\"target\" id=\"classGraph_1a35a092eb611342b548390ebc0658d91d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddEdge</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a specified edge into this graph. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet13IndexRangeSetERR13IndexRangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet13IndexRangeSetERR13IndexRangeSet\">\n<span id=\"_CPPv3N13IndexRangeSet13IndexRangeSetERR13IndexRangeSet\"></span><span id=\"_CPPv2N13IndexRangeSet13IndexRangeSetERR13IndexRangeSet\"></span><span id=\"IndexRangeSet::IndexRangeSet__IndexRangeSetRR\"></span><span class=\"target\" id=\"classIndexRangeSet_1a8b77f859ec5f331cf852af976b1126b7\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N13IndexRangeSet13IndexRangeSetERR13IndexRangeSet\" title=\"IndexRangeSet::IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue4NextER1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue4NextER1T\">\n<span id=\"_CPPv3N9TimeQueue4NextER1T\"></span><span id=\"_CPPv2N9TimeQueue4NextER1T\"></span><span id=\"TimeQueue::Next__TR\"></span><span class=\"target\" id=\"classTimeQueue_1ae2c7af7f91d97fb1a79a3bfe6d1fb3f5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Next</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E9TimeQueue\" title=\"TimeQueue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out_item</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove the next item from TimeQueue, setting argument to it; return whether items remain. </p></dd>", "a[href=\"api/tuple_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">tuple_utils.hpp<a class=\"headerlink\" href=\"#tuple-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions to simplify the use of std::tuple Status: RELEASE. </p>", "a[href=\"api/Bool.html#_CPPv4NK4Bool5ValueEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK4Bool5ValueEv\">\n<span id=\"_CPPv3NK4Bool5ValueEv\"></span><span id=\"_CPPv2NK4Bool5ValueEv\"></span><span id=\"Bool::ValueC\"></span><span class=\"target\" id=\"classBool_1ab87696b17f30119356fc7ab180d08953\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK15SmallVectorBase4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15SmallVectorBase4sizeEv\">\n<span id=\"_CPPv3NK15SmallVectorBase4sizeEv\"></span><span id=\"_CPPv2NK15SmallVectorBase4sizeEv\"></span><span id=\"SmallVectorBase::sizeC\"></span><span class=\"target\" id=\"classSmallVectorBase_1ae3b493047e3febfc9dcab23e2769a4ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8Iterator3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8Iterator3endEv\">\n<span id=\"_CPPv3NK16reference_vector8Iterator3endEv\"></span><span id=\"_CPPv2NK16reference_vector8Iterator3endEv\"></span><span id=\"reference_vector::Iterator::endC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a0b18091af7fb9b9374e9b2f08e2d23ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a const iterator pointing to just past the end of the vector. </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue3posE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue3posE\">\n<span id=\"_CPPv3N9TimeQueue3posE\"></span><span id=\"_CPPv2N9TimeQueue3posE\"></span><span id=\"TimeQueue::pos__s\"></span><span class=\"target\" id=\"classTimeQueue_1ab5a5ce49c5bcb304c382aa8df60650c7\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pos</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd><p>What position are we up to in the item_queue? </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBitsaSERR9IndexBits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBitsaSERR9IndexBits\">\n<span id=\"_CPPv3N9IndexBitsaSERR9IndexBits\"></span><span id=\"_CPPv2N9IndexBitsaSERR9IndexBits\"></span><span id=\"IndexBits::assign-operator__IndexBitsRR\"></span><span class=\"target\" id=\"classIndexBits_1a7f83a48830b98109f5fb06bbe4b15cd1\"></span><a class=\"reference internal\" href=\"#_CPPv49IndexBits\" title=\"IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv49IndexBits\" title=\"IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph7weightsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph7weightsE\">\n<span id=\"_CPPv3N13WeightedGraph7weightsE\"></span><span id=\"_CPPv2N13WeightedGraph7weightsE\"></span><span id=\"WeightedGraph::weights__vector:vector:double::\"></span><span class=\"target\" id=\"classWeightedGraph_1a1fb82744357d5505751afc6f51288c78\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">weights</span></span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8Iterator8IteratorER6this_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8Iterator8IteratorER6this_t6size_t\">\n<span id=\"_CPPv3N16reference_vector8Iterator8IteratorER6this_t6size_t\"></span><span id=\"_CPPv2N16reference_vector8Iterator8IteratorER6this_t6size_t\"></span><span id=\"reference_vector::Iterator::Iterator__this_tR.s\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a7edd10dad8a9b56ed1cbdf5aa7ecabe8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector6this_tE\" title=\"reference_vector::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector16reference_vectorERK16reference_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector16reference_vectorERK16reference_vector\">\n<span id=\"_CPPv3N16reference_vector16reference_vectorERK16reference_vector\"></span><span id=\"_CPPv2N16reference_vector16reference_vectorERK16reference_vector\"></span><span id=\"reference_vector::reference_vector__reference_vectorCR\"></span><span class=\"target\" id=\"classreference__vector_1aadd4f129db4efc58f3a7d837f30305ac\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector16reference_vectorERK16reference_vector\" title=\"reference_vector::reference_vector\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html#_CPPv4NK6ra_set4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_set4sizeEv\">\n<span id=\"_CPPv3NK6ra_set4sizeEv\"></span><span id=\"_CPPv2NK6ra_set4sizeEv\"></span><span id=\"ra_set::sizeC\"></span><span class=\"target\" id=\"classra__set_1af7a6010a518491f01709897041ec512c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many elements are in this set? </p></dd>", "a[href=\"api/valsort_map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">valsort_map.hpp<a class=\"headerlink\" href=\"#valsort-map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a map that is sorted by value, not key. </p><p>valsort_map is a limited implementation of map that also keeps track of the values set, in order, as you go. This is accomplished by keeping a second data structure, a sorted set, of all of the values maintained in the map.</p>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map15difference_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map15difference_typeE\">\n<span id=\"_CPPv3N6ra_map15difference_typeE\"></span><span id=\"_CPPv2N6ra_map15difference_typeE\"></span><span class=\"target\" id=\"classra__map_1a01f7784233eead8a20c48eadd245a63a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ptrdiff_t</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap7RightIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap7RightIDE6size_t\">\n<span id=\"_CPPv3NK8IndexMap7RightIDE6size_t\"></span><span id=\"_CPPv2NK8IndexMap7RightIDE6size_t\"></span><span id=\"IndexMap::RightID__sC\"></span><span class=\"target\" id=\"classIndexMap_1a805207983427b4e597028916ab7d3bc2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RightID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Which ID is the right child of the ID provided? </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon9size_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon9size_typeE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon9size_typeE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon9size_typeE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ab91abf5058a6bc2745f49d9aebb35bce\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache10DefaultFunERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache10DefaultFunERK3Key\">\n<span id=\"_CPPv3N10QueueCache10DefaultFunERK3Key\"></span><span id=\"_CPPv2N10QueueCache10DefaultFunERK3Key\"></span><span id=\"QueueCache::DefaultFun__KeyCR\"></span><span class=\"target\" id=\"classQueueCache_1a96edf4e9435bc081ab44f9d1fa784d93\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultFun</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMapD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMapD0Ev\">\n<span id=\"_CPPv3N8IndexMapD0Ev\"></span><span id=\"_CPPv2N8IndexMapD0Ev\"></span><span id=\"IndexMap::~IndexMap\"></span><span class=\"target\" id=\"classIndexMap_1a23ec2284e1f98a894aaf31a1e6393a3b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~IndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E10difference6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E10difference6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a44ba027c934c811dfbed3a28bb92eafd\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but no S2) </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap5Proxy9index_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap5Proxy9index_mapE\">\n<span id=\"_CPPv3N17UnorderedIndexMap5Proxy9index_mapE\"></span><span id=\"_CPPv2N17UnorderedIndexMap5Proxy9index_mapE\"></span><span id=\"UnorderedIndexMap::Proxy::index_map__UnorderedIndexMapR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1_1Proxy_1af3bb4bfc7d392a5d5ba7f067fd99689c\"></span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">index_map</span></span></span><br/></dt><dd><p>Which index map is this proxy from? </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E9set_union6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E9set_union6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a6f77621c5b881676269a61b90814714e\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap12ToInternalIDE6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap12ToInternalIDE6size_t6size_t6size_t\">\n<span id=\"_CPPv3NK8IndexMap12ToInternalIDE6size_t6size_t6size_t\"></span><span id=\"_CPPv2NK8IndexMap12ToInternalIDE6size_t6size_t6size_t\"></span><span id=\"IndexMap::ToInternalID__s.s.sC\"></span><span class=\"target\" id=\"classIndexMap_1a1bb6871fc433d74ebd6aeb8120bdb372\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToInternalID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_items</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_offset</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map7cvbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map7cvbeginEv\">\n<span id=\"_CPPv3N11valsort_map7cvbeginEv\"></span><span id=\"_CPPv2N11valsort_map7cvbeginEv\"></span><span id=\"valsort_map::cvbegin\"></span><span class=\"target\" id=\"classvalsort__map_1a8089e183b6b227cd37e6e2c8991e47ea\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cvbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVector11SmallVectorERK11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorERK11SmallVector\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorERK11SmallVector\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorERK11SmallVector\"></span><span id=\"SmallVector::SmallVector__SmallVectorCR\"></span><span class=\"target\" id=\"classSmallVector_1a6847a6760f49a189400a3f5a32d4839e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11SmallVector11SmallVectorERK11SmallVector\" title=\"SmallVector::SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DynamicString.hpp<a class=\"headerlink\" href=\"#dynamicstring-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A string handler where sections update dynamically based on functions. </p>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache6ShrinkEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache6ShrinkEv\">\n<span id=\"_CPPv3N10QueueCache6ShrinkEv\"></span><span id=\"_CPPv2N10QueueCache6ShrinkEv\"></span><span id=\"QueueCache::Shrink\"></span><span class=\"target\" id=\"classQueueCache_1a8260e3ede97fcde1d9a245cc5732d1f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Shrink</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4N4Bool4BoolEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4Bool4BoolEb\">\n<span id=\"_CPPv3N4Bool4BoolEb\"></span><span id=\"_CPPv2N4Bool4BoolEb\"></span><span id=\"Bool::Bool__b\"></span><span class=\"target\" id=\"classBool_1a2c31674e28b4569b22c088f5ad44f6d9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set10value_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set10value_typeE\">\n<span id=\"_CPPv3N6ra_set10value_typeE\"></span><span id=\"_CPPv2N6ra_set10value_typeE\"></span><span class=\"target\" id=\"classra__set_1a604491d4418941a728640f8984a375f7\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet4nposE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet4nposE\">\n<span id=\"_CPPv3N8IndexSet4nposE\"></span><span id=\"_CPPv2N8IndexSet4nposE\"></span><span id=\"IndexSet::npos__sC\"></span><span class=\"target\" id=\"classIndexSet_1ab754ee8be38b05b35f6e9e6c95a0aa1c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">npos</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">static_cast</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">)</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph8GetNodesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph8GetNodesEv\">\n<span id=\"_CPPv3N5Graph8GetNodesEv\"></span><span id=\"_CPPv2N5Graph8GetNodesEv\"></span><span id=\"Graph::GetNodes\"></span><span class=\"target\" id=\"classGraph_1aeb60f2552c512e8b6e755a3a3f5810ff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">Node</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNodes</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map11valsort_mapERR11valsort_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map11valsort_mapERR11valsort_map\">\n<span id=\"_CPPv3N11valsort_map11valsort_mapERR11valsort_map\"></span><span id=\"_CPPv2N11valsort_map11valsort_mapERR11valsort_map\"></span><span id=\"valsort_map::valsort_map__valsort_mapRR\"></span><span class=\"target\" id=\"classvalsort__map_1a604c9bc0a8ff65722d1ee2d3d5a5ad53\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map11valsort_mapERR11valsort_map\" title=\"valsort_map::valsort_map\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter10bloom_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10bloom_typeE\">\n<span id=\"_CPPv3N11BloomFilter10bloom_typeE\"></span><span id=\"_CPPv2N11BloomFilter10bloom_typeE\"></span><span id=\"BloomFilter::bloom_type\"></span><span class=\"target\" id=\"classBloomFilter_1addc1e480e80fc315bafa336897974244\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4NK13DynamicString11GetFunctionE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13DynamicString11GetFunctionE6size_t\">\n<span id=\"_CPPv3NK13DynamicString11GetFunctionE6size_t\"></span><span id=\"_CPPv2NK13DynamicString11GetFunctionE6size_t\"></span><span id=\"DynamicString::GetFunction__sC\"></span><span class=\"target\" id=\"classDynamicString_1a71ff6b65cf24dd85928abb99c617d7e4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13DynamicString7value_tE\" title=\"DynamicString::value_t\"><span class=\"n\"><span class=\"pre\">value_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Index in to a specific component (not a specific character, since size is variable) and return it\u2019s associated function. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E7FindMax1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7FindMax1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E7FindMaxRK6vectorI1TE\"></span><span id=\"_CPPv2I0E7FindMaxRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a028f3f671acf665529301e96f6ce70c4\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMax1TRK6vectorI1TE\" title=\"FindMax::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMax</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMax1TRK6vectorI1TE\" title=\"FindMax::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the maximum value in a vector. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap9AdjustAllEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap9AdjustAllEd\">\n<span id=\"_CPPv3N8IndexMap9AdjustAllEd\"></span><span id=\"_CPPv2N8IndexMap9AdjustAllEd\"></span><span id=\"IndexMap::AdjustAll__double\"></span><span class=\"target\" id=\"classIndexMap_1a00014994e92b0eb101e96d25a7e44528\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AdjustAll</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adjust all index weights to the set provided. </p></dd>", "a[href=\"#data-structures\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Data structures<a class=\"headerlink\" href=\"#data-structures\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet13_ReleaseUnionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet13_ReleaseUnionEv\">\n<span id=\"_CPPv3N8IndexSet13_ReleaseUnionEv\"></span><span id=\"_CPPv2N8IndexSet13_ReleaseUnionEv\"></span><span id=\"IndexSet::_ReleaseUnion\"></span><span class=\"target\" id=\"classIndexSet_1a97e6a72551f14d1d99926683176c713e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_ReleaseUnion</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Free whatever type we currently have. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map3SetE8key_typeRK11mapped_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map3SetE8key_typeRK11mapped_type\">\n<span id=\"_CPPv3N11valsort_map3SetE8key_typeRK11mapped_type\"></span><span id=\"_CPPv2N11valsort_map3SetE8key_typeRK11mapped_type\"></span><span id=\"valsort_map::Set__key_type.mapped_typeCR\"></span><span class=\"target\" id=\"classvalsort__map_1a05783a4ded99ec3cb6dbfe4a7e3e834a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Set</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map8key_typeE\" title=\"valsort_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map11mapped_typeE\" title=\"valsort_map::mapped_type\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap5clearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap5clearEv\">\n<span id=\"_CPPv3N7TypeMap5clearEv\"></span><span id=\"_CPPv2N7TypeMap5clearEv\"></span><span id=\"TypeMap::clear\"></span><span class=\"target\" id=\"classTypeMap_1a082f3cb13710d0537491bf7438b13ce0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv418build_graph_random6size_t6size_tR6Randomb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418build_graph_random6size_t6size_tR6Randomb\">\n<span id=\"_CPPv318build_graph_random6size_t6size_tR6Randomb\"></span><span id=\"_CPPv218build_graph_random6size_t6size_tR6Randomb\"></span><span id=\"build_graph_random__s.s.RandomR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a106cd2288f6c9bcca668737270423289\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_random</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">connected</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random, graph with the specified number of vertices and edges. If connected is set, start by building a tree. Then connect random (unconnected) pairs of vertices until the proper number of edges are included. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter11BloomFilterEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11BloomFilterEv\">\n<span id=\"_CPPv3N11BloomFilter11BloomFilterEv\"></span><span id=\"_CPPv2N11BloomFilter11BloomFilterEv\"></span><span id=\"BloomFilter::BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter_1a64e9f133cd9bb65d55a5e31f701bbca0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilteroRERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilteroRERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilteroRERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilteroRERK11BloomFilter\"></span><span id=\"BloomFilter::or-assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1aa4914d475eb3a2d4f1f2b58cc864f585\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the union of two Bloom filters. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBase8pop_backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase8pop_backEv\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase8pop_backEv\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase8pop_backEv\"></span><span id=\"SmallVectorTemplateBase::pop_back\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a696914682856b9146dfd6ff6e294100d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pop_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap5Proxy2idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap5Proxy2idE\">\n<span id=\"_CPPv3N8IndexMap5Proxy2idE\"></span><span id=\"_CPPv2N8IndexMap5Proxy2idE\"></span><span id=\"IndexMap::Proxy::id__s\"></span><span class=\"target\" id=\"classIndexMap_1_1Proxy_1a2103f57f21c52d3d0147f3b78c01ac8c\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id</span></span></span><br/></dt><dd><p>Which id does it represent? </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap9num_itemsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap9num_itemsE\">\n<span id=\"_CPPv3N8IndexMap9num_itemsE\"></span><span id=\"_CPPv2N8IndexMap9num_itemsE\"></span><span id=\"IndexMap::num_items__s\"></span><span class=\"target\" id=\"classIndexMap_1ac3336a4a39e357df2bb200247b8aee82\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">num_items</span></span></span><br/></dt><dd><p>How many items are being stored in this IndexMap? </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap5beginEv\">\n<span id=\"_CPPv3NK12SmallFifoMap5beginEv\"></span><span id=\"_CPPv2NK12SmallFifoMap5beginEv\"></span><span id=\"SmallFifoMap::beginC\"></span><span class=\"target\" id=\"classSmallFifoMap_1a344de9c3ae4c3b1706b3fc6b93c0d675\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap14const_iteratorE\" title=\"SmallFifoMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph7AddEdgeE6size_t6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph7AddEdgeE6size_t6size_td\">\n<span id=\"_CPPv3N13WeightedGraph7AddEdgeE6size_t6size_td\"></span><span id=\"_CPPv2N13WeightedGraph7AddEdgeE6size_t6size_td\"></span><span id=\"WeightedGraph::AddEdge__s.s.double\"></span><span class=\"target\" id=\"classWeightedGraph_1a351aa02e270925d590b0b584e0dcce83\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddEdge</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>When Adding an edge, must also provide a weight. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet9range_setE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet9range_setE\">\n<span id=\"_CPPv3N13IndexRangeSet9range_setE\"></span><span id=\"_CPPv2N13IndexRangeSet9range_setE\"></span><span id=\"IndexRangeSet::range_set__vector:IndexRange:\"></span><span class=\"target\" id=\"classIndexRangeSet_1a415fdba0e4d2c977ff9230993d675953\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">range_set</span></span></span><br/></dt><dd></dd>", "a[href=\"api/hash_utils.html#_CPPv412hash_combineNSt6size_tENSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412hash_combineNSt6size_tENSt6size_tE\">\n<span id=\"_CPPv312hash_combineNSt6size_tENSt6size_tE\"></span><span id=\"_CPPv212hash_combineNSt6size_tENSt6size_tE\"></span><span id=\"hash_combine__std::s.std::sCE\"></span><span class=\"target\" id=\"hash__utils_8hpp_1a6c07387b3e74d926e8db8493a05645be\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash2</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Boost\u2019s implementation of a simple hash-combining function. Taken from <a class=\"reference external\" href=\"https://www.boost.org/doc/libs/1_37_0/doc/html/hash/reference.html#boost.hash_combine\">https://www.boost.org/doc/libs/1_37_0/doc/html/hash/reference.html#boost.hash_combine</a> </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\">\n<span id=\"_CPPv3I0DpE4SortR6vectorI1TEDp2Ts\"></span><span id=\"_CPPv2I0DpE4SortR6vectorI1TEDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a8fb7146ff842b82cdc07d4c2284c1c09\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sort</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\" title=\"Sort::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\" title=\"Sort::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A quick shortcut for sorting a vector. </p></dd>", "a[href=\"api/tuple_utils.html#_CPPv4N9TupleHash7tuple_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TupleHash7tuple_tE\">\n<span id=\"_CPPv3N9TupleHash7tuple_tE\"></span><span id=\"_CPPv2N9TupleHash7tuple_tE\"></span><span class=\"target\" id=\"structTupleHash_1a15efb4a90979a4c563d009749b0c7318\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tuple_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE9TupleHash\" title=\"TupleHash::TYPES\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\">\n<span id=\"_CPPv3I00E9flip_pairRKNSt4pairI1A1BEE\"></span><span id=\"_CPPv2I00E9flip_pairRKNSt4pairI1A1BEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">B</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a066ca2b0d02aae707dd1f4190750cf15\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flip_pair</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an std::pair&lt;A,B&gt; and return the flipped pair std::pair&lt;B,A&gt; </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap9RawAdjustE6size_tKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap9RawAdjustE6size_tKd\">\n<span id=\"_CPPv3N17UnorderedIndexMap9RawAdjustE6size_tKd\"></span><span id=\"_CPPv2N17UnorderedIndexMap9RawAdjustE6size_tKd\"></span><span id=\"UnorderedIndexMap::RawAdjust__s.doubleC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a44a951e109fd7668f7ee1b900006b3e5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawAdjust</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adjust the weight associated with a particular index in the map. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap12DeferRefreshEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap12DeferRefreshEv\">\n<span id=\"_CPPv3N17UnorderedIndexMap12DeferRefreshEv\"></span><span id=\"_CPPv2N17UnorderedIndexMap12DeferRefreshEv\"></span><span id=\"UnorderedIndexMap::DeferRefresh\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1af7abcc83d4f6865bc4a439f4fb19da65\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DeferRefresh</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Indicate that we need to adjust weights before relying on them in the future; this will prevent refreshes from occurring immediately and is useful when many updates to weights are likely to be done before any are accessed again. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap3endEv\">\n<span id=\"_CPPv3N12SmallFifoMap3endEv\"></span><span id=\"_CPPv2N12SmallFifoMap3endEv\"></span><span id=\"SmallFifoMap::end\"></span><span class=\"target\" id=\"classSmallFifoMap_1ade8733d5a4cb5bea1bba3f9ca28e09f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap8iteratorE\" title=\"SmallFifoMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8IteratormmEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8IteratormmEv\">\n<span id=\"_CPPv3N16reference_vector8IteratormmEv\"></span><span id=\"_CPPv2N16reference_vector8IteratormmEv\"></span><span id=\"reference_vector::Iterator::dec-operator\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a0c39f399ac3dfe7a1e0c4513845a6bb1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">--</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map5eraseERK5KEY_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map5eraseERK5KEY_T\">\n<span id=\"_CPPv3N6ra_map5eraseERK5KEY_T\"></span><span id=\"_CPPv2N6ra_map5eraseERK5KEY_T\"></span><span id=\"ra_map::erase__KEY_TCR\"></span><span class=\"target\" id=\"classra__map_1ab3800ab6b945c6cb7322dc85ed7b6099\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">erase</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Erase a specific value from the container. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph13PrintDirectedERNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph13PrintDirectedERNSt7ostreamE\">\n<span id=\"_CPPv3N13WeightedGraph13PrintDirectedERNSt7ostreamE\"></span><span id=\"_CPPv2N13WeightedGraph13PrintDirectedERNSt7ostreamE\"></span><span id=\"WeightedGraph::PrintDirected__osR\"></span><span class=\"target\" id=\"classWeightedGraph_1a190a766dbe1781b1bb94021ab09b3ba6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintDirected</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print a directed graph to the provided output stream (defaulting to standard out) </p></dd>", "a[href=\"api/tuple_utils.html#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\">\n<span id=\"_CPPv3IDp_DpiE13shuffle_tupleRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"></span><span id=\"_CPPv2IDp_DpiE13shuffle_tupleRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ps</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a1c96d5610919c37eabed347eefe097a3\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">shuffle_tuple</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\" title=\"shuffle_tuple::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span>, <a class=\"reference internal\" href=\"../meta/api/ValPack.html#_CPPv4I_DpDaE7ValPack\" title=\"ValPack\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\" title=\"shuffle_tuple::Ps\"><span class=\"n\"><span class=\"pre\">Ps</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reorganize the entries in tuple; the provided int pack must specify the new ordering. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E9set_unionRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E9set_unionRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1ae984dce9f9e71f0dbc948076d94d2828\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon5beginEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon5beginEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon5beginEv\"></span><span id=\"SmallVectorTemplateCommon::beginC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1abb31945f3a78695602931099f3524a7b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\" title=\"SmallVectorTemplateCommon::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK8IndexSet7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexSet7GetSizeEv\">\n<span id=\"_CPPv3NK8IndexSet7GetSizeEv\"></span><span id=\"_CPPv2NK8IndexSet7GetSizeEv\"></span><span id=\"IndexSet::GetSizeC\"></span><span class=\"target\" id=\"classIndexSet_1ad5e61f0301b7392de394d6f57ba9f462\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap5clearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap5clearEv\">\n<span id=\"_CPPv3N12SmallFifoMap5clearEv\"></span><span id=\"_CPPv2N12SmallFifoMap5clearEv\"></span><span id=\"SmallFifoMap::clear\"></span><span class=\"target\" id=\"classSmallFifoMap_1ac62bd864dbd136ab2b56cb695f27ec1d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Clear the cache. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter23inserted_element_count_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter23inserted_element_count_E\">\n<span id=\"_CPPv3N11BloomFilter23inserted_element_count_E\"></span><span id=\"_CPPv2N11BloomFilter23inserted_element_count_E\"></span><span id=\"BloomFilter::inserted_element_count___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1a303955ce177bd9fcd1aadd90bae8dd76\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">inserted_element_count_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache10cache_listE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache10cache_listE\">\n<span id=\"_CPPv3N10QueueCache10cache_listE\"></span><span id=\"_CPPv2N10QueueCache10cache_listE\"></span><span id=\"QueueCache::cache_list__cache_list_t\"></span><span class=\"target\" id=\"classQueueCache_1aa9ab72c869dd9c92834242f8db4fa99b\"></span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cache_list</span></span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph9GetDegreeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph9GetDegreeE6size_t\">\n<span id=\"_CPPv3NK5Graph9GetDegreeE6size_t\"></span><span id=\"_CPPv2NK5Graph9GetDegreeE6size_t\"></span><span id=\"Graph::GetDegree__sC\"></span><span class=\"target\" id=\"classGraph_1a2645e621dfa1cf412d95f29bf711f286\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetDegree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the degree of a specified node. For directed graphs, this is the out-degree </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap6ResizeE6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap6ResizeE6size_td\">\n<span id=\"_CPPv3N17UnorderedIndexMap6ResizeE6size_td\"></span><span id=\"_CPPv2N17UnorderedIndexMap6ResizeE6size_td\"></span><span id=\"UnorderedIndexMap::Resize__s.double\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aed1d8abc2906355dab96f7ee294ad041\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Resize</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">def_value</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change the number of indices in the map. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon8max_sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon8max_sizeEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon8max_sizeEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon8max_sizeEv\"></span><span id=\"SmallVectorTemplateCommon::max_sizeC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a7fdfcde607f56dc7fc574c4ee8895853\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">max_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache5ClearEv\">\n<span id=\"_CPPv3N10QueueCache5ClearEv\"></span><span id=\"_CPPv2N10QueueCache5ClearEv\"></span><span id=\"QueueCache::Clear\"></span><span class=\"target\" id=\"classQueueCache_1acb1500d816c91592543a9ddc689da160\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Clear the cache. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\">\n<span id=\"_CPPv3I0E9FindIndexRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\"></span><span id=\"_CPPv2I0E9FindIndexRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1afeb3012b6340c3ddfabe62775a48f32a\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\" title=\"FindIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\" title=\"FindIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\" title=\"FindIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the index with the \u201coptimal\u201d value (picks first in cases of a tie). </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet11_Index_Vals3id1E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet11_Index_Vals3id1E\">\n<span id=\"_CPPv3N8IndexSet11_Index_Vals3id1E\"></span><span id=\"_CPPv2N8IndexSet11_Index_Vals3id1E\"></span><span id=\"IndexSet::_Index_Vals::id1__s\"></span><span class=\"target\" id=\"structIndexSet_1_1__Index__Vals_1a1f6ff7bb9943496c7fe11618af27a94d\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id1</span></span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8IteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8IteratorE\">\n<span id=\"_CPPv3N16reference_vector8IteratorE\"></span><span id=\"_CPPv2N16reference_vector8IteratorE\"></span><span id=\"reference_vector::Iterator\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector3endEv\">\n<span id=\"_CPPv3N16reference_vector3endEv\"></span><span id=\"_CPPv2N16reference_vector3endEv\"></span><span id=\"reference_vector::end\"></span><span class=\"target\" id=\"classreference__vector_1adce8dc41bc1ce445369f0c85fc3aeff5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap10value_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap10value_typeE\">\n<span id=\"_CPPv3N12SmallFifoMap10value_typeE\"></span><span id=\"_CPPv2N12SmallFifoMap10value_typeE\"></span><span class=\"target\" id=\"classSmallFifoMap_1a0ac5333b9744320b1c8ee52f01799ef4\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0EN7TypeMap2atER11mapped_typev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN7TypeMap2atER11mapped_typev\">\n<span id=\"_CPPv3I0EN7TypeMap2atEv\"></span><span id=\"_CPPv2I0EN7TypeMap2atEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1ac08b4d7bdb4c2d6a100ea14f5ba1ea2f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap11mapped_typeE\" title=\"TypeMap::mapped_type\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">at</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6id_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6id_mapE\">\n<span id=\"_CPPv3N6ra_map6id_mapE\"></span><span id=\"_CPPv2N6ra_map6id_mapE\"></span><span id=\"ra_map::id_map__layout_t\"></span><span class=\"target\" id=\"classra__map_1add9378b3f48defef05a0f125e7e860fe\"></span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8layout_tE\" title=\"ra_map::layout_t\"><span class=\"n\"><span class=\"pre\">layout_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">id_map</span></span></span><br/></dt><dd><p>Map to find keys in vector. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map11valsort_mapERK11valsort_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map11valsort_mapERK11valsort_map\">\n<span id=\"_CPPv3N11valsort_map11valsort_mapERK11valsort_map\"></span><span id=\"_CPPv2N11valsort_map11valsort_mapERK11valsort_map\"></span><span id=\"valsort_map::valsort_map__valsort_mapCR\"></span><span class=\"target\" id=\"classvalsort__map_1abdee2931748be79a0c51000a16b53059\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map11valsort_mapERK11valsort_map\" title=\"valsort_map::valsort_map\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4NK9TimeQueue10GetMinWaitEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TimeQueue10GetMinWaitEv\">\n<span id=\"_CPPv3NK9TimeQueue10GetMinWaitEv\"></span><span id=\"_CPPv2NK9TimeQueue10GetMinWaitEv\"></span><span id=\"TimeQueue::GetMinWaitC\"></span><span class=\"target\" id=\"classTimeQueue_1a26bb4958ffcae045d7a0badfcbdff77f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetMinWait</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache4SizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache4SizeEv\">\n<span id=\"_CPPv3NK10QueueCache4SizeEv\"></span><span id=\"_CPPv2NK10QueueCache4SizeEv\"></span><span id=\"QueueCache::SizeC\"></span><span class=\"target\" id=\"classQueueCache_1ab8c311d037275adac0222f06c8100fcc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return number of elements in cache. </p></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\">\n<span id=\"_CPPv3N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\"></span><span id=\"_CPPv2N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\"></span><span class=\"target\" id=\"classCache_1ab24a23cc04e1903d988f2b5ef1e27103\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">k</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">k</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">calc_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Lookup a specific key; provide a function to use if value is not in cache. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector16reference_vectorERR16reference_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector16reference_vectorERR16reference_vector\">\n<span id=\"_CPPv3N16reference_vector16reference_vectorERR16reference_vector\"></span><span id=\"_CPPv2N16reference_vector16reference_vectorERR16reference_vector\"></span><span id=\"reference_vector::reference_vector__reference_vectorRR\"></span><span class=\"target\" id=\"classreference__vector_1a75c1547125312c405c2e4cbcb33c058e\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector16reference_vectorERR16reference_vector\" title=\"reference_vector::reference_vector\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5GraphD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5GraphD0Ev\">\n<span id=\"_CPPv3N5GraphD0Ev\"></span><span id=\"_CPPv2N5GraphD0Ev\"></span><span id=\"Graph::~Graph\"></span><span class=\"target\" id=\"classGraph_1a902c5b3eacb66d60752525ab23297a95\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~Graph</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\">\n<span id=\"_CPPv3I0E16RemoveDuplicatesRK6vectorI1TE\"></span><span id=\"_CPPv2I0E16RemoveDuplicatesRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a8efa9be502b13750c7d301b1660bf485\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\" title=\"RemoveDuplicates::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveDuplicates</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\" title=\"RemoveDuplicates::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a new vector containing the same elements as</p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue8ItemInfo4itemE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue8ItemInfo4itemE\">\n<span id=\"_CPPv3N9TimeQueue8ItemInfo4itemE\"></span><span id=\"_CPPv2N9TimeQueue8ItemInfo4itemE\"></span><span id=\"TimeQueue::ItemInfo::item__T\"></span><span class=\"target\" id=\"structTimeQueue_1_1ItemInfo_1aedf6893bdd93bcdf883da7b612581436\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E9TimeQueue\" title=\"TimeQueue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">item</span></span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache5CacheEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5CacheEv\">\n<span id=\"_CPPv3N5Cache5CacheEv\"></span><span id=\"_CPPv2N5Cache5CacheEv\"></span><span id=\"Cache::Cache\"></span><span class=\"target\" id=\"classCache_1aadaf41e9447fa7f89e9dcd6edac4fe77\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap11ResizeClearE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap11ResizeClearE6size_t\">\n<span id=\"_CPPv3N17UnorderedIndexMap11ResizeClearE6size_t\"></span><span id=\"_CPPv2N17UnorderedIndexMap11ResizeClearE6size_t\"></span><span id=\"UnorderedIndexMap::ResizeClear__s\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a97b5e82c70857e38dcb04ada1c6e5431\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResizeClear</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change the size of this map AND change all weights to zero. </p></dd>", "a[href=\"api/hash_utils.html#_CPPv4IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tENSt6size_tEDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tENSt6size_tEDp2Ts\">\n<span id=\"_CPPv3IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tEDp2Ts\"></span><span id=\"_CPPv2IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tEDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"hash__utils_8hpp_1a544252fbd20a6e87a823ffee9a6ec168\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash2</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash3</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tENSt6size_tEDp2Ts\" title=\"hash_combine::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Allow hash_combine to work with more than two input values. </p></dd>", "a[href=\"api/span_utils.html#_CPPv4I0E5PrintvRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5PrintvRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\">\n<span id=\"_CPPv3I0E5PrintRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\"></span><span id=\"_CPPv2I0E5PrintRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a8491adab78a97af7e08d61cab47654f7\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5PrintvRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\" title=\"Print::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">spacer</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print the contents of a span. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter13element_countEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter13element_countEv\">\n<span id=\"_CPPv3NK11BloomFilter13element_countEv\"></span><span id=\"_CPPv2NK11BloomFilter13element_countEv\"></span><span id=\"BloomFilter::element_countC\"></span><span class=\"target\" id=\"classBloomFilter_1a61bd5faf325cca2e9cc6b3fe92633434\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">element_count</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N8StringID3GetERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8StringID3GetERKNSt6stringE\">\n<span id=\"_CPPv3N8StringID3GetERKNSt6stringE\"></span><span id=\"_CPPv2N8StringID3GetERKNSt6stringE\"></span><span id=\"StringID::Get__ssCR\"></span><span class=\"target\" id=\"classStringID_1ac7ad580a7212ed2c8e5f699613ce4433\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48StringID\" title=\"StringID\"><span class=\"n\"><span class=\"pre\">StringID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get a StringID based on a string (for completeness; this is the same as the constructor.) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet6RemoveE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet6RemoveE6size_t\">\n<span id=\"_CPPv3N13IndexRangeSet6RemoveE6size_t\"></span><span id=\"_CPPv2N13IndexRangeSet6RemoveE6size_t\"></span><span id=\"IndexRangeSet::Remove__s\"></span><span class=\"target\" id=\"classIndexRangeSet_1a62e0912b01c7a3f4df13cc88ce5d670f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Remove</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove a single value from this index range. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK8IndexSet6GetMinEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexSet6GetMinEv\">\n<span id=\"_CPPv3NK8IndexSet6GetMinEv\"></span><span id=\"_CPPv2NK8IndexSet6GetMinEv\"></span><span id=\"IndexSet::GetMinC\"></span><span class=\"target\" id=\"classIndexSet_1a7ef1b84a0e5d25e9f5dd9d5d515cacb1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetMin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue9TimeQueueEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue9TimeQueueEd\">\n<span id=\"_CPPv3N9TimeQueue9TimeQueueEd\"></span><span id=\"_CPPv2N9TimeQueue9TimeQueueEd\"></span><span id=\"TimeQueue::TimeQueue__double\"></span><span class=\"target\" id=\"classTimeQueue_1a3ace6e1951bef287c0d858f9b3cadf15\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TimeQueue</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_min_wait</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">/</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N23CompressibleBloomFilter9size_listE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23CompressibleBloomFilter9size_listE\">\n<span id=\"_CPPv3N23CompressibleBloomFilter9size_listE\"></span><span id=\"_CPPv2N23CompressibleBloomFilter9size_listE\"></span><span id=\"CompressibleBloomFilter::size_list__std::vector:unsigned-l-l-i:\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1a154c88e5c738407d28aca4f269098ea2\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_list</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap12ToInternalIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap12ToInternalIDE6size_t\">\n<span id=\"_CPPv3NK8IndexMap12ToInternalIDE6size_t\"></span><span id=\"_CPPv2NK8IndexMap12ToInternalIDE6size_t\"></span><span id=\"IndexMap::ToInternalID__sC\"></span><span class=\"target\" id=\"classIndexMap_1ae40f6edc2e43a5ccac660a1bd981a279\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToInternalID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Convert an item ID to the internal position where it\u2019s stored. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter5salt_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter5salt_E\">\n<span id=\"_CPPv3N11BloomFilter5salt_E\"></span><span id=\"_CPPv2N11BloomFilter5salt_E\"></span><span id=\"BloomFilter::salt___std::vector:bloom_type:\"></span><span class=\"target\" id=\"classBloomFilter_1a3cbbd09e006c0fd9738ab6304a801566\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">salt_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap8iteratorE\">\n<span id=\"_CPPv3N7TypeMap8iteratorE\"></span><span id=\"_CPPv2N7TypeMap8iteratorE\"></span><span class=\"target\" id=\"classTypeMap_1a07253dab7fba5285f169d1e7c4a6a08a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0ENK7TypeMap4findE14const_iteratorv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK7TypeMap4findE14const_iteratorv\">\n<span id=\"_CPPv3I0ENK7TypeMap4findEv\"></span><span id=\"_CPPv2I0ENK7TypeMap4findEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1a285aa3ccfe4f6404faa74daa55cc8299\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap14const_iteratorE\" title=\"TypeMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\">\n<span id=\"_CPPv3N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\"></span><span id=\"_CPPv2N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\"></span><span id=\"CompressibleBloomFilter::CompressibleBloomFilter__BloomParametersCR\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1addba038b9996ced367b7085ef65acbf8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CompressibleBloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">BloomParameters</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map6ra_mapEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map6ra_mapEv\">\n<span id=\"_CPPv3N6ra_map6ra_mapEv\"></span><span id=\"_CPPv2N6ra_map6ra_mapEv\"></span><span id=\"ra_map::ra_map\"></span><span class=\"target\" id=\"classra__map_1ac362e2f2ec6e012541a9b86262e69916\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4NStlsERNSt7ostreamERK4Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NStlsERNSt7ostreamERK4Bool\">\n<span id=\"_CPPv3NStlsERNSt7ostreamERK4Bool\"></span><span id=\"_CPPv2NStlsERNSt7ostreamERK4Bool\"></span><span id=\"std::lshift-operator__osR.BoolCR\"></span><span class=\"target\" id=\"Bool_8hpp_1ae157d8c21713abb3376744f2677c3d6f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup operator&lt;&lt; to work with ostream (must be in std to work) </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E5CountiRK6vectorI1TERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5CountiRK6vectorI1TERK1T\">\n<span id=\"_CPPv3I0E5CountRK6vectorI1TERK1T\"></span><span id=\"_CPPv2I0E5CountRK6vectorI1TERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a1e01d5a9a511ec4c3053f6a382a30dac\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Count</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5CountiRK6vectorI1TERK1T\" title=\"Count::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">vec</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E5CountiRK6vectorI1TERK1T\" title=\"Count::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return number of times a value occurs in a vector. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E10differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E10differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1aede5c0206dc71ca00e2391362407059c\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but no S2) </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E12intersection6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E12intersection6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a351b9191b24a9bdd75d029971842a82c\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map5GetIDE8key_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map5GetIDE8key_type\">\n<span id=\"_CPPv3NK6ra_map5GetIDE8key_type\"></span><span id=\"_CPPv2NK6ra_map5GetIDE8key_type\"></span><span id=\"ra_map::GetID__key_typeC\"></span><span class=\"target\" id=\"classra__map_1ad3ca1bce2b0fb21fd8fa0d7b4890f263\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetID</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8key_typeE\" title=\"ra_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVector11SmallVectorERR11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorERR11SmallVector\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorERR11SmallVector\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorERR11SmallVector\"></span><span id=\"SmallVector::SmallVector__SmallVectorRR\"></span><span class=\"target\" id=\"classSmallVector_1aaf5b710f3555ba4044ac26d3d013aa76\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11SmallVector11SmallVectorERR11SmallVector\" title=\"SmallVector::SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map3endEv\">\n<span id=\"_CPPv3N6ra_map3endEv\"></span><span id=\"_CPPv2N6ra_map3endEv\"></span><span id=\"ra_map::end\"></span><span class=\"target\" id=\"classra__map_1aec644af1fc0d799a7631ee350fefc67d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4NK8StringID7ToValueEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8StringID7ToValueEv\">\n<span id=\"_CPPv3NK8StringID7ToValueEv\"></span><span id=\"_CPPv2NK8StringID7ToValueEv\"></span><span id=\"StringID::ToValueC\"></span><span class=\"target\" id=\"classStringID_1abd1aa3c26b9abb297ffe6b03f82708eb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToValue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap14const_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap14const_iteratorE\">\n<span id=\"_CPPv3N7TypeMap14const_iteratorE\"></span><span id=\"_CPPv2N7TypeMap14const_iteratorE\"></span><span class=\"target\" id=\"classTypeMap_1a410a7f8ed9d63015351c9d4ad57430d6\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E20symmetric_difference6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E20symmetric_difference6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a22ecce9044016a6416dfff777ab469d5\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector4valsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector4valsE\">\n<span id=\"_CPPv3N16reference_vector4valsE\"></span><span id=\"_CPPv2N16reference_vector4valsE\"></span><span id=\"reference_vector::vals__vec_t\"></span><span class=\"target\" id=\"classreference__vector_1acb886fd8063a8c9e0aead37109a240f5\"></span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector5vec_tE\" title=\"reference_vector::vec_t\"><span class=\"n\"><span class=\"pre\">vec_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vals</span></span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\">\n<span id=\"_CPPv3I0E9TransposeRK6vectorI6vectorI1TEE\"></span><span id=\"_CPPv2I0E9TransposeRK6vectorI6vectorI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a7d8c477875d17bf518c283a3a07ab8ef\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\" title=\"Transpose::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Transpose</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\" title=\"Transpose::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_vv</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Swap the order of a vector of vectors. That is, swap rows and columns. NOTE: All rows must be the same size or smaller than those above for this to work. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap3getERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap3getERK3Key\">\n<span id=\"_CPPv3N12SmallFifoMap3getERK3Key\"></span><span id=\"_CPPv2N12SmallFifoMap3getERK3Key\"></span><span id=\"SmallFifoMap::get__KeyCR\"></span><span class=\"target\" id=\"classSmallFifoMap_1aac9d197ea9054c7ebd90b0c3796ca194\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get corresponding value from cache. Return nullptr if key not in cache. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt3setI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt3setI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a2174ac0e86797e2c0e46920d5aa7a757\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::set has a particular element without modifying the set in any way. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E5PrintvRK6vectorI1TERNSt7ostreamERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5PrintvRK6vectorI1TERNSt7ostreamERKNSt6stringE\">\n<span id=\"_CPPv3I0E5PrintRK6vectorI1TERNSt7ostreamERKNSt6stringE\"></span><span id=\"_CPPv2I0E5PrintRK6vectorI1TERNSt7ostreamERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aa3011faf1fb8d9b2ef343593c844d236\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5PrintvRK6vectorI1TERNSt7ostreamERKNSt6stringE\" title=\"Print::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">spacer</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print the contents of a vector. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap5size_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap5size_E\">\n<span id=\"_CPPv3N12SmallFifoMap5size_E\"></span><span id=\"_CPPv2N12SmallFifoMap5size_E\"></span><span id=\"SmallFifoMap::size___unsigned-c\"></span><span class=\"target\" id=\"classSmallFifoMap_1aa05f07f6c74ab3d3c7d609c612479331\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vectorixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vectorixE6size_t\">\n<span id=\"_CPPv3NK16reference_vectorixE6size_t\"></span><span id=\"_CPPv2NK16reference_vectorixE6size_t\"></span><span id=\"reference_vector::subscript-operator__sC\"></span><span class=\"target\" id=\"classreference__vector_1a81f8ce9b016b40df1d8576a10043e756\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString5ClearEv\">\n<span id=\"_CPPv3N13DynamicString5ClearEv\"></span><span id=\"_CPPv2N13DynamicString5ClearEv\"></span><span id=\"DynamicString::Clear\"></span><span class=\"target\" id=\"classDynamicString_1a26ba4668551e8248f5a21a0d447394b2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413DynamicString\" title=\"DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all contents on this DynamicString. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv48IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48IndexMap\">\n<span id=\"_CPPv38IndexMap\"></span><span id=\"_CPPv28IndexMap\"></span><span id=\"IndexMap\"></span><span class=\"target\" id=\"classIndexMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></span><br/></dt><dd><p>A map of weighted indices. If a random index is selected, the probability of an index being returned is directly proportional to its weight. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange10IndexRangeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange10IndexRangeEv\">\n<span id=\"_CPPv3N10IndexRange10IndexRangeEv\"></span><span id=\"_CPPv2N10IndexRange10IndexRangeEv\"></span><span id=\"IndexRange::IndexRange\"></span><span class=\"target\" id=\"classIndexRange_1a2ceb9909350646e004fa3703632a21de\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter6insertEPKcRKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter6insertEPKcRKNSt6size_tE\">\n<span id=\"_CPPv3N11BloomFilter6insertEPKcRKNSt6size_tE\"></span><span id=\"_CPPv2N11BloomFilter6insertEPKcRKNSt6size_tE\"></span><span id=\"BloomFilter::insert__cCP.std::sCR\"></span><span class=\"target\" id=\"classBloomFilter_1ab252e3ec643f2727feb44f8f23486a80\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter5clearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter5clearEv\">\n<span id=\"_CPPv3N11BloomFilter5clearEv\"></span><span id=\"_CPPv2N11BloomFilter5clearEv\"></span><span id=\"BloomFilter::clear\"></span><span class=\"target\" id=\"classBloomFilter_1a03a60de35a49eb2bf82b5db6ec20deff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Resets table to starting conditions, as if nothing had been added. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E12FindMinIndex6size_tRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12FindMinIndex6size_tRK1T\">\n<span id=\"_CPPv3I0E12FindMinIndexRK1T\"></span><span id=\"_CPPv2I0E12FindMinIndexRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a14c17aea057f86ecf5ddc62a5d8eacfb\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMinIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12FindMinIndex6size_tRK1T\" title=\"FindMinIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the index with the minimal value (picks first in cases of a tie). </p></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue5ClearEv\">\n<span id=\"_CPPv3N9TimeQueue5ClearEv\"></span><span id=\"_CPPv2N9TimeQueue5ClearEv\"></span><span id=\"TimeQueue::Clear\"></span><span class=\"target\" id=\"classTimeQueue_1a859e221ed564d863b1788ba1c9994ad4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Empty the TimeQueue. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\"></span><span id=\"SmallVectorTemplateCommon::SmallVectorTemplateCommon__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a7983dff935d29e28b72861a688985e0e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\">\n<span id=\"_CPPv3I000E6NoneOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span id=\"_CPPv2I000E6NoneOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1ac0ef35787c09062bc92f4013f143470d\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NoneOf</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"NoneOf::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"NoneOf::ELEMENT_T\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"NoneOf::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map5beginEv\">\n<span id=\"_CPPv3N6ra_map5beginEv\"></span><span id=\"_CPPv2N6ra_map5beginEv\"></span><span id=\"ra_map::begin\"></span><span class=\"target\" id=\"classra__map_1aaad1d31e5b5cd40c14be98872cf54f25\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap9GetWeightE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap9GetWeightE6size_t\">\n<span id=\"_CPPv3NK17UnorderedIndexMap9GetWeightE6size_t\"></span><span id=\"_CPPv2NK17UnorderedIndexMap9GetWeightE6size_t\"></span><span id=\"UnorderedIndexMap::GetWeight__sC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1adebc8f83fb827a22bd50dfb1a63f5980\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E12intersection6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E12intersection6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1ae87fbdad417b62f1eb4959a2b111c013\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap9StringMapERK9StringMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap9StringMapERK9StringMap\">\n<span id=\"_CPPv3N9StringMap9StringMapERK9StringMap\"></span><span id=\"_CPPv2N9StringMap9StringMapERK9StringMap\"></span><span id=\"StringMap::StringMap__StringMapCR\"></span><span class=\"target\" id=\"classStringMap_1afc94e7aef54d95bb1b076e6b3d378f0f\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N9StringMap9StringMapERK9StringMap\" title=\"StringMap::StringMap\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache9cache_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache9cache_mapE\">\n<span id=\"_CPPv3N5Cache9cache_mapE\"></span><span id=\"_CPPv2N5Cache9cache_mapE\"></span><span id=\"Cache::cache_map__std::unordered_map:KEY.T.HASH.PRED.ALLOC:\"></span><span class=\"target\" id=\"classCache_1a83cc50bdcaa6a2507b3dd14c09127627\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::HASH\"><span class=\"n\"><span class=\"pre\">HASH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::PRED\"><span class=\"n\"><span class=\"pre\">PRED</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::ALLOC\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cache_map</span></span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv423CompressibleBloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv423CompressibleBloomFilter\">\n<span id=\"_CPPv323CompressibleBloomFilter\"></span><span id=\"_CPPv223CompressibleBloomFilter\"></span><span id=\"CompressibleBloomFilter\"></span><span class=\"target\" id=\"classCompressibleBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CompressibleBloomFilter</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><br/></dt><dd><p>A Bloom filter that can be compressed. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\">\n<span id=\"_CPPv3I00E13FindIntersectRK6vectorI1TERK2C2\"></span><span id=\"_CPPv2I00E13FindIntersectRK6vectorI1TERK2C2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aeae0877915673ee462d3ae1546cb1e74\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\" title=\"FindIntersect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindIntersect</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\" title=\"FindIntersect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\" title=\"FindIntersect::C2\"><span class=\"n\"><span class=\"pre\">C2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the intersection between this vector and another container. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\">\n<span id=\"_CPPv3I0DpE6ConcatRK6vectorI1TEDpRK2Vs\"></span><span id=\"_CPPv2I0DpE6ConcatRK6vectorI1TEDpRK2Vs\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Vs</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a336d39771157f1dc92bd25d824257f45\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\" title=\"Concat::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Concat</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\" title=\"Concat::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\" title=\"Concat::Vs\"><span class=\"n\"><span class=\"pre\">Vs</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Concatenate two or more vectors together, creating a new vector. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N11SmallVectoraSENSt16initializer_listI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSENSt16initializer_listI1TEE\">\n<span id=\"_CPPv3N11SmallVectoraSENSt16initializer_listI1TEE\"></span><span id=\"_CPPv2N11SmallVectoraSENSt16initializer_listI1TEE\"></span><span id=\"SmallVector::assign-operator__std::initializer_list:T:\"></span><span class=\"target\" id=\"classSmallVector_1a53eff1ce096c2626a444ac149294b295\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">IL</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map9GetLayoutEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map9GetLayoutEv\">\n<span id=\"_CPPv3NK6ra_map9GetLayoutEv\"></span><span id=\"_CPPv2NK6ra_map9GetLayoutEv\"></span><span id=\"ra_map::GetLayoutC\"></span><span class=\"target\" id=\"classra__map_1a4a443e7904497164513f5c4acb35c230\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8layout_tE\" title=\"ra_map::layout_t\"><span class=\"n\"><span class=\"pre\">layout_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetLayout</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon5frontEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon5frontEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon5frontEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon5frontEv\"></span><span id=\"SmallVectorTemplateCommon::frontC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a422465a387c5b3b0164d919cad4a9de9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\" title=\"SmallVectorTemplateCommon::const_reference\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">front</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SmallVector.hpp<a class=\"headerlink\" href=\"#smallvector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in replacement for std::vector with optimization to handle small vector sizes without dynamic allocation. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal \u201csmall\u201d cases to be fast without losing generality for large inputs. </p>", "a[href=\"api/IndexSet.html#_CPPv4NK13IndexRangeSet10_FindRangeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13IndexRangeSet10_FindRangeE6size_t\">\n<span id=\"_CPPv3NK13IndexRangeSet10_FindRangeE6size_t\"></span><span id=\"_CPPv2NK13IndexRangeSet10_FindRangeE6size_t\"></span><span id=\"IndexRangeSet::_FindRange__sC\"></span><span class=\"target\" id=\"classIndexRangeSet_1aba556b914f00fff8a407bee53e3d6a08\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_FindRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon4backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon4backEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon4backEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon4backEv\"></span><span id=\"SmallVectorTemplateCommon::back\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1af2dbccf123a0b2be6dde8663ae31a84f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\" title=\"SmallVectorTemplateCommon::reference\"><span class=\"n\"><span class=\"pre\">reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4I0EN8StringID3GetE8StringIDv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN8StringID3GetE8StringIDv\">\n<span id=\"_CPPv3I0EN8StringID3GetEv\"></span><span id=\"_CPPv2I0EN8StringID3GetEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classStringID_1aa0e54cfd4f6151288d4021212ef746c0\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48StringID\" title=\"StringID\"><span class=\"n\"><span class=\"pre\">StringID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get a StringID based on a StringType or another type with a static ToString() member function. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap13needs_refreshE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap13needs_refreshE\">\n<span id=\"_CPPv3N17UnorderedIndexMap13needs_refreshE\"></span><span id=\"_CPPv2N17UnorderedIndexMap13needs_refreshE\"></span><span id=\"UnorderedIndexMap::needs_refresh__b\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1ab2b92abfc301c24e6ea13d50aae962b3\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">needs_refresh</span></span></span><br/></dt><dd><p>Are tree weights out of date? </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMapD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMapD0Ev\">\n<span id=\"_CPPv3N17UnorderedIndexMapD0Ev\"></span><span id=\"_CPPv2N17UnorderedIndexMapD0Ev\"></span><span id=\"UnorderedIndexMap::~UnorderedIndexMap\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a92c3679c71373060526c5d06be19fbc0\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~UnorderedIndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4I0EN13DynamicStringlsER13DynamicStringRR7IN_TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN13DynamicStringlsER13DynamicStringRR7IN_TYPE\">\n<span id=\"_CPPv3I0EN13DynamicStringlsERR7IN_TYPE\"></span><span id=\"_CPPv2I0EN13DynamicStringlsERR7IN_TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IN_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDynamicString_1a01a03ea1e182cc8c0ef674df6f6ff51f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413DynamicString\" title=\"DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0EN13DynamicStringlsER13DynamicStringRR7IN_TYPE\" title=\"DynamicString::operator&lt;&lt;::IN_TYPE\"><span class=\"n\"><span class=\"pre\">IN_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Allow operator&lt;&lt; to append to the back of a DynamicString. </p></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap4sizeEv\">\n<span id=\"_CPPv3N9StringMap4sizeEv\"></span><span id=\"_CPPv2N9StringMap4sizeEv\"></span><span id=\"StringMap::size\"></span><span class=\"target\" id=\"classStringMap_1ab678ca2d52f38ed0df30645fecbda1c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/span_utils.html#_CPPv4I0ENStrsERNSt7istreamERNSt7istreamENSt4spanI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENStrsERNSt7istreamERNSt7istreamENSt4spanI1TEE\">\n<span id=\"_CPPv3I0ENStrsERNSt7istreamENSt4spanI1TEE\"></span><span id=\"_CPPv2I0ENStrsERNSt7istreamENSt4spanI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a5b22f9caa508c5570bd4f7dfe78a1396\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;&gt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0ENStrsERNSt7istreamERNSt7istreamENSt4spanI1TEE\" title=\"std::operator&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph5GraphERK5Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph5GraphERK5Graph\">\n<span id=\"_CPPv3N5Graph5GraphERK5Graph\"></span><span id=\"_CPPv2N5Graph5GraphERK5Graph\"></span><span id=\"Graph::Graph__GraphCR\"></span><span class=\"target\" id=\"classGraph_1ae27796a1bff123803484bffafe48dfa1\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Graph</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N5Graph5GraphERK5Graph\" title=\"Graph::Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Copy constructor. </p></dd>", "a[href=\"api/Cache.html#_CPPv4N5CacheaSERK5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5CacheaSERK5Cache\">\n<span id=\"_CPPv3N5CacheaSERK5Cache\"></span><span id=\"_CPPv2N5CacheaSERK5Cache\"></span><span id=\"Cache::assign-operator__CacheCR\"></span><span class=\"target\" id=\"classCache_1a696ac265702e359453a7e6d50e74d54e\"></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_mapixE8key_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_mapixE8key_type\">\n<span id=\"_CPPv3N6ra_mapixE8key_type\"></span><span id=\"_CPPv2N6ra_mapixE8key_type\"></span><span id=\"ra_map::subscript-operator__key_type\"></span><span class=\"target\" id=\"classra__map_1ab5d2597c653c454603e046d29e2cf549\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8key_typeE\" title=\"ra_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Is value included? (0 or 1). </p><p>Index into the ra_map by key. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector3endEv\">\n<span id=\"_CPPv3NK16reference_vector3endEv\"></span><span id=\"_CPPv2NK16reference_vector3endEv\"></span><span id=\"reference_vector::endC\"></span><span class=\"target\" id=\"classreference__vector_1aa849a3cf1c681f52773bc4d23b9d32f3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_t5VALS1E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_t5VALS1E\">\n<span id=\"_CPPv3N8IndexSet7index_t5VALS1E\"></span><span id=\"_CPPv2N8IndexSet7index_t5VALS1E\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800ae3d9bf88187cb294311995d56b18da62\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VALS1</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange6SetEndE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange6SetEndE6size_t\">\n<span id=\"_CPPv3N10IndexRange6SetEndE6size_t\"></span><span id=\"_CPPv2N10IndexRange6SetEndE6size_t\"></span><span id=\"IndexRange::SetEnd__s\"></span><span class=\"target\" id=\"classIndexRange_1a545fc6951f35529aebc3c10c59dfd7e5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetEnd</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMapixERK8StringID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMapixERK8StringID\">\n<span id=\"_CPPv3N9StringMapixERK8StringID\"></span><span id=\"_CPPv2N9StringMapixERK8StringID\"></span><span id=\"StringMap::subscript-operator__StringIDCR\"></span><span class=\"target\" id=\"classStringMap_1ad2877d79070148bc3454eeef505683e1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48StringID\" title=\"StringID\"><span class=\"n\"><span class=\"pre\">StringID</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\">\n<span id=\"_CPPv3NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"_CPPv2NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"BloomFilter::compute_indices__bloom_typeCR.std::sR.std::sRC\"></span><span class=\"target\" id=\"classBloomFilter_1a7f2378bd107073ecfb277887fec3cb5d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compute_indices</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit_index</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\">\n<span id=\"_CPPv3I0E23SmallVectorTemplateBaseI1TXL1EEE\"></span><span id=\"_CPPv2I0E23SmallVectorTemplateBaseI1TXtrueEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>SmallVectorTemplateBase&lt;TriviallyCopyable = true&gt; - This is where we put method implementations that are designed to work with POD-like T\u2019s. </p></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString3SetE6size_tRK7value_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString3SetE6size_tRK7value_t\">\n<span id=\"_CPPv3N13DynamicString3SetE6size_tRK7value_t\"></span><span id=\"_CPPv2N13DynamicString3SetE6size_tRK7value_t\"></span><span id=\"DynamicString::Set__s.value_tCR\"></span><span class=\"target\" id=\"classDynamicString_1ad067bfba2c0554536d68867f18ec73f2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413DynamicString\" title=\"DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Set</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13DynamicString7value_tE\" title=\"DynamicString::value_t\"><span class=\"n\"><span class=\"pre\">value_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the value of a specified component to the provided function. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap4cendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap4cendEv\">\n<span id=\"_CPPv3NK7TypeMap4cendEv\"></span><span id=\"_CPPv2NK7TypeMap4cendEv\"></span><span id=\"TypeMap::cendC\"></span><span class=\"target\" id=\"classTypeMap_1a843a8f8c12846ca37cff26f7a4b87bde\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap14const_iteratorE\" title=\"TypeMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/hash_utils.html#_CPPv4NK13ContainerHashclERK9Container\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13ContainerHashclERK9Container\">\n<span id=\"_CPPv3NK13ContainerHashclERK9Container\"></span><span id=\"_CPPv2NK13ContainerHashclERK9Container\"></span><span id=\"ContainerHash::call-operator__ContainerCRC\"></span><span class=\"target\" id=\"structContainerHash_1a9d6505f5b0a8c53a6988933eb1d0d692\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE13ContainerHash\" title=\"ContainerHash::Container\"><span class=\"n\"><span class=\"pre\">Container</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4I00E11valsort_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11valsort_map\">\n<span id=\"_CPPv3I00E11valsort_map\"></span><span id=\"_CPPv2I00E11valsort_map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvalsort__map\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter6insertEPKhRKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter6insertEPKhRKNSt6size_tE\">\n<span id=\"_CPPv3N11BloomFilter6insertEPKhRKNSt6size_tE\"></span><span id=\"_CPPv2N11BloomFilter6insertEPKhRKNSt6size_tE\"></span><span id=\"BloomFilter::insert__unsigned-cCP.std::sCR\"></span><span class=\"target\" id=\"classBloomFilter_1a9f3cb9bb7326236c3b92043ab4b86a89\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">key_begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBaseI1TXtrueEE18uninitialized_copyEP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a8928f119c2a8c7af5949593b897295e7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_copy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span>, <span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_same</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">remove_const</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements into it as needed. </p></dd>", "a[href=\"api/hash_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">hash_utils.hpp<a class=\"headerlink\" href=\"#hash-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file provides tools for hashing values and containers. </p>", "a[href=\"api/hash_utils.html#_CPPv412hash_combineNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412hash_combineNSt6size_tE\">\n<span id=\"_CPPv312hash_combineNSt6size_tE\"></span><span id=\"_CPPv212hash_combineNSt6size_tE\"></span><span id=\"hash_combine__std::sCE\"></span><span class=\"target\" id=\"hash__utils_8hpp_1ab8cf43524ab493d31b8274aca0a1f684\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash1</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>If hash_combine has a single value, there\u2019s nothing to combine; just return it! </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon13size_in_bytesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon13size_in_bytesEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon13size_in_bytesEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon13size_in_bytesEv\"></span><span id=\"SmallVectorTemplateCommon::size_in_bytesC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a7148c74e84e553b6477fff53d23e4b75\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue7SetTimeEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue7SetTimeEd\">\n<span id=\"_CPPv3N9TimeQueue7SetTimeEd\"></span><span id=\"_CPPv2N9TimeQueue7SetTimeEd\"></span><span id=\"TimeQueue::SetTime__double\"></span><span class=\"target\" id=\"classTimeQueue_1a472f2201a007799b392a05675cfcef81\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetTime</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_time</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK8IndexSet6GetMaxEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexSet6GetMaxEv\">\n<span id=\"_CPPv3NK8IndexSet6GetMaxEv\"></span><span id=\"_CPPv2NK8IndexSet6GetMaxEv\"></span><span id=\"IndexSet::GetMaxC\"></span><span class=\"target\" id=\"classIndexSet_1ac0901a6216fadd8c769f7d54173a7b39\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetMax</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon4rendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon4rendEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon4rendEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon4rendEv\"></span><span id=\"SmallVectorTemplateCommon::rend\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a6ef884b904b271acc60b856317504c6e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\" title=\"SmallVectorTemplateCommon::reverse_iterator\"><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache6cbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache6cbeginEv\">\n<span id=\"_CPPv3NK10QueueCache6cbeginEv\"></span><span id=\"_CPPv2NK10QueueCache6cbeginEv\"></span><span id=\"QueueCache::cbeginC\"></span><span class=\"target\" id=\"classQueueCache_1aa45a27c78557cc50022a1fcfc9307a2e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_iterator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a constant iterator to the beginning of the cache queue. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_mapD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_mapD0Ev\">\n<span id=\"_CPPv3N11valsort_mapD0Ev\"></span><span id=\"_CPPv2N11valsort_mapD0Ev\"></span><span id=\"valsort_map::~valsort_map\"></span><span class=\"target\" id=\"classvalsort__map_1af1f5ceddbd1c259bcf58fc62566cdf10\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~valsort_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\">\n<span id=\"_CPPv3I00E8flip_mapRK3mapI1A1BE\"></span><span id=\"_CPPv2I00E8flip_mapRK3mapI1A1BE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">B</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a158ef47863d1731cc88934461efb6071\"></span><a class=\"reference internal\" href=\"../base/api/map.html#_CPPv4I00DpE8multimap\" title=\"multimap\"><span class=\"n\"><span class=\"pre\">multimap</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flip_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/map.html#_CPPv4I00DpE3map\" title=\"map\"><span class=\"n\"><span class=\"pre\">map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">src</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an map&lt;A,B&gt; and return the flipped map (now multimap to be safe): multimap&lt;B,A&gt; </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map8key_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map8key_typeE\">\n<span id=\"_CPPv3N11valsort_map8key_typeE\"></span><span id=\"_CPPv2N11valsort_map8key_typeE\"></span><span class=\"target\" id=\"classvalsort__map_1a564700a38fb0284ffdf66debf79f5223\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11valsort_map\" title=\"valsort_map::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase15SmallVectorBaseEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase15SmallVectorBaseEv\">\n<span id=\"_CPPv3N15SmallVectorBase15SmallVectorBaseEv\"></span><span id=\"_CPPv2N15SmallVectorBase15SmallVectorBaseEv\"></span><span id=\"SmallVectorBase::SmallVectorBase\"></span><span class=\"target\" id=\"classSmallVectorBase_1a0cb6b5dd6aee397aca481ec858453974\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">delete</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits9IndexBitsE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits9IndexBitsE6size_t6size_t\">\n<span id=\"_CPPv3N9IndexBits9IndexBitsE6size_t6size_t\"></span><span id=\"_CPPv2N9IndexBits9IndexBitsE6size_t6size_t\"></span><span id=\"IndexBits::IndexBits__s.s\"></span><span class=\"target\" id=\"classIndexBits_1a08ae4066a3a376bbd8a2c4c268e37398\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_val</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E11HeapExtract1TR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11HeapExtract1TR6vectorI1TE\">\n<span id=\"_CPPv3I0E11HeapExtractR6vectorI1TE\"></span><span id=\"_CPPv2I0E11HeapExtractR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a0d0aec4bcc4cd6ccedc1113234646a5e\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HeapExtract1TR6vectorI1TE\" title=\"HeapExtract::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HeapExtract</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HeapExtract1TR6vectorI1TE\" title=\"HeapExtract::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Extract maximum element from a heap. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv410IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410IndexRange\">\n<span id=\"_CPPv310IndexRange\"></span><span id=\"_CPPv210IndexRange\"></span><span id=\"IndexRange\"></span><span class=\"target\" id=\"classIndexRange\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></span><br/></dt><dd><p>Index range is a simple pair of values indicating the start and end of a series of indices. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache11SetCapacityEK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache11SetCapacityEK6size_t\">\n<span id=\"_CPPv3N10QueueCache11SetCapacityEK6size_t\"></span><span id=\"_CPPv2N10QueueCache11SetCapacityEK6size_t\"></span><span id=\"QueueCache::SetCapacity__sC\"></span><span class=\"target\" id=\"classQueueCache_1ad2f838674e487bef5a10de6df87899b1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetCapacity</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_capacity</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Resize the cache. </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMapixE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMapixE6size_t\">\n<span id=\"_CPPv3N17UnorderedIndexMapixE6size_t\"></span><span id=\"_CPPv2N17UnorderedIndexMapixE6size_t\"></span><span id=\"UnorderedIndexMap::subscript-operator__s\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a72dc53fc1eca5a07e28515afa04e5ad1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N17UnorderedIndexMap5ProxyE\" title=\"UnorderedIndexMap::Proxy\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Index into a specified ID. </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilteraNERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilteraNERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilteraNERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilteraNERK11BloomFilter\"></span><span id=\"BloomFilter::and-assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1a68dac1595b405f0b615528094cc2b13a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the intersection of two Bloom filters. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE4growE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE4growE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE4growE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE4growE6size_t\"></span><span id=\"SmallVectorTemplateBase:T.true:::grow__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a301c694e75d94b8806fe3f7bcd0e0681\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinSize</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Double the size of the allocated memory, guaranteeing space for at least one more element or MinSize if specified. </p></dd>", "a[href=\"api/hash_utils.html#_CPPv412hash_combine3PtrIKNSt6size_tEE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412hash_combine3PtrIKNSt6size_tEE6size_t\">\n<span id=\"_CPPv312hash_combine3PtrIKNSt6size_tEE6size_t\"></span><span id=\"_CPPv212hash_combine3PtrIKNSt6size_tEE6size_t\"></span><span id=\"hash_combine__Ptr:std::sC:.s\"></span><span class=\"target\" id=\"hash__utils_8hpp_1aca34322ae5a1a500af546ffe69f47907\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hashes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_hashes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Allow hash_combine to take a series of size_t\u2019s to merge into a single hash. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet10_GrowRangeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet10_GrowRangeE6size_t\">\n<span id=\"_CPPv3N13IndexRangeSet10_GrowRangeE6size_t\"></span><span id=\"_CPPv2N13IndexRangeSet10_GrowRangeE6size_t\"></span><span id=\"IndexRangeSet::_GrowRange__s\"></span><span class=\"target\" id=\"classIndexRangeSet_1a3f270d7440ce1779c746c4c272bf1115\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_GrowRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap3GetERK8StringID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap3GetERK8StringID\">\n<span id=\"_CPPv3N9StringMap3GetERK8StringID\"></span><span id=\"_CPPv2N9StringMap3GetERK8StringID\"></span><span id=\"StringMap::Get__StringIDCR\"></span><span class=\"target\" id=\"classStringMap_1a6ab26ff2c9605ca91ef991d2914cf1f6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48StringID\" title=\"StringID\"><span class=\"n\"><span class=\"pre\">StringID</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv416build_graph_ring6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416build_graph_ring6size_tR6Random\">\n<span id=\"_CPPv316build_graph_ring6size_tR6Random\"></span><span id=\"_CPPv216build_graph_ring6size_tR6Random\"></span><span id=\"build_graph_ring__s.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a5fa52fdb419e3b99dba2716f061b46d5\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_ring</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a graph where all vertics are degree two and form a single ring. </p></dd>", "a[href=\"api/hash_utils.html#_CPPv4IDpE11CombineHashNSt6size_tEDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11CombineHashNSt6size_tEDpRK2Ts\">\n<span id=\"_CPPv3IDpE11CombineHashDpRK2Ts\"></span><span id=\"_CPPv2IDpE11CombineHashDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"hash__utils_8hpp_1a3dea1908685ba35d5810639ed0f763cb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CombineHash</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE11CombineHashNSt6size_tEDpRK2Ts\" title=\"CombineHash::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Alias hash_combine() to CombineHash()</p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap4findERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap4findERK3Key\">\n<span id=\"_CPPv3N12SmallFifoMap4findERK3Key\"></span><span id=\"_CPPv2N12SmallFifoMap4findERK3Key\"></span><span id=\"SmallFifoMap::find__KeyCR\"></span><span class=\"target\" id=\"classSmallFifoMap_1ad5632d3f00f0cebcc4e64f9531120011\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap8iteratorE\" title=\"SmallFifoMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find key-value pair iterator in cache. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set5eraseERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set5eraseERK1T\">\n<span id=\"_CPPv3N6ra_set5eraseERK1T\"></span><span id=\"_CPPv2N6ra_set5eraseERK1T\"></span><span id=\"ra_set::erase__TCR\"></span><span class=\"target\" id=\"classra__set_1a7f3c21f68adf7ee3df2743a67af225fe\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">erase</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Erase a specific value from the container. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon13const_pointerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon13const_pointerE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon13const_pointerE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon13const_pointerE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a8cf53ed38e2874d4729dda84d173c1d0\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon5beginEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon5beginEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon5beginEv\"></span><span id=\"SmallVectorTemplateCommon::begin\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a8f58a1cbc362f31d59edce80897f06f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\" title=\"SmallVectorTemplateCommon::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I0E11MapToStringNSt6stringERK5MAP_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11MapToStringNSt6stringERK5MAP_T\">\n<span id=\"_CPPv3I0E11MapToStringRK5MAP_T\"></span><span id=\"_CPPv2I0E11MapToStringRK5MAP_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1ae0b4d089847db8383c636cf81cfc8128\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MapToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11MapToStringNSt6stringERK5MAP_T\" title=\"MapToString::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter4sizeEv\">\n<span id=\"_CPPv3NK11BloomFilter4sizeEv\"></span><span id=\"_CPPv2NK11BloomFilter4sizeEv\"></span><span id=\"BloomFilter::sizeC\"></span><span class=\"target\" id=\"classBloomFilter_1a2d84f2dffe241edd1a5438d89ff7d556\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCacheD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCacheD0Ev\">\n<span id=\"_CPPv3N10QueueCacheD0Ev\"></span><span id=\"_CPPv2N10QueueCacheD0Ev\"></span><span id=\"QueueCache::~QueueCache\"></span><span class=\"target\" id=\"classQueueCache_1a976b0d2644851da7ef897ef497fac3e8\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~QueueCache</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/span_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">span_utils.hpp<a class=\"headerlink\" href=\"#span-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate std::span. </p>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMappLER8IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMappLER8IndexMap\">\n<span id=\"_CPPv3N8IndexMappLER8IndexMap\"></span><span id=\"_CPPv2N8IndexMappLER8IndexMap\"></span><span id=\"IndexMap::add-assign-operator__IndexMapR\"></span><span class=\"target\" id=\"classIndexMap_1a04d90c5708d7170f24cf32b5405e0237\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">+=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add the weights in another index map to this one. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSet6InsertE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSet6InsertE6size_t\">\n<span id=\"_CPPv3N13IndexRangeSet6InsertE6size_t\"></span><span id=\"_CPPv2N13IndexRangeSet6InsertE6size_t\"></span><span id=\"IndexRangeSet::Insert__s\"></span><span class=\"target\" id=\"classIndexRangeSet_1ad0b591ab2541547da6fd2ea7c2184322\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into this range set. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBase18uninitialized_copyE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBase18uninitialized_copyE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_1abe69402f037af68cc15a60a034f1b581\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_copy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_copy::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements as needed. </p></dd>", "a[href=\"api/StringMap.html#_CPPv4NK8StringID8ToStringEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8StringID8ToStringEv\">\n<span id=\"_CPPv3NK8StringID8ToStringEv\"></span><span id=\"_CPPv2NK8StringID8ToStringEv\"></span><span id=\"StringID::ToStringC\"></span><span class=\"target\" id=\"classStringID_1a10725cea95b76471fe092dda1e940b63\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase8set_sizeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase8set_sizeE6size_t\">\n<span id=\"_CPPv3N15SmallVectorBase8set_sizeE6size_t\"></span><span id=\"_CPPv2N15SmallVectorBase8set_sizeE6size_t\"></span><span id=\"SmallVectorBase::set_size__s\"></span><span class=\"target\" id=\"classSmallVectorBase_1a250554bf65b00950ac3092186f886dc4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the array size to <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code>, which the current array must have enough capacity for.</p><p>This does not construct or destroy any elements in the vector.</p><p>Clients can use this in conjunction with capacity() to write past the end of the buffer when they know that more elements are available, and only update the size later. This avoids the cost of value initializing elements which will only be overwritten. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet11_Index_ValsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet11_Index_ValsE\">\n<span id=\"_CPPv3N8IndexSet11_Index_ValsE\"></span><span id=\"_CPPv2N8IndexSet11_Index_ValsE\"></span><span id=\"IndexSet::_Index_Vals\"></span><span class=\"target\" id=\"structIndexSet_1_1__Index__Vals\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_Index_Vals</span></span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache8capacityE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache8capacityE\">\n<span id=\"_CPPv3N10QueueCache8capacityE\"></span><span id=\"_CPPv2N10QueueCache8capacityE\"></span><span id=\"QueueCache::capacity__s\"></span><span class=\"target\" id=\"classQueueCache_1a71cfac71d5a06236d09e6dd777b1cea0\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity</span></span></span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4NK13DynamicString7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13DynamicString7GetSizeEv\">\n<span id=\"_CPPv3NK13DynamicString7GetSizeEv\"></span><span id=\"_CPPv2NK13DynamicString7GetSizeEv\"></span><span id=\"DynamicString::GetSizeC\"></span><span class=\"target\" id=\"classDynamicString_1a6e42e225d666cf42435f386d88a42e2a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many string components (functions or continuous substrings) are in this DynamicString? </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph12SetEdgePairsE6size_t6size_tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph12SetEdgePairsE6size_t6size_tb\">\n<span id=\"_CPPv3N5Graph12SetEdgePairsE6size_t6size_tb\"></span><span id=\"_CPPv2N5Graph12SetEdgePairsE6size_t6size_tb\"></span><span id=\"Graph::SetEdgePairs__s.s.b\"></span><span class=\"target\" id=\"classGraph_1a7131baf81950bb8a4e353474e7840965\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetEdgePairs</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the status as to whether a pair of edges (in both direction) exist. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph13WeightedGraphE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph13WeightedGraphE6size_t\">\n<span id=\"_CPPv3N13WeightedGraph13WeightedGraphE6size_t\"></span><span id=\"_CPPv2N13WeightedGraph13WeightedGraphE6size_t\"></span><span id=\"WeightedGraph::WeightedGraph__s\"></span><span class=\"target\" id=\"classWeightedGraph_1a57bc66c1db7af073e6fbcc62a0c6cc79\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_nodes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>The weight of each edge in the graph. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon16reverse_iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon16reverse_iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a3448acba9ca27a1ef777a92b45c9a032\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\" title=\"SmallVectorTemplateCommon::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap5ProxyaSEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap5ProxyaSEd\">\n<span id=\"_CPPv3N8IndexMap5ProxyaSEd\"></span><span id=\"_CPPv2N8IndexMap5ProxyaSEd\"></span><span id=\"IndexMap::Proxy::assign-operator__double\"></span><span class=\"target\" id=\"classIndexMap_1_1Proxy_1afe172d0ed0411096da2db0dba3b1bb23\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8IndexMap5ProxyE\" title=\"IndexMap::Proxy\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\">\n<span id=\"_CPPv3I00E8ToVectorRKNSt3mapI7INDEX_T1TEE1T7INDEX_T\"></span><span id=\"_CPPv2I00E8ToVectorRKNSt3mapI7INDEX_T1TEE1T7INDEX_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a3f8b6f3b8d0a2e3de91bedf7cf4bf3ff\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">default_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index_cap</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">32768</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a map to a vector. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map3HasE8key_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map3HasE8key_type\">\n<span id=\"_CPPv3NK6ra_map3HasE8key_type\"></span><span id=\"_CPPv2NK6ra_map3HasE8key_type\"></span><span id=\"ra_map::Has__key_typeC\"></span><span class=\"target\" id=\"classra__map_1ab6fc58a84ac3b53baf372cfe79be77bb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8key_typeE\" title=\"ra_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_tE\">\n<span id=\"_CPPv3N8IndexSet7index_tE\"></span><span id=\"_CPPv2N8IndexSet7index_tE\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800\"></span><span class=\"k\"><span class=\"pre\">enum</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">index_t</span></span></span><br/></dt><dd><p><em>Values:</em></p></dd>", "a[href=\"api/QueueCache.html#_CPPv4N10QueueCache3PutERK3KeyRK5Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10QueueCache3PutERK3KeyRK5Value\">\n<span id=\"_CPPv3N10QueueCache3PutERK3KeyRK5Value\"></span><span id=\"_CPPv2N10QueueCache3PutERK3KeyRK5Value\"></span><span id=\"QueueCache::Put__KeyCR.ValueCR\"></span><span class=\"target\" id=\"classQueueCache_1a2e4eb536145f76bd461776e380cbc5c2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10QueueCache12cache_list_tE\" title=\"QueueCache::cache_list_t\"><span class=\"n\"><span class=\"pre\">cache_list_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Put</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Store element in front of cache. </p></dd>", "a[href=\"api/ra_set.html#_CPPv4I0E6ra_set\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6ra_set\">\n<span id=\"_CPPv3I0E6ra_set\"></span><span id=\"_CPPv2I0E6ra_set\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classra__set\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></span><br/></dt><dd><p>This class uses a combination of a hashtable (std::unordered_map) and vector to lookup insert, lookup, and delete values in constant time, while still being able to step through all values (albeit in an arbitrary order).</p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map11valsort_mapEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map11valsort_mapEv\">\n<span id=\"_CPPv3N11valsort_map11valsort_mapEv\"></span><span id=\"_CPPv2N11valsort_map11valsort_mapEv\"></span><span id=\"valsort_map::valsort_map\"></span><span class=\"target\" id=\"classvalsort__map_1a9416460e792977a250c0550bc8ddad27\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap6oldestE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap6oldestE\">\n<span id=\"_CPPv3N12SmallFifoMap6oldestE\"></span><span id=\"_CPPv2N12SmallFifoMap6oldestE\"></span><span id=\"SmallFifoMap::oldest__unsigned-c\"></span><span class=\"target\" id=\"classSmallFifoMap_1a760937e949fade79cb105a98fa475582\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">oldest</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4NK16reference_vector8IteratoreqERK8Iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16reference_vector8IteratoreqERK8Iterator\">\n<span id=\"_CPPv3NK16reference_vector8IteratoreqERK8Iterator\"></span><span id=\"_CPPv2NK16reference_vector8IteratoreqERK8Iterator\"></span><span id=\"reference_vector::Iterator::eq-operator__IteratorCRC\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a237e9be9a06d3782b41953c7e23d353f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Iterator comparisons. </p></dd>", "a[href=\"api/IndexMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">IndexMap.hpp<a class=\"headerlink\" href=\"#indexmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple class to weight items differently within a container and return the correct index. </p><p>\nAn IndexMap is a container where each item has a specified weight (specified as a double). The total weight of the container determines the max index point. When indexing into the container, each item is represented by a range of values equal to it\u2019s weight. Randomly indexing into the container will provide either item with a probability proportional to its weight.</p>", "a[href=\"api/SmallVector.html#_CPPv4NK25SmallVectorTemplateCommon17capacity_in_bytesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon17capacity_in_bytesEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon17capacity_in_bytesEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon17capacity_in_bytesEv\"></span><span id=\"SmallVectorTemplateCommon::capacity_in_bytesC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a459709e95d96d20dc41b9bc18be709f7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N13WeightedGraph13WeightedGraphERK13WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WeightedGraph13WeightedGraphERK13WeightedGraph\">\n<span id=\"_CPPv3N13WeightedGraph13WeightedGraphERK13WeightedGraph\"></span><span id=\"_CPPv2N13WeightedGraph13WeightedGraphERK13WeightedGraph\"></span><span id=\"WeightedGraph::WeightedGraph__WeightedGraphCR\"></span><span class=\"target\" id=\"classWeightedGraph_1ac4d6ddd3813457e4d1ce689c81a890c8\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13WeightedGraph13WeightedGraphERK13WeightedGraph\" title=\"WeightedGraph::WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Copy constructor. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon15difference_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon15difference_typeE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon15difference_typeE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon15difference_typeE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a4ba052f14505489983802f8bff785cfa\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">ptrdiff_t</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N21AlignedCharArrayUnion6bufferE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N21AlignedCharArrayUnion6bufferE\">\n<span id=\"_CPPv3N21AlignedCharArrayUnion6bufferE\"></span><span id=\"_CPPv2N21AlignedCharArrayUnion6bufferE\"></span><span id=\"AlignedCharArrayUnion::buffer__cA\"></span><span class=\"target\" id=\"structAlignedCharArrayUnion_1a20855a0f9ba8ea6d8acdda6b0b8c8ba6\"></span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">buffer</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"k\"><span class=\"pre\">sizeof</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"n\"><span class=\"pre\">detail</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">SizerImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE21AlignedCharArrayUnion\" title=\"AlignedCharArrayUnion::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE21AlignedCharArrayUnion\" title=\"AlignedCharArrayUnion::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">]</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilterneERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilterneERK11BloomFilter\">\n<span id=\"_CPPv3NK11BloomFilterneERK11BloomFilter\"></span><span id=\"_CPPv2NK11BloomFilterneERK11BloomFilter\"></span><span id=\"BloomFilter::neq-operator__BloomFilterCRC\"></span><span class=\"target\" id=\"classBloomFilter_1a63e45d5b2b4fc492bd318d27d0f4a90f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap12DeferRefreshEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap12DeferRefreshEv\">\n<span id=\"_CPPv3N8IndexMap12DeferRefreshEv\"></span><span id=\"_CPPv2N8IndexMap12DeferRefreshEv\"></span><span id=\"IndexMap::DeferRefresh\"></span><span class=\"target\" id=\"classIndexMap_1a8b81b5c1de97888127332da350a9c9db\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DeferRefresh</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Indicate that we need to adjust weights before relying on them in the future; this will prevent refreshes from occuring immediately and is useful when many updates to weights are likely to be done before any are accessed again. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap6AdjustE6size_tKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap6AdjustE6size_tKd\">\n<span id=\"_CPPv3N8IndexMap6AdjustE6size_tKd\"></span><span id=\"_CPPv2N8IndexMap6AdjustE6size_tKd\"></span><span id=\"IndexMap::Adjust__s.doubleC\"></span><span class=\"target\" id=\"classIndexMap_1a517fe40a38c880c82ccaabb6ce5fd0c3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Adjust</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map7val_setE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map7val_setE\">\n<span id=\"_CPPv3N11valsort_map7val_setE\"></span><span id=\"_CPPv2N11valsort_map7val_setE\"></span><span id=\"valsort_map::val_set__std::set:value_type.SortOrder:\"></span><span class=\"target\" id=\"classvalsort__map_1a84993fdc5db1c2735881a4da8da5efe3\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map10value_typeE\" title=\"valsort_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11valsort_map9SortOrderE\" title=\"valsort_map::SortOrder\"><span class=\"n\"><span class=\"pre\">SortOrder</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">val_set</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet9_ToRangesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet9_ToRangesEv\">\n<span id=\"_CPPv3N8IndexSet9_ToRangesEv\"></span><span id=\"_CPPv2N8IndexSet9_ToRangesEv\"></span><span id=\"IndexSet::_ToRanges\"></span><span class=\"target\" id=\"classIndexSet_1ae557bde48c2051cde0dc79ecf47d62ec\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_ToRanges</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert the internal representation to use a ranges. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map14allocator_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map14allocator_typeE\">\n<span id=\"_CPPv3N6ra_map14allocator_typeE\"></span><span id=\"_CPPv2N6ra_map14allocator_typeE\"></span><span class=\"target\" id=\"classra__map_1aa51cd5c862519e53b0c614c5a372808c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">allocator_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Allocator\"><span class=\"n\"><span class=\"pre\">Allocator</span></span></a><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits6InsertE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits6InsertE6size_t\">\n<span id=\"_CPPv3N9IndexBits6InsertE6size_t\"></span><span id=\"_CPPv2N9IndexBits6InsertE6size_t\"></span><span id=\"IndexBits::Insert__s\"></span><span class=\"target\" id=\"classIndexBits_1aaf6b21505b1187db4d7fb96802629309\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv416load_graph_tableNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416load_graph_tableNSt6stringE\">\n<span id=\"_CPPv316load_graph_tableNSt6stringE\"></span><span id=\"_CPPv216load_graph_tableNSt6stringE\"></span><span id=\"load_graph_table__ss\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a94ba68b330de5e151df726d00a9067c8\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_table</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Load a graph from a connection matrix in a file by the specified name. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange6ExpandE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange6ExpandE6size_t\">\n<span id=\"_CPPv3N10IndexRange6ExpandE6size_t\"></span><span id=\"_CPPv2N10IndexRange6ExpandE6size_t\"></span><span id=\"IndexRange::Expand__s\"></span><span class=\"target\" id=\"classIndexRange_1a76dfc20e4375e2da0978c33d09c56fa3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Expand</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Expand this range to encompass a provided value. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache8CapacityEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache8CapacityEv\">\n<span id=\"_CPPv3NK10QueueCache8CapacityEv\"></span><span id=\"_CPPv2NK10QueueCache8CapacityEv\"></span><span id=\"QueueCache::CapacityC\"></span><span class=\"target\" id=\"classQueueCache_1a071b2be8417af696481791d28fe301fe\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Capacity</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return maximum number of elements that will fit in cache. </p></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4N12SmallFifoMap8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SmallFifoMap8iteratorE\">\n<span id=\"_CPPv3N12SmallFifoMap8iteratorE\"></span><span id=\"_CPPv2N12SmallFifoMap8iteratorE\"></span><span class=\"target\" id=\"classSmallFifoMap_1ad1cb9f8ff14dabeefa9a3c3756f4dee9\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap9storage_tE\" title=\"SmallFifoMap::storage_t\"><span class=\"n\"><span class=\"pre\">storage_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map9referenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map9referenceE\">\n<span id=\"_CPPv3N6ra_map9referenceE\"></span><span id=\"_CPPv2N6ra_map9referenceE\"></span><span class=\"target\" id=\"classra__map_1ac801d11db81e0b95081df153747698a2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map10value_typeE\" title=\"ra_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4N4Bool5ValueEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4Bool5ValueEv\">\n<span id=\"_CPPv3N4Bool5ValueEv\"></span><span id=\"_CPPv2N4Bool5ValueEv\"></span><span id=\"Bool::Value\"></span><span class=\"target\" id=\"classBool_1aa789108ca0070bf3e16e959fbb3d82f7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits6RemoveE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits6RemoveE6size_t\">\n<span id=\"_CPPv3N9IndexBits6RemoveE6size_t\"></span><span id=\"_CPPv2N9IndexBits6RemoveE6size_t\"></span><span id=\"IndexBits::Remove__s\"></span><span class=\"target\" id=\"classIndexBits_1a09ffea8052eb9430370d1f784e1a923b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Remove</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">set_utils.hpp<a class=\"headerlink\" href=\"#set-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to save and load data from classes. </p>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString7fun_setE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString7fun_setE\">\n<span id=\"_CPPv3N13DynamicString7fun_setE\"></span><span id=\"_CPPv2N13DynamicString7fun_setE\"></span><span id=\"DynamicString::fun_set__vector:value_t:\"></span><span class=\"target\" id=\"classDynamicString_1a732d0802d564b941300c6d4eae2fc4cd\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N13DynamicString7value_tE\" title=\"DynamicString::value_t\"><span class=\"n\"><span class=\"pre\">value_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_set</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange5MergeE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange5MergeE10IndexRange\">\n<span id=\"_CPPv3N10IndexRange5MergeE10IndexRange\"></span><span id=\"_CPPv2N10IndexRange5MergeE10IndexRange\"></span><span id=\"IndexRange::Merge__IndexRange\"></span><span class=\"target\" id=\"classIndexRange_1a6a9d50f94166ed525cc5174fbbe4eefa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Merge</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge this range with another. Must be adjacent or overlap! </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase4SizeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase4SizeE\">\n<span id=\"_CPPv3N15SmallVectorBase4SizeE\"></span><span id=\"_CPPv2N15SmallVectorBase4SizeE\"></span><span id=\"SmallVectorBase::Size__unsigned\"></span><span class=\"target\" id=\"classSmallVectorBase_1ab5fb6282a0f7a90cde8a138578aa9ad8\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Size</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4NK13WeightedGraph9GetWeightE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13WeightedGraph9GetWeightE6size_t6size_t\">\n<span id=\"_CPPv3NK13WeightedGraph9GetWeightE6size_t6size_t\"></span><span id=\"_CPPv2NK13WeightedGraph9GetWeightE6size_t6size_t\"></span><span id=\"WeightedGraph::GetWeight__s.sC\"></span><span class=\"target\" id=\"classWeightedGraph_1af72f122ca99f54d89d7f7c9f72ebbddb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine weight of a specific edge in this graph. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon3endEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon3endEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon3endEv\"></span><span id=\"SmallVectorTemplateCommon::end\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1af217ec0a2913b4f6b396402c84713820\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\" title=\"SmallVectorTemplateCommon::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph8SetLabelE6size_tNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph8SetLabelE6size_tNSt6stringE\">\n<span id=\"_CPPv3N5Graph8SetLabelE6size_tNSt6stringE\"></span><span id=\"_CPPv2N5Graph8SetLabelE6size_tNSt6stringE\"></span><span id=\"Graph::SetLabel__s.ss\"></span><span class=\"target\" id=\"classGraph_1ae3d8ae5ed5d9f894bb26f0feed620848\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetLabel</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">lab</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set label of node. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4IDpEN10IndexRange6ExpandEb6size_t6size_tDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN10IndexRange6ExpandEb6size_t6size_tDp2Ts\">\n<span id=\"_CPPv3IDpEN10IndexRange6ExpandE6size_t6size_tDp2Ts\"></span><span id=\"_CPPv2IDpEN10IndexRange6ExpandE6size_t6size_tDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classIndexRange_1a10af0b421241cb04c0fe4da5857d9fd5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Expand</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpEN10IndexRange6ExpandEb6size_t6size_tDp2Ts\" title=\"IndexRange::Expand::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Expand this range to encompass all provided values. </p></dd>", "a[href=\"api/Bool.html#_CPPv4N4BoolmIEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolmIEb\">\n<span id=\"_CPPv3N4BoolmIEb\"></span><span id=\"_CPPv2N4BoolmIEb\"></span><span id=\"Bool::sub-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1afaef43eee3f96a71d067ad7fcb9b9e34\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">-=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap5ClearEv\">\n<span id=\"_CPPv3N8IndexMap5ClearEv\"></span><span id=\"_CPPv2N8IndexMap5ClearEv\"></span><span id=\"IndexMap::Clear\"></span><span class=\"target\" id=\"classIndexMap_1a6c6f702c95d76228a1541e11a210a483\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reset all item weights to zero. </p></dd>", "a[href=\"api/QueueCache.html#_CPPv4NK10QueueCache8ContainsERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10QueueCache8ContainsERK3Key\">\n<span id=\"_CPPv3NK10QueueCache8ContainsERK3Key\"></span><span id=\"_CPPv2NK10QueueCache8ContainsERK3Key\"></span><span id=\"QueueCache::Contains__KeyCRC\"></span><span class=\"target\" id=\"classQueueCache_1a654ef19d35c412b10860afb4486473b2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Does cache contain key? </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E6NRange6vectorI1TE1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6NRange6vectorI1TE1T1T\">\n<span id=\"_CPPv3I0E6NRange1T1T\"></span><span id=\"_CPPv2I0E6NRange1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ad33e8b1ae5efd25f87fdece83076cb17\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6NRange6vectorI1TE1T1T\" title=\"NRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NRange</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6NRange6vectorI1TE1T1T\" title=\"NRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E6NRange6vectorI1TE1T1T\" title=\"NRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns a vector containing the numbers from. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0EN7TypeMap3GetER11mapped_typev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN7TypeMap3GetER11mapped_typev\">\n<span id=\"_CPPv3I0EN7TypeMap3GetEv\"></span><span id=\"_CPPv2I0EN7TypeMap3GetEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1a18ebcfb89a8c923ed5b05f3954ddaa84\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap11mapped_typeE\" title=\"TypeMap::mapped_type\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilterD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilterD0Ev\">\n<span id=\"_CPPv3N11BloomFilterD0Ev\"></span><span id=\"_CPPv2N11BloomFilterD0Ev\"></span><span id=\"BloomFilter::~BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter_1af31164aa81a9d3f8d6696018c169f835\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\">\n<span id=\"_CPPv3I0ENK11BloomFilter12contains_allEK13InputIteratorK13InputIterator\"></span><span id=\"_CPPv2I0ENK11BloomFilter12contains_allEK13InputIteratorK13InputIterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1a2d3805c98a8f340e1a906a81f447c0b0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_all::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains_all</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_all::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_all::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Checks whether its possible that the Bloom filter has seen all of the elements within the specified range. If so, returns <code class=\"docutils literal notranslate\"><span class=\"pre\">end</span></code>. Otherwise returns an iterator to the first element that has definitely not previously been added to the Bloom filter. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE9push_backERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE9push_backERK1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE9push_backERK1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE9push_backERK1T\"></span><span id=\"SmallVectorTemplateBase:T.true:::push_back__TCR\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a1d8eff223199ff12d45c9f5fbb659d25\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Elt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\">\n<span id=\"_CPPv3I00DpE6AppendR6vectorI1TERK2V1DpRK2Vs\"></span><span id=\"_CPPv2I00DpE6AppendR6vectorI1TERK2V1DpRK2Vs\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Vs</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ad0f2ad3961a515c885c05fc9c45e556d\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">base</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::V1\"><span class=\"n\"><span class=\"pre\">V1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::Vs\"><span class=\"n\"><span class=\"pre\">Vs</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Append one or more vectors on to the end of an existing vector. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK10IndexRange3HasE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10IndexRange3HasE6size_t\">\n<span id=\"_CPPv3NK10IndexRange3HasE6size_t\"></span><span id=\"_CPPv2NK10IndexRange3HasE6size_t\"></span><span id=\"IndexRange::Has__sC\"></span><span class=\"target\" id=\"classIndexRange_1a1360c48e98a6a43010909c122b14a1e6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK9IndexBits6GetEndEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9IndexBits6GetEndEv\">\n<span id=\"_CPPv3NK9IndexBits6GetEndEv\"></span><span id=\"_CPPv2NK9IndexBits6GetEndEv\"></span><span id=\"IndexBits::GetEndC\"></span><span class=\"target\" id=\"classIndexBits_1a8bc81f0dcc8af450e64a71194e9ecdd4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEnd</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E3HasbRK6vectorI1TERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3HasbRK6vectorI1TERK1T\">\n<span id=\"_CPPv3I0E3HasRK6vectorI1TERK1T\"></span><span id=\"_CPPv2I0E3HasRK6vectorI1TERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aea3d144afe75a5514e9b6b5257220969\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3HasbRK6vectorI1TERK1T\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3HasbRK6vectorI1TERK1T\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return whether a value exists in a vector. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon6rbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon6rbeginEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"SmallVectorTemplateCommon::rbegin\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ad183398cc6b853b618fcbeeca327267b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\" title=\"SmallVectorTemplateCommon::reverse_iterator\"><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector6this_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector6this_tE\">\n<span id=\"_CPPv3N16reference_vector6this_tE\"></span><span id=\"_CPPv2N16reference_vector6this_tE\"></span><span class=\"target\" id=\"classreference__vector_1ad6bd73dcb6fd4a2fc09eced75396f88c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">this_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMapixERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMapixERK3Key\">\n<span id=\"_CPPv3NK12SmallFifoMapixERK3Key\"></span><span id=\"_CPPv2NK12SmallFifoMapixERK3Key\"></span><span id=\"SmallFifoMap::subscript-operator__KeyCRC\"></span><span class=\"target\" id=\"classSmallFifoMap_1a25266890fe608eed09f803e9acc2fc72\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Value\"><span class=\"n\"><span class=\"pre\">Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get corresponding value from cache. </p></dd>", "a[href=\"api/StringMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">StringMap.hpp<a class=\"headerlink\" href=\"#stringmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>An std::unordered_map wrapper that deals smoothly with strings and fast compile-time optimizations. </p><p>StringMap is setup to be a generic dictionary that can link strings to objects of any other desginated type. It is more powerful than std::unordered_map because it will accept strings wrapped in the EMP_STRING_ID macro, which is hashed at compile-time instead of run-time.</p>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map8NewEntryE8key_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map8NewEntryE8key_type\">\n<span id=\"_CPPv3N6ra_map8NewEntryE8key_type\"></span><span id=\"_CPPv2N6ra_map8NewEntryE8key_type\"></span><span id=\"ra_map::NewEntry__key_type\"></span><span class=\"target\" id=\"classra__map_1a9cc7c14cbf391e177f4e8f136e11bd03\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NewEntry</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8key_typeE\" title=\"ra_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4NK5Graph11GetInDegreeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Graph11GetInDegreeE6size_t\">\n<span id=\"_CPPv3NK5Graph11GetInDegreeE6size_t\"></span><span id=\"_CPPv2NK5Graph11GetInDegreeE6size_t\"></span><span id=\"Graph::GetInDegree__sC\"></span><span class=\"target\" id=\"classGraph_1a47db7c71b12cd73fe7610cc3dafcbc63\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetInDegree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the in-degree (number of incoming edges) of the node</p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap5ProxyaSEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap5ProxyaSEd\">\n<span id=\"_CPPv3N17UnorderedIndexMap5ProxyaSEd\"></span><span id=\"_CPPv2N17UnorderedIndexMap5ProxyaSEd\"></span><span id=\"UnorderedIndexMap::Proxy::assign-operator__double\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1_1Proxy_1ad8cc0d9ebabaf5ac5b60698f9b2576ab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N17UnorderedIndexMap5ProxyE\" title=\"UnorderedIndexMap::Proxy\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">new_weight</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits12_ExpandRangeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits12_ExpandRangeE6size_t\">\n<span id=\"_CPPv3N9IndexBits12_ExpandRangeE6size_t\"></span><span id=\"_CPPv2N9IndexBits12_ExpandRangeE6size_t\"></span><span id=\"IndexBits::_ExpandRange__s\"></span><span class=\"target\" id=\"classIndexBits_1a723ff97f1f9b8e4cde682c1b9abb1d5a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_ExpandRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Increase the range of valid values. </p></dd>", "a[href=\"api/Cache.html#_CPPv4N5Cache11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache11mapped_typeE\">\n<span id=\"_CPPv3N5Cache11mapped_typeE\"></span><span id=\"_CPPv2N5Cache11mapped_typeE\"></span><span class=\"target\" id=\"classCache_1af8ba0896dfa8f792275a3e67ac5ed7d8\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd><p>Contents of the value we look up. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap5ProxycvdEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap5ProxycvdEv\">\n<span id=\"_CPPv3NK8IndexMap5ProxycvdEv\"></span><span id=\"_CPPv2NK8IndexMap5ProxycvdEv\"></span><span id=\"IndexMap::Proxy::castto-double-operatorC\"></span><span class=\"target\" id=\"classIndexMap_1_1Proxy_1a58f05f9bbbc071fb6003bb4a4f42232e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/tuple_utils.html#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\">\n<span id=\"_CPPv3I000E12TupleIterateR6TUP1_TR6TUP2_TRK5FUN_T\"></span><span id=\"_CPPv2I000E12TupleIterateR6TUP1_TR6TUP2_TRK5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUP1_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUP2_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a4e56a9e6622159217458a5993978850f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleIterate</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::TUP1_T\"><span class=\"n\"><span class=\"pre\">TUP1_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::TUP2_T\"><span class=\"n\"><span class=\"pre\">TUP2_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a provided function on each pair of elements in two tuples. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap6AdjustERK6vectorIdE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap6AdjustERK6vectorIdE\">\n<span id=\"_CPPv3N8IndexMap6AdjustERK6vectorIdE\"></span><span id=\"_CPPv2N8IndexMap6AdjustERK6vectorIdE\"></span><span id=\"IndexMap::Adjust__vector:double:CR\"></span><span class=\"target\" id=\"classIndexMap_1a7f8e664d78726e123f2826d28c174d62\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Adjust</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">new_weights</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adjust all index weights to the set provided. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK13IndexRangeSet8GetStartEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13IndexRangeSet8GetStartEv\">\n<span id=\"_CPPv3NK13IndexRangeSet8GetStartEv\"></span><span id=\"_CPPv2NK13IndexRangeSet8GetStartEv\"></span><span id=\"IndexRangeSet::GetStartC\"></span><span class=\"target\" id=\"classIndexRangeSet_1a1b37fcb38482f94303d81517fec5c11e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetStart</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue4NextEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue4NextEv\">\n<span id=\"_CPPv3N9TimeQueue4NextEv\"></span><span id=\"_CPPv2N9TimeQueue4NextEv\"></span><span id=\"TimeQueue::Next\"></span><span class=\"target\" id=\"classTimeQueue_1aec3ecdf006aee002ac29101d125a9545\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9TimeQueue\" title=\"TimeQueue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Next</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove and return the next item from the TimeQueue. </p></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E12FindMaxIndex6size_tRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12FindMaxIndex6size_tRK1T\">\n<span id=\"_CPPv3I0E12FindMaxIndexRK1T\"></span><span id=\"_CPPv2I0E12FindMaxIndexRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a973a451e854aa77949fc1f5cee6c4b24\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMaxIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12FindMaxIndex6size_tRK1T\" title=\"FindMaxIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the index with the maximal value (picks first in cases of a tie). </p></dd>", "a[href=\"api/hash_utils.html#_CPPv411murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\">\n<span id=\"_CPPv311murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\"></span><span id=\"_CPPv211murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\"></span><span id=\"murmur_hash__std::span:std::byteC:C.uint64_tCCE\"></span><span class=\"target\" id=\"hash__utils_8hpp_1afe9b35a3c7e31b458e9fd9e7f93bb6d5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">murmur_hash</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">seed</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Implementation of the murmur3 hash, a fast hash with low collisions. This hash makes it suitable for hash-based lookups. For more info, see: <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/MurmurHash\">https://en.wikipedia.org/wiki/MurmurHash</a> This implementation was directly based on: <a class=\"reference external\" href=\"https://github.com/aappleby/smhasher/blob/92cf3702fcfaadc84eb7bef59825a23e0cd84f56/src/MurmurHash3.cpp\">https://github.com/aappleby/smhasher/blob/92cf3702fcfaadc84eb7bef59825a23e0cd84f56/src/MurmurHash3.cpp</a> </p></dd>", "a[href=\"api/graph_utils.html#_CPPv414load_graph_symRNSt7istreamEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414load_graph_symRNSt7istreamEb\">\n<span id=\"_CPPv314load_graph_symRNSt7istreamEb\"></span><span id=\"_CPPv214load_graph_symRNSt7istreamEb\"></span><span id=\"load_graph_sym__isR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a282e90abe69399b3c27c2a36b01c42ec\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_sym</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">sub1</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Helper function for loading symmetric graphs from an input stream. sub1 indicates that verticies are numbered 1 to N instead of 0 to N-1. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap9RawWeightE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap9RawWeightE6size_t\">\n<span id=\"_CPPv3NK8IndexMap9RawWeightE6size_t\"></span><span id=\"_CPPv2NK8IndexMap9RawWeightE6size_t\"></span><span id=\"IndexMap::RawWeight__sC\"></span><span class=\"target\" id=\"classIndexMap_1a30d4fa7770c45ad92c4c0272c87f6cdb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E12intersectionRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E12intersectionRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1af5d624355427f48673435a72e77a343d\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter5tableEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter5tableEv\">\n<span id=\"_CPPv3NK11BloomFilter5tableEv\"></span><span id=\"_CPPv2NK11BloomFilter5tableEv\"></span><span id=\"BloomFilter::tableC\"></span><span class=\"target\" id=\"classBloomFilter_1a1f97cf25ce8a23d8bbdcb226dba1dcca\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter9cell_typeE\" title=\"BloomFilter::cell_type\"><span class=\"n\"><span class=\"pre\">cell_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">table</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E10difference6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E10difference6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a78f1049de31392871eb54379b80255a8\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but no S2) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet4valsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet4valsE\">\n<span id=\"_CPPv3N8IndexSet4valsE\"></span><span id=\"_CPPv2N8IndexSet4valsE\"></span><span id=\"IndexSet::vals___Index_Vals\"></span><span class=\"target\" id=\"classIndexSet_1a685c6fa51f15b7b1f1e45bf857904b7d\"></span><a class=\"reference internal\" href=\"#_CPPv4N8IndexSet11_Index_ValsE\" title=\"IndexSet::_Index_Vals\"><span class=\"n\"><span class=\"pre\">_Index_Vals</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vals</span></span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter24projected_element_count_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter24projected_element_count_E\">\n<span id=\"_CPPv3N11BloomFilter24projected_element_count_E\"></span><span id=\"_CPPv2N11BloomFilter24projected_element_count_E\"></span><span id=\"BloomFilter::projected_element_count___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1a22c29b48ae224d8838fa05966dcb2ed6\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">projected_element_count_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK8IndexSet13IsConsecutiveEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexSet13IsConsecutiveEv\">\n<span id=\"_CPPv3NK8IndexSet13IsConsecutiveEv\"></span><span id=\"_CPPv2NK8IndexSet13IsConsecutiveEv\"></span><span id=\"IndexSet::IsConsecutiveC\"></span><span class=\"target\" id=\"classIndexSet_1a8e25a915909173483504f0b95e3bd829\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsConsecutive</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/TimeQueue.html#_CPPv4N9TimeQueue5FrontEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TimeQueue5FrontEv\">\n<span id=\"_CPPv3N9TimeQueue5FrontEv\"></span><span id=\"_CPPv2N9TimeQueue5FrontEv\"></span><span id=\"TimeQueue::Front\"></span><span class=\"target\" id=\"classTimeQueue_1a16f64b30cbe8184613459e5e91b7dd91\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9TimeQueue\" title=\"TimeQueue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Front</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Grab the next item from the TimeQueue, but don\u2019t remove it. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\"></span><span id=\"SmallVectorTemplateBase::destroy_range__TP.TP\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a5ae6fa97229fbe7ce0f9a4cd951af5a4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">destroy_range</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">S</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">E</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector9push_backER1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector9push_backER1T\">\n<span id=\"_CPPv3N16reference_vector9push_backER1T\"></span><span id=\"_CPPv2N16reference_vector9push_backER1T\"></span><span id=\"reference_vector::push_back__TR\"></span><span class=\"target\" id=\"classreference__vector_1a51e5ae611cb37cfd0f6d7f1738a35222\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E16reference_vector\" title=\"reference_vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/graph_utils.html#_CPPv413shuffle_graphRK5GraphR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413shuffle_graphRK5GraphR6Random\">\n<span id=\"_CPPv313shuffle_graphRK5GraphR6Random\"></span><span id=\"_CPPv213shuffle_graphRK5GraphR6Random\"></span><span id=\"shuffle_graph__GraphCR.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a50b8c91aa25ace652c02352981c96394\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">shuffle_graph</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_graph</span></span>, <a class=\"reference internal\" href=\"../math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an existing graph, and build a new one that is isomorphic to it, but with randomized vertex IDs. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange4GrowE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange4GrowE6size_t\">\n<span id=\"_CPPv3N10IndexRange4GrowE6size_t\"></span><span id=\"_CPPv2N10IndexRange4GrowE6size_t\"></span><span id=\"IndexRange::Grow__s\"></span><span class=\"target\" id=\"classIndexRange_1a0568bc0ad1b55a5c6d91f18a2e6ea9fb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Grow</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Grow this range (default, by one) </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\">\n<span id=\"_CPPv3I0EN11BloomFilter6insertEK13InputIteratorK13InputIterator\"></span><span id=\"_CPPv2I0EN11BloomFilter6insertEK13InputIteratorK13InputIterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1a1f0f90dae45bb792161dd793b68a00d1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\" title=\"BloomFilter::insert::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\" title=\"BloomFilter::insert::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a sequence of values into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7_ToBitsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7_ToBitsEv\">\n<span id=\"_CPPv3N8IndexSet7_ToBitsEv\"></span><span id=\"_CPPv2N8IndexSet7_ToBitsEv\"></span><span id=\"IndexSet::_ToBits\"></span><span class=\"target\" id=\"classIndexSet_1aeaed83ab9490d3353fdbbbb8e4b0741c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">_ToBits</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert the internal representation to use bits. </p></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map6cbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map6cbeginEv\">\n<span id=\"_CPPv3N11valsort_map6cbeginEv\"></span><span id=\"_CPPv2N11valsort_map6cbeginEv\"></span><span id=\"valsort_map::cbegin\"></span><span class=\"target\" id=\"classvalsort__map_1ac9492362e5afb14ef14b7722864c0d81\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv49tree_left6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49tree_left6size_t\">\n<span id=\"_CPPv39tree_left6size_t\"></span><span id=\"_CPPv29tree_left6size_t\"></span><span id=\"tree_left__sCE\"></span><span class=\"target\" id=\"vector__utils_8hpp_1aefa5950206da0188f259e1ec34f4d188\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tree_left</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Tree manipulation in vectors. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap11mapped_typeE\">\n<span id=\"_CPPv3N7TypeMap11mapped_typeE\"></span><span id=\"_CPPv2N7TypeMap11mapped_typeE\"></span><span class=\"target\" id=\"classTypeMap_1aba27b307622598eefd0f0e5c8e260f40\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7TypeMap\" title=\"TypeMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4I0ENK7TypeMap2atERK11mapped_typev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK7TypeMap2atERK11mapped_typev\">\n<span id=\"_CPPv3I0ENK7TypeMap2atEv\"></span><span id=\"_CPPv2I0ENK7TypeMap2atEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap_1a7976c08dc4a3c8eee6a1bb65c58a646f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap11mapped_typeE\" title=\"TypeMap::mapped_type\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">at</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N10IndexRange6InsertE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10IndexRange6InsertE6size_t\">\n<span id=\"_CPPv3N10IndexRange6InsertE6size_t\"></span><span id=\"_CPPv2N10IndexRange6InsertE6size_t\"></span><span id=\"IndexRange::Insert__s\"></span><span class=\"target\" id=\"classIndexRange_1ab1330e8e0d1bbc7ad3b7e397c0c1c4a4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into a range if valid; return false if not. </p></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase15SmallVectorBaseEPv6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase15SmallVectorBaseEPv6size_t\">\n<span id=\"_CPPv3N15SmallVectorBase15SmallVectorBaseEPv6size_t\"></span><span id=\"_CPPv2N15SmallVectorBase15SmallVectorBaseEPv6size_t\"></span><span id=\"SmallVectorBase::SmallVectorBase__voidP.s\"></span><span class=\"target\" id=\"classSmallVectorBase_1a805cac87a7130547f601a3ddb2fa9084\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">FirstEl</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">TotalCapacity</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N15SmallVectorBase8CapacityE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase8CapacityE\">\n<span id=\"_CPPv3N15SmallVectorBase8CapacityE\"></span><span id=\"_CPPv2N15SmallVectorBase8CapacityE\"></span><span id=\"SmallVectorBase::Capacity__unsigned\"></span><span class=\"target\" id=\"classSmallVectorBase_1a03913517f74cde058e85c496a19249a8\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Capacity</span></span></span><br/></dt><dd></dd>", "a[href=\"api/Bool.html#_CPPv4N4BooleOEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BooleOEb\">\n<span id=\"_CPPv3N4BooleOEb\"></span><span id=\"_CPPv2N4BooleOEb\"></span><span id=\"Bool::xor-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a8fb4b725e3985c6d9c0a822f394be2c6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/tuple_utils.html#_CPPv4IDpE9TupleHash\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9TupleHash\">\n<span id=\"_CPPv3IDpE9TupleHash\"></span><span id=\"_CPPv2IDpE9TupleHash\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTupleHash\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleHash</span></span></span><br/></dt><dd><p>Setup tuples to be able to be used in hash tables. </p></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString13DynamicStringERK13DynamicString\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString13DynamicStringERK13DynamicString\">\n<span id=\"_CPPv3N13DynamicString13DynamicStringERK13DynamicString\"></span><span id=\"_CPPv2N13DynamicString13DynamicStringERK13DynamicString\"></span><span id=\"DynamicString::DynamicString__DynamicStringCR\"></span><span class=\"target\" id=\"classDynamicString_1a314dbdc47ebc64c39347e1a9cc9f11fa\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13DynamicString13DynamicStringERK13DynamicString\" title=\"DynamicString::DynamicString\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vectorD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vectorD0Ev\">\n<span id=\"_CPPv3N16reference_vectorD0Ev\"></span><span id=\"_CPPv2N16reference_vectorD0Ev\"></span><span id=\"reference_vector::~reference_vector\"></span><span class=\"target\" id=\"classreference__vector_1a4a930559d2f2a616ad3a01ea48069e17\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~reference_vector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/DynamicString.html#_CPPv4N13DynamicString7value_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13DynamicString7value_tE\">\n<span id=\"_CPPv3N13DynamicString7value_tE\"></span><span id=\"_CPPv2N13DynamicString7value_tE\"></span><span class=\"target\" id=\"classDynamicString_1a2d2e06ad6dff1625884e2ebc50a9d2e9\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon12resetToSmallEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon12resetToSmallEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon12resetToSmallEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon12resetToSmallEv\"></span><span id=\"SmallVectorTemplateCommon::resetToSmall\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a0eebc2ce9f5307399d556e1752c058e3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">resetToSmall</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Put this vector in a state of being small. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4NK6ra_map6cbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_map6cbeginEv\">\n<span id=\"_CPPv3NK6ra_map6cbeginEv\"></span><span id=\"_CPPv2NK6ra_map6cbeginEv\"></span><span id=\"ra_map::cbeginC\"></span><span class=\"target\" id=\"classra__map_1a6feb2ac21058c2c4a5c536fd9a92a067\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map5cvendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map5cvendEv\">\n<span id=\"_CPPv3N11valsort_map5cvendEv\"></span><span id=\"_CPPv2N11valsort_map5cvendEv\"></span><span id=\"valsort_map::cvend\"></span><span class=\"target\" id=\"classvalsort__map_1ae0f959559feaa42b6083dd2ce258b986\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cvend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap6AdjustERK6vectorIdE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap6AdjustERK6vectorIdE\">\n<span id=\"_CPPv3N17UnorderedIndexMap6AdjustERK6vectorIdE\"></span><span id=\"_CPPv2N17UnorderedIndexMap6AdjustERK6vectorIdE\"></span><span id=\"UnorderedIndexMap::Adjust__vector:double:CR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1acf2fad0937d7b7972ae8fb24b02b805a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Adjust</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">new_weights</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Adjust all index &lt;weights to the set provided. </p></dd>", "a[href=\"api/graph_utils.html#_CPPv414load_graph_symNSt6stringEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414load_graph_symNSt6stringEb\">\n<span id=\"_CPPv314load_graph_symNSt6stringEb\"></span><span id=\"_CPPv214load_graph_symNSt6stringEb\"></span><span id=\"load_graph_sym__ss.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a4afcf11cf8bd25b90511f8fb90431dfc\"></span><a class=\"reference internal\" href=\"api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_sym</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">sub1</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Load a graph with a specified filename. </p></dd>", "a[href=\"api/reference_vector.html#_CPPv4N16reference_vector8IteratorppEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16reference_vector8IteratorppEv\">\n<span id=\"_CPPv3N16reference_vector8IteratorppEv\"></span><span id=\"_CPPv2N16reference_vector8IteratorppEv\"></span><span id=\"reference_vector::Iterator::inc-operator\"></span><span class=\"target\" id=\"classreference__vector_1_1Iterator_1a8405894b10bd84903fdff6015aefe8a8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N16reference_vector8IteratorE\" title=\"reference_vector::Iterator\"><span class=\"n\"><span class=\"pre\">Iterator</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">++</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N8StringID8StringIDERK8StringID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8StringID8StringIDERK8StringID\">\n<span id=\"_CPPv3N8StringID8StringIDERK8StringID\"></span><span id=\"_CPPv2N8StringID8StringIDERK8StringID\"></span><span id=\"StringID::StringID__StringIDCR\"></span><span class=\"target\" id=\"classStringID_1a9d0a5bdc4ec78ee0fbc43532d6128f71\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8StringID8StringIDERK8StringID\" title=\"StringID::StringID\"><span class=\"n\"><span class=\"pre\">StringID</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/map_utils.html#_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\">\n<span id=\"_CPPv3I00E3HasRK5MAP_TRK5KEY_T\"></span><span id=\"_CPPv2I00E3HasRK5MAP_TRK5KEY_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1af33cf2cef135c26810f9427520e27ce3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\" title=\"Has::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\" title=\"Has::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map type, and run find to determine if a key is present. </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map13const_pointerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map13const_pointerE\">\n<span id=\"_CPPv3N6ra_map13const_pointerE\"></span><span id=\"_CPPv2N6ra_map13const_pointerE\"></span><span class=\"target\" id=\"classra__map_1a82c71ad2c8bce32c30c144bb01809aa7\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator_traits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::Allocator\"><span class=\"n\"><span class=\"pre\">Allocator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">const_pointer</span></span><br/></dt><dd></dd>", "a[href=\"api/valsort_map.html#_CPPv4N11valsort_map9SortOrderE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11valsort_map9SortOrderE\">\n<span id=\"_CPPv3N11valsort_map9SortOrderE\"></span><span id=\"_CPPv2N11valsort_map9SortOrderE\"></span><span id=\"valsort_map::SortOrder\"></span><span class=\"target\" id=\"structvalsort__map_1_1SortOrder\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SortOrder</span></span></span><br/></dt><dd></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMap7str_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMap7str_mapE\">\n<span id=\"_CPPv3N9StringMap7str_mapE\"></span><span id=\"_CPPv2N9StringMap7str_mapE\"></span><span id=\"StringMap::str_map__unordered_map:s.T:\"></span><span class=\"target\" id=\"classStringMap_1aebc2068fd29d722c41ccb2474b223631\"></span><a class=\"reference internal\" href=\"../base/api/unordered_map.html#_CPPv4I00DpE13unordered_map\" title=\"unordered_map\"><span class=\"n\"><span class=\"pre\">unordered_map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">str_map</span></span></span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_set5clearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_set5clearEv\">\n<span id=\"_CPPv3N6ra_set5clearEv\"></span><span id=\"_CPPv2N6ra_set5clearEv\"></span><span id=\"ra_set::clear\"></span><span class=\"target\" id=\"classra__set_1aaac2d3fa5082cad03e63bd9b417d4614\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all values from this container. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E20symmetric_difference6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E20symmetric_difference6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a4ac08882b336e6391f7ba974afca0c4a\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map10value_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map10value_typeE\">\n<span id=\"_CPPv3N6ra_map10value_typeE\"></span><span id=\"_CPPv2N6ra_map10value_typeE\"></span><span class=\"target\" id=\"classra__map_1a6ad371496d3b1d9a8786d93e9dc9f94d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap5Proxy5ProxyER8IndexMap6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap5Proxy5ProxyER8IndexMap6size_t\">\n<span id=\"_CPPv3N8IndexMap5Proxy5ProxyER8IndexMap6size_t\"></span><span id=\"_CPPv2N8IndexMap5Proxy5ProxyER8IndexMap6size_t\"></span><span id=\"IndexMap::Proxy::Proxy__IndexMapR.s\"></span><span class=\"target\" id=\"classIndexMap_1_1Proxy_1a07aa208ad663a119abce7bdd9395b4b9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Proxy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv48IndexMap\" title=\"IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_im</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE8pop_backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE8pop_backEv\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE8pop_backEv\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE8pop_backEv\"></span><span id=\"SmallVectorTemplateBase:T.true:::pop_back\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1ab322a908643f5bb8444e75d9b779a243\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pop_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap6cbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap6cbeginEv\">\n<span id=\"_CPPv3NK7TypeMap6cbeginEv\"></span><span id=\"_CPPv2NK7TypeMap6cbeginEv\"></span><span id=\"TypeMap::cbeginC\"></span><span class=\"target\" id=\"classTypeMap_1a8057b0eb03ced52d58a26a7f167c93af\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap14const_iteratorE\" title=\"TypeMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMapaSERK17UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMapaSERK17UnorderedIndexMap\">\n<span id=\"_CPPv3N17UnorderedIndexMapaSERK17UnorderedIndexMap\"></span><span id=\"_CPPv2N17UnorderedIndexMapaSERK17UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap::assign-operator__UnorderedIndexMapCR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aeab30ead3cc8b9073d8e148e404267e2\"></span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv417UnorderedIndexMap\" title=\"UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N23SmallVectorTemplateBase4growE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase4growE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase4growE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase4growE6size_t\"></span><span id=\"SmallVectorTemplateBase::grow__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1ae888973f8b410d8e3d200399ed8ae208\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinSize</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Grow the allocated memory (without initializing new elements), doubling the size of the allocated memory. Guarantees space for at least one more element, or MinSize more elements if specified. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap5eraseE14const_iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap5eraseE14const_iterator\">\n<span id=\"_CPPv3N7TypeMap5eraseE14const_iterator\"></span><span id=\"_CPPv2N7TypeMap5eraseE14const_iterator\"></span><span id=\"TypeMap::erase__const_iterator\"></span><span class=\"target\" id=\"classTypeMap_1a7c11ba4e74b4b21cbb6cc0fd7a25b644\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap8iteratorE\" title=\"TypeMap::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">erase</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap14const_iteratorE\" title=\"TypeMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">position</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\">\n<span id=\"_CPPv3I0E9FindValueRK6vectorI1TERK1T6size_t\"></span><span id=\"_CPPv2I0E9FindValueRK6vectorI1TERK1T6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a3bd32316b181e882939d06ea4e2586f0\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindValue</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\" title=\"FindValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\" title=\"FindValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the first position of a value in a vector (or -1 if none exists) </p></dd>", "a[href=\"api/ra_set.html#_CPPv4N6ra_setaSERK6ra_set\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_setaSERK6ra_set\">\n<span id=\"_CPPv3N6ra_setaSERK6ra_set\"></span><span id=\"_CPPv2N6ra_setaSERK6ra_set\"></span><span id=\"ra_set::assign-operator__ra_setCR\"></span><span class=\"target\" id=\"classra__set_1a51dc05ac959cfafea4a961671650b17e\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map4valsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map4valsE\">\n<span id=\"_CPPv3N6ra_map4valsE\"></span><span id=\"_CPPv2N6ra_map4valsE\"></span><span id=\"ra_map::vals__vector:value_type:\"></span><span class=\"target\" id=\"classra__map_1aaa33238739de98f2cd56295326323acf\"></span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map10value_typeE\" title=\"ra_map::value_type\"><span class=\"n\"><span class=\"pre\">value_type</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vals</span></span></span><br/></dt><dd><p>Vector of all values. </p></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph8GetLabelE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph8GetLabelE6size_t\">\n<span id=\"_CPPv3N5Graph8GetLabelE6size_t\"></span><span id=\"_CPPv2N5Graph8GetLabelE6size_t\"></span><span id=\"Graph::GetLabel__s\"></span><span class=\"target\" id=\"classGraph_1af70106de8dd60f757cac2ebd94956ca9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetLabel</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get label of node. </p></dd>", "a[href=\"api/span_utils.html#_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\">\n<span id=\"_CPPv3I0DpE7to_span6vectorI1TDp2TsE\"></span><span id=\"_CPPv2I0DpE7to_span6vectorI1TDp2TsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a0d773a6a92632ea5c8c19e4c9ce72445\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_span</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\" title=\"to_span::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\" title=\"to_span::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an vector to an equivalent span. </p></dd>", "a[href=\"api/IndexMap.html#_CPPv4NK8IndexMap7RawProbE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8IndexMap7RawProbE6size_t\">\n<span id=\"_CPPv3NK8IndexMap7RawProbE6size_t\"></span><span id=\"_CPPv2NK8IndexMap7RawProbE6size_t\"></span><span id=\"IndexMap::RawProb__sC\"></span><span class=\"target\" id=\"classIndexMap_1adb79979b40104c1cd2da1c880f683f50\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawProb</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SmallFifoMap.hpp<a class=\"headerlink\" href=\"#smallfifomap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Store key value pairs in a fixed-sized array, bumping out the oldest value when full. Optimized for small N. Requires N &lt; 256. </p>", "a[href=\"api/IndexMap.html#_CPPv4N8IndexMap8IndexMapERR8IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexMap8IndexMapERR8IndexMap\">\n<span id=\"_CPPv3N8IndexMap8IndexMapERR8IndexMap\"></span><span id=\"_CPPv2N8IndexMap8IndexMapERR8IndexMap\"></span><span id=\"IndexMap::IndexMap__IndexMapRR\"></span><span class=\"target\" id=\"classIndexMap_1a6a5b71208d8e21a87fd59931cf96660b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N8IndexMap8IndexMapERR8IndexMap\" title=\"IndexMap::IndexMap\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\">\n<span id=\"_CPPv3I0_jE17capacity_in_bytesRK11SmallVectorI1T1NE\"></span><span id=\"_CPPv2I0_jE17capacity_in_bytesRK11SmallVectorI1T1NE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SmallVector_8hpp_1af24a9a98ea2e0d04793ae9da7af0ed98\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\" title=\"capacity_in_bytes::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\" title=\"capacity_in_bytes::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">X</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/TypeMap.html#_CPPv4N7TypeMap9size_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7TypeMap9size_typeE\">\n<span id=\"_CPPv3N7TypeMap9size_typeE\"></span><span id=\"_CPPv2N7TypeMap9size_typeE\"></span><span class=\"target\" id=\"classTypeMap_1a75eb50faf2e7ef4cdf15d9637290b567\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7TypeMap9val_map_tE\" title=\"TypeMap::val_map_t\"><span class=\"n\"><span class=\"pre\">val_map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_type</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4NK17UnorderedIndexMap9GetWeightEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17UnorderedIndexMap9GetWeightEv\">\n<span id=\"_CPPv3NK17UnorderedIndexMap9GetWeightEv\"></span><span id=\"_CPPv2NK17UnorderedIndexMap9GetWeightEv\"></span><span id=\"UnorderedIndexMap::GetWeightC\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1ab46650b8e38930fc997c19a1c624e969\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>What is the total weight of all indices in this map? </p></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK23CompressibleBloomFilter4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK23CompressibleBloomFilter4sizeEv\">\n<span id=\"_CPPv3NK23CompressibleBloomFilter4sizeEv\"></span><span id=\"_CPPv2NK23CompressibleBloomFilter4sizeEv\"></span><span id=\"CompressibleBloomFilter::sizeC\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1ad07541943eae0820b397fb19af7ec61b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_set.html#_CPPv4NK6ra_set5countERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK6ra_set5countERK1T\">\n<span id=\"_CPPv3NK6ra_set5countERK1T\"></span><span id=\"_CPPv2NK6ra_set5countERK1T\"></span><span id=\"ra_set::count__TCRC\"></span><span class=\"target\" id=\"classra__set_1afc519e13c6e90a19ad7be2795f5175f8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">count</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6ra_set\" title=\"ra_set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Count the number of times a particular value in in the container (0 or 1). </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N9IndexBits9IndexBitsERR9IndexBits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9IndexBits9IndexBitsERR9IndexBits\">\n<span id=\"_CPPv3N9IndexBits9IndexBitsERR9IndexBits\"></span><span id=\"_CPPv2N9IndexBits9IndexBitsERR9IndexBits\"></span><span id=\"IndexBits::IndexBits__IndexBitsRR\"></span><span class=\"target\" id=\"classIndexBits_1aaa07559da9a9885cfd8a81160fd9f843\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N9IndexBits9IndexBitsERR9IndexBits\" title=\"IndexBits::IndexBits\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5Graph7SetEdgeE6size_t6size_tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Graph7SetEdgeE6size_t6size_tb\">\n<span id=\"_CPPv3N5Graph7SetEdgeE6size_t6size_tb\"></span><span id=\"_CPPv2N5Graph7SetEdgeE6size_t6size_tb\"></span><span id=\"Graph::SetEdge__s.s.b\"></span><span class=\"target\" id=\"classGraph_1a06766565fec34bdee05011f33e8d3275\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetEdge</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the status of a specified edge as to whether or not it should be in the graph. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSetaSERK13IndexRangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSetaSERK13IndexRangeSet\">\n<span id=\"_CPPv3N13IndexRangeSetaSERK13IndexRangeSet\"></span><span id=\"_CPPv2N13IndexRangeSetaSERK13IndexRangeSet\"></span><span id=\"IndexRangeSet::assign-operator__IndexRangeSetCR\"></span><span class=\"target\" id=\"classIndexRangeSet_1ac6a87b0586c9cc60233588abf9aec0f9\"></span><a class=\"reference internal\" href=\"#_CPPv413IndexRangeSet\" title=\"IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413IndexRangeSet\" title=\"IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/ra_map.html#_CPPv4N6ra_map7KeyAtIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N6ra_map7KeyAtIDE6size_t\">\n<span id=\"_CPPv3N6ra_map7KeyAtIDE6size_t\"></span><span id=\"_CPPv2N6ra_map7KeyAtIDE6size_t\"></span><span id=\"ra_map::KeyAtID__s\"></span><span class=\"target\" id=\"classra__map_1a41bc22af79fec04ac745375d7afd1b97\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N6ra_map8key_typeE\" title=\"ra_map::key_type\"><span class=\"n\"><span class=\"pre\">key_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KeyAtID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/Graph.html#_CPPv4N5GraphaSERK5Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5GraphaSERK5Graph\">\n<span id=\"_CPPv3N5GraphaSERK5Graph\"></span><span id=\"_CPPv2N5GraphaSERK5Graph\"></span><span id=\"Graph::assign-operator__GraphCR\"></span><span class=\"target\" id=\"classGraph_1aabe264c0b08786631890f7ca7096e35a\"></span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd><p>Copy operator. </p></dd>", "a[href=\"api/StringMap.html#_CPPv4N9StringMapaSERR9StringMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMapaSERR9StringMap\">\n<span id=\"_CPPv3N9StringMapaSERR9StringMap\"></span><span id=\"_CPPv2N9StringMapaSERR9StringMap\"></span><span id=\"StringMap::assign-operator__StringMapRR\"></span><span class=\"target\" id=\"classStringMap_1a90eca789e2b7cab372540ba774ed98a4\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4NK11BloomFilter8containsERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter8containsERKNSt6stringE\">\n<span id=\"_CPPv3NK11BloomFilter8containsERKNSt6stringE\"></span><span id=\"_CPPv2NK11BloomFilter8containsERKNSt6stringE\"></span><span id=\"BloomFilter::contains__ssCRC\"></span><span class=\"target\" id=\"classBloomFilter_1a92edc1af74e2865a650e8271eba74ae7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap17UnorderedIndexMapE6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap17UnorderedIndexMapE6size_td\">\n<span id=\"_CPPv3N17UnorderedIndexMap17UnorderedIndexMapE6size_td\"></span><span id=\"_CPPv2N17UnorderedIndexMap17UnorderedIndexMapE6size_td\"></span><span id=\"UnorderedIndexMap::UnorderedIndexMap__s.double\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1a67bbb0ccf30eaa989f598adaea6cbc35\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_items</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">init_weight</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct an UnorderedIndexMap where num_items is the maximum number of items that can be placed into the data structure. All item weights default to zero. </p></dd>", "a[href=\"api/QueueCache.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">QueueCache.hpp<a class=\"headerlink\" href=\"#queuecache-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple implementation of a Least-Recently Used Cache. It orders elements by access time and removes the stalest ones in case maximum capacity is reached. </p>", "a[href=\"api/StringMap.html#_CPPv4N9StringMapaSERK9StringMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9StringMapaSERK9StringMap\">\n<span id=\"_CPPv3N9StringMapaSERK9StringMap\"></span><span id=\"_CPPv2N9StringMapaSERK9StringMap\"></span><span id=\"StringMap::assign-operator__StringMapCR\"></span><span class=\"target\" id=\"classStringMap_1a2171f57d4fa337460b14508c0fa29637\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9StringMap\" title=\"StringMap\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/BloomFilter.html#_CPPv4N11BloomFilter12random_seed_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter12random_seed_E\">\n<span id=\"_CPPv3N11BloomFilter12random_seed_E\"></span><span id=\"_CPPv2N11BloomFilter12random_seed_E\"></span><span id=\"BloomFilter::random_seed___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1a0f86a93616eb7a8aa42ddf04500f559e\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">random_seed_</span></span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon15const_referenceE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon15const_referenceE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon15const_referenceE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1afdaa510c5d21170896e9437216f0a2b2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"api/QueueCache.html#_CPPv4I00_6size_t00E10QueueCache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_t00E10QueueCache\">\n<span id=\"_CPPv3I00_6size_t00E10QueueCache\"></span><span id=\"_CPPv2I00_6size_t00E10QueueCache\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultCapacity</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hash</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Pred</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classQueueCache\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">QueueCache</span></span></span><br/></dt><dd></dd>", "a[href=\"api/SmallFifoMap.html#_CPPv4NK12SmallFifoMap4findERK3Key\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SmallFifoMap4findERK3Key\">\n<span id=\"_CPPv3NK12SmallFifoMap4findERK3Key\"></span><span id=\"_CPPv2NK12SmallFifoMap4findERK3Key\"></span><span id=\"SmallFifoMap::find__KeyCRC\"></span><span class=\"target\" id=\"classSmallFifoMap_1a4d99ad80b75848156b6f000ed7696eaa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SmallFifoMap14const_iteratorE\" title=\"SmallFifoMap::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE12SmallFifoMap\" title=\"SmallFifoMap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Find key-value pair iterator in cache. </p></dd>", "a[href=\"api/TypeMap.html#_CPPv4NK7TypeMap4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK7TypeMap4sizeEv\">\n<span id=\"_CPPv3NK7TypeMap4sizeEv\"></span><span id=\"_CPPv2NK7TypeMap4sizeEv\"></span><span id=\"TypeMap::sizeC\"></span><span class=\"target\" id=\"classTypeMap_1a204762c7ce9b8442c9962ecdad72d0c3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap7weightsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap7weightsE\">\n<span id=\"_CPPv3N17UnorderedIndexMap7weightsE\"></span><span id=\"_CPPv2N17UnorderedIndexMap7weightsE\"></span><span id=\"UnorderedIndexMap::weights__vector:double:\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aeb16f4ef4cbcdb4ca25177cd1cc20969\"></span><span class=\"k\"><span class=\"pre\">mutable</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">weights</span></span></span><br/></dt><dd><p>The total weights in each sub-tree. </p></dd>", "a[href=\"api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E20symmetric_differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E20symmetric_differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a6c77fc072550b940d12b318077b63604\"></span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv417UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417UnorderedIndexMap\">\n<span id=\"_CPPv317UnorderedIndexMap\"></span><span id=\"_CPPv217UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap\"></span><span class=\"target\" id=\"classUnorderedIndexMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></span><br/></dt><dd><p>A map of weighted indices. If a random index is selected, the probability of an index being returned is directly proportional to its weight. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4N8IndexSet7index_t5VALS3E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8IndexSet7index_t5VALS3E\">\n<span id=\"_CPPv3N8IndexSet7index_t5VALS3E\"></span><span id=\"_CPPv2N8IndexSet7index_t5VALS3E\"></span><span class=\"target\" id=\"classIndexSet_1af547c6de3a26a28af0f406fb996ab800a13de986ffc69fa2c6a3129d48680c353\"></span><span class=\"k\"><span class=\"pre\">enumerator</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VALS3</span></span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon5frontEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon5frontEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon5frontEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon5frontEv\"></span><span id=\"SmallVectorTemplateCommon::front\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ac58a09053c7c0f1ba9ee4afab0aca840\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\" title=\"SmallVectorTemplateCommon::reference\"><span class=\"n\"><span class=\"pre\">reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">front</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"api/vector_utils.html#_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\">\n<span id=\"_CPPv3I0E8InsertAtR6vectorI1TE6size_t1T\"></span><span id=\"_CPPv2I0E8InsertAtR6vectorI1TE6size_t1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a77dfa86bfa3242b41d1a76f484bbd15a\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InsertAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\" title=\"InsertAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\" title=\"InsertAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value at a specified position in a vector. </p></dd>", "a[href=\"api/Bool.html#_CPPv4N4Bool5valueE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4Bool5valueE\">\n<span id=\"_CPPv3N4Bool5valueE\"></span><span id=\"_CPPv2N4Bool5valueE\"></span><span id=\"Bool::value__b\"></span><span class=\"target\" id=\"classBool_1a16be863c269f988cdcbe59f9d846a141\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value</span></span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK10IndexRange3HasE10IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10IndexRange3HasE10IndexRange\">\n<span id=\"_CPPv3NK10IndexRange3HasE10IndexRange\"></span><span id=\"_CPPv2NK10IndexRange3HasE10IndexRange\"></span><span id=\"IndexRange::Has__IndexRangeC\"></span><span class=\"target\" id=\"classIndexRange_1a15527352b046d0877e8606f37d465653\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410IndexRange\" title=\"IndexRange\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK13IndexRangeSet7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13IndexRangeSet7GetSizeEv\">\n<span id=\"_CPPv3NK13IndexRangeSet7GetSizeEv\"></span><span id=\"_CPPv2NK13IndexRangeSet7GetSizeEv\"></span><span id=\"IndexRangeSet::GetSizeC\"></span><span class=\"target\" id=\"classIndexRangeSet_1a38e0722aa825732de2a74c70b6ad4f81\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Calculate the total combined size of all ranges. </p></dd>", "a[href=\"api/IndexSet.html#_CPPv4NK10IndexRange8GetStartEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10IndexRange8GetStartEv\">\n<span id=\"_CPPv3NK10IndexRange8GetStartEv\"></span><span id=\"_CPPv2NK10IndexRange8GetStartEv\"></span><span id=\"IndexRange::GetStartC\"></span><span class=\"target\" id=\"classIndexRange_1abd6b4cd9faf9e20082678cf6ddbe8487\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetStart</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"api/UnorderedIndexMap.html#_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERK17UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERK17UnorderedIndexMap\">\n<span id=\"_CPPv3N17UnorderedIndexMap17UnorderedIndexMapERK17UnorderedIndexMap\"></span><span id=\"_CPPv2N17UnorderedIndexMap17UnorderedIndexMapERK17UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap::UnorderedIndexMap__UnorderedIndexMapCR\"></span><span class=\"target\" id=\"classUnorderedIndexMap_1aca03d9b54f7351351c2ca6e4f0915897\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N17UnorderedIndexMap17UnorderedIndexMapERK17UnorderedIndexMap\" title=\"UnorderedIndexMap::UnorderedIndexMap\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/IndexSet.html#_CPPv4N13IndexRangeSetaSERR13IndexRangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13IndexRangeSetaSERR13IndexRangeSet\">\n<span id=\"_CPPv3N13IndexRangeSetaSERR13IndexRangeSet\"></span><span id=\"_CPPv2N13IndexRangeSetaSERR13IndexRangeSet\"></span><span id=\"IndexRangeSet::assign-operator__IndexRangeSetRR\"></span><span class=\"target\" id=\"classIndexRangeSet_1ac8fe8c429232e67155aea06081641f18\"></span><a class=\"reference internal\" href=\"#_CPPv413IndexRangeSet\" title=\"IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv413IndexRangeSet\" title=\"IndexRangeSet\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"api/SmallVector.html#_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon22const_reverse_iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon22const_reverse_iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ac6a38e8768ad2ebeae908e28bd081f7a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_reverse_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\" title=\"SmallVectorTemplateCommon::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
