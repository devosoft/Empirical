selector_to_html = {"a[href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\">\n<span id=\"_CPPv3I0E23SmallVectorTemplateBaseI1TXL1EEE\"></span><span id=\"_CPPv2I0E23SmallVectorTemplateBaseI1TXtrueEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>SmallVectorTemplateBase&lt;TriviallyCopyable = true&gt; - This is where we put method implementations that are designed to work with POD-like T\u2019s. </p></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE8pop_backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE8pop_backEv\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE8pop_backEv\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE8pop_backEv\"></span><span id=\"SmallVectorTemplateBase:T.true:::pop_back\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1ab322a908643f5bb8444e75d9b779a243\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pop_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBaseI1TXtrueEE18uninitialized_copyEP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a8928f119c2a8c7af5949593b897295e7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_copy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span>, <span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_same</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">remove_const</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEvP2T1P2T1P2T2PNSt9enable_ifINSt7is_sameINSt12remove_constI2T1E4typeE2T2E5valueEE4typeE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements into it as needed. </p></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon10value_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon10value_typeE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon10value_typeE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon10value_typeE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a0b9c16390f5922b958b09d94fc120ca2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon13size_in_bytesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon13size_in_bytesEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon13size_in_bytesEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon13size_in_bytesEv\"></span><span id=\"SmallVectorTemplateCommon::size_in_bytesC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a7148c74e84e553b6477fff53d23e4b75\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon7isSmallEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon7isSmallEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon7isSmallEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon7isSmallEv\"></span><span id=\"SmallVectorTemplateCommon::isSmallC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1adb19bdd477f7976f538e07ee7bc4960f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">isSmall</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return true if this is a smallvector which has not had dynamic memory allocated for it. </p></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon4rendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon4rendEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon4rendEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon4rendEv\"></span><span id=\"SmallVectorTemplateCommon::rend\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a6ef884b904b271acc60b856317504c6e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\" title=\"SmallVectorTemplateCommon::reverse_iterator\"><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBase9push_backERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase9push_backERK1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase9push_backERK1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase9push_backERK1T\"></span><span id=\"SmallVectorTemplateBase::push_back__TCR\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a50e91e9e0cf04cbe575f9efeec9023dc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Elt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE13destroy_rangeEP1TP1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE13destroy_rangeEP1TP1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE13destroy_rangeEP1TP1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE13destroy_rangeEP1TP1T\"></span><span id=\"SmallVectorTemplateBase:T.true:::destroy_range__TP.TP\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a58714daa7ff9540337721da5bb5a95e7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">destroy_range</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase15SmallVectorBaseEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase15SmallVectorBaseEv\">\n<span id=\"_CPPv3N15SmallVectorBase15SmallVectorBaseEv\"></span><span id=\"_CPPv2N15SmallVectorBase15SmallVectorBaseEv\"></span><span id=\"SmallVectorBase::SmallVectorBase\"></span><span class=\"target\" id=\"classSmallVectorBase_1a0cb6b5dd6aee397aca481ec858453974\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">delete</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\">\n<span id=\"_CPPv3I0_jE17capacity_in_bytesRK11SmallVectorI1T1NE\"></span><span id=\"_CPPv2I0_jE17capacity_in_bytesRK11SmallVectorI1T1NE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SmallVector_8hpp_1af24a9a98ea2e0d04793ae9da7af0ed98\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\" title=\"capacity_in_bytes::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\" title=\"capacity_in_bytes::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">X</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon14const_iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon14const_iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a8f3a22cb05d362e32e30ea01db8916b5\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE23SmallVectorTemplateBase\">\n<span id=\"_CPPv3I0_bE23SmallVectorTemplateBase\"></span><span id=\"_CPPv2I0_bE23SmallVectorTemplateBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_trivially_copyable</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; - This is where we put method implementations that are designed to work with non-POD-like T\u2019s. </p></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommonixE9size_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommonixE9size_type\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"SmallVectorTemplateCommon::subscript-operator__size_typeC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a19208581995e8616a3ee8a68e680bff9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\" title=\"SmallVectorTemplateCommon::const_reference\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">idx</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon7pointerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon7pointerE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon7pointerE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon7pointerE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1aa6fd739ace4f8ee847832e2a31b97c0b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE4growE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE4growE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE4growE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE4growE6size_t\"></span><span id=\"SmallVectorTemplateBase:T.true:::grow__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a301c694e75d94b8806fe3f7bcd0e0681\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinSize</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Double the size of the allocated memory, guaranteeing space for at least one more element or MinSize if specified. </p></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon13const_pointerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon13const_pointerE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon13const_pointerE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon13const_pointerE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a8cf53ed38e2874d4729dda84d173c1d0\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon5beginEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon5beginEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon5beginEv\"></span><span id=\"SmallVectorTemplateCommon::begin\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a8f58a1cbc362f31d59edce80897f06f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\" title=\"SmallVectorTemplateCommon::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon4dataEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon4dataEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon4dataEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon4dataEv\"></span><span id=\"SmallVectorTemplateCommon::dataC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ac7d6a4a2acaa6ead0a52fd67622a3728\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon13const_pointerE\" title=\"SmallVectorTemplateCommon::const_pointer\"><span class=\"n\"><span class=\"pre\">const_pointer</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Return a pointer to the vector\u2019s buffer, even if empty(). </p></dd>", "a[href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBase18uninitialized_copyE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBase18uninitialized_copyE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_1abe69402f037af68cc15a60a034f1b581\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_copy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_copy::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements as needed. </p></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon5frontEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon5frontEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon5frontEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon5frontEv\"></span><span id=\"SmallVectorTemplateCommon::frontC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a422465a387c5b3b0164d919cad4a9de9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\" title=\"SmallVectorTemplateCommon::const_reference\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">front</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon15const_referenceE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon15const_referenceE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon15const_referenceE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1afdaa510c5d21170896e9437216f0a2b2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase8set_sizeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase8set_sizeE6size_t\">\n<span id=\"_CPPv3N15SmallVectorBase8set_sizeE6size_t\"></span><span id=\"_CPPv2N15SmallVectorBase8set_sizeE6size_t\"></span><span id=\"SmallVectorBase::set_size__s\"></span><span class=\"target\" id=\"classSmallVectorBase_1a250554bf65b00950ac3092186f886dc4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the array size to <code class=\"docutils literal notranslate\"><span class=\"pre\">N</span></code>, which the current array must have enough capacity for.</p><p>This does not construct or destroy any elements in the vector.</p><p>Clients can use this in conjunction with capacity() to write past the end of the buffer when they know that more elements are available, and only update the size later. This avoids the cost of value initializing elements which will only be overwritten. </p></dd>", "a[href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBaseI1TXtrueEE18uninitialized_moveE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1aea307dc0fc89bbeec1bfd201dd48495d\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_move</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_move::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements into it as needed. </p></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon9size_typeE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon9size_typeE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon9size_typeE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ab91abf5058a6bc2745f49d9aebb35bce\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon10getFirstElEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon10getFirstElEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon10getFirstElEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon10getFirstElEv\"></span><span id=\"SmallVectorTemplateCommon::getFirstElC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a65957051634f2f7815f1df8d2b41262a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">getFirstEl</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Find the address of the first element. For this pointer math to be valid with small-size of 0 for T with lots of alignment, it\u2019s important that SmallVectorStorage is properly-aligned even for small-size of 0. </p></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon16reverse_iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon16reverse_iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a3448acba9ca27a1ef777a92b45c9a032\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\" title=\"SmallVectorTemplateCommon::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon3endEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon3endEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon3endEv\"></span><span id=\"SmallVectorTemplateCommon::endC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a14f35120de1fed9fe22b1edf43435479\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\" title=\"SmallVectorTemplateCommon::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon9referenceE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon9referenceE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon9referenceE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a294931fdbb5f41e0d63bbef6d05dd16a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon15difference_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon15difference_typeE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon15difference_typeE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon15difference_typeE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a4ba052f14505489983802f8bff785cfa\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">ptrdiff_t</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N21AlignedCharArrayUnion6bufferE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N21AlignedCharArrayUnion6bufferE\">\n<span id=\"_CPPv3N21AlignedCharArrayUnion6bufferE\"></span><span id=\"_CPPv2N21AlignedCharArrayUnion6bufferE\"></span><span id=\"AlignedCharArrayUnion::buffer__cA\"></span><span class=\"target\" id=\"structAlignedCharArrayUnion_1a20855a0f9ba8ea6d8acdda6b0b8c8ba6\"></span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">buffer</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"k\"><span class=\"pre\">sizeof</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"n\"><span class=\"pre\">detail</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">SizerImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE21AlignedCharArrayUnion\" title=\"AlignedCharArrayUnion::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE21AlignedCharArrayUnion\" title=\"AlignedCharArrayUnion::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">]</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase23SmallVectorTemplateBaseE6size_t\"></span><span id=\"SmallVectorTemplateBase::SmallVectorTemplateBase__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a30fe9504a6f2e15a27a13e72293186ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon22const_reverse_iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon22const_reverse_iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ac6a38e8768ad2ebeae908e28bd081f7a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">const_reverse_iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\" title=\"SmallVectorTemplateCommon::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv415SmallVectorBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415SmallVectorBase\">\n<span id=\"_CPPv315SmallVectorBase\"></span><span id=\"_CPPv215SmallVectorBase\"></span><span id=\"SmallVectorBase\"></span><span class=\"target\" id=\"classSmallVectorBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><br/></dt><dd><p>This is all the non-templated stuff common to all SmallVectors. </p><p>Subclassed by SmallVectorTemplateCommon&lt; T, typename &gt;, SmallVectorTemplateCommon&lt; T &gt;</p></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBase8pop_backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase8pop_backEv\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase8pop_backEv\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase8pop_backEv\"></span><span id=\"SmallVectorTemplateBase::pop_back\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a696914682856b9146dfd6ff6e294100d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pop_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBase9push_backERR1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase9push_backERR1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase9push_backERR1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase9push_backERR1T\"></span><span id=\"SmallVectorTemplateBase::push_back__TRR\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1abf215f3cd8654517c1bef007eb49e002\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Elt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommonixE9size_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommonixE9size_type\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommonixE9size_type\"></span><span id=\"SmallVectorTemplateCommon::subscript-operator__size_type\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a9e7df5dc792db5783a15ef265162347c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\" title=\"SmallVectorTemplateCommon::reference\"><span class=\"n\"><span class=\"pre\">reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">[]</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">idx</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase4SizeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase4SizeE\">\n<span id=\"_CPPv3N15SmallVectorBase4SizeE\"></span><span id=\"_CPPv2N15SmallVectorBase4SizeE\"></span><span id=\"SmallVectorBase::Size__unsigned\"></span><span class=\"target\" id=\"classSmallVectorBase_1ab5fb6282a0f7a90cde8a138578aa9ad8\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Size</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon8grow_podE6size_t6size_t\"></span><span id=\"SmallVectorTemplateCommon::grow_pod__s.s\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a2dfb61a14d06b920747a7a1cc8659837\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow_pod</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinCapacity</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">TSize</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon3endEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon3endEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon3endEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon3endEv\"></span><span id=\"SmallVectorTemplateCommon::end\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1af217ec0a2913b4f6b396402c84713820\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\" title=\"SmallVectorTemplateCommon::iterator\"><span class=\"n\"><span class=\"pre\">iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">end</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase8grow_podEPv6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase8grow_podEPv6size_t6size_t\">\n<span id=\"_CPPv3N15SmallVectorBase8grow_podEPv6size_t6size_t\"></span><span id=\"_CPPv2N15SmallVectorBase8grow_podEPv6size_t6size_t\"></span><span id=\"SmallVectorBase::grow_pod__voidP.s.s\"></span><span class=\"target\" id=\"classSmallVectorBase_1a5ba96e7471231416524a01151b6aad5a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow_pod</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">FirstEl</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinCapacity</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">TSize</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This is an implementation of the grow() method which only works on POD-like data types and is out of line to reduce code duplication. </p></dd>", "a[href=\"#_CPPv4I0_jE11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_jE11SmallVector\">\n<span id=\"_CPPv3I0_jE11SmallVector\"></span><span id=\"_CPPv2I0_jE11SmallVector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">private</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SmallVectorStorage</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>This is a \u2018vector\u2019 (really, a variable-sized array), optimized for the case when the array is small. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal \u201csmall\u201d cases to be fast without losing generality for large inputs.</p><p>Note that this does not attempt to be exception safe. </p></dd>", "a[href=\"#_CPPv4I0DpE21AlignedCharArrayUnion\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE21AlignedCharArrayUnion\">\n<span id=\"_CPPv3I0DpE21AlignedCharArrayUnion\"></span><span id=\"_CPPv2I0DpE21AlignedCharArrayUnion\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAlignedCharArrayUnion\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlignedCharArrayUnion</span></span></span><br/></dt><dd><p>A suitably aligned and sized character array member which can hold elements of any type.</p><p>These types may be arrays, structs, or any other types. This exposes a <code class=\"docutils literal notranslate\"><span class=\"pre\">buffer</span></code> member which can be used as suitable storage for a placement new of any of these types. </p></dd>", "a[href=\"#_CPPv4N11SmallVectorD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectorD0Ev\">\n<span id=\"_CPPv3N11SmallVectorD0Ev\"></span><span id=\"_CPPv2N11SmallVectorD0Ev\"></span><span id=\"SmallVector::~SmallVector\"></span><span class=\"target\" id=\"classSmallVector_1a5a28e9af4d04f6b8a973d279dd84f1d7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK15SmallVectorBase4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15SmallVectorBase4sizeEv\">\n<span id=\"_CPPv3NK15SmallVectorBase4sizeEv\"></span><span id=\"_CPPv2NK15SmallVectorBase4sizeEv\"></span><span id=\"SmallVectorBase::sizeC\"></span><span class=\"target\" id=\"classSmallVectorBase_1ae3b493047e3febfc9dcab23e2769a4ef\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE9push_backERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE9push_backERK1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE9push_backERK1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE9push_backERK1T\"></span><span id=\"SmallVectorTemplateBase:T.true:::push_back__TCR\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a1d8eff223199ff12d45c9f5fbb659d25\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">push_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Elt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11SmallVectoraSERR15SmallVectorImplI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSERR15SmallVectorImplI1TE\">\n<span id=\"_CPPv3N11SmallVectoraSERR15SmallVectorImplI1TE\"></span><span id=\"_CPPv2N11SmallVectoraSERR15SmallVectorImplI1TE\"></span><span id=\"SmallVector::assign-operator__SmallVectorImpl:T:RR\"></span><span class=\"target\" id=\"classSmallVector_1a3427695fb4f191c88fc30fe82af4bbf5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon5beginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon5beginEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon5beginEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon5beginEv\"></span><span id=\"SmallVectorTemplateCommon::beginC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1abb31945f3a78695602931099f3524a7b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon14const_iteratorE\" title=\"SmallVectorTemplateCommon::const_iterator\"><span class=\"n\"><span class=\"pre\">const_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">begin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon6rbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon6rbeginEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"SmallVectorTemplateCommon::rbegin\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ad183398cc6b853b618fcbeeca327267b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon16reverse_iteratorE\" title=\"SmallVectorTemplateCommon::reverse_iterator\"><span class=\"n\"><span class=\"pre\">reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon8max_sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon8max_sizeEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon8max_sizeEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon8max_sizeEv\"></span><span id=\"SmallVectorTemplateCommon::max_sizeC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a7fdfcde607f56dc7fc574c4ee8895853\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9size_typeE\" title=\"SmallVectorTemplateCommon::size_type\"><span class=\"n\"><span class=\"pre\">size_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">max_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK15SmallVectorBase8capacityEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15SmallVectorBase8capacityEv\">\n<span id=\"_CPPv3NK15SmallVectorBase8capacityEv\"></span><span id=\"_CPPv2NK15SmallVectorBase8capacityEv\"></span><span id=\"SmallVectorBase::capacityC\"></span><span class=\"target\" id=\"classSmallVectorBase_1a13d3c5b0c01b69140ba1bbe3c2125433\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\">\n<span id=\"_CPPv3I00EN11SmallVector11SmallVectorE4ItTy4ItTy\"></span><span id=\"_CPPv2I00EN11SmallVector11SmallVectorE4ItTy4ItTy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_convertible</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator_traits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\" title=\"SmallVector::SmallVector::ItTy\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">iterator_category</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">input_iterator_tag</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVector_1a3f985c5b6c04248022e4b4fdd873d990\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\" title=\"SmallVector::SmallVector::ItTy\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">S</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN11SmallVector11SmallVectorE4ItTy4ItTy\" title=\"SmallVector::SmallVector::ItTy\"><span class=\"n\"><span class=\"pre\">ItTy</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11SmallVector11SmallVectorERK11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorERK11SmallVector\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorERK11SmallVector\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorERK11SmallVector\"></span><span id=\"SmallVector::SmallVector__SmallVectorCR\"></span><span class=\"target\" id=\"classSmallVector_1a6847a6760f49a189400a3f5a32d4839e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11SmallVector11SmallVectorERK11SmallVector\" title=\"SmallVector::SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon17capacity_in_bytesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon17capacity_in_bytesEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon17capacity_in_bytesEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon17capacity_in_bytesEv\"></span><span id=\"SmallVectorTemplateCommon::capacity_in_bytesC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a459709e95d96d20dc41b9bc18be709f7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBase18uninitialized_moveE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBase18uninitialized_moveE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_1a0cf6e5e179e83d829e94a45114c73f91\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_move</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_move::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBase18uninitialized_moveEv3It13It13It2\" title=\"SmallVectorTemplateBase::uninitialized_move::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move the range [I, E) into the uninitialized memory starting with \u201cDest\u201d, constructing elements as needed. </p></dd>", "a[href=\"#_CPPv4N11SmallVector11SmallVectorEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorEv\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorEv\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorEv\"></span><span id=\"SmallVector::SmallVector\"></span><span class=\"target\" id=\"classSmallVector_1a22e956337a6a835026a7a6d5a52ffba9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase13destroy_rangeEP1TP1T\"></span><span id=\"SmallVectorTemplateBase::destroy_range__TP.TP\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1a5ae6fa97229fbe7ce0f9a4cd951af5a4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">destroy_range</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">S</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">E</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorERR15SmallVectorImplI1TE\"></span><span id=\"SmallVector::SmallVector__SmallVectorImpl:T:RR\"></span><span class=\"target\" id=\"classSmallVector_1a20bd8e3c47fd908f0ba817a3288d5c4a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon4rendEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon4rendEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon4rendEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon4rendEv\"></span><span id=\"SmallVectorTemplateCommon::rendC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a0803bb21434cceab635a6240c1e470aa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\" title=\"SmallVectorTemplateCommon::const_reverse_iterator\"><span class=\"n\"><span class=\"pre\">const_reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rend</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon4dataEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon4dataEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon4dataEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon4dataEv\"></span><span id=\"SmallVectorTemplateCommon::data\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a9ae68f1b88908d02925e4099d05b294d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon7pointerE\" title=\"SmallVectorTemplateCommon::pointer\"><span class=\"n\"><span class=\"pre\">pointer</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a pointer to the vector\u2019s buffer, even if empty(). </p></dd>", "a[href=\"#_CPPv4N11SmallVector11SmallVectorENSt16initializer_listI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorENSt16initializer_listI1TEE\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorENSt16initializer_listI1TEE\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorENSt16initializer_listI1TEE\"></span><span id=\"SmallVector::SmallVector__std::initializer_list:T:\"></span><span class=\"target\" id=\"classSmallVector_1a9efd8435e708fd56b863e409a9321c8d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">IL</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon12resetToSmallEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon12resetToSmallEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon12resetToSmallEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon12resetToSmallEv\"></span><span id=\"SmallVectorTemplateCommon::resetToSmall\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a0eebc2ce9f5307399d556e1752c058e3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">resetToSmall</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Put this vector in a state of being small. </p></dd>", "a[href=\"#_CPPv4N11SmallVectoraSERR11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSERR11SmallVector\">\n<span id=\"_CPPv3N11SmallVectoraSERR11SmallVector\"></span><span id=\"_CPPv2N11SmallVectoraSERR11SmallVector\"></span><span id=\"SmallVector::assign-operator__SmallVectorRR\"></span><span class=\"target\" id=\"classSmallVector_1acdb292d7d3cae024f219405ffe8a50a0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE23SmallVectorTemplateBaseE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBaseI1TXL1EEE23SmallVectorTemplateBaseE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBaseI1TXL1EEE23SmallVectorTemplateBaseE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBaseI1TXtrueEE23SmallVectorTemplateBaseE6size_t\"></span><span id=\"SmallVectorTemplateBase:T.true:::SmallVectorTemplateBase__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1a343c5866634a7eccadd737ab8f09f77d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11SmallVectoraSERK11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSERK11SmallVector\">\n<span id=\"_CPPv3N11SmallVectoraSERK11SmallVector\"></span><span id=\"_CPPv2N11SmallVectoraSERK11SmallVector\"></span><span id=\"SmallVector::assign-operator__SmallVectorCR\"></span><span class=\"target\" id=\"classSmallVector_1a4270ad76513034fd190c56e589ba08c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00E25SmallVectorTemplateCommon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E25SmallVectorTemplateCommon\">\n<span id=\"_CPPv3I00E25SmallVectorTemplateCommon\"></span><span id=\"_CPPv2I00E25SmallVectorTemplateCommon\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateCommon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv415SmallVectorBase\" title=\"SmallVectorBase\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></a><br/></dt><dd><p>This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD. The extra dummy template argument is used by ArrayRef to avoid unnecessarily requiring T to be complete. </p></dd>", "a[href=\"#_CPPv4NK15SmallVectorBase5emptyEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15SmallVectorBase5emptyEv\">\n<span id=\"_CPPv3NK15SmallVectorBase5emptyEv\"></span><span id=\"_CPPv2NK15SmallVectorBase5emptyEv\"></span><span id=\"SmallVectorBase::emptyC\"></span><span class=\"target\" id=\"classSmallVectorBase_1af081190de1d0bb6e81abd4a4a518f265\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empty</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase6BeginXE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase6BeginXE\">\n<span id=\"_CPPv3N15SmallVectorBase6BeginXE\"></span><span id=\"_CPPv2N15SmallVectorBase6BeginXE\"></span><span id=\"SmallVectorBase::BeginX__voidP\"></span><span class=\"target\" id=\"classSmallVectorBase_1a195b52bcbf3489bd687dfa9af5f7191f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BeginX</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23SmallVectorTemplateBase4growE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23SmallVectorTemplateBase4growE6size_t\">\n<span id=\"_CPPv3N23SmallVectorTemplateBase4growE6size_t\"></span><span id=\"_CPPv2N23SmallVectorTemplateBase4growE6size_t\"></span><span id=\"SmallVectorTemplateBase::grow__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateBase_1ae888973f8b410d8e3d200399ed8ae208\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">grow</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">MinSize</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Grow the allocated memory (without initializing new elements), doubling the size of the allocated memory. Guarantees space for at least one more element, or MinSize more elements if specified. </p></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon6rbeginEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon6rbeginEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon6rbeginEv\"></span><span id=\"SmallVectorTemplateCommon::rbeginC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ad2bec2897f0f55500350d2ccdc52d382\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon22const_reverse_iteratorE\" title=\"SmallVectorTemplateCommon::const_reverse_iterator\"><span class=\"n\"><span class=\"pre\">const_reverse_iterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">rbegin</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon25SmallVectorTemplateCommonE6size_t\"></span><span id=\"SmallVectorTemplateCommon::SmallVectorTemplateCommon__s\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a7983dff935d29e28b72861a688985e0e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase15SmallVectorBaseEPv6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase15SmallVectorBaseEPv6size_t\">\n<span id=\"_CPPv3N15SmallVectorBase15SmallVectorBaseEPv6size_t\"></span><span id=\"_CPPv2N15SmallVectorBase15SmallVectorBaseEPv6size_t\"></span><span id=\"SmallVectorBase::SmallVectorBase__voidP.s\"></span><span class=\"target\" id=\"classSmallVectorBase_1a805cac87a7130547f601a3ddb2fa9084\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">FirstEl</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">TotalCapacity</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15SmallVectorBase8CapacityE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15SmallVectorBase8CapacityE\">\n<span id=\"_CPPv3N15SmallVectorBase8CapacityE\"></span><span id=\"_CPPv2N15SmallVectorBase8CapacityE\"></span><span id=\"SmallVectorBase::Capacity__unsigned\"></span><span class=\"target\" id=\"classSmallVectorBase_1a03913517f74cde058e85c496a19249a8\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Capacity</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11SmallVectoraSENSt16initializer_listI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVectoraSENSt16initializer_listI1TEE\">\n<span id=\"_CPPv3N11SmallVectoraSENSt16initializer_listI1TEE\"></span><span id=\"_CPPv2N11SmallVectoraSENSt16initializer_listI1TEE\"></span><span id=\"SmallVector::assign-operator__std::initializer_list:T:\"></span><span class=\"target\" id=\"classSmallVector_1a53eff1ce096c2626a444ac149294b295\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">IL</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon8iteratorE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon8iteratorE\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon8iteratorE\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon8iteratorE\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a37715bfda8dc4e2a1f1ea98c2b22b770\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">iterator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon4backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon4backEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon4backEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon4backEv\"></span><span id=\"SmallVectorTemplateCommon::back\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1af2dbccf123a0b2be6dde8663ae31a84f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\" title=\"SmallVectorTemplateCommon::reference\"><span class=\"n\"><span class=\"pre\">reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\">\n<span id=\"_CPPv3I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyE3It13It13It2\"></span><span id=\"_CPPv2I00EN23SmallVectorTemplateBaseI1TXtrueEE18uninitialized_copyE3It13It13It2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">It2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4_1ab1683afda4536c3fb1ce506e3e1eb055\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uninitialized_copy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">I</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::It1\"><span class=\"n\"><span class=\"pre\">It1</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">E</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00EN23SmallVectorTemplateBaseI1TXL1EEE18uninitialized_copyEv3It13It13It2\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::uninitialized_copy::It2\"><span class=\"n\"><span class=\"pre\">It2</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Dest</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy the range [I, E) onto the uninitialized memory starting with \u201cDest\u201d, constructing elements into it as needed. </p></dd>", "a[href=\"#_CPPv4N11SmallVector11SmallVectorE6size_tRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorE6size_tRK1T\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorE6size_tRK1T\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorE6size_tRK1T\"></span><span id=\"SmallVector::SmallVector__s.TCR\"></span><span class=\"target\" id=\"classSmallVector_1a2487b10ed3bc91cedba6dfab74119ff2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">explicit</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">Size</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">Value</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK25SmallVectorTemplateCommon4backEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK25SmallVectorTemplateCommon4backEv\">\n<span id=\"_CPPv3NK25SmallVectorTemplateCommon4backEv\"></span><span id=\"_CPPv2NK25SmallVectorTemplateCommon4backEv\"></span><span id=\"SmallVectorTemplateCommon::backC\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1a3d8c76f8f213debf4e936c52ec568a14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon15const_referenceE\" title=\"SmallVectorTemplateCommon::const_reference\"><span class=\"n\"><span class=\"pre\">const_reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">back</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#smallvector-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SmallVector.hpp<a class=\"headerlink\" href=\"#smallvector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in replacement for std::vector with optimization to handle small vector sizes without dynamic allocation. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal \u201csmall\u201d cases to be fast without losing generality for large inputs. </p>", "a[href=\"#_CPPv4N11SmallVector11SmallVectorERR11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11SmallVector11SmallVectorERR11SmallVector\">\n<span id=\"_CPPv3N11SmallVector11SmallVectorERR11SmallVector\"></span><span id=\"_CPPv2N11SmallVector11SmallVectorERR11SmallVector\"></span><span id=\"SmallVector::SmallVector__SmallVectorRR\"></span><span class=\"target\" id=\"classSmallVector_1aaf5b710f3555ba4044ac26d3d013aa76\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11SmallVector11SmallVectorERR11SmallVector\" title=\"SmallVector::SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">RHS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N25SmallVectorTemplateCommon5frontEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N25SmallVectorTemplateCommon5frontEv\">\n<span id=\"_CPPv3N25SmallVectorTemplateCommon5frontEv\"></span><span id=\"_CPPv2N25SmallVectorTemplateCommon5frontEv\"></span><span id=\"SmallVectorTemplateCommon::front\"></span><span class=\"target\" id=\"classSmallVectorTemplateCommon_1ac58a09053c7c0f1ba9ee4afab0aca840\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N25SmallVectorTemplateCommon9referenceE\" title=\"SmallVectorTemplateCommon::reference\"><span class=\"n\"><span class=\"pre\">reference</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">front</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
