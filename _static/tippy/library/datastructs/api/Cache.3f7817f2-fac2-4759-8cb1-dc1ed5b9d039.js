selector_to_html = {"a[href=\"#_CPPv4N5Cache9cache_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache9cache_mapE\">\n<span id=\"_CPPv3N5Cache9cache_mapE\"></span><span id=\"_CPPv2N5Cache9cache_mapE\"></span><span id=\"Cache::cache_map__std::unordered_map:KEY.T.HASH.PRED.ALLOC:\"></span><span class=\"target\" id=\"classCache_1a83cc50bdcaa6a2507b3dd14c09127627\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::HASH\"><span class=\"n\"><span class=\"pre\">HASH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::PRED\"><span class=\"n\"><span class=\"pre\">PRED</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::ALLOC\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cache_map</span></span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N5Cache5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5ClearEv\">\n<span id=\"_CPPv3N5Cache5ClearEv\"></span><span id=\"_CPPv2N5Cache5ClearEv\"></span><span id=\"Cache::Clear\"></span><span class=\"target\" id=\"classCache_1ada3ff5ec5c435a0194e64dbaa2e7be1b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Erase contents of cache. </p></dd>", "a[href=\"#_CPPv4N5Cache9key_equalE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache9key_equalE\">\n<span id=\"_CPPv3N5Cache9key_equalE\"></span><span id=\"_CPPv2N5Cache9key_equalE\"></span><span class=\"target\" id=\"classCache_1a2adad29a4fd4f977cf66ec1255dafd0d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_equal</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::PRED\"><span class=\"n\"><span class=\"pre\">PRED</span></span></a><br/></dt><dd><p>Function to test if two values are identical. </p></dd>", "a[href=\"#_CPPv4NK5Cache4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Cache4sizeEv\">\n<span id=\"_CPPv3NK5Cache4sizeEv\"></span><span id=\"_CPPv2NK5Cache4sizeEv\"></span><span id=\"Cache::sizeC\"></span><span class=\"target\" id=\"classCache_1a1fc393ec99adde6b494efbb96094a60f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many entries are stored in the cache? </p></dd>", "a[href=\"#_CPPv4NK5Cache3HasERK3KEY\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK5Cache3HasERK3KEY\">\n<span id=\"_CPPv3NK5Cache3HasERK3KEY\"></span><span id=\"_CPPv2NK5Cache3HasERK3KEY\"></span><span id=\"Cache::Has__KEYCRC\"></span><span class=\"target\" id=\"classCache_1af10e93c376aa1f89a1f3cf0d707adad0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">k</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Determine if a specific key is already in the cache. </p></dd>", "a[href=\"#_CPPv4N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\">\n<span id=\"_CPPv3N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\"></span><span id=\"_CPPv2N5Cache6GetRefERK3KEYRKNSt8functionIF1TRK3KEYEEE\"></span><span class=\"target\" id=\"classCache_1ac164626f8bc2528159063d0b19a758ff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">k</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n\"><span class=\"pre\">k</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">calc_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A version of Get that allows calls with const references instead of pass-by-value. </p></dd>", "a[href=\"#_CPPv4N5Cache8key_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache8key_typeE\">\n<span id=\"_CPPv3N5Cache8key_typeE\"></span><span id=\"_CPPv2N5Cache8key_typeE\"></span><span class=\"target\" id=\"classCache_1a98ae073a4c3439547f34c91382d0d264\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">key_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><br/></dt><dd><p>Type we are using to look up values. </p></dd>", "a[href=\"#_CPPv4N5Cache6hasherE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache6hasherE\">\n<span id=\"_CPPv3N5Cache6hasherE\"></span><span id=\"_CPPv2N5Cache6hasherE\"></span><span class=\"target\" id=\"classCache_1a87595d787bef3005f373c5f4ef6499c2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hasher</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::HASH\"><span class=\"n\"><span class=\"pre\">HASH</span></span></a><br/></dt><dd><p>Hash method to use. </p></dd>", "a[href=\"#_CPPv4N5CacheaSERK5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5CacheaSERK5Cache\">\n<span id=\"_CPPv3N5CacheaSERK5Cache\"></span><span id=\"_CPPv2N5CacheaSERK5Cache\"></span><span id=\"Cache::assign-operator__CacheCR\"></span><span class=\"target\" id=\"classCache_1a696ac265702e359453a7e6d50e74d54e\"></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Cache11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache11mapped_typeE\">\n<span id=\"_CPPv3N5Cache11mapped_typeE\"></span><span id=\"_CPPv2N5Cache11mapped_typeE\"></span><span class=\"target\" id=\"classCache_1af8ba0896dfa8f792275a3e67ac5ed7d8\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">mapped_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><br/></dt><dd><p>Contents of the value we look up. </p></dd>", "a[href=\"#_CPPv4N5CacheaSERR5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5CacheaSERR5Cache\">\n<span id=\"_CPPv3N5CacheaSERR5Cache\"></span><span id=\"_CPPv2N5CacheaSERR5Cache\"></span><span id=\"Cache::assign-operator__CacheRR\"></span><span class=\"target\" id=\"classCache_1a068176399fa9d8686618050c9660b333\"></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Cache14allocator_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache14allocator_typeE\">\n<span id=\"_CPPv3N5Cache14allocator_typeE\"></span><span id=\"_CPPv2N5Cache14allocator_typeE\"></span><span class=\"target\" id=\"classCache_1ae287d047884940d00bbcf4f09e866dfd\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">allocator_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::ALLOC\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></a><br/></dt><dd><p>Function to allocate new space. </p></dd>", "a[href=\"#cache-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Cache.hpp<a class=\"headerlink\" href=\"#cache-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>similar to an std::unordered_map, but all lookups come with a function to generate the result should the lookup fail. </p>", "a[href=\"#_CPPv4N5Cache5CacheERK5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5CacheERK5Cache\">\n<span id=\"_CPPv3N5Cache5CacheERK5Cache\"></span><span id=\"_CPPv2N5Cache5CacheERK5Cache\"></span><span id=\"Cache::Cache__CacheCR\"></span><span class=\"target\" id=\"classCache_1a2fec89707f61ef9302383ab21cc796c7\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N5Cache5CacheERK5Cache\" title=\"Cache::Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Cache5CacheERR5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5CacheERR5Cache\">\n<span id=\"_CPPv3N5Cache5CacheERR5Cache\"></span><span id=\"_CPPv2N5Cache5CacheERR5Cache\"></span><span id=\"Cache::Cache__CacheRR\"></span><span class=\"target\" id=\"classCache_1add7a9afadaee205a99cfe4103bb0c311\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N5Cache5CacheERR5Cache\" title=\"Cache::Cache\"><span class=\"n\"><span class=\"pre\">Cache</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Cache5EraseERK3KEY\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5EraseERK3KEY\">\n<span id=\"_CPPv3N5Cache5EraseERK3KEY\"></span><span id=\"_CPPv2N5Cache5EraseERK3KEY\"></span><span id=\"Cache::Erase__KEYCR\"></span><span class=\"target\" id=\"classCache_1a595eda448926c629183decbf0a416a75\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Erase</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">k</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Erase a specific entry from cache. </p></dd>", "a[href=\"#_CPPv4N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\">\n<span id=\"_CPPv3N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\"></span><span id=\"_CPPv2N5Cache3GetE3KEYRKNSt8functionIF1T3KEYEEE\"></span><span class=\"target\" id=\"classCache_1ab24a23cc04e1903d988f2b5ef1e27103\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Get</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">k</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">k</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">calc_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Lookup a specific key; provide a function to use if value is not in cache. </p></dd>", "a[href=\"#_CPPv4I00000E5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000E5Cache\">\n<span id=\"_CPPv3I00000E5Cache\"></span><span id=\"_CPPv2I00000E5Cache\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HASH</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PRED</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classCache\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N5Cache5CacheEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N5Cache5CacheEv\">\n<span id=\"_CPPv3N5Cache5CacheEv\"></span><span id=\"_CPPv2N5Cache5CacheEv\"></span><span id=\"Cache::Cache\"></span><span class=\"target\" id=\"classCache_1aadaf41e9447fa7f89e9dcd6edac4fe77\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
