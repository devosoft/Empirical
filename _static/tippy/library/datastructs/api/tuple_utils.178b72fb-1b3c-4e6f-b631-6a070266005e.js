selector_to_html = {"a[href=\"../../meta/api/ValPack.html#_CPPv4I_DpDaE7ValPack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_DpDaE7ValPack\">\n<span id=\"_CPPv3I_DpDaE7ValPack\"></span><span id=\"_CPPv2I_DpDaE7ValPack\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structValPack\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\">\n<span id=\"_CPPv3I00E12TupleIterateR7TUPLE_TRK5FUN_T\"></span><span id=\"_CPPv2I00E12TupleIterateR7TUPLE_TRK5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a25ed5449a8aa424858a55dfa93c16a87\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleIterate</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\" title=\"TupleIterate::TUPLE_T\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\" title=\"TupleIterate::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a provided function on each element of a tuple. </p></dd>", "a[href=\"#_CPPv4I0E10tuple_sizeiv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10tuple_sizeiv\">\n<span id=\"_CPPv3I0E10tuple_sizev\"></span><span id=\"_CPPv2I0E10tuple_sizev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a6f5170d2c5ddb41e1a3d902b2c8e0e97\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tuple_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Quick way to calculate tuple size. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N9TupleHash5fun_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TupleHash5fun_tE\">\n<span id=\"_CPPv3N9TupleHash5fun_tE\"></span><span id=\"_CPPv2N9TupleHash5fun_tE\"></span><span class=\"target\" id=\"structTupleHash_1af32d6660756d6f1407003bd125270cf3\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE9TupleHash\" title=\"TupleHash::TYPES\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK9TupleHashclERK7tuple_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK9TupleHashclERK7tuple_t\">\n<span id=\"_CPPv3NK9TupleHashclERK7tuple_t\"></span><span id=\"_CPPv2NK9TupleHashclERK7tuple_t\"></span><span id=\"TupleHash::call-operator__tuple_tCRC\"></span><span class=\"target\" id=\"structTupleHash_1a97ad84187162a1d0c9c2fbd7cf42c0b8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N9TupleHash7tuple_tE\" title=\"TupleHash::tuple_t\"><span class=\"n\"><span class=\"pre\">tuple_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4IDpE9TupleHash\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9TupleHash\">\n<span id=\"_CPPv3IDpE9TupleHash\"></span><span id=\"_CPPv2IDpE9TupleHash\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTupleHash\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleHash</span></span></span><br/></dt><dd><p>Setup tuples to be able to be used in hash tables. </p></dd>", "a[href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\">\n<span id=\"_CPPv3IDp_DpiE13shuffle_tupleRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"></span><span id=\"_CPPv2IDp_DpiE13shuffle_tupleRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ps</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a1c96d5610919c37eabed347eefe097a3\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">shuffle_tuple</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\" title=\"shuffle_tuple::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span>, <a class=\"reference internal\" href=\"../../meta/api/ValPack.html#_CPPv4I_DpDaE7ValPack\" title=\"ValPack\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\" title=\"shuffle_tuple::Ps\"><span class=\"n\"><span class=\"pre\">Ps</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reorganize the entries in tuple; the provided int pack must specify the new ordering. </p></dd>", "a[href=\"#_CPPv4N9TupleHash7tuple_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N9TupleHash7tuple_tE\">\n<span id=\"_CPPv3N9TupleHash7tuple_tE\"></span><span id=\"_CPPv2N9TupleHash7tuple_tE\"></span><span class=\"target\" id=\"structTupleHash_1a15efb4a90979a4c563d009749b0c7318\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tuple_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE9TupleHash\" title=\"TupleHash::TYPES\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\">\n<span id=\"_CPPv3I000E12TupleIterateR6TUP1_TR6TUP2_TRK5FUN_T\"></span><span id=\"_CPPv2I000E12TupleIterateR6TUP1_TR6TUP2_TRK5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUP1_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUP2_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a4e56a9e6622159217458a5993978850f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleIterate</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::TUP1_T\"><span class=\"n\"><span class=\"pre\">TUP1_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::TUP2_T\"><span class=\"n\"><span class=\"pre\">TUP2_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a provided function on each pair of elements in two tuples. </p></dd>", "a[href=\"#tuple-utils-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">tuple_utils.hpp<a class=\"headerlink\" href=\"#tuple-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions to simplify the use of std::tuple Status: RELEASE. </p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
