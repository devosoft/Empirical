selector_to_html = {"a[href=\"#_CPPv4N11BloomFilter10bloom_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10bloom_typeE\">\n<span id=\"_CPPv3N11BloomFilter10bloom_typeE\"></span><span id=\"_CPPv2N11BloomFilter10bloom_typeE\"></span><span id=\"BloomFilter::bloom_type\"></span><span class=\"target\" id=\"classBloomFilter_1addc1e480e80fc315bafa336897974244\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFilter5tableEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter5tableEv\">\n<span id=\"_CPPv3NK11BloomFilter5tableEv\"></span><span id=\"_CPPv2NK11BloomFilter5tableEv\"></span><span id=\"BloomFilter::tableC\"></span><span class=\"target\" id=\"classBloomFilter_1a1f97cf25ce8a23d8bbdcb226dba1dcca\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter9cell_typeE\" title=\"BloomFilter::cell_type\"><span class=\"n\"><span class=\"pre\">cell_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">table</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter11table_size_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11table_size_E\">\n<span id=\"_CPPv3N11BloomFilter11table_size_E\"></span><span id=\"_CPPv2N11BloomFilter11table_size_E\"></span><span id=\"BloomFilter::table_size___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1abbe006e347118a3f0bf138762aebae04\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">table_size_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4anRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4anRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3anRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2anRK11BloomFilterRK11BloomFilter\"></span><span id=\"and-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1a5441f6b0a6ba8de8439e1d63e6f2f404\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the intersection of two Bloom filters. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter9cell_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter9cell_typeE\">\n<span id=\"_CPPv3N11BloomFilter9cell_typeE\"></span><span id=\"_CPPv2N11BloomFilter9cell_typeE\"></span><span id=\"BloomFilter::cell_type\"></span><span class=\"target\" id=\"classBloomFilter_1a62537022cc49f9fb602caf03e2ca5edf\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cell_type</span></span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter24projected_element_count_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter24projected_element_count_E\">\n<span id=\"_CPPv3N11BloomFilter24projected_element_count_E\"></span><span id=\"_CPPv2N11BloomFilter24projected_element_count_E\"></span><span id=\"BloomFilter::projected_element_count___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1a22c29b48ae224d8838fa05966dcb2ed6\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">projected_element_count_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilteroRERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilteroRERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilteroRERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilteroRERK11BloomFilter\"></span><span id=\"BloomFilter::or-assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1aa4914d475eb3a2d4f1f2b58cc864f585\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the union of two Bloom filters. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter6insertERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter6insertERKNSt6stringE\">\n<span id=\"_CPPv3N11BloomFilter6insertERKNSt6stringE\"></span><span id=\"_CPPv2N11BloomFilter6insertERKNSt6stringE\"></span><span id=\"BloomFilter::insert__ssCR\"></span><span class=\"target\" id=\"classBloomFilter_1a9d4f3ab39f0f15693c773c5bee16ebe5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"#_CPPv4N11BloomFiltereOERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFiltereOERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFiltereOERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFiltereOERK11BloomFilter\"></span><span id=\"BloomFilter::xor-assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1a9c906a06da8590aaf43a5fc55bfa8e71\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the difference of two Bloom filters. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter5clearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter5clearEv\">\n<span id=\"_CPPv3N11BloomFilter5clearEv\"></span><span id=\"_CPPv2N11BloomFilter5clearEv\"></span><span id=\"BloomFilter::clear\"></span><span class=\"target\" id=\"classBloomFilter_1a03a60de35a49eb2bf82b5db6ec20deff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Resets table to starting conditions, as if nothing had been added. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter11BloomFilterEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11BloomFilterEv\">\n<span id=\"_CPPv3N11BloomFilter11BloomFilterEv\"></span><span id=\"_CPPv2N11BloomFilter11BloomFilterEv\"></span><span id=\"BloomFilter::BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter_1a64e9f133cd9bb65d55a5e31f701bbca0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter6insertEPKcRKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter6insertEPKcRKNSt6size_tE\">\n<span id=\"_CPPv3N11BloomFilter6insertEPKcRKNSt6size_tE\"></span><span id=\"_CPPv2N11BloomFilter6insertEPKcRKNSt6size_tE\"></span><span id=\"BloomFilter::insert__cCP.std::sCR\"></span><span class=\"target\" id=\"classBloomFilter_1ab252e3ec643f2727feb44f8f23486a80\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"#_CPPv4N11BloomFilter35desired_false_positive_probability_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter35desired_false_positive_probability_E\">\n<span id=\"_CPPv3N11BloomFilter35desired_false_positive_probability_E\"></span><span id=\"_CPPv2N11BloomFilter35desired_false_positive_probability_E\"></span><span id=\"BloomFilter::desired_false_positive_probability___double\"></span><span class=\"target\" id=\"classBloomFilter_1ab7fc6f8c84beffc8766c7a4b75271b07\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">desired_false_positive_probability_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFiltereqERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFiltereqERK11BloomFilter\">\n<span id=\"_CPPv3NK11BloomFiltereqERK11BloomFilter\"></span><span id=\"_CPPv2NK11BloomFiltereqERK11BloomFilter\"></span><span id=\"BloomFilter::eq-operator__BloomFilterCRC\"></span><span class=\"target\" id=\"classBloomFilter_1a0f61f91d3bdb7a4ea3e5ef516ae74348\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK23CompressibleBloomFilter4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK23CompressibleBloomFilter4sizeEv\">\n<span id=\"_CPPv3NK23CompressibleBloomFilter4sizeEv\"></span><span id=\"_CPPv2NK23CompressibleBloomFilter4sizeEv\"></span><span id=\"CompressibleBloomFilter::sizeC\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1ad07541943eae0820b397fb19af7ec61b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\">\n<span id=\"_CPPv3I0EN11BloomFilter6insertEK13InputIteratorK13InputIterator\"></span><span id=\"_CPPv2I0EN11BloomFilter6insertEK13InputIteratorK13InputIterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1a1f0f90dae45bb792161dd793b68a00d1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\" title=\"BloomFilter::insert::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11BloomFilter6insertEvK13InputIteratorK13InputIterator\" title=\"BloomFilter::insert::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a sequence of values into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"#_CPPv4NK11BloomFilter13effective_fppEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter13effective_fppEv\">\n<span id=\"_CPPv3NK11BloomFilter13effective_fppEv\"></span><span id=\"_CPPv2NK11BloomFilter13effective_fppEv\"></span><span id=\"BloomFilter::effective_fppC\"></span><span class=\"target\" id=\"classBloomFilter_1a7016bd51a78a530ca9625219341ea203\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">effective_fpp</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Calculate effective false positive probability. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter20generate_unique_saltEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter20generate_unique_saltEv\">\n<span id=\"_CPPv3N11BloomFilter20generate_unique_saltEv\"></span><span id=\"_CPPv2N11BloomFilter20generate_unique_saltEv\"></span><span id=\"BloomFilter::generate_unique_salt\"></span><span class=\"target\" id=\"classBloomFilter_1a7e94502aa932cd7d86369b3f32fa80d7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">generate_unique_salt</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter11BloomFilterERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11BloomFilterERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilter11BloomFilterERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilter11BloomFilterERK11BloomFilter\"></span><span id=\"BloomFilter::BloomFilter__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1aa9342a94a473fe36b7c10aac241be37f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter11BloomFilterERK11BloomFilter\" title=\"BloomFilter::BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">filter</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilteraNERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilteraNERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilteraNERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilteraNERK11BloomFilter\"></span><span id=\"BloomFilter::and-assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1a68dac1595b405f0b615528094cc2b13a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the intersection of two Bloom filters. </p></dd>", "a[href=\"#_CPPv423CompressibleBloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv423CompressibleBloomFilter\">\n<span id=\"_CPPv323CompressibleBloomFilter\"></span><span id=\"_CPPv223CompressibleBloomFilter\"></span><span id=\"CompressibleBloomFilter\"></span><span class=\"target\" id=\"classCompressibleBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CompressibleBloomFilter</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><br/></dt><dd><p>A Bloom filter that can be compressed. </p></dd>", "a[href=\"#_CPPv4NK11BloomFilter13element_countEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter13element_countEv\">\n<span id=\"_CPPv3NK11BloomFilter13element_countEv\"></span><span id=\"_CPPv2NK11BloomFilter13element_countEv\"></span><span id=\"BloomFilter::element_countC\"></span><span class=\"target\" id=\"classBloomFilter_1a61bd5faf325cca2e9cc6b3fe92633434\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">element_count</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv48bit_mask\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48bit_mask\">\n<span id=\"_CPPv38bit_mask\"></span><span id=\"_CPPv28bit_mask\"></span><span id=\"bit_mask__unsigned-cCA\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1ad8efa1f72bd4e98e84492918f19bd2a2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bit_mask</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference internal\" href=\"#_CPPv413bits_per_char\" title=\"bits_per_char\"><span class=\"n\"><span class=\"pre\">bits_per_char</span></span></a><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">0x01</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x02</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x04</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x08</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x10</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x20</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x40</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x80</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter11salt_count_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11salt_count_E\">\n<span id=\"_CPPv3N11BloomFilter11salt_count_E\"></span><span id=\"_CPPv2N11BloomFilter11salt_count_E\"></span><span id=\"BloomFilter::salt_count___unsigned-i\"></span><span class=\"target\" id=\"classBloomFilter_1aa2882cfc2f923e8862421b9c8e58461a\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">salt_count_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv411BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411BloomFilter\">\n<span id=\"_CPPv311BloomFilter\"></span><span id=\"_CPPv211BloomFilter\"></span><span id=\"BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><br/></dt><dd><p>This class implements a Bloom filter, which is a memory-efficient data structure for identifying values that have been seen before (with a tunable probability of a false positive - thinking that we have already seen a value when we actually haven\u2019t) </p><p>Subclassed by CompressibleBloomFilter</p></dd>", "a[href=\"#_CPPv4orRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4orRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3orRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2orRK11BloomFilterRK11BloomFilter\"></span><span id=\"or-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1affc9c2fad7d9c9e3f909afe7ea909e22\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the union of two Bloom filters. </p></dd>", "a[href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\">\n<span id=\"_CPPv3I0ENK11BloomFilter12contains_allEK13InputIteratorK13InputIterator\"></span><span id=\"_CPPv2I0ENK11BloomFilter12contains_allEK13InputIteratorK13InputIterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1a2d3805c98a8f340e1a906a81f447c0b0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_all::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains_all</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_all::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter12contains_allE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_all::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Checks whether its possible that the Bloom filter has seen all of the elements within the specified range. If so, returns <code class=\"docutils literal notranslate\"><span class=\"pre\">end</span></code>. Otherwise returns an iterator to the first element that has definitely not previously been added to the Bloom filter. </p></dd>", "a[href=\"#_CPPv4NK11BloomFilterntEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilterntEv\">\n<span id=\"_CPPv3NK11BloomFilterntEv\"></span><span id=\"_CPPv2NK11BloomFilterntEv\"></span><span id=\"BloomFilter::not-operatorC\"></span><span class=\"target\" id=\"classBloomFilter_1ad4b4b482af6cf2c8d67a35c3cfa68c6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\">\n<span id=\"_CPPv3NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"_CPPv2NK23CompressibleBloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"CompressibleBloomFilter::compute_indices__bloom_typeCR.std::sR.std::sRC\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1a22cf829a161da46dbad1bfdd42fa83ba\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compute_indices</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">bloom_type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit_index</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFilter8containsERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter8containsERKNSt6stringE\">\n<span id=\"_CPPv3NK11BloomFilter8containsERKNSt6stringE\"></span><span id=\"_CPPv2NK11BloomFilter8containsERKNSt6stringE\"></span><span id=\"BloomFilter::contains__ssCRC\"></span><span class=\"target\" id=\"classBloomFilter_1a92edc1af74e2865a650e8271eba74ae7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23CompressibleBloomFilter9size_listE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23CompressibleBloomFilter9size_listE\">\n<span id=\"_CPPv3N23CompressibleBloomFilter9size_listE\"></span><span id=\"_CPPv2N23CompressibleBloomFilter9size_listE\"></span><span id=\"CompressibleBloomFilter::size_list__std::vector:unsigned-l-l-i:\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1a154c88e5c738407d28aca4f269098ea2\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size_list</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter5salt_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter5salt_E\">\n<span id=\"_CPPv3N11BloomFilter5salt_E\"></span><span id=\"_CPPv2N11BloomFilter5salt_E\"></span><span id=\"BloomFilter::salt___std::vector:bloom_type:\"></span><span class=\"target\" id=\"classBloomFilter_1a3cbbd09e006c0fd9738ab6304a801566\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">salt_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilterD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilterD0Ev\">\n<span id=\"_CPPv3N11BloomFilterD0Ev\"></span><span id=\"_CPPv2N11BloomFilterD0Ev\"></span><span id=\"BloomFilter::~BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter_1af31164aa81a9d3f8d6696018c169f835\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter10table_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10table_typeE\">\n<span id=\"_CPPv3N11BloomFilter10table_typeE\"></span><span id=\"_CPPv2N11BloomFilter10table_typeE\"></span><span id=\"BloomFilter::table_type\"></span><span class=\"target\" id=\"classBloomFilter_1a52bdac3bb3f8a70160024b81232ae6ce\"></span><span class=\"k\"><span class=\"pre\">typedef</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">table_type</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv413bits_per_char\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413bits_per_char\">\n<span id=\"_CPPv313bits_per_char\"></span><span id=\"_CPPv213bits_per_char\"></span><span id=\"bits_per_char__std::sC\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1af7f0947bbb7d57153df699c642db6a38\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bits_per_char</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x08</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter12random_seed_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter12random_seed_E\">\n<span id=\"_CPPv3N11BloomFilter12random_seed_E\"></span><span id=\"_CPPv2N11BloomFilter12random_seed_E\"></span><span id=\"BloomFilter::random_seed___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1a0f86a93616eb7a8aa42ddf04500f559e\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">random_seed_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\">\n<span id=\"_CPPv3N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\"></span><span id=\"_CPPv2N23CompressibleBloomFilter23CompressibleBloomFilterERK15BloomParameters\"></span><span id=\"CompressibleBloomFilter::CompressibleBloomFilter__BloomParametersCR\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1addba038b9996ced367b7085ef65acbf8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CompressibleBloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">BloomParameters</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4eoRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4eoRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3eoRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2eoRK11BloomFilterRK11BloomFilter\"></span><span id=\"xor-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1adbc4f4be9c78d021b39358b5887d49c5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the difference of two Bloom filters. </p></dd>", "a[href=\"#_CPPv4NK11BloomFilter4sizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter4sizeEv\">\n<span id=\"_CPPv3NK11BloomFilter4sizeEv\"></span><span id=\"_CPPv2NK11BloomFilter4sizeEv\"></span><span id=\"BloomFilter::sizeC\"></span><span class=\"target\" id=\"classBloomFilter_1a2d84f2dffe241edd1a5438d89ff7d556\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\">\n<span id=\"_CPPv3NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\"></span><span id=\"_CPPv2NK11BloomFilter7hash_apEPKhNSt6size_tE10bloom_type\"></span><span id=\"BloomFilter::hash_ap__unsigned-cCP.std::s.bloom_typeC\"></span><span class=\"target\" id=\"classBloomFilter_1a91fc2009fe762255430ced75bec2b17e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_ap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">remaining_length</span></span>, <a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter23inserted_element_count_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter23inserted_element_count_E\">\n<span id=\"_CPPv3N11BloomFilter23inserted_element_count_E\"></span><span id=\"_CPPv2N11BloomFilter23inserted_element_count_E\"></span><span id=\"BloomFilter::inserted_element_count___unsigned-l-l-i\"></span><span class=\"target\" id=\"classBloomFilter_1a303955ce177bd9fcd1aadd90bae8dd76\"></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">inserted_element_count_</span></span></span><br/></dt><dd></dd>", "a[href=\"#bloomfilter-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BloomFilter.hpp<a class=\"headerlink\" href=\"#bloomfilter-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A Bloom filter implementation. </p><p><dl class=\"simple\">\n<dt><strong>Copyright</strong></dt><dd><p>Arash Partow, 2000 (modified slightly by Emily Dolson) </p>\n</dd>\n</dl>\n</p>", "a[href=\"#_CPPv4N11BloomFilteraSERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilteraSERK11BloomFilter\">\n<span id=\"_CPPv3N11BloomFilteraSERK11BloomFilter\"></span><span id=\"_CPPv2N11BloomFilteraSERK11BloomFilter\"></span><span id=\"BloomFilter::assign-operator__BloomFilterCR\"></span><span class=\"target\" id=\"classBloomFilter_1a1f9fddf38c4428cf5291e6dc03b3a370\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFilter8containsEPKhKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter8containsEPKhKNSt6size_tE\">\n<span id=\"_CPPv3NK11BloomFilter8containsEPKhKNSt6size_tE\"></span><span id=\"_CPPv2NK11BloomFilter8containsEPKhKNSt6size_tE\"></span><span id=\"BloomFilter::contains__unsigned-cCP.std::sCC\"></span><span class=\"target\" id=\"classBloomFilter_1a3307c4b0b3134998337551b811e4a587\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">key_begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\">\n<span id=\"_CPPv3NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"_CPPv2NK11BloomFilter15compute_indicesERK10bloom_typeRNSt6size_tERNSt6size_tE\"></span><span id=\"BloomFilter::compute_indices__bloom_typeCR.std::sR.std::sRC\"></span><span class=\"target\" id=\"classBloomFilter_1a7f2378bd107073ecfb277887fec3cb5d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compute_indices</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11BloomFilter10bloom_typeE\" title=\"BloomFilter::bloom_type\"><span class=\"n\"><span class=\"pre\">bloom_type</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit_index</span></span>, <a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bit</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11BloomFilter6insertEvRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11BloomFilter6insertEvRK1T\">\n<span id=\"_CPPv3I0EN11BloomFilter6insertERK1T\"></span><span id=\"_CPPv2I0EN11BloomFilter6insertERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1a1d2ee8087b559a2f42526c043421c8b6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11BloomFilter6insertEvRK1T\" title=\"BloomFilter::insert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">t</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"#_CPPv4NK11BloomFilter8containsEPKcRKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilter8containsEPKcRKNSt6size_tE\">\n<span id=\"_CPPv3NK11BloomFilter8containsEPKcRKNSt6size_tE\"></span><span id=\"_CPPv2NK11BloomFilter8containsEPKcRKNSt6size_tE\"></span><span id=\"BloomFilter::contains__cCP.std::sCRC\"></span><span class=\"target\" id=\"classBloomFilter_1acd8d4ee2fcc4925eec44635f36e1b0be\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter10bit_table_E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10bit_table_E\">\n<span id=\"_CPPv3N11BloomFilter10bit_table_E\"></span><span id=\"_CPPv2N11BloomFilter10bit_table_E\"></span><span id=\"BloomFilter::bit_table___std::vector:unsigned-c:\"></span><span class=\"target\" id=\"classBloomFilter_1a534f10c3b005789989fc03809047546c\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bit_table_</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11BloomFilter10hash_countEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter10hash_countEv\">\n<span id=\"_CPPv3N11BloomFilter10hash_countEv\"></span><span id=\"_CPPv2N11BloomFilter10hash_countEv\"></span><span id=\"BloomFilter::hash_count\"></span><span class=\"target\" id=\"classBloomFilter_1a7f294062dc7ef3f6624da47ba33608d0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_count</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11BloomFilterneERK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11BloomFilterneERK11BloomFilter\">\n<span id=\"_CPPv3NK11BloomFilterneERK11BloomFilter\"></span><span id=\"_CPPv2NK11BloomFilterneERK11BloomFilter\"></span><span id=\"BloomFilter::neq-operator__BloomFilterCRC\"></span><span class=\"target\" id=\"classBloomFilter_1a63e45d5b2b4fc492bd318d27d0f4a90f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">!=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">f</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\">\n<span id=\"_CPPv3I0ENK11BloomFilter13contains_noneEK13InputIteratorK13InputIterator\"></span><span id=\"_CPPv2I0ENK11BloomFilter13contains_noneEK13InputIteratorK13InputIterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1ad5689794dcd401fc9b408ed14db9b167\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_none::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains_none</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_none::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter13contains_noneE13InputIteratorK13InputIteratorK13InputIterator\" title=\"BloomFilter::contains_none::InputIterator\"><span class=\"n\"><span class=\"pre\">InputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Checks whether its possible that the Bloom filter has seen none of the elements within the specified range. If so, returns <code class=\"docutils literal notranslate\"><span class=\"pre\">end</span></code>. Otherwise returns an iterator to the first element that has possible previously been added to the Bloom filter. </p></dd>", "a[href=\"#_CPPv4N11BloomFilter6insertEPKhRKNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter6insertEPKhRKNSt6size_tE\">\n<span id=\"_CPPv3N11BloomFilter6insertEPKhRKNSt6size_tE\"></span><span id=\"_CPPv2N11BloomFilter6insertEPKhRKNSt6size_tE\"></span><span id=\"BloomFilter::insert__unsigned-cCP.std::sCR\"></span><span class=\"target\" id=\"classBloomFilter_1a9f3cb9bb7326236c3b92043ab4b86a89\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">key_begin</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">length</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value into the Bloom filter (i.e. indicate that we have seen it) </p></dd>", "a[href=\"#_CPPv4N23CompressibleBloomFilter8compressERKd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N23CompressibleBloomFilter8compressERKd\">\n<span id=\"_CPPv3N23CompressibleBloomFilter8compressERKd\"></span><span id=\"_CPPv2N23CompressibleBloomFilter8compressERKd\"></span><span id=\"CompressibleBloomFilter::compress__doubleCR\"></span><span class=\"target\" id=\"classCompressibleBloomFilter_1a70dea5716a0c17112154468f2a8a383a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compress</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">percentage</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compress the Bloom filter </p></dd>", "a[href=\"#_CPPv4N11BloomFilter11BloomFilterERK15BloomParameters\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11BloomFilter11BloomFilterERK15BloomParameters\">\n<span id=\"_CPPv3N11BloomFilter11BloomFilterERK15BloomParameters\"></span><span id=\"_CPPv2N11BloomFilter11BloomFilterERK15BloomParameters\"></span><span id=\"BloomFilter::BloomFilter__BloomParametersCR\"></span><span class=\"target\" id=\"classBloomFilter_1a316698c1d13011d287ada354c23a26db\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">BloomParameters</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0ENK11BloomFilter8containsEbRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ENK11BloomFilter8containsEbRK1T\">\n<span id=\"_CPPv3I0ENK11BloomFilter8containsERK1T\"></span><span id=\"_CPPv2I0ENK11BloomFilter8containsERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBloomFilter_1af5966de6f5aaaa9c095f31bf00d8dd43\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">contains</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0ENK11BloomFilter8containsEbRK1T\" title=\"BloomFilter::contains::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">t</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
