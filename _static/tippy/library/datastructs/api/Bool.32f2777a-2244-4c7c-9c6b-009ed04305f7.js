selector_to_html = {"a[href=\"#_CPPv4N4BoolpLEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolpLEb\">\n<span id=\"_CPPv3N4BoolpLEb\"></span><span id=\"_CPPv2N4BoolpLEb\"></span><span id=\"Bool::add-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a344bd6824bf31150ed0fd6970b6749dd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">+=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N4Bool4BoolEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4Bool4BoolEb\">\n<span id=\"_CPPv3N4Bool4BoolEb\"></span><span id=\"_CPPv2N4Bool4BoolEb\"></span><span id=\"Bool::Bool__b\"></span><span class=\"target\" id=\"classBool_1a2c31674e28b4569b22c088f5ad44f6d9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N4BooleOEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BooleOEb\">\n<span id=\"_CPPv3N4BooleOEb\"></span><span id=\"_CPPv2N4BooleOEb\"></span><span id=\"Bool::xor-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a8fb4b725e3985c6d9c0a822f394be2c6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N4BoolaSEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolaSEb\">\n<span id=\"_CPPv3N4BoolaSEb\"></span><span id=\"_CPPv2N4BoolaSEb\"></span><span id=\"Bool::assign-operator__b\"></span><span class=\"target\" id=\"classBool_1aa88c65c05c6073f71e180ce7c00819e1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N4BoolaNEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolaNEb\">\n<span id=\"_CPPv3N4BoolaNEb\"></span><span id=\"_CPPv2N4BoolaNEb\"></span><span id=\"Bool::and-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a753eee2f7e7f51fe38ed35f1f81f0c6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compound assignement operators using Bool as lvalue. </p></dd>", "a[href=\"#_CPPv4N4BooloREb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BooloREb\">\n<span id=\"_CPPv3N4BooloREb\"></span><span id=\"_CPPv2N4BooloREb\"></span><span id=\"Bool::or-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a8f7cefd8894b73d4d3b05b1a2a59dcc0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#bool-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bool.hpp<a class=\"headerlink\" href=\"#bool-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A bool representation that doesn\u2019t trip up std::vector. </p>", "a[href=\"#_CPPv4N4Bool5valueE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4Bool5valueE\">\n<span id=\"_CPPv3N4Bool5valueE\"></span><span id=\"_CPPv2N4Bool5valueE\"></span><span id=\"Bool::value__b\"></span><span class=\"target\" id=\"classBool_1a16be863c269f988cdcbe59f9d846a141\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value</span></span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N4Bool5ValueEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4Bool5ValueEv\">\n<span id=\"_CPPv3N4Bool5ValueEv\"></span><span id=\"_CPPv2N4Bool5ValueEv\"></span><span id=\"Bool::Value\"></span><span class=\"target\" id=\"classBool_1aa789108ca0070bf3e16e959fbb3d82f7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK4Bool5ValueEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK4Bool5ValueEv\">\n<span id=\"_CPPv3NK4Bool5ValueEv\"></span><span id=\"_CPPv2NK4Bool5ValueEv\"></span><span id=\"Bool::ValueC\"></span><span class=\"target\" id=\"classBool_1ab87696b17f30119356fc7ab180d08953\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N4BoolmIEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolmIEb\">\n<span id=\"_CPPv3N4BoolmIEb\"></span><span id=\"_CPPv2N4BoolmIEb\"></span><span id=\"Bool::sub-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1afaef43eee3f96a71d067ad7fcb9b9e34\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">-=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK4BoolcvbEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK4BoolcvbEv\">\n<span id=\"_CPPv3NK4BoolcvbEv\"></span><span id=\"_CPPv2NK4BoolcvbEv\"></span><span id=\"Bool::castto-b-operatorC\"></span><span class=\"target\" id=\"classBool_1a52cd2f9f076c4dc7f67cb31e7a5ed402\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Conversion of this proxy to Boolean (as an rvalue) </p></dd>", "a[href=\"#_CPPv4N4BooldVEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BooldVEb\">\n<span id=\"_CPPv3N4BooldVEb\"></span><span id=\"_CPPv2N4BooldVEb\"></span><span id=\"Bool::div-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1ac8871323848ebbffe1be86c49132c350\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">/=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv44Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Bool\">\n<span id=\"_CPPv34Bool\"></span><span id=\"_CPPv24Bool\"></span><span id=\"Bool\"></span><span class=\"target\" id=\"classBool\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bool</span></span></span><br/></dt><dd><p>A simple replacement for bool type that doesn\u2019t trip up std::vector. </p></dd>", "a[href=\"#_CPPv4NStrsERNSt7istreamER4Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NStrsERNSt7istreamER4Bool\">\n<span id=\"_CPPv3NStrsERNSt7istreamER4Bool\"></span><span id=\"_CPPv2NStrsERNSt7istreamER4Bool\"></span><span id=\"std::rshift-operator__isR.BoolR\"></span><span class=\"target\" id=\"Bool_8hpp_1a8ef0a047f6f890eabe6acd3cf49063da\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;&gt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup operator&lt;&lt; to work with ostream (must be in std to work) </p></dd>", "a[href=\"#_CPPv4NStlsERNSt7ostreamERK4Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NStlsERNSt7ostreamERK4Bool\">\n<span id=\"_CPPv3NStlsERNSt7ostreamERK4Bool\"></span><span id=\"_CPPv2NStlsERNSt7ostreamERK4Bool\"></span><span id=\"std::lshift-operator__osR.BoolCR\"></span><span class=\"target\" id=\"Bool_8hpp_1ae157d8c21713abb3376744f2677c3d6f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup operator&lt;&lt; to work with ostream (must be in std to work) </p></dd>", "a[href=\"#_CPPv4N4BoolmLEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N4BoolmLEb\">\n<span id=\"_CPPv3N4BoolmLEb\"></span><span id=\"_CPPv2N4BoolmLEb\"></span><span id=\"Bool::mul-assign-operator__b\"></span><span class=\"target\" id=\"classBool_1a978c7b11e8c71c3dba76044f291bc8ee\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44Bool\" title=\"Bool\"><span class=\"n\"><span class=\"pre\">Bool</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">*=</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
