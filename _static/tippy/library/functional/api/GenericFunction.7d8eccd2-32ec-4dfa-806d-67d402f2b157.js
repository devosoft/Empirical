selector_to_html = {"a[href=\"#_CPPv415GenericFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415GenericFunction\">\n<span id=\"_CPPv315GenericFunction\"></span><span id=\"_CPPv215GenericFunction\"></span><span id=\"GenericFunction\"></span><span class=\"target\" id=\"classGenericFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenericFunction</span></span></span><br/></dt><dd><p>The Function templated class behaves almost identically to std::function, but can be reduced to the GenericFunction base class which is NOT templated.</p><p>An GenericFunction object can be converted back into the derived type with the .Convert&lt;return(args\u2026)&gt;() member function. </p><p>Subclassed by Function&lt; RETURN(PARAMS\u2026)&gt;</p></dd>", "a[href=\"#_CPPv4I0EN15GenericFunction7ConvertEDav\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN15GenericFunction7ConvertEDav\">\n<span id=\"_CPPv3I0EN15GenericFunction7ConvertEv\"></span><span id=\"_CPPv2I0EN15GenericFunction7ConvertEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenericFunction_1aa467aba05b9f38a181586ca0776fb501\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Convert</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert this GenericFunction into a derived Function. </p></dd>", "a[href=\"#_CPPv4I0EN15GenericFunction9ConvertOKEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN15GenericFunction9ConvertOKEbv\">\n<span id=\"_CPPv3I0EN15GenericFunction9ConvertOKEv\"></span><span id=\"_CPPv2I0EN15GenericFunction9ConvertOKEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenericFunction_1a15e15ef9a1b9e72e32a460a8590b3792\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConvertOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if this GenericFunction can be converted into a derived Function. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEE8FunctionEDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEE8FunctionEDpRR2Ts\">\n<span id=\"_CPPv3IDpEN8FunctionIF6RETURNDp6PARAMSEE8FunctionEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN8FunctionIF6RETURNDp6PARAMSEE8FunctionEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1adfe1665dfdc32bd5ce0b014119ffe8cb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Function</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEE8FunctionEDpRR2Ts\" title=\"Function&lt;RETURN(PARAMS...)&gt;::Function::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Forward all args to std::function constructor\u2026 </p></dd>", "a[href=\"#_CPPv4I0DpEN15GenericFunctionclEDaDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN15GenericFunctionclEDaDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN15GenericFunctionclEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN15GenericFunctionclEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenericFunction_1af46190be7c7e690fb57f46b1912506fd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN15GenericFunctionclEDaDpRR2Ts\" title=\"GenericFunction::operator()::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A generic form of the function call operator; use arg types to determine derived form. </p></dd>", "a[href=\"#_CPPv4NK15GenericFunction7NumArgsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15GenericFunction7NumArgsEv\">\n<span id=\"_CPPv3NK15GenericFunction7NumArgsEv\"></span><span id=\"_CPPv2NK15GenericFunction7NumArgsEv\"></span><span id=\"GenericFunction::NumArgsC\"></span><span class=\"target\" id=\"classGenericFunction_1acbb796c1d0f04949fbe1456bcde1c99f\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumArgs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN15GenericFunction10CallTypeOKEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN15GenericFunction10CallTypeOKEbv\">\n<span id=\"_CPPv3I0DpEN15GenericFunction10CallTypeOKEv\"></span><span id=\"_CPPv2I0DpEN15GenericFunction10CallTypeOKEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenericFunction_1a2453edada41b29a65804b956adf9e779\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallTypeOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a function call will succeed before trying it, based only on types. </p></dd>", "a[href=\"#_CPPv4NK8FunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8FunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\">\n<span id=\"_CPPv3NK8FunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\"></span><span id=\"_CPPv2NK8FunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\"></span><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a31518f3510ab4334813bf2ac0aac12b5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8FunctionIF6RETURNDp6PARAMSEE5fun_tE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::fun_t\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the std::function to be called. </p></dd>", "a[href=\"#_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEE4CallE6RETURNDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEE4CallE6RETURNDpRR2Ts\">\n<span id=\"_CPPv3IDpEN8FunctionIF6RETURNDp6PARAMSEE4CallEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN8FunctionIF6RETURNDp6PARAMSEE4CallEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a2cd1d83d7cbb8de7ff3bfd9b19fe16c0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Call</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEE4CallE6RETURNDpRR2Ts\" title=\"Function&lt;RETURN(PARAMS...)&gt;::Call::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Forward all args to std::function call. </p></dd>", "a[href=\"#genericfunction-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">GenericFunction.hpp<a class=\"headerlink\" href=\"#genericfunction-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Based on std::function, but with a common base class. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Need to setup Call on GenericFunction to just take a function signature as a template argument, rather than listing all types. </p>\n</dd></dl>\n</p>", "a[href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\">\n<span id=\"_CPPv3I0DpE8FunctionIF6RETURNDp6PARAMSEE\"></span><span id=\"_CPPv2I0DpE8FunctionIF6RETURNDp6PARAMSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv415GenericFunction\" title=\"GenericFunction\"><span class=\"n\"><span class=\"pre\">GenericFunction</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN15GenericFunction4CallEDaDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN15GenericFunction4CallEDaDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN15GenericFunction4CallEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN15GenericFunction4CallEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenericFunction_1a1b462615921522b8fe436ab2442bc88e\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Call</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN15GenericFunction4CallEDaDpRR2Ts\" title=\"GenericFunction::Call::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A generic form of the function call operator; use arg types to determine derived form. </p></dd>", "a[href=\"#_CPPv4N8FunctionIF6RETURNDp6PARAMSEE5fun_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8FunctionIF6RETURNDp6PARAMSEE5fun_tE\">\n<span id=\"_CPPv3N8FunctionIF6RETURNDp6PARAMSEE5fun_tE\"></span><span id=\"_CPPv2N8FunctionIF6RETURNDp6PARAMSEE5fun_tE\"></span><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a043fc8c3d99389590b578b66bfc7635f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK8FunctionIF6RETURNDp6PARAMSEE7NumArgsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK8FunctionIF6RETURNDp6PARAMSEE7NumArgsEv\">\n<span id=\"_CPPv3NK8FunctionIF6RETURNDp6PARAMSEE7NumArgsEv\"></span><span id=\"_CPPv2NK8FunctionIF6RETURNDp6PARAMSEE7NumArgsEv\"></span><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a7388e5dfd4275e052014141228ba3b68\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumArgs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEEclE6RETURNDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEEclE6RETURNDpRR2Ts\">\n<span id=\"_CPPv3IDpEN8FunctionIF6RETURNDp6PARAMSEEclEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN8FunctionIF6RETURNDp6PARAMSEEclEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1aa686fd7d346835661b5add0e0b52cb26\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN8FunctionIF6RETURNDp6PARAMSEEclE6RETURNDpRR2Ts\" title=\"Function&lt;RETURN(PARAMS...)&gt;::operator()::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Forward all args to std::function call. </p></dd>", "a[href=\"#_CPPv4IDpE8Function\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE8Function\">\n<span id=\"_CPPv3IDpE8Function\"></span><span id=\"_CPPv2IDpE8Function\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Function</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N15GenericFunctionD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15GenericFunctionD0Ev\">\n<span id=\"_CPPv3N15GenericFunctionD0Ev\"></span><span id=\"_CPPv2N15GenericFunctionD0Ev\"></span><span id=\"GenericFunction::~GenericFunction\"></span><span class=\"target\" id=\"classGenericFunction_1a19b22e27f1366d3097dc5fc4e1e297d4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~GenericFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN15GenericFunction6CallOKEbDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN15GenericFunction6CallOKEbDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN15GenericFunction6CallOKEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN15GenericFunction6CallOKEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenericFunction_1a595ff60f698b1700e7f3f7286989f7ba\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallOK</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN15GenericFunction6CallOKEbDpRR2Ts\" title=\"GenericFunction::CallOK::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a function call will succeed before trying it. </p></dd>", "a[href=\"#_CPPv4N8FunctionIF6RETURNDp6PARAMSEE3funE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N8FunctionIF6RETURNDp6PARAMSEE3funE\">\n<span id=\"_CPPv3N8FunctionIF6RETURNDp6PARAMSEE3funE\"></span><span id=\"_CPPv2N8FunctionIF6RETURNDp6PARAMSEE3funE\"></span><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1adb3ac70024633f349e04db78225e7aa9\"></span><a class=\"reference internal\" href=\"#_CPPv4N8FunctionIF6RETURNDp6PARAMSEE5fun_tE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::fun_t\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun</span></span></span><br/></dt><dd><p>The std::function to be called. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
