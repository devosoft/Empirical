selector_to_html = {"a[href=\"#_CPPv4N11AnyFunction5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunction5ClearEv\">\n<span id=\"_CPPv3N11AnyFunction5ClearEv\"></span><span id=\"_CPPv2N11AnyFunction5ClearEv\"></span><span id=\"AnyFunction::Clear\"></span><span class=\"target\" id=\"classAnyFunction_1a394978fbc703d07a097456fc340d8e89\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv412BaseFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412BaseFunction\">\n<span id=\"_CPPv312BaseFunction\"></span><span id=\"_CPPv212BaseFunction\"></span><span id=\"BaseFunction\"></span><span class=\"target\" id=\"classBaseFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></span><br/></dt><dd><p>An BaseFunction object can be converted back into the derived type with the .Convert&lt;return(args\u2026)&gt;() member function. </p><p>Subclassed by DerivedFunction&lt; RETURN(PARAMS\u2026)&gt;</p></dd>", "a[href=\"#_CPPv4IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEE4CallE6RETURNDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEE4CallE6RETURNDpRR2Ts\">\n<span id=\"_CPPv3IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEE4CallEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEE4CallEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a6e25b8b2c4890c9454979af63246f2e7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Call</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEE4CallE6RETURNDpRR2Ts\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::Call::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Forward all args to std::function call. </p></dd>", "a[href=\"#_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE5CloneEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE5CloneEv\">\n<span id=\"_CPPv3N15DerivedFunctionIF6RETURNDp6PARAMSEE5CloneEv\"></span><span id=\"_CPPv2N15DerivedFunctionIF6RETURNDp6PARAMSEE5CloneEv\"></span><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a303071023fe1a1e4fd1e25a4498c6142\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv412BaseFunction\" title=\"BaseFunction\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clone</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN11AnyFunction4CallEDaDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN11AnyFunction4CallEDaDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN11AnyFunction4CallEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN11AnyFunction4CallEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1a5b5207a00b8094a1892676c6dec6cec8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Call</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN11AnyFunction4CallEDaDpRR2Ts\" title=\"AnyFunction::Call::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call this function with specific types; must be correct! </p></dd>", "a[href=\"#_CPPv4N12BaseFunctionD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12BaseFunctionD0Ev\">\n<span id=\"_CPPv3N12BaseFunctionD0Ev\"></span><span id=\"_CPPv2N12BaseFunctionD0Ev\"></span><span id=\"BaseFunction::~BaseFunction\"></span><span class=\"target\" id=\"classBaseFunction_1a1ed057b82686d31f0ae821686d03a329\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~BaseFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\">\n<span id=\"_CPPv3I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\"></span><span id=\"_CPPv2I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DerivedFunction</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412BaseFunction\" title=\"BaseFunction\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></a><br/></dt><dd><p>Specialized form for proper function types. </p></dd>", "a[href=\"#_CPPv4NK12BaseFunction7NumArgsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12BaseFunction7NumArgsEv\">\n<span id=\"_CPPv3NK12BaseFunction7NumArgsEv\"></span><span id=\"_CPPv2NK12BaseFunction7NumArgsEv\"></span><span id=\"BaseFunction::NumArgsC\"></span><span class=\"target\" id=\"classBaseFunction_1af1f1da70a097f8f2f1c12268a2019099\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumArgs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4I0EN11AnyFunction7ConvertEDav\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11AnyFunction7ConvertEDav\">\n<span id=\"_CPPv3I0EN11AnyFunction7ConvertEv\"></span><span id=\"_CPPv2I0EN11AnyFunction7ConvertEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1ab59eec4f1d3d25a62538754265732867\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Convert</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert this BaseFunction into a derived Function. </p></dd>", "a[href=\"#_CPPv4N11AnyFunction11AnyFunctionERR11AnyFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunction11AnyFunctionERR11AnyFunction\">\n<span id=\"_CPPv3N11AnyFunction11AnyFunctionERR11AnyFunction\"></span><span id=\"_CPPv2N11AnyFunction11AnyFunctionERR11AnyFunction\"></span><span id=\"AnyFunction::AnyFunction__AnyFunctionRR\"></span><span class=\"target\" id=\"classAnyFunction_1a21c49cf201ab8acde6f59f3fafa76ba4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11AnyFunction11AnyFunctionERR11AnyFunction\" title=\"AnyFunction::AnyFunction\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">other</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK15DerivedFunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15DerivedFunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\">\n<span id=\"_CPPv3NK15DerivedFunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\"></span><span id=\"_CPPv2NK15DerivedFunctionIF6RETURNDp6PARAMSEE11GetFunctionEv\"></span><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1aa916d62acc4830632e1f7c95d45efaf3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE5fun_tE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::fun_t\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the std::function to be called. </p></dd>", "a[href=\"#_CPPv4N11AnyFunctionD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunctionD0Ev\">\n<span id=\"_CPPv3N11AnyFunctionD0Ev\"></span><span id=\"_CPPv2N11AnyFunctionD0Ev\"></span><span id=\"AnyFunction::~AnyFunction\"></span><span class=\"target\" id=\"classAnyFunction_1a97a2007807baf5818006ae1c71b67965\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~AnyFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11AnyFunctionaSERK11AnyFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunctionaSERK11AnyFunction\">\n<span id=\"_CPPv3N11AnyFunctionaSERK11AnyFunction\"></span><span id=\"_CPPv2N11AnyFunctionaSERK11AnyFunction\"></span><span id=\"AnyFunction::assign-operator__AnyFunctionCR\"></span><span class=\"target\" id=\"classAnyFunction_1a51805f1bb1e7ace702fa8959ee966dd8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411AnyFunction\" title=\"AnyFunction\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411AnyFunction\" title=\"AnyFunction\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">other</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv411AnyFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411AnyFunction\">\n<span id=\"_CPPv311AnyFunction\"></span><span id=\"_CPPv211AnyFunction\"></span><span id=\"AnyFunction\"></span><span class=\"target\" id=\"classAnyFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></span><br/></dt><dd><p>AnyFunction manages the function pointers to be dynamically handled. </p></dd>", "a[href=\"#_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE5fun_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE5fun_tE\">\n<span id=\"_CPPv3N15DerivedFunctionIF6RETURNDp6PARAMSEE5fun_tE\"></span><span id=\"_CPPv2N15DerivedFunctionIF6RETURNDp6PARAMSEE5fun_tE\"></span><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a7fd6161a5f3bd5119c2998f05ead8ccf\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN12BaseFunction10CallTypeOKEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN12BaseFunction10CallTypeOKEbv\">\n<span id=\"_CPPv3I0DpEN12BaseFunction10CallTypeOKEv\"></span><span id=\"_CPPv2I0DpEN12BaseFunction10CallTypeOKEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseFunction_1ab80ac1bfa1f5688e741724217294172a\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallTypeOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a function call will succeed before trying it, based only on types. </p></dd>", "a[href=\"#_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE3funE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE3funE\">\n<span id=\"_CPPv3N15DerivedFunctionIF6RETURNDp6PARAMSEE3funE\"></span><span id=\"_CPPv2N15DerivedFunctionIF6RETURNDp6PARAMSEE3funE\"></span><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a3d4e57d2694e2e4214038573d30f86b4\"></span><a class=\"reference internal\" href=\"#_CPPv4N15DerivedFunctionIF6RETURNDp6PARAMSEE5fun_tE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::fun_t\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun</span></span></span><br/></dt><dd><p>The std::function to be called. </p></dd>", "a[href=\"#_CPPv4I0EN12BaseFunction7ConvertEDav\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN12BaseFunction7ConvertEDav\">\n<span id=\"_CPPv3I0EN12BaseFunction7ConvertEv\"></span><span id=\"_CPPv2I0EN12BaseFunction7ConvertEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseFunction_1a7772a47032e378c460f3b34fbb4c0829\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Convert</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert this BaseFunction into a derived Function. </p></dd>", "a[href=\"#_CPPv4I0EN11AnyFunction3SetEvNSt8functionI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11AnyFunction3SetEvNSt8functionI1TEE\">\n<span id=\"_CPPv3I0EN11AnyFunction3SetENSt8functionI1TEE\"></span><span id=\"_CPPv2I0EN11AnyFunction3SetENSt8functionI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1a03f0d8f40042e5b4fdfcdc20b78f4698\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Set</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0EN11AnyFunction3SetEvNSt8functionI1TEE\" title=\"AnyFunction::Set::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N12BaseFunction5CloneEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12BaseFunction5CloneEv\">\n<span id=\"_CPPv3N12BaseFunction5CloneEv\"></span><span id=\"_CPPv2N12BaseFunction5CloneEv\"></span><span id=\"BaseFunction::Clone\"></span><span class=\"target\" id=\"classBaseFunction_1a6860b656fbfbdddaa7370f5baf785b64\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv412BaseFunction\" title=\"BaseFunction\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clone</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11AnyFunction3funE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunction3funE\">\n<span id=\"_CPPv3N11AnyFunction3funE\"></span><span id=\"_CPPv2N11AnyFunction3funE\"></span><span id=\"AnyFunction::fun__Ptr:BaseFunction:\"></span><span class=\"target\" id=\"classAnyFunction_1adaba96e2873b6b0dba627cf31a3821e0\"></span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv412BaseFunction\" title=\"BaseFunction\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">nullptr</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11AnyFunction11AnyFunctionERK11AnyFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunction11AnyFunctionERK11AnyFunction\">\n<span id=\"_CPPv3N11AnyFunction11AnyFunctionERK11AnyFunction\"></span><span id=\"_CPPv2N11AnyFunction11AnyFunctionERK11AnyFunction\"></span><span id=\"AnyFunction::AnyFunction__AnyFunctionCR\"></span><span class=\"target\" id=\"classAnyFunction_1a1ab7a1cff43d1991129dbc5f64e423a2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11AnyFunction11AnyFunctionERK11AnyFunction\" title=\"AnyFunction::AnyFunction\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">other</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11AnyFunctionaSERR11AnyFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunctionaSERR11AnyFunction\">\n<span id=\"_CPPv3N11AnyFunctionaSERR11AnyFunction\"></span><span id=\"_CPPv2N11AnyFunctionaSERR11AnyFunction\"></span><span id=\"AnyFunction::assign-operator__AnyFunctionRR\"></span><span class=\"target\" id=\"classAnyFunction_1ac3a5a0272aae45d19dce38f41a299005\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411AnyFunction\" title=\"AnyFunction\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv411AnyFunction\" title=\"AnyFunction\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">other</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN12BaseFunction4CallEDaDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN12BaseFunction4CallEDaDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN12BaseFunction4CallEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN12BaseFunction4CallEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseFunction_1ada87aed778db7f767f3bac7ad67dbe09\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Call</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN12BaseFunction4CallEDaDpRR2Ts\" title=\"BaseFunction::Call::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A generic form of the function call operator; use arg types to determine derived form. </p></dd>", "a[href=\"#_CPPv4I0DpEN11AnyFunction10CallTypeOKEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN11AnyFunction10CallTypeOKEbv\">\n<span id=\"_CPPv3I0DpEN11AnyFunction10CallTypeOKEv\"></span><span id=\"_CPPv2I0DpEN11AnyFunction10CallTypeOKEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1a608b7c15a75f80198b4e0af503b6272f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallTypeOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a function call will succeed before trying it, based only on types. </p></dd>", "a[href=\"#_CPPv4I0EN11AnyFunction9ConvertOKEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11AnyFunction9ConvertOKEbv\">\n<span id=\"_CPPv3I0EN11AnyFunction9ConvertOKEv\"></span><span id=\"_CPPv2I0EN11AnyFunction9ConvertOKEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1a3adbf30cf6b83e97adba3c58035d6cbc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConvertOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if this BaseFunction can be converted into a derived Function. </p></dd>", "a[href=\"#_CPPv4N11AnyFunctioncvbEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunctioncvbEv\">\n<span id=\"_CPPv3N11AnyFunctioncvbEv\"></span><span id=\"_CPPv2N11AnyFunctioncvbEv\"></span><span id=\"AnyFunction::castto-b-operator\"></span><span class=\"target\" id=\"classAnyFunction_1aac8b5b184d4ebfec48366c16fb6d26dc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11AnyFunction9CloneFuncEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11AnyFunction9CloneFuncEv\">\n<span id=\"_CPPv3NK11AnyFunction9CloneFuncEv\"></span><span id=\"_CPPv2NK11AnyFunction9CloneFuncEv\"></span><span id=\"AnyFunction::CloneFuncC\"></span><span class=\"target\" id=\"classAnyFunction_1a821d1f33d80cca3c42ddf0179ed620f3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv412BaseFunction\" title=\"BaseFunction\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CloneFunc</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK11AnyFunction7NumArgsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11AnyFunction7NumArgsEv\">\n<span id=\"_CPPv3NK11AnyFunction7NumArgsEv\"></span><span id=\"_CPPv2NK11AnyFunction7NumArgsEv\"></span><span id=\"AnyFunction::NumArgsC\"></span><span class=\"target\" id=\"classAnyFunction_1a9cf2d5ecbff5b9eb59a78695bd87c680\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumArgs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11AnyFunction7MakePtrEDa1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11AnyFunction7MakePtrEDa1T\">\n<span id=\"_CPPv3I0EN11AnyFunction7MakePtrE1T\"></span><span id=\"_CPPv2I0EN11AnyFunction7MakePtrE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1ab80a8080624e1d9a946b5ec990b6c88e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakePtr</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0EN11AnyFunction7MakePtrEDa1T\" title=\"AnyFunction::MakePtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Helper to build a proper derived function. </p></dd>", "a[href=\"#_CPPv4I0DpEN12BaseFunction6CallOKEbDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN12BaseFunction6CallOKEbDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN12BaseFunction6CallOKEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN12BaseFunction6CallOKEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseFunction_1a479899c5bed1442bcaebfd8a456af35d\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallOK</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN12BaseFunction6CallOKEbDpRR2Ts\" title=\"BaseFunction::CallOK::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a function call will succeed before trying it. </p></dd>", "a[href=\"#_CPPv4NK15DerivedFunctionIF6RETURNDp6PARAMSEE7NumArgsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK15DerivedFunctionIF6RETURNDp6PARAMSEE7NumArgsEv\">\n<span id=\"_CPPv3NK15DerivedFunctionIF6RETURNDp6PARAMSEE7NumArgsEv\"></span><span id=\"_CPPv2NK15DerivedFunctionIF6RETURNDp6PARAMSEE7NumArgsEv\"></span><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1af228ac5f1fc8e60dccf76f2f7aa19e8f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumArgs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11AnyFunction11AnyFunctionE1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11AnyFunction11AnyFunctionE1T\">\n<span id=\"_CPPv3I0EN11AnyFunction11AnyFunctionE1T\"></span><span id=\"_CPPv2I0EN11AnyFunction11AnyFunctionE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1aca45b1c9c90985c8c5a3226a6bf8683e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0EN11AnyFunction11AnyFunctionE1T\" title=\"AnyFunction::AnyFunction::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>If an argument is provided, set the function. </p></dd>", "a[href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN15DerivedFunctionIF6RETURNDp6PARAMSEE15DerivedFunctionE1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN15DerivedFunctionIF6RETURNDp6PARAMSEE15DerivedFunctionE1T\">\n<span id=\"_CPPv3I0EN15DerivedFunctionIF6RETURNDp6PARAMSEE15DerivedFunctionE1T\"></span><span id=\"_CPPv2I0EN15DerivedFunctionIF6RETURNDp6PARAMSEE15DerivedFunctionE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1aa5e05c9753e88b7e27a5e31aa5c56497\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DerivedFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0EN15DerivedFunctionIF6RETURNDp6PARAMSEE15DerivedFunctionE1T\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::DerivedFunction::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Forward all args to std::function constructor\u2026 </p></dd>", "a[href=\"#anyfunction-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">AnyFunction.hpp<a class=\"headerlink\" href=\"#anyfunction-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Based on std::function, but with a generic base class. </p><p>\n(Built from GenericFunction.h) </p>", "a[href=\"#_CPPv4I0DpEN11AnyFunction6CallOKEbDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN11AnyFunction6CallOKEbDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN11AnyFunction6CallOKEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN11AnyFunction6CallOKEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1a971034e98580388cc4c0a933312db9a3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CallOK</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN11AnyFunction6CallOKEbDpRR2Ts\" title=\"AnyFunction::CallOK::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a function call will succeed before trying it. </p></dd>", "a[href=\"#_CPPv4N11AnyFunction11AnyFunctionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11AnyFunction11AnyFunctionEv\">\n<span id=\"_CPPv3N11AnyFunction11AnyFunctionEv\"></span><span id=\"_CPPv2N11AnyFunction11AnyFunctionEv\"></span><span id=\"AnyFunction::AnyFunction\"></span><span class=\"target\" id=\"classAnyFunction_1a5ead18b68072c07baada3537e1f26dfe\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0DpEN11AnyFunctionclEDaDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN11AnyFunctionclEDaDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN11AnyFunctionclEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN11AnyFunctionclEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAnyFunction_1ad3e0ecae6fbce5a204d2eb4709c99870\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN11AnyFunctionclEDaDpRR2Ts\" title=\"AnyFunction::operator()::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A generic form of the function call operator; use arg types to determine derived form. </p></dd>", "a[href=\"#_CPPv4IDpE15DerivedFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE15DerivedFunction\">\n<span id=\"_CPPv3IDpE15DerivedFunction\"></span><span id=\"_CPPv2IDpE15DerivedFunction\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DerivedFunction</span></span></span><br/></dt><dd><p>Undefined base type for DerivedFunction, to create an error if a function type is not passed in. </p></dd>", "a[href=\"#_CPPv4IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEEclE6RETURNDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEEclE6RETURNDpRR2Ts\">\n<span id=\"_CPPv3IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEEclEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEEclEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4_1a335d1499300e48c201e8c29d61768c91\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN15DerivedFunctionIF6RETURNDp6PARAMSEEclE6RETURNDpRR2Ts\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::operator()::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Forward all args to std::function call. </p></dd>", "a[href=\"#_CPPv4I0EN12BaseFunction9ConvertOKEbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN12BaseFunction9ConvertOKEbv\">\n<span id=\"_CPPv3I0EN12BaseFunction9ConvertOKEv\"></span><span id=\"_CPPv2I0EN12BaseFunction9ConvertOKEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseFunction_1a246dae15bf721acf3676e6a453f1cd8a\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConvertOK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if this BaseFunction can be converted into a derived Function. </p></dd>", "a[href=\"#_CPPv4I0DpEN12BaseFunctionclEDaDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpEN12BaseFunctionclEDaDpRR2Ts\">\n<span id=\"_CPPv3I0DpEN12BaseFunctionclEDpRR2Ts\"></span><span id=\"_CPPv2I0DpEN12BaseFunctionclEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseFunction_1ae02829e10ae3aaee67e7c8d1216398f7\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpEN12BaseFunctionclEDaDpRR2Ts\" title=\"BaseFunction::operator()::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A generic form of the function call operator; use arg types to determine derived form. </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
