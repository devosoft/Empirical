selector_to_html = {"a[href=\"#_CPPv4NK11WorldVector7IsValidE13WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11WorldVector7IsValidE13WorldPosition\">\n<span id=\"_CPPv3NK11WorldVector7IsValidE13WorldPosition\"></span><span id=\"_CPPv2NK11WorldVector7IsValidE13WorldPosition\"></span><span id=\"WorldVector::IsValid__WorldPositionC\"></span><span class=\"target\" id=\"classWorldVector_1aca21ea7eb81c5d4eccf8fad1cb01e3c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsValid</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if a position is currently valid. </p></dd>", "a[href=\"#_CPPv4N11WorldVectorclE13WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11WorldVectorclE13WorldPosition\">\n<span id=\"_CPPv3N11WorldVectorclE13WorldPosition\"></span><span id=\"_CPPv2N11WorldVectorclE13WorldPosition\"></span><span id=\"WorldVector::call-operator__WorldPosition\"></span><span class=\"target\" id=\"classWorldVector_1afb0a97c6b955d84e01b3198d5261fcb4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11WorldVector\" title=\"WorldVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8max_valsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8max_valsE\">\n<span id=\"_CPPv3N17World_MinDistInfo8max_valsE\"></span><span id=\"_CPPv2N17World_MinDistInfo8max_valsE\"></span><span id=\"World_MinDistInfo::max_vals__vector:double:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1adf3ce324eb6b3edc55f4e217bf220eca\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">max_vals</span></span></span><br/></dt><dd><p>Largest value found for each trait. </p></dd>", "a[href=\"../../base/api/array.html#_CPPv4I0_6size_tE5array\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE5array\">\n<span id=\"_CPPv3I0_6size_tE5array\"></span><span id=\"_CPPv2I0_6size_tE5array\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_ELEMENTS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structarray\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">array</span></span></span><br/></dt><dd><p>We are in debug mode, so array has the same interface as std::array, but with extra bounds checking. Using vector as our base since it has the right pieces and is dynamic. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo14num_total_binsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo14num_total_binsE\">\n<span id=\"_CPPv3N17World_MinDistInfo14num_total_binsE\"></span><span id=\"_CPPv2N17World_MinDistInfo14num_total_binsE\"></span><span id=\"World_MinDistInfo::num_total_bins__s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ab4a61b5a859d23cfc2d197a100ff8d8f\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">num_total_bins</span></span></span><br/></dt><dd><p>How many bins are there overall? </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8org_binsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8org_binsE\">\n<span id=\"_CPPv3N17World_MinDistInfo8org_binsE\"></span><span id=\"_CPPv2N17World_MinDistInfo8org_binsE\"></span><span id=\"World_MinDistInfo::org_bins__vector:s:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a2f66590d984f24f0b7b24385d4ea7b9b\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">org_bins</span></span></span><br/></dt><dd><p>Which bin is each org currently in? </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8distanceE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8distanceE\">\n<span id=\"_CPPv3N17World_MinDistInfo8distanceE\"></span><span id=\"_CPPv2N17World_MinDistInfo8distanceE\"></span><span id=\"World_MinDistInfo::distance__vector:double:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a2f634b4b52c4649227d45406c971a2b4\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">distance</span></span></span><br/></dt><dd><p>And what is their distance? </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo14num_trait_binsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo14num_trait_binsE\">\n<span id=\"_CPPv3N17World_MinDistInfo14num_trait_binsE\"></span><span id=\"_CPPv2N17World_MinDistInfo14num_trait_binsE\"></span><span id=\"World_MinDistInfo::num_trait_bins__s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1abb64370f35d48c399a3cb83351dc4d54\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">num_trait_bins</span></span></span><br/></dt><dd><p>How many bins should we use for each trait? </p></dd>", "a[href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a4027257f9eb9f02a8b0e51b354099ac9\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"../../data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">traits</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">trait_counts</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the population to use a MapElites structure. This means that organism placement has two key components: 1: Organism position is based on their phenotypic traits. 2: Organisms must have a higher fitness than the current resident of a position to steal it.</p><p>Note: Since organisms compete with their predecessors for space in the populations, synchronous generations do not make sense.</p><p>This for version will setup a MAP-Elites world; traits to use an how many bins for each (trait counts) must be provided. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo6UpdateE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo6UpdateE6size_t\">\n<span id=\"_CPPv3N17World_MinDistInfo6UpdateE6size_t\"></span><span id=\"_CPPv2N17World_MinDistInfo6UpdateE6size_t\"></span><span id=\"World_MinDistInfo::Update__s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a298901f95cad37a4d10c5076d737357a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Update</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Assume a position has changed; refresh it AND everything that had it as a closest connection. </p></dd>", "a[href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\">\n<span id=\"_CPPv3I0E16SetDiverseElitesR5WorldI3ORGE8TraitSetI3ORGE6size_t\"></span><span id=\"_CPPv2I0E16SetDiverseElitesR5WorldI3ORGE8TraitSetI3ORGE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a2506f89afe072c87b5581555f85d1fb3\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDiverseElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\" title=\"SetDiverseElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"../../data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\" title=\"SetDiverseElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">traits</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">world_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This first version will setup a Diverse-Elites world and specify traits to use. </p></dd>", "a[href=\"#_CPPv4N13WorldPosition13WorldPositionEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition13WorldPositionEv\">\n<span id=\"_CPPv3N13WorldPosition13WorldPositionEv\"></span><span id=\"_CPPv2N13WorldPosition13WorldPositionEv\"></span><span id=\"WorldPosition::WorldPosition\"></span><span class=\"target\" id=\"classWorldPosition_1ac85db09f51083bbf79de9eeec77fed4a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E8SetPoolsvR5WorldI3ORGE6size_t6size_tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8SetPoolsvR5WorldI3ORGE6size_t6size_tb\">\n<span id=\"_CPPv3I0E8SetPoolsR5WorldI3ORGE6size_t6size_tb\"></span><span id=\"_CPPv2I0E8SetPoolsR5WorldI3ORGE6size_t6size_tb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a69193062e36c66dda8913f70c0c626d5\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetPools</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8SetPoolsvR5WorldI3ORGE6size_t6size_tb\" title=\"SetPools::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_pools</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pool_size</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">synchronous_gen</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the population to be a set of pools that are individually well mixed, but with limited migration. Arguments are the number of pools, the size of each pool, and whether the generations should be synchronous (true) or not (false, default). </p></dd>", "a[href=\"#_CPPv4NK13WorldPosition8GetPopIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13WorldPosition8GetPopIDEv\">\n<span id=\"_CPPv3NK13WorldPosition8GetPopIDEv\"></span><span id=\"_CPPv2NK13WorldPosition8GetPopIDEv\"></span><span id=\"WorldPosition::GetPopIDC\"></span><span class=\"target\" id=\"classWorldPosition_1acdfa2f5e839ec226839c304a0d2dc7c6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetPopID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8is_setupE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8is_setupE\">\n<span id=\"_CPPv3N17World_MinDistInfo8is_setupE\"></span><span id=\"_CPPv2N17World_MinDistInfo8is_setupE\"></span><span id=\"World_MinDistInfo::is_setup__b\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a8251f6f580be83c46613c8be633fedb0\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_setup</span></span></span><br/></dt><dd><p>Have we initialized the internal data stucture? </p></dd>", "a[href=\"#_CPPv4NK13WorldPosition8GetIndexEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13WorldPosition8GetIndexEv\">\n<span id=\"_CPPv3NK13WorldPosition8GetIndexEv\"></span><span id=\"_CPPv2NK13WorldPosition8GetIndexEv\"></span><span id=\"WorldPosition::GetIndexC\"></span><span class=\"target\" id=\"classWorldPosition_1a11960d36747f903dffd2774b8c8ca4b5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8min_valsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8min_valsE\">\n<span id=\"_CPPv3N17World_MinDistInfo8min_valsE\"></span><span id=\"_CPPv2N17World_MinDistInfo8min_valsE\"></span><span id=\"World_MinDistInfo::min_vals__vector:double:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ab1dcb6ccd43ad866ad13328008b9c76a\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">min_vals</span></span></span><br/></dt><dd><p>Smallest value found for each trait. </p></dd>", "a[href=\"#_CPPv4N13WorldPosition8SetPopIDE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition8SetPopIDE6size_t\">\n<span id=\"_CPPv3N13WorldPosition8SetPopIDE6size_t\"></span><span id=\"_CPPv2N13WorldPosition8SetPopIDE6size_t\"></span><span id=\"WorldPosition::SetPopID__s\"></span><span class=\"target\" id=\"classWorldPosition_1adaeeec5de8af61c308e4a3f27556f62d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetPopID</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo9ResetBinsEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo9ResetBinsEv\">\n<span id=\"_CPPv3N17World_MinDistInfo9ResetBinsEv\"></span><span id=\"_CPPv2N17World_MinDistInfo9ResetBinsEv\"></span><span id=\"World_MinDistInfo::ResetBins\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ae0ea82b25c7df68561ba0d196b9ab916\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResetBins</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reset all of the bins in the multidimensional grid for nearest-neighbor analysis. </p></dd>", "a[href=\"#_CPPv4N13WorldPosition11MarkInvalidEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition11MarkInvalidEv\">\n<span id=\"_CPPv3N13WorldPosition11MarkInvalidEv\"></span><span id=\"_CPPv2N13WorldPosition11MarkInvalidEv\"></span><span id=\"WorldPosition::MarkInvalid\"></span><span class=\"target\" id=\"classWorldPosition_1a28b2d6629aa4206f471b9fb8275982fa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MarkInvalid</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo9bin_widthE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo9bin_widthE\">\n<span id=\"_CPPv3N17World_MinDistInfo9bin_widthE\"></span><span id=\"_CPPv2N17World_MinDistInfo9bin_widthE\"></span><span id=\"World_MinDistInfo::bin_width__vector:double:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a3e2a00b8c4f7ee6e9a085d5cbf8f8775\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bin_width</span></span></span><br/></dt><dd><p>Largest value found for each trait. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8FindKillEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8FindKillEv\">\n<span id=\"_CPPv3N17World_MinDistInfo8FindKillEv\"></span><span id=\"_CPPv2N17World_MinDistInfo8FindKillEv\"></span><span id=\"World_MinDistInfo::FindKill\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1af4f3dc4bbd2d75e6bf2217b2ab640fb3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindKill</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the best organism to kill in the population. In this case, find the two closest organisms and kill the one with the lower fitness. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo10nearest_idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo10nearest_idE\">\n<span id=\"_CPPv3N17World_MinDistInfo10nearest_idE\"></span><span id=\"_CPPv2N17World_MinDistInfo10nearest_idE\"></span><span id=\"World_MinDistInfo::nearest_id__vector:s:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1acc00fee24df4c97dc3287f644250d467\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">nearest_id</span></span></span><br/></dt><dd><p>For each individual, whom are they closest to? </p></dd>", "a[href=\"#_CPPv4N13WorldPosition13WorldPositionE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition13WorldPositionE6size_t6size_t\">\n<span id=\"_CPPv3N13WorldPosition13WorldPositionE6size_t6size_t\"></span><span id=\"_CPPv2N13WorldPosition13WorldPositionE6size_t6size_t\"></span><span id=\"WorldPosition::WorldPosition__s.s\"></span><span class=\"target\" id=\"classWorldPosition_1ae2c0d50f0dd0681be98bbb2ccd293d82\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_pop_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#world-structure-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World_structure.hpp<a class=\"headerlink\" href=\"#world-structure-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for popular world structure methods. </p>", "a[href=\"#_CPPv4N13WorldPosition13WorldPositionERK13WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition13WorldPositionERK13WorldPosition\">\n<span id=\"_CPPv3N13WorldPosition13WorldPositionERK13WorldPosition\"></span><span id=\"_CPPv2N13WorldPosition13WorldPositionERK13WorldPosition\"></span><span id=\"WorldPosition::WorldPosition__WorldPositionCR\"></span><span class=\"target\" id=\"classWorldPosition_1a887feecbae2289a080694320e073b49a\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N13WorldPosition13WorldPositionERK13WorldPosition\" title=\"WorldPosition::WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N13WorldPosition9SetActiveEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition9SetActiveEb\">\n<span id=\"_CPPv3N13WorldPosition9SetActiveEb\"></span><span id=\"_CPPv2N13WorldPosition9SetActiveEb\"></span><span id=\"WorldPosition::SetActive__b\"></span><span class=\"target\" id=\"classWorldPosition_1a43c860fae6207904378fe9295a73fced\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetActive</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo7CalcBinE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo7CalcBinE6size_t\">\n<span id=\"_CPPv3N17World_MinDistInfo7CalcBinE6size_t\"></span><span id=\"_CPPv2N17World_MinDistInfo7CalcBinE6size_t\"></span><span id=\"World_MinDistInfo::CalcBin__s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a8499fdf70edab100928242cacf620ec8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CalcBin</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate which bin an organism should be in. </p></dd>", "a[href=\"#_CPPv4N13WorldPositionaSERK13WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPositionaSERK13WorldPosition\">\n<span id=\"_CPPv3N13WorldPositionaSERK13WorldPosition\"></span><span id=\"_CPPv2N13WorldPositionaSERK13WorldPosition\"></span><span id=\"WorldPosition::assign-operator__WorldPositionCR\"></span><span class=\"target\" id=\"classWorldPosition_1a3ab9de9a1b2317a003b7b862c5ae8c48\"></span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"../../data/api/Trait.html#_CPPv4I0E8TraitSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8TraitSet\">\n<span id=\"_CPPv3I0E8TraitSet\"></span><span id=\"_CPPv2I0E8TraitSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TARGET_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTraitSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></span><br/></dt><dd><p>A TraitSet houses a collection of traits and can trigger them to all be evaluated at once. </p></dd>", "a[href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a8a1e223e756d35d91736d487f8116286\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"../../data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">traits</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a MAP-Elites world, given the provided set of traits. Requires world to already have a size; that size is respected when deciding trait bins. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo5worldE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo5worldE\">\n<span id=\"_CPPv3N17World_MinDistInfo5worldE\"></span><span id=\"_CPPv2N17World_MinDistInfo5worldE\"></span><span id=\"World_MinDistInfo::world__World:ORG:R\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a021c1a7b0d9808746e8cef6f135f062b\"></span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17World_MinDistInfo\" title=\"World_MinDistInfo::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">world</span></span></span><br/></dt><dd><p>World object being tracked. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo18Refresh_AgainstBinE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo18Refresh_AgainstBinE6size_t6size_t\">\n<span id=\"_CPPv3N17World_MinDistInfo18Refresh_AgainstBinE6size_t6size_t\"></span><span id=\"_CPPv2N17World_MinDistInfo18Refresh_AgainstBinE6size_t6size_t\"></span><span id=\"World_MinDistInfo::Refresh_AgainstBin__s.s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a3b476236092c9a3ff874a33295cbfca4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Refresh_AgainstBin</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">refresh_id</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target_bin</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N13WorldPosition5indexE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition5indexE\">\n<span id=\"_CPPv3N13WorldPosition5indexE\"></span><span id=\"_CPPv2N13WorldPosition5indexE\"></span><span id=\"WorldPosition::index__uint32_t\"></span><span class=\"target\" id=\"classWorldPosition_1aedd74d165b79bc5b6f31fa8a6df11507\"></span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">index</span></span></span><br/></dt><dd><p>Position of this organism in the population. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo17World_MinDistInfoER5WorldI3ORGERK8TraitSetI3ORGE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo17World_MinDistInfoER5WorldI3ORGERK8TraitSetI3ORGE\">\n<span id=\"_CPPv3N17World_MinDistInfo17World_MinDistInfoER5WorldI3ORGERK8TraitSetI3ORGE\"></span><span id=\"_CPPv2N17World_MinDistInfo17World_MinDistInfoER5WorldI3ORGERK8TraitSetI3ORGE\"></span><span id=\"World_MinDistInfo::World_MinDistInfo__World:ORG:R.TraitSet:ORG:CR\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a3bd4be1ee548e9f0b0a315cd8bb5b919\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World_MinDistInfo</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17World_MinDistInfo\" title=\"World_MinDistInfo::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17World_MinDistInfo\" title=\"World_MinDistInfo::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_traits</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo5ClearEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo5ClearEv\">\n<span id=\"_CPPv3N17World_MinDistInfo5ClearEv\"></span><span id=\"_CPPv2N17World_MinDistInfo5ClearEv\"></span><span id=\"World_MinDistInfo::Clear\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a8ae23e660728b7975adae0dde9bf751b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clear</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo7bin_idsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo7bin_idsE\">\n<span id=\"_CPPv3N17World_MinDistInfo7bin_idsE\"></span><span id=\"_CPPv2N17World_MinDistInfo7bin_idsE\"></span><span id=\"World_MinDistInfo::bin_ids__vector:std::set:s::\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a223e2c467cb8bcd8aa376b1e2509d580\"></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bin_ids</span></span></span><br/></dt><dd><p>Which org ids fall into each bin? </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo2OKEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo2OKEv\">\n<span id=\"_CPPv3N17World_MinDistInfo2OKEv\"></span><span id=\"_CPPv2N17World_MinDistInfo2OKEv\"></span><span id=\"World_MinDistInfo::OK\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1afed1aada819a341504657811beb64085\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OK</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A debug function to make sure the internal state is all valid. </p></dd>", "a[href=\"#_CPPv4I0E17World_MinDistInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17World_MinDistInfo\">\n<span id=\"_CPPv3I0E17World_MinDistInfo\"></span><span id=\"_CPPv2I0E17World_MinDistInfo\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structWorld__MinDistInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World_MinDistInfo</span></span></span><br/></dt><dd><p>Build a class to track distances between organisms. </p><p>DiverseElites is similar to MAP-Elites, but rather than merely keep the elites on a pre-defined grid, it merely tries to maintain maximal distance between elites in trait space. The main advantages to this technique are (1) It\u2019s easy to build up an inital population that grows in diversity over time, and (2) You don\u2019t need to predefine box sizes or even limits to trait values. Set the population to use a DiverseElites structure. This means that organism placement has two key components: 1: Organism position is in continuous space based on phenotypic traits. 2: When the population is full, nearby organisms must battle to keep their position.</p><p>Note: Since organisms compete with their predecessors for space in the populations, synchronous generations do not make sense. </p></dd>", "a[href=\"World.html#_CPPv4I0E5World\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5World\">\n<span id=\"_CPPv3I0E5World\"></span><span id=\"_CPPv2I0E5World\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorld\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World</span></span></span><br/></dt><dd><p>Setup a World with a population of organisms that can evolve or deal with ecological effects. </p><p>There are three ways that organisms can enter the population:<ul class=\"simple\">\n<li><p>InjectAt(org, pos) - place the organism at the specified position in the population.</p></li>\n<li><p>Inject(org) - place the organism using a default postion (given other settings).</p></li>\n<li><p>DoBirth(org, parent_pos) - place the organism using current birth settings.</p></li>\n</ul>\n</p><p>If the population is in EA mode (with synchronous generations), DoBirth will place offspring in a \u201cnext generation\u201d placeholder population. Update() will move orgs into primary population.</p><p>Organisms have a series of functions that are called on them that are chosen:</p><p>FITNESS: Most selection methods require a fitness function to help determine who should be replicated. Other systems merely use fitness as a measured output. 0. If you explicitly set the fitness function using SetFitFun(), it will have priority.<ol class=\"loweralpha simple\">\n<li><p>If the organism type has a \u201cGetFitness()\u201d member function, use it!</p></li>\n<li><p>If the organism type can be cast to double, use it!</p></li>\n<li><p>Start with a fitness function that throws an assert indicating function must be set.</p></li>\n</ol>\n</p><p>MUTATIONS: The mutation function determines a main source of variation for most evolving systems. 0. If you set the mutation function using SetMutFun(), it will have priority.<ol class=\"loweralpha simple\">\n<li><p>Or DoMutations(random) member function.</p></li>\n<li><p>Empty, with assert.</p></li>\n</ol>\n</p></dd>", "a[href=\"#_CPPv4N13WorldPosition8SetIndexE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition8SetIndexE6size_t\">\n<span id=\"_CPPv3N13WorldPosition8SetIndexE6size_t\"></span><span id=\"_CPPv2N13WorldPosition8SetIndexE6size_t\"></span><span id=\"WorldPosition::SetIndex__s\"></span><span class=\"target\" id=\"classWorldPosition_1af66711d65b76cf64ce8f609f5b990f3d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE6size_t\">\n<span id=\"_CPPv3I0E16SetDiverseElitesR5WorldI3ORGE6size_t\"></span><span id=\"_CPPv2I0E16SetDiverseElitesR5WorldI3ORGE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1abbf62d16041d32b7c0cde46a615bcb8d\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDiverseElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE6size_t\" title=\"SetDiverseElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">world_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a Diverse-Elites world, given the provided world already has set of phenotypes. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo5SetupEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo5SetupEv\">\n<span id=\"_CPPv3N17World_MinDistInfo5SetupEv\"></span><span id=\"_CPPv2N17World_MinDistInfo5SetupEv\"></span><span id=\"World_MinDistInfo::Setup\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ad2a24a92ffabcc9de25c9c2c0b3687bc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Setup</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo6traitsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo6traitsE\">\n<span id=\"_CPPv3N17World_MinDistInfo6traitsE\"></span><span id=\"_CPPv2N17World_MinDistInfo6traitsE\"></span><span id=\"World_MinDistInfo::traits__TraitSet:ORG:\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1add34b5df33fe232b4dc1658b0cf3e6ff\"></span><a class=\"reference internal\" href=\"../../data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17World_MinDistInfo\" title=\"World_MinDistInfo::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">traits</span></span></span><br/></dt><dd><p>Traits we are trying to spread. </p></dd>", "a[href=\"#_CPPv4N13WorldPosition6pop_idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition6pop_idE\">\n<span id=\"_CPPv3N13WorldPosition6pop_idE\"></span><span id=\"_CPPv2N13WorldPosition6pop_idE\"></span><span id=\"WorldPosition::pop_id__uint32_t\"></span><span class=\"target\" id=\"classWorldPosition_1af41e5121dad015a75aad35a0918bccce\"></span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pop_id</span></span></span><br/></dt><dd><p>ID of the population we are in; 0 is always the active population. </p></dd>", "a[href=\"#_CPPv4I0E11WorldVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11WorldVector\">\n<span id=\"_CPPv3I0E11WorldVector\"></span><span id=\"_CPPv2I0E11WorldVector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorldVector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11WorldVector\" title=\"WorldVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A vector that can be indexed with a WorldPosition. </p></dd>", "a[href=\"#_CPPv4NK11WorldVectorclE13WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK11WorldVectorclE13WorldPosition\">\n<span id=\"_CPPv3NK11WorldVectorclE13WorldPosition\"></span><span id=\"_CPPv2NK11WorldVectorclE13WorldPosition\"></span><span id=\"WorldVector::call-operator__WorldPositionC\"></span><span class=\"target\" id=\"classWorldVector_1a0214a556f6ed5b4d8838df844a2f4d7e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11WorldVector\" title=\"WorldVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a9b3014a70b9d5a73ab91bf35b7748d4a\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a MAP-Elites world, given the provided worlds already has size AND set of phenotypes. Requires world to already have a size; that size is respected when deciding trait bins. </p></dd>", "a[href=\"#_CPPv4NK13WorldPosition7IsValidEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13WorldPosition7IsValidEv\">\n<span id=\"_CPPv3NK13WorldPosition7IsValidEv\"></span><span id=\"_CPPv2NK13WorldPosition7IsValidEv\"></span><span id=\"WorldPosition::IsValidC\"></span><span class=\"target\" id=\"classWorldPosition_1ae72496b3796ec5e99acf4fbdf84db7de\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsValid</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo8CalcDistE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo8CalcDistE6size_t6size_t\">\n<span id=\"_CPPv3N17World_MinDistInfo8CalcDistE6size_t6size_t\"></span><span id=\"_CPPv2N17World_MinDistInfo8CalcDistE6size_t6size_t\"></span><span id=\"World_MinDistInfo::CalcDist__s.s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1a74b6d25f8c9298c5ea0f90f50a6d1efb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CalcDist</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo11GetBirthPosE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo11GetBirthPosE6size_t\">\n<span id=\"_CPPv3N17World_MinDistInfo11GetBirthPosE6size_t\"></span><span id=\"_CPPv2N17World_MinDistInfo11GetBirthPosE6size_t\"></span><span id=\"World_MinDistInfo::GetBirthPos__s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ab6d93b9e7cac809ab7e995e9c297876b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetBirthPos</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">world_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return an empty world position. If none are available, return the position of an org to be killed. </p></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo7RefreshE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo7RefreshE6size_t6size_t\">\n<span id=\"_CPPv3N17World_MinDistInfo7RefreshE6size_t6size_t\"></span><span id=\"_CPPv2N17World_MinDistInfo7RefreshE6size_t6size_t\"></span><span id=\"World_MinDistInfo::Refresh__s.s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ad30c36b51c26e52e45d348b36339be6a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Refresh</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">refresh_id</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGERK6vectorI6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGERK6vectorI6size_tE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGERK6vectorI6size_tE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGERK6vectorI6size_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a9142bb888208f975e04ec79960b0ffb2\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGERK6vectorI6size_tE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">trait_counts</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a MAP-Elites world, given the provided trait counts (number of bins). Requires world to already have a phenotypes that those counts are applied to. </p></dd>", "a[href=\"#_CPPv4N13WorldPosition10invalid_idE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N13WorldPosition10invalid_idE\">\n<span id=\"_CPPv3N13WorldPosition10invalid_idE\"></span><span id=\"_CPPv2N13WorldPosition10invalid_idE\"></span><span id=\"WorldPosition::invalid_id__s\"></span><span class=\"target\" id=\"classWorldPosition_1adf8fb3d6dde27d58d8a7448398506690\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">invalid_id</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17World_MinDistInfo7ID_NONEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17World_MinDistInfo7ID_NONEE\">\n<span id=\"_CPPv3N17World_MinDistInfo7ID_NONEE\"></span><span id=\"_CPPv2N17World_MinDistInfo7ID_NONEE\"></span><span id=\"World_MinDistInfo::ID_NONE__s\"></span><span class=\"target\" id=\"structWorld__MinDistInfo_1ad961fa8ce64e4ad570f3943e6de83275\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ID_NONE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><br/></dt><dd><p>ID for organism does not exist. </p></dd>", "a[href=\"#_CPPv413WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413WorldPosition\">\n<span id=\"_CPPv313WorldPosition\"></span><span id=\"_CPPv213WorldPosition\"></span><span id=\"WorldPosition\"></span><span class=\"target\" id=\"classWorldPosition\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></span><br/></dt><dd><p>A class to track positions in World. For the moment, the only informaiton beyond index is active (vs. next) population when using synchronous generations. </p></dd>", "a[href=\"#_CPPv4N11WorldVector9MakeValidE13WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11WorldVector9MakeValidE13WorldPosition\">\n<span id=\"_CPPv3N11WorldVector9MakeValidE13WorldPosition\"></span><span id=\"_CPPv2N11WorldVector9MakeValidE13WorldPosition\"></span><span id=\"WorldVector::MakeValid__WorldPosition\"></span><span class=\"target\" id=\"classWorldVector_1a58ac445c5e19df14c5b444f7c2316e4f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeValid</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv413WorldPosition\" title=\"WorldPosition\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make sure position is valid; if not expand relevant vector. </p></dd>", "a[href=\"#_CPPv4N11WorldVector6base_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11WorldVector6base_tE\">\n<span id=\"_CPPv3N11WorldVector6base_tE\"></span><span id=\"_CPPv2N11WorldVector6base_tE\"></span><span class=\"target\" id=\"classWorldVector_1aa454e7897716ecc38c70aad2271bd72e\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">base_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11WorldVector\" title=\"WorldVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK13WorldPosition8IsActiveEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK13WorldPosition8IsActiveEv\">\n<span id=\"_CPPv3NK13WorldPosition8IsActiveEv\"></span><span id=\"_CPPv2NK13WorldPosition8IsActiveEv\"></span><span id=\"WorldPosition::IsActiveC\"></span><span class=\"target\" id=\"classWorldPosition_1a17c446ed2545d3f78226c4ec488ad07e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsActive</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
