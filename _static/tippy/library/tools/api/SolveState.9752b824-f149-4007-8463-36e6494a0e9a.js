selector_to_html = {"a[href=\"#_CPPv4NK10SolveState8CountOutEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState8CountOutEv\">\n<span id=\"_CPPv3NK10SolveState8CountOutEv\"></span><span id=\"_CPPv2NK10SolveState8CountOutEv\"></span><span id=\"SolveState::CountOutC\"></span><span class=\"target\" id=\"classSolveState_1acd4380fcf93470377e536831e9fa12fa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountOut</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many items have been excluded for sure. </p></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv49BitVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49BitVector\">\n<span id=\"_CPPv39BitVector\"></span><span id=\"_CPPv29BitVector\"></span><span class=\"target\" id=\"Bits_8hpp_1a5d2f930a5e5d86a910b3a02d7e94dd13\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits_Data.html#_CPPv418Bits_WatermarkData\" title=\"Bits_WatermarkData\"><span class=\"n\"><span class=\"pre\">Bits_WatermarkData</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10SolveState10IncludeSetERK9BitVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState10IncludeSetERK9BitVector\">\n<span id=\"_CPPv3N10SolveState10IncludeSetERK9BitVector\"></span><span id=\"_CPPv2N10SolveState10IncludeSetERK9BitVector\"></span><span id=\"SolveState::IncludeSet__BitVectorCR\"></span><span class=\"target\" id=\"classSolveState_1aed9e61568a184d9d51c910d6bce5f5c5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IncludeSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">inc_set</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Include ALL of the items specified in the provided BitVector. </p></dd>", "a[href=\"#_CPPv4N10SolveState7IncludeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState7IncludeE6size_t\">\n<span id=\"_CPPv3N10SolveState7IncludeE6size_t\"></span><span id=\"_CPPv2N10SolveState7IncludeE6size_t\"></span><span id=\"SolveState::Include__s\"></span><span class=\"target\" id=\"classSolveState_1a9f1bbd56fcb249ed85dcfecb26f7a167\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Include</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Mark a specific item as to be included. </p></dd>", "a[href=\"#_CPPv410SolveState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410SolveState\">\n<span id=\"_CPPv310SolveState\"></span><span id=\"_CPPv210SolveState\"></span><span id=\"SolveState\"></span><span class=\"target\" id=\"classSolveState\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></span><br/></dt><dd><p>Often in a branch-and-bound algorithm, we need to identify the sub-set of items that maximizes (or minimizes) an optimization metric. SolveState keeps track of the current state for which items have been locked in as \u201cincluded\u201d in the current branks, which have been \u201cexcluded\u201d, and which are still \u201cunknown\u201d (still to be decided upon.) All tracking is performed with BitVectors for high efficiency. </p></dd>", "a[href=\"#solvestate-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SolveState.hpp<a class=\"headerlink\" href=\"#solvestate-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Used as part of a branching solver to keep track of the current state. </p>", "a[href=\"#_CPPv4N10SolveState8in_itemsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState8in_itemsE\">\n<span id=\"_CPPv3N10SolveState8in_itemsE\"></span><span id=\"_CPPv2N10SolveState8in_itemsE\"></span><span id=\"SolveState::in_items__BitVector\"></span><span class=\"target\" id=\"classSolveState_1ad201ba0f1c022e6e9e653d701a70b459\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">in_items</span></span></span><br/></dt><dd><p>Items included for sure. </p></dd>", "a[href=\"#_CPPv4N10SolveState7ExcludeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState7ExcludeE6size_t\">\n<span id=\"_CPPv3N10SolveState7ExcludeE6size_t\"></span><span id=\"_CPPv2N10SolveState7ExcludeE6size_t\"></span><span id=\"SolveState::Exclude__s\"></span><span class=\"target\" id=\"classSolveState_1a3d747b7c3e1988f1a3237ae2e6a7d968\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Exclude</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Mark a specific item as to be excluded. </p></dd>", "a[href=\"#_CPPv4N10SolveState12ForceExcludeE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState12ForceExcludeE6size_t\">\n<span id=\"_CPPv3N10SolveState12ForceExcludeE6size_t\"></span><span id=\"_CPPv2N10SolveState12ForceExcludeE6size_t\"></span><span id=\"SolveState::ForceExclude__s\"></span><span class=\"target\" id=\"classSolveState_1a3d7c528f015b057d65d30d2a36a11747\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ForceExclude</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change our mind about a potentially included node (Be careful since many algorithms don\u2019t requite this type of changes to be made.) </p></dd>", "a[href=\"#_CPPv4NK10SolveState11GetInVectorEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState11GetInVectorEv\">\n<span id=\"_CPPv3NK10SolveState11GetInVectorEv\"></span><span id=\"_CPPv2NK10SolveState11GetInVectorEv\"></span><span id=\"SolveState::GetInVectorC\"></span><span class=\"target\" id=\"classSolveState_1a8c2fc0e8327e78fefbed29d7341d78ea\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetInVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the BitVector associated with which items have been included for sure. </p></dd>", "a[href=\"#_CPPv4NK10SolveState7CountInEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState7CountInEv\">\n<span id=\"_CPPv3NK10SolveState7CountInEv\"></span><span id=\"_CPPv2NK10SolveState7CountInEv\"></span><span id=\"SolveState::CountInC\"></span><span class=\"target\" id=\"classSolveState_1a850d71755518fc230b3f95f3026c58ad\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountIn</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many items have been included for sure? </p></dd>", "a[href=\"#_CPPv4N10SolveState10SolveStateERK10SolveState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState10SolveStateERK10SolveState\">\n<span id=\"_CPPv3N10SolveState10SolveStateERK10SolveState\"></span><span id=\"_CPPv2N10SolveState10SolveStateERK10SolveState\"></span><span id=\"SolveState::SolveState__SolveStateCR\"></span><span class=\"target\" id=\"classSolveState_1a21fa34d506a76b025f3c38d42220d3cc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10SolveState10SolveStateERK10SolveState\" title=\"SolveState::SolveState\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK10SolveState7IsFinalEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState7IsFinalEv\">\n<span id=\"_CPPv3NK10SolveState7IsFinalEv\"></span><span id=\"_CPPv2NK10SolveState7IsFinalEv\"></span><span id=\"SolveState::IsFinalC\"></span><span class=\"target\" id=\"classSolveState_1ac736e9ad27b545b1758bbc16648fe0c1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsFinal</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if all items have been decided upon (none are still in the \u201cunknown\u201d state) </p></dd>", "a[href=\"#_CPPv4NK10SolveState12GetUnkVectorEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState12GetUnkVectorEv\">\n<span id=\"_CPPv3NK10SolveState12GetUnkVectorEv\"></span><span id=\"_CPPv2NK10SolveState12GetUnkVectorEv\"></span><span id=\"SolveState::GetUnkVectorC\"></span><span class=\"target\" id=\"classSolveState_1a0e03cf5104caf4c3f4e1f9a7ea5ae9c1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUnkVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the BitVector associated with which items have yet to be decided upon. </p></dd>", "a[href=\"#_CPPv4NK10SolveState4IsInE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState4IsInE6size_t\">\n<span id=\"_CPPv3NK10SolveState4IsInE6size_t\"></span><span id=\"_CPPv2NK10SolveState4IsInE6size_t\"></span><span id=\"SolveState::IsIn__sC\"></span><span class=\"target\" id=\"classSolveState_1a8c8dd11c866f33b21d14fa97ddc50240\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsIn</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if a particular item is going to be included for sure in the current solve state. (If it has been excluded -OR- is yet to be decided upon, false will be returned) </p></dd>", "a[href=\"#_CPPv4N10SolveState9unk_itemsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState9unk_itemsE\">\n<span id=\"_CPPv3N10SolveState9unk_itemsE\"></span><span id=\"_CPPv2N10SolveState9unk_itemsE\"></span><span id=\"SolveState::unk_items__BitVector\"></span><span class=\"target\" id=\"classSolveState_1ad67480b7761fb6ccd553697fdf191ba5\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">unk_items</span></span></span><br/></dt><dd><p>Items yet to be decided on. </p></dd>", "a[href=\"#_CPPv4NK10SolveState12GetOutVectorEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState12GetOutVectorEv\">\n<span id=\"_CPPv3NK10SolveState12GetOutVectorEv\"></span><span id=\"_CPPv2NK10SolveState12GetOutVectorEv\"></span><span id=\"SolveState::GetOutVectorC\"></span><span class=\"target\" id=\"classSolveState_1a35a962ec546cfefab7493980e52663a4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetOutVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the BitVector associated with which iterm have been excluded for sure. </p></dd>", "a[href=\"#_CPPv4N10SolveStateD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveStateD0Ev\">\n<span id=\"_CPPv3N10SolveStateD0Ev\"></span><span id=\"_CPPv2N10SolveStateD0Ev\"></span><span id=\"SolveState::~SolveState\"></span><span class=\"target\" id=\"classSolveState_1a07b1bb3423e799eef8e97a6460a2eae3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~SolveState</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK10SolveState5IsUnkE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState5IsUnkE6size_t\">\n<span id=\"_CPPv3NK10SolveState5IsUnkE6size_t\"></span><span id=\"_CPPv2NK10SolveState5IsUnkE6size_t\"></span><span id=\"SolveState::IsUnk__sC\"></span><span class=\"target\" id=\"classSolveState_1a368741cfd924d1e7808a92551663c45d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsUnk</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if a particular item is yet to be decided upon in the current solve state. (If it has been excluded -OR- is included for sure, false will be returned) </p></dd>", "a[href=\"#_CPPv4N10SolveState10SolveStateE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState10SolveStateE6size_t\">\n<span id=\"_CPPv3N10SolveState10SolveStateE6size_t\"></span><span id=\"_CPPv2N10SolveState10SolveStateE6size_t\"></span><span id=\"SolveState::SolveState__s\"></span><span class=\"target\" id=\"classSolveState_1a9132082d6a0a9b1e236e18ed1cfff5c4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">state_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK10SolveState5IsOutE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState5IsOutE6size_t\">\n<span id=\"_CPPv3NK10SolveState5IsOutE6size_t\"></span><span id=\"_CPPv2NK10SolveState5IsOutE6size_t\"></span><span id=\"SolveState::IsOut__sC\"></span><span class=\"target\" id=\"classSolveState_1a94a0e089c2bbb73f5fca21eba768cd30\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsOut</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Test if a particular item is going to be excluded for sure in the current solve state. (If it has been included -OR- is yet to be decided upon, false will be returned) </p></dd>", "a[href=\"#_CPPv4N10SolveState10ExcludeSetERK9BitVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveState10ExcludeSetERK9BitVector\">\n<span id=\"_CPPv3N10SolveState10ExcludeSetERK9BitVector\"></span><span id=\"_CPPv2N10SolveState10ExcludeSetERK9BitVector\"></span><span id=\"SolveState::ExcludeSet__BitVectorCR\"></span><span class=\"target\" id=\"classSolveState_1a8a37bc1babe9789efd311caa1090f977\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExcludeSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">inc_set</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Exclude ALL of the items specified in the provided BitVector. </p></dd>", "a[href=\"#_CPPv4N10SolveStateaSERK10SolveState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10SolveStateaSERK10SolveState\">\n<span id=\"_CPPv3N10SolveStateaSERK10SolveState\"></span><span id=\"_CPPv2N10SolveStateaSERK10SolveState\"></span><span id=\"SolveState::assign-operator__SolveStateCR\"></span><span class=\"target\" id=\"classSolveState_1a9bf30a1590d58943078c3b1b4a97b2f5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410SolveState\" title=\"SolveState\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410SolveState\" title=\"SolveState\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set this SolveState to be identical to another. </p></dd>", "a[href=\"#_CPPv4NK10SolveState10GetNextUnkE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState10GetNextUnkE6size_t\">\n<span id=\"_CPPv3NK10SolveState10GetNextUnkE6size_t\"></span><span id=\"_CPPv2NK10SolveState10GetNextUnkE6size_t\"></span><span id=\"SolveState::GetNextUnk__sC\"></span><span class=\"target\" id=\"classSolveState_1a05190900ee5aec8d3b50bf20d65c3709\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNextUnk</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">prev_unk</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>Get the ID of the next unknown item. </p></dd>", "a[href=\"#_CPPv4NK10SolveState7GetSizeEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState7GetSizeEv\">\n<span id=\"_CPPv3NK10SolveState7GetSizeEv\"></span><span id=\"_CPPv2NK10SolveState7GetSizeEv\"></span><span id=\"SolveState::GetSizeC\"></span><span class=\"target\" id=\"classSolveState_1a3c493be3cda699328cc23fafd45c4d46\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many items are being considered in the current SolveState? </p></dd>", "a[href=\"#_CPPv4NK10SolveState8CountUnkEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10SolveState8CountUnkEv\">\n<span id=\"_CPPv3NK10SolveState8CountUnkEv\"></span><span id=\"_CPPv2NK10SolveState8CountUnkEv\"></span><span id=\"SolveState::CountUnkC\"></span><span class=\"target\" id=\"classSolveState_1a0c244dba5ee4472c502daf421ddc5c6e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountUnk</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>How many items have yet to be decided upon (are \u201cunknown\u201d) </p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
