selector_to_html = {"a[href=\"#_CPPv4N7keyname8unpack_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7keyname8unpack_tE\">\n<span id=\"_CPPv3N7keyname8unpack_tE\"></span><span id=\"_CPPv2N7keyname8unpack_tE\"></span><span class=\"target\" id=\"namespacekeyname_1a281139f50e3b08f58ac1c570c66c1ad2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">unpack_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#keyname-utils-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">keyname_utils.hpp<a class=\"headerlink\" href=\"#keyname-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Utility functions that support the keyname file naming convention. </p><p>Plays nice with the Python package keyname. <a class=\"reference external\" href=\"https://github.com/mmore500/keyname\">https://github.com/mmore500/keyname</a></p>", "a[href=\"#_CPPv47keyname\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47keyname\">\n<span id=\"_CPPv37keyname\"></span><span id=\"_CPPv27keyname\"></span><span id=\"keyname\"></span><span class=\"target\" id=\"namespacekeyname\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">keyname</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N7keyname6unpackERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7keyname6unpackERKNSt6stringE\">\n<span id=\"_CPPv3N7keyname6unpackERKNSt6stringE\"></span><span id=\"_CPPv2N7keyname6unpackERKNSt6stringE\"></span><span id=\"keyname::unpack__ssCR\"></span><span class=\"target\" id=\"namespacekeyname_1a8dc1d95490971ea23a6522763c464e79\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7keyname8unpack_tE\" title=\"keyname::unpack_t\"><span class=\"n\"><span class=\"pre\">unpack_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">unpack</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#_CPPv4N7keyname4packERK8unpack_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N7keyname4packERK8unpack_t\">\n<span id=\"_CPPv3N7keyname4packERK8unpack_t\"></span><span id=\"_CPPv2N7keyname4packERK8unpack_t\"></span><span id=\"keyname::pack__unpack_tCR\"></span><span class=\"target\" id=\"namespacekeyname_1abf1955927723af2ac308e3c7a431052c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pack</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N7keyname8unpack_tE\" title=\"keyname::unpack_t\"><span class=\"n\"><span class=\"pre\">unpack_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dict</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
