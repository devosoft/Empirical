selector_to_html = {"a[href=\"#_CPPv4IDpEN11TypeTracker10GetComboIDE6size_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTracker10GetComboIDE6size_tv\">\n<span id=\"_CPPv3IDpEN11TypeTracker10GetComboIDEv\"></span><span id=\"_CPPv2IDpEN11TypeTracker10GetComboIDEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1af117fdf8349d4f857cc9d305ef414a7c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetComboID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A ComboID should be unique <em>across</em> all size combinations. </p></dd>", "a[href=\"#_CPPv4N10TrackedVar10TrackedVarERR10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVar10TrackedVarERR10TrackedVar\">\n<span id=\"_CPPv3N10TrackedVar10TrackedVarERR10TrackedVar\"></span><span id=\"_CPPv2N10TrackedVar10TrackedVarERR10TrackedVar\"></span><span id=\"TrackedVar::TrackedVar__TrackedVarRR\"></span><span class=\"target\" id=\"structTrackedVar_1ad25ed8a2eafff182cf8947bb14fc8e81\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N10TrackedVar10TrackedVarERR10TrackedVar\" title=\"TrackedVar::TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move constructor takes control of the pointer. </p></dd>", "a[href=\"#_CPPv4N11TypeTrackeraSERK11TypeTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTrackeraSERK11TypeTracker\">\n<span id=\"_CPPv3N11TypeTrackeraSERK11TypeTracker\"></span><span id=\"_CPPv2N11TypeTrackeraSERK11TypeTracker\"></span><span id=\"TypeTracker::assign-operator__TypeTrackerCR\"></span><span class=\"target\" id=\"classTypeTracker_1a11d11346c192b7ef14786f33492cebfa\"></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERK17TrackedInfo_Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERK17TrackedInfo_Value\">\n<span id=\"_CPPv3N17TrackedInfo_Value17TrackedInfo_ValueERK17TrackedInfo_Value\"></span><span id=\"_CPPv2N17TrackedInfo_Value17TrackedInfo_ValueERK17TrackedInfo_Value\"></span><span id=\"TrackedInfo_Value::TrackedInfo_Value__TrackedInfo_ValueCR\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1a8692edabc5149e3931b43c7bd13d74bb\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERK17TrackedInfo_Value\" title=\"TrackedInfo_Value::TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17TrackedInfo_ValueaSERK17TrackedInfo_Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_ValueaSERK17TrackedInfo_Value\">\n<span id=\"_CPPv3N17TrackedInfo_ValueaSERK17TrackedInfo_Value\"></span><span id=\"_CPPv2N17TrackedInfo_ValueaSERK17TrackedInfo_Value\"></span><span id=\"TrackedInfo_Value::assign-operator__TrackedInfo_ValueCR\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1ab70a1f319e23007c93d40fd9294996bc\"></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"../../bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"#typetracker-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypeTracker.hpp<a class=\"headerlink\" href=\"#typetracker-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Track class types abstractly to dynamically call correct function overloads. </p><p>TypeTracker is a templated class that must be declared with all of the types that can possibly be tracked. For example: <div class=\"highlight-cpp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">TypeTracker</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">double</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">tt</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</p>", "a[href=\"#_CPPv4N11TypeTrackeraSERR11TypeTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTrackeraSERR11TypeTracker\">\n<span id=\"_CPPv3N11TypeTrackeraSERR11TypeTracker\"></span><span id=\"_CPPv2N11TypeTrackeraSERR11TypeTracker\"></span><span id=\"TypeTracker::assign-operator__TypeTrackerRR\"></span><span class=\"target\" id=\"classTypeTracker_1a0450a877ddc72ecbaf56e2ac5f5beb48\"></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4IDpEN11TypeTrackerclEvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTrackerclEvDpRR2Ts\">\n<span id=\"_CPPv3IDpEN11TypeTrackerclEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN11TypeTrackerclEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a1e90063e3a6781cb923a7b732c617770\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">()</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN11TypeTrackerclEvDpRR2Ts\" title=\"TypeTracker::operator()::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call TypeTracker as a function (refers call to RunFunction) </p></dd>", "a[href=\"#_CPPv4N11TypeTracker6this_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker6this_tE\">\n<span id=\"_CPPv3N11TypeTracker6this_tE\"></span><span id=\"_CPPv2N11TypeTracker6this_tE\"></span><span class=\"target\" id=\"classTypeTracker_1ac105a30c4d272b552eef5f692fed7819\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">this_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker::TYPES\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK16TrackedInfo_Base9GetTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16TrackedInfo_Base9GetTypeIDEv\">\n<span id=\"_CPPv3NK16TrackedInfo_Base9GetTypeIDEv\"></span><span id=\"_CPPv2NK16TrackedInfo_Base9GetTypeIDEv\"></span><span id=\"TrackedInfo_Base::GetTypeIDC\"></span><span class=\"target\" id=\"structTrackedInfo__Base_1a42b8e07b6f737a7a42cc95e4b7917b43\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TypeTracker11TypeTrackerERK11TypeTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker11TypeTrackerERK11TypeTracker\">\n<span id=\"_CPPv3N11TypeTracker11TypeTrackerERK11TypeTracker\"></span><span id=\"_CPPv2N11TypeTracker11TypeTrackerERK11TypeTracker\"></span><span id=\"TypeTracker::TypeTracker__TypeTrackerCR\"></span><span class=\"target\" id=\"classTypeTracker_1a25aa9af8556919fb847c00dbf32f5eb9\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TypeTracker11TypeTrackerERK11TypeTracker\" title=\"TypeTracker::TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value6this_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value6this_tE\">\n<span id=\"_CPPv3N17TrackedInfo_Value6this_tE\"></span><span id=\"_CPPv2N17TrackedInfo_Value6this_tE\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1a742675b4fea7bcaf75eb06feeef3abca\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">this_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value::ID\"><span class=\"n\"><span class=\"pre\">ID</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N16TrackedInfo_BaseD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N16TrackedInfo_BaseD0Ev\">\n<span id=\"_CPPv3N16TrackedInfo_BaseD0Ev\"></span><span id=\"_CPPv2N16TrackedInfo_BaseD0Ev\"></span><span id=\"TrackedInfo_Base::~TrackedInfo_Base\"></span><span class=\"target\" id=\"structTrackedInfo__Base_1a87e63dafc38ac075ca17de637e843f02\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~TrackedInfo_Base</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker11AddFunctionER6this_tRK8LAMBDA_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker11AddFunctionER6this_tRK8LAMBDA_T\">\n<span id=\"_CPPv3I0EN11TypeTracker11AddFunctionERK8LAMBDA_T\"></span><span id=\"_CPPv2I0EN11TypeTracker11AddFunctionERK8LAMBDA_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LAMBDA_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a4998862274915e54da8327bd4ab09b71\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TypeTracker6this_tE\" title=\"TypeTracker::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11TypeTracker11AddFunctionER6this_tRK8LAMBDA_T\" title=\"TypeTracker::AddFunction::LAMBDA_T\"><span class=\"n\"><span class=\"pre\">LAMBDA_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new lambda function that this TypeTracker should call if the appropriate types are passed in. </p></dd>", "a[href=\"#_CPPv4NK16TrackedInfo_Base5CloneEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK16TrackedInfo_Base5CloneEv\">\n<span id=\"_CPPv3NK16TrackedInfo_Base5CloneEv\"></span><span id=\"_CPPv2NK16TrackedInfo_Base5CloneEv\"></span><span id=\"TrackedInfo_Base::CloneC\"></span><span class=\"target\" id=\"structTrackedInfo__Base_1ab092312fe8aa43f206afdc73b4c5867f\"></span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv416TrackedInfo_Base\" title=\"TrackedInfo_Base\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clone</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv410TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410TrackedVar\">\n<span id=\"_CPPv310TrackedVar\"></span><span id=\"_CPPv210TrackedVar\"></span><span id=\"TrackedVar\"></span><span class=\"target\" id=\"structTrackedVar\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></span><br/></dt><dd><p>The actual TrackedVar object that manages a Ptr to the value. </p></dd>", "a[href=\"#_CPPv4N10TrackedVaraSERR10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVaraSERR10TrackedVar\">\n<span id=\"_CPPv3N10TrackedVaraSERR10TrackedVar\"></span><span id=\"_CPPv2N10TrackedVaraSERR10TrackedVar\"></span><span id=\"TrackedVar::assign-operator__TrackedVarRR\"></span><span class=\"target\" id=\"structTrackedVar_1af38729f73da2490f7ec22c7f8253c8ad\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move assignment hands over control of the pointer. </p></dd>", "a[href=\"#_CPPv4IDpEN11TypeTracker11AddFunctionER6this_tNSt8functionIFvDp2TsEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTracker11AddFunctionER6this_tNSt8functionIFvDp2TsEEE\">\n<span id=\"_CPPv3IDpEN11TypeTracker11AddFunctionENSt8functionIFvDp2TsEEE\"></span><span id=\"_CPPv2IDpEN11TypeTracker11AddFunctionENSt8functionIFvDp2TsEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a7f2872d43809ce4412cff9808a47907b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TypeTracker6this_tE\" title=\"TypeTracker::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpEN11TypeTracker11AddFunctionER6this_tNSt8functionIFvDp2TsEEE\" title=\"TypeTracker::AddFunction::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new std::function that this TypeTracker should call if the appropriate types are passed in. </p></dd>", "a[href=\"#_CPPv4N17TrackedInfo_ValueaSERR17TrackedInfo_Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_ValueaSERR17TrackedInfo_Value\">\n<span id=\"_CPPv3N17TrackedInfo_ValueaSERR17TrackedInfo_Value\"></span><span id=\"_CPPv2N17TrackedInfo_ValueaSERR17TrackedInfo_Value\"></span><span id=\"TrackedInfo_Value::assign-operator__TrackedInfo_ValueRR\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1ad6f65a11f1009efb5245c6ccef3117b2\"></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10TrackedVaraSERK10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVaraSERK10TrackedVar\">\n<span id=\"_CPPv3N10TrackedVaraSERK10TrackedVar\"></span><span id=\"_CPPv2N10TrackedVaraSERK10TrackedVar\"></span><span id=\"TrackedVar::assign-operator__TrackedVarCR\"></span><span class=\"target\" id=\"structTrackedVar_1ab31ce2bb938d1dbfd45c48f57bfda559\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">=</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Move assignment hands over control of the pointer. </p></dd>", "a[href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE17TrackedInfo_Value\">\n<span id=\"_CPPv3I0_6size_tE17TrackedInfo_Value\"></span><span id=\"_CPPv2I0_6size_tE17TrackedInfo_Value\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ID</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTrackedInfo__Value\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv416TrackedInfo_Base\" title=\"TrackedInfo_Base\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></a><br/></dt><dd><p>TrackedInfo_Value store both the real type and an ID for it (to be identified from the base class for each conversion back.) </p></dd>", "a[href=\"#_CPPv4IDpEN11TypeTracker11RunFunctionEvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTracker11RunFunctionEvDpRR2Ts\">\n<span id=\"_CPPv3IDpEN11TypeTracker11RunFunctionEDpRR2Ts\"></span><span id=\"_CPPv2IDpEN11TypeTracker11RunFunctionEDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1af30f84ef83d715218410ec5ac2bbfa03\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RunFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpEN11TypeTracker11RunFunctionEvDpRR2Ts\" title=\"TypeTracker::RunFunction::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the appropriate function based on the argument types received. </p></dd>", "a[href=\"#_CPPv4IDpEN11TypeTracker17GetTrackedComboIDE6size_tDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTracker17GetTrackedComboIDE6size_tDpRK2Ts\">\n<span id=\"_CPPv3IDpEN11TypeTracker17GetTrackedComboIDEDpRK2Ts\"></span><span id=\"_CPPv2IDpEN11TypeTracker17GetTrackedComboIDEDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a7d792118e805c74cd3d488104668c1d3\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTrackedComboID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpEN11TypeTracker17GetTrackedComboIDE6size_tDpRK2Ts\" title=\"TypeTracker::GetTrackedComboID::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ARGS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A tracked COMBO ID, is an ID for this combination of types, unique among all possible type combinations. Consistent with GetComboID with the same underlying types. </p></dd>", "a[href=\"#_CPPv4IDpE11TypeTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11TypeTracker\">\n<span id=\"_CPPv3IDpE11TypeTracker\"></span><span id=\"_CPPv2IDpE11TypeTracker\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></span><br/></dt><dd><p>Dynamic functions that are indexed by parameter types; calls lookup the correct function to forward arguments into. </p></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker6ToTypeE6REAL_TR10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker6ToTypeE6REAL_TR10TrackedVar\">\n<span id=\"_CPPv3I0EN11TypeTracker6ToTypeER10TrackedVar\"></span><span id=\"_CPPv2I0EN11TypeTracker6ToTypeER10TrackedVar\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1added9e12a8e92a9f8a03d011fdb632e3\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11TypeTracker6ToTypeE6REAL_TR10TrackedVar\" title=\"TypeTracker::ToType::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToType</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert the tracked type back to REAL_T. Assert that this is type safe! </p></dd>", "a[href=\"#_CPPv4NK10TrackedVar9GetTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK10TrackedVar9GetTypeIDEv\">\n<span id=\"_CPPv3NK10TrackedVar9GetTypeIDEv\"></span><span id=\"_CPPv2NK10TrackedVar9GetTypeIDEv\"></span><span id=\"TrackedVar::GetTypeIDC\"></span><span class=\"target\" id=\"structTrackedVar_1a639529ef677ccde44e98de094c81a956\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker4CastE5OUT_TR10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker4CastE5OUT_TR10TrackedVar\">\n<span id=\"_CPPv3I0EN11TypeTracker4CastER10TrackedVar\"></span><span id=\"_CPPv2I0EN11TypeTracker4CastER10TrackedVar\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OUT_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a8d4b0638b4bc48e3d8160367e6f40c85\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11TypeTracker4CastE5OUT_TR10TrackedVar\" title=\"TypeTracker::Cast::OUT_T\"><span class=\"n\"><span class=\"pre\">OUT_T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cast</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Cast the tracked type to OUT_T. Try to do so even if NOT original type! </p></dd>", "a[href=\"../../functional/api/GenericFunction.html#_CPPv415GenericFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415GenericFunction\">\n<span id=\"_CPPv315GenericFunction\"></span><span id=\"_CPPv215GenericFunction\"></span><span id=\"GenericFunction\"></span><span class=\"target\" id=\"classGenericFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenericFunction</span></span></span><br/></dt><dd><p>The Function templated class behaves almost identically to std::function, but can be reduced to the GenericFunction base class which is NOT templated.</p><p>An GenericFunction object can be converted back into the derived type with the .Convert&lt;return(args\u2026)&gt;() member function. </p><p>Subclassed by Function&lt; RETURN(PARAMS\u2026)&gt;</p></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERR6REAL_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERR6REAL_T\">\n<span id=\"_CPPv3N17TrackedInfo_Value17TrackedInfo_ValueERR6REAL_T\"></span><span id=\"_CPPv2N17TrackedInfo_Value17TrackedInfo_ValueERR6REAL_T\"></span><span id=\"TrackedInfo_Value::TrackedInfo_Value__REAL_TRR\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1ab0cb7ab7f06967cdef6d553deb50daae\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4IDpEN11TypeTracker11AddFunctionER6this_tPFvDp2TsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTracker11AddFunctionER6this_tPFvDp2TsE\">\n<span id=\"_CPPv3IDpEN11TypeTracker11AddFunctionEPFvDp2TsE\"></span><span id=\"_CPPv2IDpEN11TypeTracker11AddFunctionEPFvDp2TsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a751bccfb488a8ed367afb11ee41b83cc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N11TypeTracker6this_tE\" title=\"TypeTracker::this_t\"><span class=\"n\"><span class=\"pre\">this_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddFunction</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpEN11TypeTracker11AddFunctionER6this_tPFvDp2TsE\" title=\"TypeTracker::AddFunction::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Add a new function pointer that this TypeTracker should call if the appropriate types are passed in. </p></dd>", "a[href=\"#_CPPv4N10TrackedVar3ptrE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVar3ptrE\">\n<span id=\"_CPPv3N10TrackedVar3ptrE\"></span><span id=\"_CPPv2N10TrackedVar3ptrE\"></span><span id=\"TrackedVar::ptr__Ptr:TrackedInfo_Base:\"></span><span class=\"target\" id=\"structTrackedVar_1a4b4c8976220b9ae3472010118fd20242\"></span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv416TrackedInfo_Base\" title=\"TrackedInfo_Base\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4IDpEN11TypeTracker12GetTrackedIDE6size_tRK10TrackedVarRK10TrackedVarDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpEN11TypeTracker12GetTrackedIDE6size_tRK10TrackedVarRK10TrackedVarDpRK2Ts\">\n<span id=\"_CPPv3IDpEN11TypeTracker12GetTrackedIDERK10TrackedVarRK10TrackedVarDpRK2Ts\"></span><span id=\"_CPPv2IDpEN11TypeTracker12GetTrackedIDERK10TrackedVarRK10TrackedVarDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1adc5b5d249acf4054efe09defce31ad65\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTrackedID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tt1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tt2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpEN11TypeTracker12GetTrackedIDE6size_tRK10TrackedVarRK10TrackedVarDpRK2Ts\" title=\"TypeTracker::GetTrackedID::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ARGS</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Or set of types being tracked\u2026 </p></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker5GetIDE6size_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker5GetIDE6size_tv\">\n<span id=\"_CPPv3I0EN11TypeTracker5GetIDEv\"></span><span id=\"_CPPv2I0EN11TypeTracker5GetIDEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a5ebbd351b242f5c2c84410c82bb926f0\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Each type should have a unique ID. </p></dd>", "a[href=\"#_CPPv4N11TypeTracker11TypeTrackerERR11TypeTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker11TypeTrackerERR11TypeTracker\">\n<span id=\"_CPPv3N11TypeTracker11TypeTrackerERR11TypeTracker\"></span><span id=\"_CPPv2N11TypeTracker11TypeTrackerERR11TypeTracker\"></span><span id=\"TypeTracker::TypeTracker__TypeTrackerRR\"></span><span class=\"target\" id=\"classTypeTracker_1ad6ca1eae805f15577ee36c75050a4e28\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N11TypeTracker11TypeTrackerERR11TypeTracker\" title=\"TypeTracker::TypeTracker\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"../../meta/api/meta.html#_CPPv4I0DpE14get_type_indexiv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE14get_type_indexiv\">\n<span id=\"_CPPv3I0DpE14get_type_indexv\"></span><span id=\"_CPPv2I0DpE14get_type_indexv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aa489f8fffe5aacfab381ca82cc30babf\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">get_type_index</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10TrackedVar10TrackedVarE3PtrI16TrackedInfo_BaseE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVar10TrackedVarE3PtrI16TrackedInfo_BaseE\">\n<span id=\"_CPPv3N10TrackedVar10TrackedVarE3PtrI16TrackedInfo_BaseE\"></span><span id=\"_CPPv2N10TrackedVar10TrackedVarE3PtrI16TrackedInfo_BaseE\"></span><span id=\"TrackedVar::TrackedVar__Ptr:TrackedInfo_Base:\"></span><span class=\"target\" id=\"structTrackedVar_1a4f4f2d3615f272c21f5e9b1c62e82f1c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv416TrackedInfo_Base\" title=\"TrackedInfo_Base\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_ptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TypeTracker12GetCumCombosE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker12GetCumCombosE6size_t\">\n<span id=\"_CPPv3N11TypeTracker12GetCumCombosE6size_t\"></span><span id=\"_CPPv2N11TypeTracker12GetCumCombosE6size_t\"></span><span id=\"TypeTracker::GetCumCombos__sCE\"></span><span class=\"target\" id=\"classTypeTracker_1a08f8447cccf2413b40970b98de31f3ca\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetCumCombos</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vals</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>How many combinations are the of the given number of types OR FEWER? </p></dd>", "a[href=\"#_CPPv4NK17TrackedInfo_Value5CloneEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17TrackedInfo_Value5CloneEv\">\n<span id=\"_CPPv3NK17TrackedInfo_Value5CloneEv\"></span><span id=\"_CPPv2NK17TrackedInfo_Value5CloneEv\"></span><span id=\"TrackedInfo_Value::CloneC\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1a2ac9be828cd9cb8f6b219f6ebf47d158\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv416TrackedInfo_Base\" title=\"TrackedInfo_Base\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Clone</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd><p>Build a copy of this TrackedInfo_Value; recipient is in charge of deletion. </p></dd>", "a[href=\"#_CPPv4N11TypeTracker11GetNumTypesEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker11GetNumTypesEv\">\n<span id=\"_CPPv3N11TypeTracker11GetNumTypesEv\"></span><span id=\"_CPPv2N11TypeTracker11GetNumTypesEv\"></span><span id=\"TypeTracker::GetNumTypesCE\"></span><span class=\"target\" id=\"classTypeTracker_1afcb30662a1ed0b1a717a6477950591c9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNumTypes</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>How many types are we working with? </p></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERK6REAL_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERK6REAL_T\">\n<span id=\"_CPPv3N17TrackedInfo_Value17TrackedInfo_ValueERK6REAL_T\"></span><span id=\"_CPPv2N17TrackedInfo_Value17TrackedInfo_ValueERK6REAL_T\"></span><span id=\"TrackedInfo_Value::TrackedInfo_Value__REAL_TCR\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1a2fe84dde75ca2b2ff8d3a50561db19f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N10TrackedVarD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVarD0Ev\">\n<span id=\"_CPPv3N10TrackedVarD0Ev\"></span><span id=\"_CPPv2N10TrackedVarD0Ev\"></span><span id=\"TrackedVar::~TrackedVar\"></span><span class=\"target\" id=\"structTrackedVar_1a077034b006ce5eedfadefcb2c3f49fd6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~TrackedVar</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Cleanup ptr on destruct. </p></dd>", "a[href=\"#_CPPv4N11TypeTracker11TypeTrackerEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker11TypeTrackerEv\">\n<span id=\"_CPPv3N11TypeTracker11TypeTrackerEv\"></span><span id=\"_CPPv2N11TypeTracker11TypeTrackerEv\"></span><span id=\"TypeTracker::TypeTracker\"></span><span class=\"target\" id=\"classTypeTracker_1a2cf4921b91df8cd213ddd95e08c505da\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv416TrackedInfo_Base\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416TrackedInfo_Base\">\n<span id=\"_CPPv316TrackedInfo_Base\"></span><span id=\"_CPPv216TrackedInfo_Base\"></span><span id=\"TrackedInfo_Base\"></span><span class=\"target\" id=\"structTrackedInfo__Base\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></span><br/></dt><dd><p>The proxy base class of any type to be tracked. </p><p>Subclassed by TrackedInfo_Value&lt; REAL_T, ID &gt;</p></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value5valueE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value5valueE\">\n<span id=\"_CPPv3N17TrackedInfo_Value5valueE\"></span><span id=\"_CPPv2N17TrackedInfo_Value5valueE\"></span><span id=\"TrackedInfo_Value::value__REAL_T\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1ae2cb064e90afa74c70d42202e8e4e9a2\"></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value</span></span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TypeTracker12GetTrackedIDERK10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker12GetTrackedIDERK10TrackedVar\">\n<span id=\"_CPPv3N11TypeTracker12GetTrackedIDERK10TrackedVar\"></span><span id=\"_CPPv2N11TypeTracker12GetTrackedIDERK10TrackedVar\"></span><span id=\"TypeTracker::GetTrackedID__TrackedVarCR\"></span><span class=\"target\" id=\"classTypeTracker_1a98254485be279d352941475ee5276a17\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTrackedID</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A Tracked ID is simply the unique ID of the type being tracked. </p></dd>", "a[href=\"#_CPPv4I00DpEN11TypeTracker5GetIDE6size_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpEN11TypeTracker5GetIDE6size_tv\">\n<span id=\"_CPPv3I00DpEN11TypeTracker5GetIDEv\"></span><span id=\"_CPPv2I00DpEN11TypeTracker5GetIDEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a71bb6dbc54f132b022deab3f14005763\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Each set of types should have an ID unique within that number of types. </p></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value6real_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value6real_tE\">\n<span id=\"_CPPv3N17TrackedInfo_Value6real_tE\"></span><span id=\"_CPPv2N17TrackedInfo_Value6real_tE\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1a0a8bb6b7851aab889ea60a777c85e8ef\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">real_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker9var_decoyE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker9var_decoyE\">\n<span id=\"_CPPv3I0EN11TypeTracker9var_decoyE\"></span><span id=\"_CPPv2I0EN11TypeTracker9var_decoyE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a98e63286eca91405ac9739c35e2a235e\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">var_decoy</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><br/></dt><dd><p>var_decoy converts any variable into a TrackedVar (used to have correct number of vars) </p></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker6IsTypeEbR10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker6IsTypeEbR10TrackedVar\">\n<span id=\"_CPPv3I0EN11TypeTracker6IsTypeER10TrackedVar\"></span><span id=\"_CPPv2I0EN11TypeTracker6IsTypeER10TrackedVar\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1ae8ba84ca23e26902b1170265b03269b5\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsType</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tt</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if the tracked type is TEST_T. </p></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker6wrap_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker6wrap_tE\">\n<span id=\"_CPPv3I0EN11TypeTracker6wrap_tE\"></span><span id=\"_CPPv2I0EN11TypeTracker6wrap_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a759da065444e04721eb5d0a2fa2e6121\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">wrap_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE17TrackedInfo_Value\" title=\"TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0EN11TypeTracker6wrap_tE\" title=\"TypeTracker::wrap_t::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../meta/api/meta.html#_CPPv4I0DpE14get_type_indexiv\" title=\"get_type_index\"><span class=\"n\"><span class=\"pre\">get_type_index</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0EN11TypeTracker6wrap_tE\" title=\"TypeTracker::wrap_t::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE11TypeTracker\" title=\"TypeTracker::TYPES\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4I0EN11TypeTracker7ConvertE10TrackedVarRK6REAL_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0EN11TypeTracker7ConvertE10TrackedVarRK6REAL_T\">\n<span id=\"_CPPv3I0EN11TypeTracker7ConvertERK6REAL_T\"></span><span id=\"_CPPv2I0EN11TypeTracker7ConvertERK6REAL_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker_1a074f541f3a111e3fd6b91f25708f9edd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410TrackedVar\" title=\"TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Convert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN11TypeTracker7ConvertE10TrackedVarRK6REAL_T\" title=\"TypeTracker::Convert::REAL_T\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an input value into a TrackedInfo_Value maintaining the value (universal version) </p></dd>", "a[href=\"#_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERR17TrackedInfo_Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERR17TrackedInfo_Value\">\n<span id=\"_CPPv3N17TrackedInfo_Value17TrackedInfo_ValueERR17TrackedInfo_Value\"></span><span id=\"_CPPv2N17TrackedInfo_Value17TrackedInfo_ValueERR17TrackedInfo_Value\"></span><span id=\"TrackedInfo_Value::TrackedInfo_Value__TrackedInfo_ValueRR\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1a067e9414c6dd16a72fae37e94645885b\"></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4N17TrackedInfo_Value17TrackedInfo_ValueERR17TrackedInfo_Value\" title=\"TrackedInfo_Value::TrackedInfo_Value\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">default</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4NK17TrackedInfo_Value9GetTypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK17TrackedInfo_Value9GetTypeIDEv\">\n<span id=\"_CPPv3NK17TrackedInfo_Value9GetTypeIDEv\"></span><span id=\"_CPPv2NK17TrackedInfo_Value9GetTypeIDEv\"></span><span id=\"TrackedInfo_Value::GetTypeIDC\"></span><span class=\"target\" id=\"structTrackedInfo__Value_1ad59d88730c36e7be5e65023c6b227f97\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">override</span></span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TypeTrackerD0Ev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTrackerD0Ev\">\n<span id=\"_CPPv3N11TypeTrackerD0Ev\"></span><span id=\"_CPPv2N11TypeTrackerD0Ev\"></span><span id=\"TypeTracker::~TypeTracker\"></span><span class=\"target\" id=\"classTypeTracker_1af54e552db4b0d07b2b881fceccf8cd1a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">~TypeTracker</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"#_CPPv4N11TypeTracker7fun_mapE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker7fun_mapE\">\n<span id=\"_CPPv3N11TypeTracker7fun_mapE\"></span><span id=\"_CPPv2N11TypeTracker7fun_mapE\"></span><span id=\"TypeTracker::fun_map__std::unordered_map:s.Ptr:GenericFunction::\"></span><span class=\"target\" id=\"classTypeTracker_1a94b75adcbc145c0fe4e093c66bdb8ea3\"></span><a class=\"reference internal\" href=\"../../bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"../../functional/api/GenericFunction.html#_CPPv415GenericFunction\" title=\"GenericFunction\"><span class=\"n\"><span class=\"pre\">GenericFunction</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_map</span></span></span><br/></dt><dd><p>fun_map is a hash table that maps a set of inputs to the appropriate function. </p></dd>", "a[href=\"#_CPPv4N11TypeTracker12GetNumCombosE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N11TypeTracker12GetNumCombosE6size_t\">\n<span id=\"_CPPv3N11TypeTracker12GetNumCombosE6size_t\"></span><span id=\"_CPPv2N11TypeTracker12GetNumCombosE6size_t\"></span><span id=\"TypeTracker::GetNumCombos__sCE\"></span><span class=\"target\" id=\"classTypeTracker_1af41c25271061cb85f1652dc30bd3c5d6\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetNumCombos</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vals</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>How many combinations of V types are there? </p></dd>", "a[href=\"#_CPPv4N10TrackedVar10TrackedVarERK10TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N10TrackedVar10TrackedVarERK10TrackedVar\">\n<span id=\"_CPPv3N10TrackedVar10TrackedVarERK10TrackedVar\"></span><span id=\"_CPPv2N10TrackedVar10TrackedVarERK10TrackedVar\"></span><span id=\"TrackedVar::TrackedVar__TrackedVarCR\"></span><span class=\"target\" id=\"structTrackedVar_1aadaf661ae891a9f7d035086dccaaf6e4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N10TrackedVar10TrackedVarERK10TrackedVar\" title=\"TrackedVar::TrackedVar\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy constructor; use judiciously since it copies the contents! </p></dd>", "a[href=\"../../base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
