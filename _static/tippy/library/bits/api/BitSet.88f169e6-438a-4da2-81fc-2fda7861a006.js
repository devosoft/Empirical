selector_to_html = {"a[href=\"#_CPPv4I_6size_tEN3old6BitSetE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tEN3old6BitSetE\">\n<span id=\"_CPPv3I_6size_tEN3old6BitSetE\"></span><span id=\"_CPPv2I_6size_tEN3old6BitSetE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"namespaceold_1ac56784bf29919b9528adae560730d573\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"BitArray.html#_CPPv43old\" title=\"old\"><span class=\"n\"><span class=\"pre\">old</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"BitArray.html#_CPPv4I_6size_t_bEN3old8BitArrayE\" title=\"old::BitArray\"><span class=\"n\"><span class=\"pre\">BitArray</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tEN3old6BitSetE\" title=\"old::BitSet::NUM_BITS\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"BitArray.html#_CPPv43old\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43old\">\n<span id=\"_CPPv33old\"></span><span id=\"_CPPv23old\"></span><span id=\"old\"></span><span class=\"target\" id=\"namespaceold\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">old</span></span></span><br/></dt><dd></dd>", "a[href=\"BitArray.html#_CPPv4I_6size_t_bEN3old8BitArrayE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t_bEN3old8BitArrayE\">\n<span id=\"_CPPv3I_6size_t_bEN3old8BitArrayE\"></span><span id=\"_CPPv2I_6size_t_bEN3old8BitArrayE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ZERO_LEFT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classold_1_1BitArray\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitArray</span></span></span><br/></dt><dd><p>A fixed-sized (but arbitrarily large) array of bits, and optimizes operations on those bits to be as fast as possible. </p></dd>", "a[href=\"#bitset-hpp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BitSet.hpp<a class=\"headerlink\" href=\"#bitset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in replacement for std::bitset, with additional bit magic features; aliases BitArray. Status: RELEASE. </p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
