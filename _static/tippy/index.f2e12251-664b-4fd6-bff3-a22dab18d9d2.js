selector_to_html = {"a[href=\"library/math/api/constants.html#_CPPv48MAX_UINT\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48MAX_UINT\">\n<span id=\"_CPPv38MAX_UINT\"></span><span id=\"_CPPv28MAX_UINT\"></span><span id=\"MAX_UINT__uint32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1aabe2de513bd3288a21e93dbc1a4be79d\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_UINT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4294967295</span></span><br/></dt><dd><p>(2^32 - 1) </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/MemoryImage.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MemoryImage.hpp<a class=\"headerlink\" href=\"#memoryimage-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A managed set of Bytes to store any kind of data. </p>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE24ApproxSingleStreakMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE24ApproxSingleStreakMetric\">\n<span id=\"_CPPv3I_6size_tE24ApproxSingleStreakMetric\"></span><span id=\"_CPPv2I_6size_tE24ApproxSingleStreakMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structApproxSingleStreakMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ApproxSingleStreakMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE24ApproxSingleStreakMetric\" title=\"ApproxSingleStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE24ApproxSingleStreakMetric\" title=\"ApproxSingleStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Matches based on longest streaks of equal bits in two bitsets. This implementation uses Incorrect Math from Downing\u2019s Intelligence Emerging. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\">\n<span id=\"_CPPv3I0E3SumR1C\"></span><span id=\"_CPPv2I0E3SumR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a2335c0dd94cb091a55d370cdfcd02378\"></span><a class=\"reference internal\" href=\"library/meta/api/type_traits.html#_CPPv4I0E15remove_ptr_type\" title=\"remove_ptr_type\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\" title=\"Sum::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sum</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3SumN15remove_ptr_typeIN1C10value_typeEE4typeER1C\" title=\"Sum::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate sum of the values in a container; if pointers to scalars, convert to scalar type. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv4IDpE6NotifyvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE6NotifyvDpRR2Ts\">\n<span id=\"_CPPv3IDpE6NotifyDpRR2Ts\"></span><span id=\"_CPPv2IDpE6NotifyDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1abf52c8f0b70c993c35c29b028739e970\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Notify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE6NotifyvDpRR2Ts\" title=\"Notify::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Send information to a program user (via standard error in native mode, or alert in Emscripten) </p></dd>", "a[href=\"library/meta/api/FunInfo.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">FunInfo.hpp<a class=\"headerlink\" href=\"#funinfo-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wrap a function to provide more information about it. </p><p>FunInfo will collect information about a provided function and facilitate manipulations.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E10to_literalNSt9enable_ifIXntN10IsIterableI1TE5valueEENSt6stringEE4typeERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10to_literalNSt9enable_ifIXntN10IsIterableI1TE5valueEENSt6stringEE4typeERK1T\">\n<span id=\"_CPPv3I0E10to_literalRK1T\"></span><span id=\"_CPPv2I0E10to_literalRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1afe3426b3e4493589e86f8de519bf1197\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">!</span></span><a class=\"reference internal\" href=\"library/meta/api/type_traits.html#_CPPv4I0E10IsIterable\" title=\"IsIterable\"><span class=\"n\"><span class=\"pre\">IsIterable</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10to_literalNSt9enable_ifIXntN10IsIterableI1TE5valueEENSt6stringEE4typeERK1T\" title=\"to_literal::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_literal</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E10to_literalNSt9enable_ifIXntN10IsIterableI1TE5valueEENSt6stringEE4typeERK1T\" title=\"to_literal::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a value and convert it to a C++-style literal. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0DpE13is_emp_vectorI6vectorI1TDp2TsEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE13is_emp_vectorI6vectorI1TDp2TsEE\">\n<span id=\"_CPPv3I0DpE13is_emp_vectorI6vectorI1TDp2TsEE\"></span><span id=\"_CPPv2I0DpE13is_emp_vectorI6vectorI1TDp2TsEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__emp__vector_3_01vector_3_01T_00_01Ts_8_8_8_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_emp_vector</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13is_emp_vectorI6vectorI1TDp2TsEE\" title=\"is_emp_vector&lt;vector&lt;T, Ts...&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13is_emp_vectorI6vectorI1TDp2TsEE\" title=\"is_emp_vector&lt;vector&lt;T, Ts...&gt;&gt;::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/CanvasAction.html#_CPPv412CanvasAction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CanvasAction\">\n<span id=\"_CPPv312CanvasAction\"></span><span id=\"_CPPv212CanvasAction\"></span><span id=\"CanvasAction\"></span><span class=\"target\" id=\"classCanvasAction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasAction</span></span></span><br/></dt><dd><p>Base class to maintain canvas actions. </p><p>Subclassed by CanvasFont, CanvasImage, CanvasRotate, CanvasShape, CanvasStrokeColor</p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0DpDpE12TruncateCallDaNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpDpE12TruncateCallDaNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\">\n<span id=\"_CPPv3I0DpDpE12TruncateCallNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\"></span><span id=\"_CPPv2I0DpDpE12TruncateCallNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a03718d081f6b34e84529cf5628772160\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TruncateCall</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpDpE12TruncateCallDaNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\" title=\"TruncateCall::R\"><span class=\"n\"><span class=\"pre\">R</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpDpE12TruncateCallDaNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\" title=\"TruncateCall::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpDpE12TruncateCallDaNSt8functionIF1RDp6PARAMSEEEDpRR4ARGS\" title=\"TruncateCall::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/functional/api/memo_function.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">memo_function.hpp<a class=\"headerlink\" href=\"#memo-function-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A function that memorizes previous results to speed up any repeated calls. </p>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv411FindExampleRK3DFAK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411FindExampleRK3DFAK6size_t\">\n<span id=\"_CPPv311FindExampleRK3DFAK6size_t\"></span><span id=\"_CPPv211FindExampleRK3DFAK6size_t\"></span><span id=\"FindExample__DFACR.sC\"></span><span class=\"target\" id=\"group__lexer__utilities_1gac560765f5cef36272a32a17f19186764\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindExample</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dfa</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Method to find an example string that satisfies a DFA. </p></dd>", "a[href=\"library/in_progress/api/BatchConfig.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BatchConfig.hpp<a class=\"headerlink\" href=\"#batchconfig-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/math/api/stats.html#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E9MinResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E9MinResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a3940dab91227be97620f448ab9a24361\"></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MinResult</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E9MinResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MinResult::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return the MINIMUM result. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I_6size_t0E13int_bit_count\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E13int_bit_count\">\n<span id=\"_CPPv3I_6size_t0E13int_bit_count\"></span><span id=\"_CPPv2I_6size_t0E13int_bit_count\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BIT_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DEFAULT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structint__bit__count\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_bit_count</span></span></span><br/></dt><dd><p>Figure out which type is an integer with a specified number of bits. </p></dd>", "a[href=\"library/bits/api/Bits_Data.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bits_Data.hpp<a class=\"headerlink\" href=\"#bits-data-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Helper class to handle memory management for Bits objects. </p><p>\nBits_Data handles the actual bits inside of the Bits class. Bits itself provides many tools to operate on that data. </p>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E10bool_decoy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10bool_decoy\">\n<span id=\"_CPPv3I0E10bool_decoy\"></span><span id=\"_CPPv2I0E10bool_decoy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1ae15fe332f1afad616012ac89e51db11c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bool_decoy</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><br/></dt><dd></dd>", "a[href=\"library/geometry/api/Angle2D.html#_CPPv412sin_chart_1K\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412sin_chart_1K\">\n<span id=\"_CPPv312sin_chart_1K\"></span><span id=\"_CPPv212sin_chart_1K\"></span><span id=\"sin_chart_1K__int32_tCA\"></span><span class=\"target\" id=\"Angle2D_8hpp_1a344a590d053d78c5c31d9ecf94e62a06\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sin_chart_1K</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">25</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">75</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">125</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">150</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">175</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">200</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">224</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">249</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">273</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">297</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">321</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">345</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">369</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">392</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">415</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">438</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">460</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">483</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">505</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">526</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">548</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">569</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">590</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">610</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">630</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">650</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">669</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">688</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">706</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">724</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">742</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">759</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">775</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">792</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">807</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">822</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">837</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">851</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">865</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">878</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">891</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">903</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">915</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">926</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">936</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">946</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">955</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">964</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">972</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">980</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">987</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">993</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">999</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1004</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1009</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1013</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1016</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1019</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1021</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1021</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1019</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1016</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1013</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1009</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1004</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">999</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">993</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">987</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">980</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">972</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">964</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">955</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">946</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">936</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">926</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">915</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">903</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">891</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">878</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">865</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">851</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">837</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">822</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">807</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">792</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">775</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">759</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">742</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">724</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">706</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">688</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">669</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">650</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">630</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">610</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">590</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">569</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">548</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">526</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">505</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">483</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">460</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">438</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">415</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">392</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">369</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">345</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">321</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">297</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">273</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">249</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">224</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">200</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">175</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">150</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">125</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">75</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">25</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">24</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">49</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">74</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">99</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">124</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">149</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">174</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">199</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">223</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">248</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">272</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">296</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">320</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">344</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">368</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">391</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">414</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">437</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">459</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">482</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">504</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">525</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">547</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">568</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">589</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">609</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">629</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">649</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">668</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">687</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">705</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">723</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">741</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">758</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">774</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">791</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">806</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">821</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">836</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">850</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">864</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">877</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">890</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">902</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">914</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">925</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">935</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">945</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">954</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">963</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">971</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">979</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">986</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">992</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">998</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1003</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1008</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1012</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1015</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1018</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1020</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1022</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1022</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1020</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1018</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1015</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1012</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1008</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1003</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">998</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">992</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">986</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">979</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">971</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">963</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">954</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">945</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">935</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">925</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">914</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">902</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">890</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">877</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">864</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">850</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">836</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">821</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">806</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">791</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">774</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">758</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">741</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">723</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">705</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">687</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">668</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">649</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">629</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">609</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">589</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">568</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">547</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">525</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">504</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">482</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">459</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">437</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">414</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">391</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">368</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">344</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">320</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">296</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">272</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">248</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">223</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">199</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">174</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">149</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">124</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">99</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">74</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">49</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">24</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv4I0_Dp4dataE8DataNode\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_Dp4dataE8DataNode\">\n<span id=\"_CPPv3I0_Dp4dataE8DataNode\"></span><span id=\"_CPPv2I0_Dp4dataE8DataNode\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MODS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDataNode\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataNode</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">DataNode_Interface</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE8DataNode\" title=\"DataNode::VAL_TYPE\"><span class=\"n\"><span class=\"pre\">VAL_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">FormatDataMods</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE8DataNode\" title=\"DataNode::MODS\"><span class=\"n\"><span class=\"pre\">MODS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">sorted</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/NK-const.html#_CPPv4I_6size_t_6size_tE16NKLandscapeConst\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t_6size_tE16NKLandscapeConst\">\n<span id=\"_CPPv3I_6size_t_6size_tE16NKLandscapeConst\"></span><span id=\"_CPPv2I_6size_t_6size_tE16NKLandscapeConst\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">K</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classNKLandscapeConst\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NKLandscapeConst</span></span></span><br/></dt><dd><p>An NK Landscape is a popular tool for studying theoretical questions about evolutionary dynamics. It is a randomly generated fitness landscape on which bitstrings can evolve. NK Landscapes have two parameters: N (the length of the bitstrings) and K (epistasis). Since you have control over the amount of epistasis, NK Landscapes are often called \u201ctunably rugged\u201d - a useful feature, since the ruggedness of the fitness landscape is thought to be important to many evolutionary dynamics. For each possible value that a site and its K neighbors to the right can have, a random fitness contribution is chosen. These contributions are summed across the bitstring. So when K = 0, each site has a single optimal value, resulting in a single smooth fitness peak.</p><p>For more information, see Kauffman and Levin, 1987 (Towards a general theory of adaptive walks on rugged landscapes).</p><p>This object handles generating and maintaining an NK fitness landscape. Note: Overly large Ns and Ks currently trigger a seg-fault, caused by trying to build a table that is larger than will fit in memory. You can use larger values of N and K (for slightly reduced speed) of you use an NKLandscape object instead. </p></dd>", "a[href=\"library/base/api/always_assert_warning.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">always_assert_warning.hpp<a class=\"headerlink\" href=\"#always-assert-warning-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A more dynamic replacement for standard library asserts. </p><p>\nA replacement for the system-level assert.h, called \u201cemp_always_assert\u201d Added functionality:<ul class=\"simple\">\n<li><p>If compiled with Emscripten, will provide pop-up alerts in a web browser.</p></li>\n<li><p>emp_assert can take additional arguments. If the assert is triggered, those extra arguments will be evaluated and printed.</p></li>\n<li><p>if EMP_TDEBUG is defined, emp_assert() goes into test mode and records failures, but does not abort. (useful for unit tests of asserts)</p></li>\n</ul>\n</p>", "a[href=\"library/web/api/Element.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Element.hpp<a class=\"headerlink\" href=\"#element-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Element Widgets maintain an ordered collection of other widgets in a HTML element with any tag (e.g., div, footer, header, p, etc.) </p><p>When printed to the web page, these internal widgets are presented in order. </p>", "a[href=\"library/meta/api/TypePack.html#_CPPv4I0_iE12TypePackFill\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_iE12TypePackFill\">\n<span id=\"_CPPv3I0_iE12TypePackFill\"></span><span id=\"_CPPv2I0_iE12TypePackFill\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypePack_8hpp_1a53e600453131e7f394300ffc5c57361f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypePackFill</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tp_pad</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IE8TypePackIE\" title=\"TypePack&lt;&gt;\"><span class=\"n\"><span class=\"pre\">TypePack</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_iE12TypePackFill\" title=\"TypePackFill::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_iE12TypePackFill\" title=\"TypePackFill::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413ANSI_NoItalicv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413ANSI_NoItalicv\">\n<span id=\"_CPPv313ANSI_NoItalicv\"></span><span id=\"_CPPv213ANSI_NoItalicv\"></span><span id=\"ANSI_NoItalic\"></span><span class=\"target\" id=\"string__utils_8hpp_1a1e8a7e36cd73b9279f896ab0564f68ae\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_NoItalic</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E7pop_bit6size_tR1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7pop_bit6size_tR1T\">\n<span id=\"_CPPv3I0E7pop_bitR1T\"></span><span id=\"_CPPv2I0E7pop_bitR1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1afbaad89467a19fe060e6468c2d8e0522\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pop_bit</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E7pop_bit6size_tR1T\" title=\"pop_bit::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the position of the first one bit AND REMOVE IT. </p></dd>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv46to_DFARK3NFAi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_DFARK3NFAi\">\n<span id=\"_CPPv36to_DFARK3NFAi\"></span><span id=\"_CPPv26to_DFARK3NFAi\"></span><span id=\"to_DFA__NFACR.i\"></span><span class=\"target\" id=\"group__lexer__utilities_1gae94b20491b436670fe9bda89bffd3df9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_DFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">nfa</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_invalid</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Systematic conversion of NFA to DFA\u2026 </p></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I00E7FunInfoIM7CLASS_TKF8RETURN_TvEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7FunInfoIM7CLASS_TKF8RETURN_TvEE\">\n<span id=\"_CPPv3I00E7FunInfoIM7CLASS_TKF8RETURN_TvEE\"></span><span id=\"_CPPv2I00E7FunInfoIM7CLASS_TKF8RETURN_TvEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CLASS_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structFunInfo_3_01RETURN__T_07CLASS__T_1_1_5_08_07_08_01const_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunInfo</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E7FunInfoIM7CLASS_TKF8RETURN_TvEE\" title=\"FunInfo&lt;RETURN_T (CLASS_T::*)() const&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E7FunInfoIM7CLASS_TKF8RETURN_TvEE\" title=\"FunInfo&lt;RETURN_T (CLASS_T::*)() const&gt;::CLASS_T\"><span class=\"n\"><span class=\"pre\">CLASS_T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/MatchBin.html#_CPPv4I000E13MatchBinState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E13MatchBinState\">\n<span id=\"_CPPv3I000E13MatchBinState\"></span><span id=\"_CPPv2I000E13MatchBinState\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Val</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tag</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Regulator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structMatchBinState\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MatchBinState</span></span></span><br/></dt><dd><p>Internal state packet for MatchBin. </p></dd>", "a[href=\"library/bits/api/Bits_Data.html#_CPPv4I_6size_tE15Bits_StaticData\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE15Bits_StaticData\">\n<span id=\"_CPPv3I_6size_tE15Bits_StaticData\"></span><span id=\"_CPPv2I_6size_tE15Bits_StaticData\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Bits__Data_8hpp_1afa45c4b423b51e527237c65cd4bfec4b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bits_StaticData</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data_Mem_Static</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE15Bits_StaticData\" title=\"Bits_StaticData::MAX_BITS\"><span class=\"n\"><span class=\"pre\">MAX_BITS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E12SetMapElitesvR5WorldI3ORGERK6vectorI6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGERK6vectorI6size_tE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGERK6vectorI6size_tE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGERK6vectorI6size_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a9142bb888208f975e04ec79960b0ffb2\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGERK6vectorI6size_tE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">trait_counts</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a MAP-Elites world, given the provided trait counts (number of bins). Requires world to already have a phenotypes that those counts are applied to. </p></dd>", "a[href=\"library/compiler/api/regex_utils.html#_CPPv4NSt15string_literalsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NSt15string_literalsE\">\n<span id=\"_CPPv3NSt15string_literalsE\"></span><span id=\"_CPPv2NSt15string_literalsE\"></span><span id=\"std::string_literals\"></span><span class=\"target\" id=\"namespacestd_1_1string__literals\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_literals</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413right_justifyRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413right_justifyRNSt6stringE\">\n<span id=\"_CPPv313right_justifyRNSt6stringE\"></span><span id=\"_CPPv213right_justifyRNSt6stringE\"></span><span id=\"right_justify__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a9c85585c1136e9dbe0462a29e0232a1d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">right_justify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all whitespace at the end of a string. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E14RotateBitsLeft1T1T6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14RotateBitsLeft1T1T6size_t\">\n<span id=\"_CPPv3I0E14RotateBitsLeft1T6size_t\"></span><span id=\"_CPPv2I0E14RotateBitsLeft1T6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a9c44054ad628f4c91e19a14b1822e40a\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E14RotateBitsLeft1T1T6size_t\" title=\"RotateBitsLeft::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RotateBitsLeft</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E14RotateBitsLeft1T1T6size_t\" title=\"RotateBitsLeft::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rotate_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/MemoryImage.html#_CPPv411MemoryImage\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MemoryImage\">\n<span id=\"_CPPv311MemoryImage\"></span><span id=\"_CPPv211MemoryImage\"></span><span id=\"MemoryImage\"></span><span class=\"target\" id=\"classMemoryImage\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MemoryImage</span></span></span><br/></dt><dd><p>A helper class for DataMap; tracks a memory image (sequence of bytes). </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt8multisetI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt8multisetI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a69c02dd6fb246dc87f81c116bcd828b2\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multiset</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt8multisetI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::multiset has a particular element without modifying the set in any way. </p></dd>", "a[href=\"library/compiler/api/Lexer.html#_CPPv49TokenInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49TokenInfo\">\n<span id=\"_CPPv39TokenInfo\"></span><span id=\"_CPPv29TokenInfo\"></span><span id=\"TokenInfo\"></span><span class=\"target\" id=\"structTokenInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenInfo</span></span></span><br/></dt><dd><p>Information about an individual TYPE of token to be processed within a Lexer. </p></dd>", "a[href=\"library/tools/api/string_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">string_utils.hpp<a class=\"headerlink\" href=\"#string-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Simple functions to manipulate strings. Status: RELEASE. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE14uint_bit_countIXL32EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE14uint_bit_countIXL32EEE\">\n<span id=\"_CPPv3IE14uint_bit_countIXL32EEE\"></span><span id=\"_CPPv2IE14uint_bit_countIX32EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structuint__bit__count_3_0132_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uint_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">32</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/InstLib.html#_CPPv49ScopeType\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49ScopeType\">\n<span id=\"_CPPv39ScopeType\"></span><span id=\"_CPPv29ScopeType\"></span><span class=\"target\" id=\"InstLib_8hpp_1a3169a8b21215d4fbbf99939d8f51c755\"></span><span class=\"k\"><span class=\"pre\">enum</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ScopeType</span></span></span><br/></dt><dd><p>ScopeType is used for scopes that we need to do something special at the end. Eg: LOOP needs to go back to beginning of loop; FUNCTION needs to return to call. </p><p><em>Values:</em></p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IDpE15variadic_concat\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE15variadic_concat\">\n<span id=\"_CPPv3IDpE15variadic_concat\"></span><span id=\"_CPPv2IDpE15variadic_concat\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadics</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__concat\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_concat</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv45Log10d\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Log10d\">\n<span id=\"_CPPv35Log10d\"></span><span id=\"_CPPv25Log10d\"></span><span id=\"Log10__doubleCE\"></span><span class=\"target\" id=\"math_8hpp_1ac79fe9a68923f2a6ae0f6eba07b7a19a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Log10</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compile-time log base 10 calculator. </p></dd>", "a[href=\"library/base/api/optional.html#_CPPv4I00DpE13make_optional8optionalI1TENSt16initializer_listI4ElemEEDpRR4Args\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE13make_optional8optionalI1TENSt16initializer_listI4ElemEEDpRR4Args\">\n<span id=\"_CPPv3I00DpE13make_optionalNSt16initializer_listI4ElemEEDpRR4Args\"></span><span id=\"_CPPv2I00DpE13make_optionalNSt16initializer_listI4ElemEEDpRR4Args\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Elem</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Args</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"optional_8hpp_1a9b6bfdf9f92115dcb397928f9a0d5118\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE13make_optional8optionalI1TENSt16initializer_listI4ElemEEDpRR4Args\" title=\"make_optional::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">make_optional</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE13make_optional8optionalI1TENSt16initializer_listI4ElemEEDpRR4Args\" title=\"make_optional::Elem\"><span class=\"n\"><span class=\"pre\">Elem</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">il</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE13make_optional8optionalI1TENSt16initializer_listI4ElemEEDpRR4Args\" title=\"make_optional::Args\"><span class=\"n\"><span class=\"pre\">Args</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/testing/api/unit_tests.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">unit_tests.hpp<a class=\"headerlink\" href=\"#unit-tests-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Macros to facilitate unit testing. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Setup proper command line color handling (probably in its own file.) </p>\n<p>Add EMP_TEST_BELOW, EMP_TEST_ABOVE, and EMP_TEST_RANGE to ensure that a value is in a certain range. </p>\n<p>Consider adding EMP_TEST_ASSERT to ensure that the contained value is true. </p>\n<p>Consider adding EMP_TEST_APPROX to compare within a tolerance level. </p>\n</dd></dl>\n</p>", "a[href=\"dev/guide-to-testing.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Guide to Testing in Empirical<a class=\"headerlink\" href=\"#guide-to-testing-in-empirical\" title=\"Link to this heading\">\uf0c1</a></h1><p>This document details how testing works in Empirical, both for writing\nand understanding tests. Empirical makes use of the <a class=\"reference external\" href=\"https://github.com/philsquared/Catch\">Catch testing\nframework</a>, the documentation of\nwhich is available\n<a class=\"reference external\" href=\"https://github.com/philsquared/Catch/blob/master/docs/Readme.md\">here</a>.</p>", "a[href=\"library/matching/api/matchbin_regulators.html#_CPPv412NopRegulator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412NopRegulator\">\n<span id=\"_CPPv312NopRegulator\"></span><span id=\"_CPPv212NopRegulator\"></span><span id=\"NopRegulator\"></span><span class=\"target\" id=\"structNopRegulator\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NopRegulator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E13RegulatorBase\" title=\"RegulatorBase\"><span class=\"n\"><span class=\"pre\">RegulatorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>This regulator does nothing! Useful for control experiments. </p></dd>", "a[href=\"QuickStartGuides/index.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Quick Start Guides<a class=\"headerlink\" href=\"#quick-start-guides\" title=\"Link to this heading\">\uf0c1</a></h1><p>Contents:</p>", "a[href=\"library/tools/api/String.html#_CPPv411MakeEscapedRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeEscapedRK6String\">\n<span id=\"_CPPv311MakeEscapedRK6String\"></span><span id=\"_CPPv211MakeEscapedRK6String\"></span><span id=\"MakeEscaped__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1adbf4e52ed1d6624228ec7163ba1aabca\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeEscaped</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/config.html#_CPPv411ConfigEntry\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ConfigEntry\">\n<span id=\"_CPPv311ConfigEntry\"></span><span id=\"_CPPv211ConfigEntry\"></span><span id=\"ConfigEntry\"></span><span class=\"target\" id=\"classConfigEntry\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConfigEntry</span></span></span><br/></dt><dd><p>Base class for all configuration settings. </p><p>Subclassed by Config::ConfigLiveEntry, Config::tConfigConstEntry&lt; VAR_TYPE &gt;, Config::tConfigEntry&lt; VAR_TYPE &gt;</p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE00E12element_typeI4TMPLI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE00E12element_typeI4TMPLI1TEE\">\n<span id=\"_CPPv3IIDpE00E12element_typeI4TMPLI1TEE\"></span><span id=\"_CPPv2IIDpE00E12element_typeI4TMPLI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TMPL</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structelement__type_3_01TMPL_3_01T_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">element_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE00E12element_typeI4TMPLI1TEE\" title=\"element_type&lt;TMPL&lt;T&gt;&gt;::TMPL\"><span class=\"n\"><span class=\"pre\">TMPL</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE00E12element_typeI4TMPLI1TEE\" title=\"element_type&lt;TMPL&lt;T&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE20AsymmetricWrapMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE20AsymmetricWrapMetric\">\n<span id=\"_CPPv3I_6size_tE20AsymmetricWrapMetric\"></span><span id=\"_CPPv2I_6size_tE20AsymmetricWrapMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAsymmetricWrapMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsymmetricWrapMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE20AsymmetricWrapMetric\" title=\"AsymmetricWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE20AsymmetricWrapMetric\" title=\"AsymmetricWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>BitSet-based implementation of NextUpMetric. Adapted from Spector, Lee, et al. \u201cTag-based modules in genetic programming.\u201d Proceedings of the 13th annual conference on Genetic and evolutionary computation. ACM, 2011. </p></dd>", "a[href=\"library/bits/api/BitMatrix.html#_CPPv4I_6size_t_6size_tE9BitMatrix\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t_6size_tE9BitMatrix\">\n<span id=\"_CPPv3I_6size_t_6size_tE9BitMatrix\"></span><span id=\"_CPPv2I_6size_t_6size_tE9BitMatrix\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">COLS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ROWS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBitMatrix\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitMatrix</span></span></span><br/></dt><dd><p>A simple class to manage a COLS x ROWS matrix of bits.</p><p>Bits are translated to a bitset with 0 in the upper left and moving through bits from left to right and top to bottom. For example, the indices in a 3x3 bit matrix would be organized as such:</p><p>0 1 2 3 4 5 6 7 8 </p></dd>", "a[href=\"library/bits/api/BitArray.html#_CPPv43old\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43old\">\n<span id=\"_CPPv33old\"></span><span id=\"_CPPv23old\"></span><span id=\"old\"></span><span class=\"target\" id=\"namespaceold\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">old</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/IndexSet.html#_CPPv48IndexSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48IndexSet\">\n<span id=\"_CPPv38IndexSet\"></span><span id=\"_CPPv28IndexSet\"></span><span id=\"IndexSet\"></span><span class=\"target\" id=\"classIndexSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexSet</span></span></span><br/></dt><dd><p>IndexSet maintains a collection of indices that can be easily manipulated. It will try to adjust representation to maintain speed and memory efficiency. </p></dd>", "a[href=\"library/datastructs/api/IndexSet.html#_CPPv49IndexBits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49IndexBits\">\n<span id=\"_CPPv39IndexBits\"></span><span id=\"_CPPv29IndexBits\"></span><span id=\"IndexBits\"></span><span class=\"target\" id=\"classIndexBits\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexBits</span></span></span><br/></dt><dd><p>A class to maintain a set of indices with a bit vector to represent them. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv411MakeTrimmed6StringRK7CharSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeTrimmed6StringRK7CharSet\">\n<span id=\"_CPPv311MakeTrimmed6StringRK7CharSet\"></span><span id=\"_CPPv211MakeTrimmed6StringRK7CharSet\"></span><span id=\"MakeTrimmed__String.CharSetCR\"></span><span class=\"target\" id=\"String_8hpp_1a87826a33ca257e51b1800502d43cfc34\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeTrimmed</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">chars</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove chars from the beginning AND end of a string. </p></dd>", "a[href=\"library/web/api/JSWrap.html#_CPPv4I0E6JSWrap6size_tRK8FUN_TYPERKNSt6stringEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6JSWrap6size_tRK8FUN_TYPERKNSt6stringEb\">\n<span id=\"_CPPv3I0E6JSWrapRK8FUN_TYPERKNSt6stringEb\"></span><span id=\"_CPPv2I0E6JSWrapRK8FUN_TYPERKNSt6stringEb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"JSWrap_8hpp_1a3075694ebe6fd0dc19ac02b97e09d3d3\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">JSWrap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6JSWrap6size_tRK8FUN_TYPERKNSt6stringEb\" title=\"JSWrap::FUN_TYPE\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun_name</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dispose_on_use</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>JSWrap takes a C++ function and wraps it in Javascript for easy calling in web code </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv419ANSI_DefaultBGColorv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419ANSI_DefaultBGColorv\">\n<span id=\"_CPPv319ANSI_DefaultBGColorv\"></span><span id=\"_CPPv219ANSI_DefaultBGColorv\"></span><span id=\"ANSI_DefaultBGColor\"></span><span class=\"target\" id=\"string__utils_8hpp_1a10cba5b3f0cb16b91e71d9223ced0b80\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_DefaultBGColor</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/text/api/HTMLEncoding.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">HTMLEncoding.hpp<a class=\"headerlink\" href=\"#htmlencoding-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Plugs into Text, setting up inputs and output to be HTML encoded. </p>", "a[href=\"library/tools/api/char_utils.html#_CPPv414is_escape_codec\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414is_escape_codec\">\n<span id=\"_CPPv314is_escape_codec\"></span><span id=\"_CPPv214is_escape_codec\"></span><span id=\"is_escape_code__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a2ca90516957a0558c3dd1232594314fd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_escape_code</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/Tween.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Tween.hpp<a class=\"headerlink\" href=\"#tween-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A Tween manages the gradual shift in properties of one or more widgets over time. </p><p>To create a Tween, a duration must be specified, along with an optional default target. Once a Tween is setup, paths can be added to it, which represent the changes that should occur over the specified duration.</p>", "a[href=\"library/datastructs/api/tuple_utils.html#_CPPv4I0E10tuple_sizeiv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10tuple_sizeiv\">\n<span id=\"_CPPv3I0E10tuple_sizev\"></span><span id=\"_CPPv2I0E10tuple_sizev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a6f5170d2c5ddb41e1a3d902b2c8e0e97\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tuple_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Quick way to calculate tuple size. </p></dd>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv4eoRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4eoRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3eoRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2eoRK11BloomFilterRK11BloomFilter\"></span><span id=\"xor-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1adbc4f4be9c78d021b39358b5887d49c5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">^</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the difference of two Bloom filters. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4II00E0DpE16variadic_union_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4II00E0DpE16variadic_union_t\">\n<span id=\"_CPPv3II00E0DpE16variadic_union_t\"></span><span id=\"_CPPv2II00E0DpE16variadic_union_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a7781c413f3741424169e6d3bba287ea5\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_union_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4II00E0DpE14variadic_union\" title=\"variadic_union\"><span class=\"n\"><span class=\"pre\">variadic_union</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4II00E0DpE16variadic_union_t\" title=\"variadic_union_t::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4II00E0DpE16variadic_union_t\" title=\"variadic_union_t::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415string_pop_uintRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415string_pop_uintRNSt6stringE\">\n<span id=\"_CPPv315string_pop_uintRNSt6stringE\"></span><span id=\"_CPPv215string_pop_uintRNSt6stringE\"></span><span id=\"string_pop_uint__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae2f84176f742e8d378176a5089177e5d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_uint</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\">\n<span id=\"_CPPv3IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\"></span><span id=\"_CPPv2IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Filter</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__filter_3_01Variadic_3_01U_8_8_8_01_4_00_01Filter_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_filter</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\" title=\"variadic_filter&lt;Variadic&lt;U...&gt;, Filter&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\" title=\"variadic_filter&lt;Variadic&lt;U...&gt;, Filter&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpI0E0E15variadic_filterI8VariadicIDp1UE6FilterE\" title=\"variadic_filter&lt;Variadic&lt;U...&gt;, Filter&gt;::Filter\"><span class=\"n\"><span class=\"pre\">Filter</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/tuple_struct.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">tuple_struct.hpp<a class=\"headerlink\" href=\"#tuple-struct-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>These macros will build a tuple and accessors to that tuple\u2019s members inside of a class definintion. </p><p>\n\u201cBut WHY???\u201d you ask. Let me explain: Keeping a tuple allows us to easily track the members in the stuct or class, and makes possible powerful types of reflection including identifying all members and performing an action on each (such as serialization). Since tuples instantiate members directly, these benefits should come at no cost to performance.</p>", "a[href=\"library/data/api/DataLog.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataLog.hpp<a class=\"headerlink\" href=\"#datalog-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools for processing a single set of data. </p><p>\nA DataLog takes in a continuous series of data and allows for easy analysis, both by performing calculations on those values and by outputting ascii histograms, etc. </p>", "a[href=\"library/evolve/evolve.html#features\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Features<a class=\"headerlink\" href=\"#features\" title=\"Link to this heading\">\uf0c1</a></h3><h4>Flexible taxon definitions<a class=\"headerlink\" href=\"#flexible-taxon-definitions\" title=\"Link to this heading\">\uf0c1</a></h4><p>One of the central decisions when creating a phylogeny is choosing what the taxonomic units (i.e. the nodes in the tree) are. In a traditional phylogeny, these nodes are species. However, the concept of species is so murky that it is impossible to generically apply to computational evolution systems (we\u2019d argue that it\u2019s questionable whether it could even be applied to biological data recorded at perfect temporal resolution, but that\u2019s a separate conversation). One alternative would be to make a phylogeny in which all nodes are individuals, but these trees are usually so large that they are impractical to work with.</p><p>Increasingly, biologists have embraced the idea of building trees in which the taxonomic units are not species. Often, these are denoted by referring to them as an \u201cX tree\u201d, where X is the taxonomic unit of interest. A traditional phylogeny, then, is a species tree. This terminology is particularly common in cancer evolution research, in which species trees are often contrasted with \u201cclone trees\u201d or \u201cgene trees\u201d, in which the taxonomic units are genotypes.</p>", "a[href=\"library/web/api/Text.html#_CPPv44Text\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Text\">\n<span id=\"_CPPv34Text\"></span><span id=\"_CPPv24Text\"></span><span id=\"Text\"></span><span class=\"target\" id=\"classText\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Text</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0_6size_tE8ToStringNSt6stringERK5arrayI1T1NE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE8ToStringNSt6stringERK5arrayI1T1NE\">\n<span id=\"_CPPv3I0_6size_tE8ToStringRK5arrayI1T1NE\"></span><span id=\"_CPPv2I0_6size_tE8ToStringRK5arrayI1T1NE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a693e8822bff4954a36cbb5a11762ff73\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE8ToStringNSt6stringERK5arrayI1T1NE\" title=\"ToString::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE8ToStringNSt6stringERK5arrayI1T1NE\" title=\"ToString::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup ToString declarations for built-in types. </p><p>Setup ToString to work on arrays. </p></dd>", "a[href=\"library/control/api/Action.html#_CPPv4I_6size_tE10ActionSize\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE10ActionSize\">\n<span id=\"_CPPv3I_6size_tE10ActionSize\"></span><span id=\"_CPPv2I_6size_tE10ActionSize\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classActionSize\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ActionSize</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ActionBase\" title=\"ActionBase\"><span class=\"n\"><span class=\"pre\">ActionBase</span></span></a><br/></dt><dd><p>ActionSize is a second layer of abstract actions that know the number of arguments used at compile time to facilitate easy type-checking. </p></dd>", "a[href=\"library/evolve/evolve.html#glossary\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Glossary<a class=\"headerlink\" href=\"#glossary\" title=\"Link to this heading\">\uf0c1</a></h3><p>Some useful terminology that might be useful in understanding the documentation (and especially the code base) for the systematics manager, particularly in light of the fact that different sub-fields of evolutionary biology tend to use different words in many of these contexts.</p>", "a[href=\"library/tools/api/value_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">value_utils.hpp<a class=\"headerlink\" href=\"#value-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Simple functions to manipulate values. </p>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E21CountPhenotypeChangesi3PtrI7taxon_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21CountPhenotypeChangesi3PtrI7taxon_tE\">\n<span id=\"_CPPv3I0E21CountPhenotypeChanges3PtrI7taxon_tE\"></span><span id=\"_CPPv2I0E21CountPhenotypeChanges3PtrI7taxon_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a01ad5107674b760c925f161b9398ef3d\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountPhenotypeChanges</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21CountPhenotypeChangesi3PtrI7taxon_tE\" title=\"CountPhenotypeChanges::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of changes in phenotype that occurred along the given taxon\u2019s lineage. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416find_quote_matchNSt11string_viewEK6size_tc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416find_quote_matchNSt11string_viewEK6size_tc\">\n<span id=\"_CPPv316find_quote_matchNSt11string_viewEK6size_tc\"></span><span id=\"_CPPv216find_quote_matchNSt11string_viewEK6size_tc\"></span><span id=\"find_quote_match__std::string_view.sC.c\"></span><span class=\"target\" id=\"string__utils_8hpp_1a5b53879e0d77fec5c103117802d077db\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_quote_match</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mark</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'\"'</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv416load_graph_tableRNSt7istreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416load_graph_tableRNSt7istreamE\">\n<span id=\"_CPPv316load_graph_tableRNSt7istreamE\"></span><span id=\"_CPPv216load_graph_tableRNSt7istreamE\"></span><span id=\"load_graph_table__isR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a473acf770b8a95b5a611e35e9af7d69f\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_table</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Load a graph from a connection matrix. Format: Number of vertices followed by v^2 0\u2019s or 1\u2019s Example: \u201c3 0 1 0 1 0 0 0 0 1\u201d </p></dd>", "a[href=\"library/text/api/HTMLEncoding.html#_CPPv412HTMLEncoding\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412HTMLEncoding\">\n<span id=\"_CPPv312HTMLEncoding\"></span><span id=\"_CPPv212HTMLEncoding\"></span><span id=\"HTMLEncoding\"></span><span class=\"target\" id=\"classHTMLEncoding\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HTMLEncoding</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/text/api/TextEncoding.html#_CPPv412TextEncoding\" title=\"TextEncoding\"><span class=\"n\"><span class=\"pre\">TextEncoding</span></span></a><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv415is_upper_letterc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415is_upper_letterc\">\n<span id=\"_CPPv315is_upper_letterc\"></span><span id=\"_CPPv215is_upper_letterc\"></span><span id=\"is_upper_letter__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a36fbaa0a2e01ff7d14665ca0a9c7ad95\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_upper_letter</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48to_lowerNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48to_lowerNSt6stringE\">\n<span id=\"_CPPv38to_lowerNSt6stringE\"></span><span id=\"_CPPv28to_lowerNSt6stringE\"></span><span id=\"to_lower__ss\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae3ce7241fa823da77d18a3af87ca7634\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_lower</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a string to all lowercase. </p></dd>", "a[href=\"library/io/api/MemoryIStream.html#_CPPv413MemoryIStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413MemoryIStream\">\n<span id=\"_CPPv313MemoryIStream\"></span><span id=\"_CPPv213MemoryIStream\"></span><span id=\"MemoryIStream\"></span><span class=\"target\" id=\"structMemoryIStream\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MemoryIStream</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">virtual</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv49MemoryBuf\" title=\"MemoryBuf\"><span class=\"n\"><span class=\"pre\">MemoryBuf</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataManager.hpp<a class=\"headerlink\" href=\"#datamanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>DataManager handles a set of DataNode objects with the same tracking settings. </p>", "a[href=\"library/math/api/Range.html#_CPPv4I_bE6DRange5RangeId13INCLUDE_UPPEREdd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_bE6DRange5RangeId13INCLUDE_UPPEREdd\">\n<span id=\"_CPPv3I_bE6DRangedd\"></span><span id=\"_CPPv2I_bE6DRangedd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Range_8hpp_1ae88b7e97eeb329194ee42e826209131b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE5Range\" title=\"Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_bE6DRange5RangeId13INCLUDE_UPPEREdd\" title=\"DRange::INCLUDE_UPPER\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_l</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_u</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a new range of type double. </p></dd>", "a[href=\"library/prefab/prefab.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Prefab<a class=\"headerlink\" href=\"#prefab\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/data/api/Datum.html#_CPPv4rmd5Datum\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4rmd5Datum\">\n<span id=\"_CPPv3rmd5Datum\"></span><span id=\"_CPPv2rmd5Datum\"></span><span id=\"mod-operator__double.Datum\"></span><span class=\"target\" id=\"Datum_8hpp_1a9aafefb56653f6a87cee38e56a89fff8\"></span><a class=\"reference internal\" href=\"#_CPPv45Datum\" title=\"Datum\"><span class=\"n\"><span class=\"pre\">Datum</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">%</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value1</span></span>, <a class=\"reference internal\" href=\"#_CPPv45Datum\" title=\"Datum\"><span class=\"n\"><span class=\"pre\">Datum</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv416build_graph_tree6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416build_graph_tree6size_tR6Random\">\n<span id=\"_CPPv316build_graph_tree6size_tR6Random\"></span><span id=\"_CPPv216build_graph_tree6size_tR6Random\"></span><span id=\"build_graph_tree__s.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a2cf638418a66250cfe7d73e54611f1d9\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_tree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random tree graph (new vertices are repeatedly attached to a random position in a tree as it is constructed.) </p></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv419NumericValueControl\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419NumericValueControl\">\n<span id=\"_CPPv319NumericValueControl\"></span><span id=\"_CPPv219NumericValueControl\"></span><span id=\"NumericValueControl\"></span><span class=\"target\" id=\"classNumericValueControl\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumericValueControl</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412ValueControl\" title=\"ValueControl\"><span class=\"n\"><span class=\"pre\">ValueControl</span></span></a><br/></dt><dd><p>Use a NumericValueControl to display a number with a label, description, synchronized slider and number box to change the value. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E10FillMemoryv3PtrIhEK6size_t1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10FillMemoryv3PtrIhEK6size_t1T\">\n<span id=\"_CPPv3I0E10FillMemory3PtrIhEK6size_t1T\"></span><span id=\"_CPPv2I0E10FillMemory3PtrIhEK6size_t1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a0dd6a72ef8b34bfdda5216c88980b3da\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FillMemory</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mem_ptr</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10FillMemoryv3PtrIhEK6size_t1T\" title=\"FillMemory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fill_value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Fill an array with the provided fill_value. If fill_value is a function, repeatedly call function. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv413TriggerExceptRKNSt6stringERKNSt6stringEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413TriggerExceptRKNSt6stringERKNSt6stringEb\">\n<span id=\"_CPPv313TriggerExceptRKNSt6stringERKNSt6stringEb\"></span><span id=\"_CPPv213TriggerExceptRKNSt6stringERKNSt6stringEb\"></span><span id=\"TriggerExcept__ssCR.ssCR.b\"></span><span class=\"target\" id=\"errors_8hpp_1a92104de71c243e643d6a28c81546622f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TriggerExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_desc</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_error</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide information about an exception that needs to be triggered. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0E8SlideMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8SlideMod\">\n<span id=\"_CPPv3I0E8SlideMod\"></span><span id=\"_CPPv2I0E8SlideMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structSlideMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SlideMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8SlideMod\" title=\"SlideMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd></dd>", "a[href=\"library/web/api/Element.html#_CPPv47Element\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47Element\">\n<span id=\"_CPPv37Element\"></span><span id=\"_CPPv27Element\"></span><span id=\"Element\"></span><span class=\"target\" id=\"classElement\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Element</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>A widget to track an element in an HTML file, and all of its contents. </p><p>Subclassed by CodeBlock, FontAwesomeIcon, LoadingIcon, ToggleSwitch</p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E11NewArrayPtr3PtrI1TE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11NewArrayPtr3PtrI1TE6size_t\">\n<span id=\"_CPPv3I0E11NewArrayPtr6size_t\"></span><span id=\"_CPPv2I0E11NewArrayPtr6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1aac9c1013fb992cf1a9cd6e4fc74551da\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11NewArrayPtr3PtrI1TE6size_t\" title=\"NewArrayPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NewArrayPtr</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">array_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Create a pointer to an array of objects. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E10IsIterable\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10IsIterable\">\n<span id=\"_CPPv3I0E10IsIterable\"></span><span id=\"_CPPv2I0E10IsIterable\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1acca287657cd12bb2ff2bfe5b376d972a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsIterable</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"n\"><span class=\"pre\">detail</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_iterable_impl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10IsIterable\" title=\"IsIterable::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">)</span></span><br/></dt><dd><p>Determine if a type is iterable. </p></dd>", "a[href=\"library/math/api/sequence_utils.html#_CPPv4I0E10ToSequence6vectorI1TENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10ToSequence6vectorI1TENSt6stringE\">\n<span id=\"_CPPv3I0E10ToSequenceNSt6stringE\"></span><span id=\"_CPPv2I0E10ToSequenceNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"sequence__utils_8hpp_1a46e1299812d982f86e0fbe9ca9f1c4a0\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10ToSequence6vectorI1TENSt6stringE\" title=\"ToSequence::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToSequence</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">sequence_str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a sequence from a string. Format: \u201centry1,entry2,entry3\u201d etc. Entries can be single values (Eg: \u201c72\u201d) or ranges using start[:step]:stop format (Eg: \u201c0:100\u201d or \u201c3:5:33\u201d). </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0DpE3Max1T1T1TDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE3Max1T1T1TDp2Ts\">\n<span id=\"_CPPv3I0DpE3Max1T1TDp2Ts\"></span><span id=\"_CPPv2I0DpE3Max1T1TDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a651295d36d6a8963e7fcabe9a535ee80\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE3Max1T1T1TDp2Ts\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Max</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpE3Max1T1T1TDp2Ts\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE3Max1T1T1TDp2Ts\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE3Max1T1T1TDp2Ts\" title=\"Max::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Max of multiple elements is solved recursively. </p></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv416build_graph_grid6size_t6size_tR6Randomd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416build_graph_grid6size_t6size_tR6Randomd\">\n<span id=\"_CPPv316build_graph_grid6size_t6size_tR6Randomd\"></span><span id=\"_CPPv216build_graph_grid6size_t6size_tR6Randomd\"></span><span id=\"build_graph_grid__s.s.RandomR.double\"></span><span class=\"target\" id=\"graph__utils_8hpp_1af048fc2d965ecf8e1661b7d8035385e8\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_grid</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">width</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">height</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">prob_use</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a graph with width x height vertices setup into a grid structure. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E17remove_ptr_type_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17remove_ptr_type_t\">\n<span id=\"_CPPv3I0E17remove_ptr_type_t\"></span><span id=\"_CPPv2I0E17remove_ptr_type_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1ab264eedbeee5ed5f64ecef349cc4cbda\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_type_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E15remove_ptr_type\" title=\"remove_ptr_type\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17remove_ptr_type_t\" title=\"remove_ptr_type_t::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv49MakeLowerRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MakeLowerRK6String\">\n<span id=\"_CPPv39MakeLowerRK6String\"></span><span id=\"_CPPv29MakeLowerRK6String\"></span><span id=\"MakeLower__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1ae47e7bee4e79b89868357e475184ae0d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeLower</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a string to all lowercase. </p></dd>", "a[href=\"library/bits/api/Bits_Data.html#_CPPv418Bits_WatermarkData\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418Bits_WatermarkData\">\n<span id=\"_CPPv318Bits_WatermarkData\"></span><span id=\"_CPPv218Bits_WatermarkData\"></span><span class=\"target\" id=\"Bits__Data_8hpp_1a4985365e2ae07b1dc7b6230f30896a5e\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bits_WatermarkData</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data_Mem_Watermark</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I000E20ChangeParameterTypesDa5FUN_T11CONVERTER_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E20ChangeParameterTypesDa5FUN_T11CONVERTER_T\">\n<span id=\"_CPPv3I000E20ChangeParameterTypes5FUN_T11CONVERTER_T\"></span><span id=\"_CPPv2I000E20ChangeParameterTypes5FUN_T11CONVERTER_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NEW_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERTER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1a51bce5c9535a05815deb7fbd6462c1c5\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ChangeParameterTypes</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E20ChangeParameterTypesDa5FUN_T11CONVERTER_T\" title=\"ChangeParameterTypes::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E20ChangeParameterTypesDa5FUN_T11CONVERTER_T\" title=\"ChangeParameterTypes::CONVERTER_T\"><span class=\"n\"><span class=\"pre\">CONVERTER_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">convert_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change a function\u2019s arguments using a simple converter function. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv422MakeFromLiteral_StringRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv422MakeFromLiteral_StringRK6String\">\n<span id=\"_CPPv322MakeFromLiteral_StringRK6String\"></span><span id=\"_CPPv222MakeFromLiteral_StringRK6String\"></span><span id=\"MakeFromLiteral_String__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1a1c723f271fe98f0ac0a090cd9ea9e4b1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeFromLiteral_String</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a literal string representation to an actual string. </p></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E8SetPoolsvR5WorldI3ORGE6size_t6size_tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8SetPoolsvR5WorldI3ORGE6size_t6size_tb\">\n<span id=\"_CPPv3I0E8SetPoolsR5WorldI3ORGE6size_t6size_tb\"></span><span id=\"_CPPv2I0E8SetPoolsR5WorldI3ORGE6size_t6size_tb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a69193062e36c66dda8913f70c0c626d5\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetPools</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8SetPoolsvR5WorldI3ORGE6size_t6size_tb\" title=\"SetPools::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_pools</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pool_size</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">synchronous_gen</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the population to be a set of pools that are individually well mixed, but with limited migration. Arguments are the number of pools, the size of each pool, and whether the generations should be synchronous (true) or not (false, default). </p></dd>", "a[href=\"library/games/api/Othello.html#_CPPv4I_6size_tE12Othello_Game\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE12Othello_Game\">\n<span id=\"_CPPv3I_6size_tE12Othello_Game\"></span><span id=\"_CPPv2I_6size_tE12Othello_Game\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BOARD_SIZE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classOthello__Game\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Othello_Game</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412Othello_Base\" title=\"Othello_Base\"><span class=\"n\"><span class=\"pre\">Othello_Base</span></span></a><br/></dt><dd><p>Class for othello games of a specific size. </p></dd>", "a[href=\"library/base/api/optional.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">optional.hpp<a class=\"headerlink\" href=\"#optional-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Audited implementation of std::optional. Status: RELEASE. </p><p>Drop-in replacements for std::optional. In debug mode, operator * and operator-&gt; value accesses are checked for undefined behavior. </p>", "a[href=\"library/text/text.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/String.html#_CPPv411MakeCSVSafeRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeCSVSafeRK6String\">\n<span id=\"_CPPv311MakeCSVSafeRK6String\"></span><span id=\"_CPPv211MakeCSVSafeRK6String\"></span><span id=\"MakeCSVSafe__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1a6f8174cd214dd58973fb6a64e6d67c90\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeCSVSafe</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"dev/adding-documentation.html#how-to-comment-for-doxygen-autodoc\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">How to Comment for Doxygen Autodoc<a class=\"headerlink\" href=\"#how-to-comment-for-doxygen-autodoc\" title=\"Link to this heading\">\uf0c1</a></h2><p>Doxygen has an entire <a class=\"reference external\" href=\"https://www.stack.nl/~dimitri/doxygen/manual/docblocks.html\">documentation\nsection</a> on\nhow to comment your code. We\u2019ll provide a trimmed version here so that\nyou can get started quickly.</p><p>Doxygen will examine all comments to determine if they are documentation\ncomments or just code comments. To make a documentation comment you must\nadd either an extra * or /, depending on the kind of comment:</p>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E20symmetric_differenceRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E20symmetric_differenceRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a1641b0e518450220ed0799f9f5e9ddeb\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv4I0_Dp4dataE7DataLog\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_Dp4dataE7DataLog\">\n<span id=\"_CPPv3I0_Dp4dataE7DataLog\"></span><span id=\"_CPPv2I0_Dp4dataE7DataLog\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MODS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"DataNode_8hpp_1ae70e1fdff735826148932ae3f9f972a4\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataLog</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE8DataNode\" title=\"DataNode\"><span class=\"n\"><span class=\"pre\">DataNode</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE7DataLog\" title=\"DataLog::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data7CurrentE\" title=\"data::Current\"><span class=\"n\"><span class=\"pre\">Current</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data4InfoE\" title=\"data::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data3LogE\" title=\"data::Log\"><span class=\"n\"><span class=\"pre\">Log</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE7DataLog\" title=\"DataLog::MODS\"><span class=\"n\"><span class=\"pre\">MODS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A node that stores data about the most recent value it received, as well as all values it has received since the last reset. It also allows you to give it a name, description, and keyword. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E5ScalevR6vectorI1TE1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5ScalevR6vectorI1TE1T\">\n<span id=\"_CPPv3I0E5ScaleR6vectorI1TE1T\"></span><span id=\"_CPPv2I0E5ScaleR6vectorI1TE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a9236d106592d442696b88292d519434d\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Scale</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5ScalevR6vectorI1TE1T\" title=\"Scale::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E5ScalevR6vectorI1TE1T\" title=\"Scale::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">scale</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Scale all elements of a vector by the same value. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv49MakeCounti6StringRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MakeCounti6StringRK6String\">\n<span id=\"_CPPv39MakeCounti6StringRK6String\"></span><span id=\"_CPPv29MakeCounti6StringRK6String\"></span><span id=\"MakeCount__i.String.StringCR\"></span><span class=\"target\" id=\"String_8hpp_1aa89d8f0412ef7d271109b74fb1cc0789\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeCount</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">item</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">plural_suffix</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string with the correct pluralization of the item being counted. For example, MakeCount(1, \u201ccow\u201d) would produce \u201c1 cow\u201d, but MakeCount(2, \u201ccow\u201d) would produce \u201c2 cows\u201d. </p></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectv10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectv10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\">\n<span id=\"_CPPv3I0DpE31EMPCall_TriggerOnLexicaseSelect10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\"></span><span id=\"_CPPv2I0DpE31EMPCall_TriggerOnLexicaseSelect10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a11b5ccd3c71a324256f64b97b18d46dc\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EMPCall_TriggerOnLexicaseSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I0E10bool_decoy\" title=\"bool_decoy\"><span class=\"n\"><span class=\"pre\">bool_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"o\"><span class=\"pre\">&amp;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectv10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\" title=\"EMPCall_TriggerOnLexicaseSelect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">TriggerOnLexicaseSelect</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectv10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\" title=\"EMPCall_TriggerOnLexicaseSelect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">target</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectv10bool_decoyIDTadN1T23TriggerOnLexicaseSelectEEER1TDpRR4ARGS\" title=\"EMPCall_TriggerOnLexicaseSelect::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/text/api/EmphaticEncoding.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">EmphaticEncoding.hpp<a class=\"headerlink\" href=\"#emphaticencoding-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Plugs into Text, setting up inputs and output to be Emphatic encoded. </p>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv4I0E8MergeNFA3NFARR2T1\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8MergeNFA3NFARR2T1\">\n<span id=\"_CPPv3I0E8MergeNFARR2T1\"></span><span id=\"_CPPv2I0E8MergeNFARR2T1\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"group__lexer__utilities_1ga4b727106d906a24fb25bf80921ba194c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MergeNFA</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E8MergeNFA3NFARR2T1\" title=\"MergeNFA::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge multiple automata into one NFA (base case, single conversion) </p></dd>", "a[href=\"library/web/api/Widget.html#_CPPv46Widget\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Widget\">\n<span id=\"_CPPv36Widget\"></span><span id=\"_CPPv26Widget\"></span><span id=\"Widget\"></span><span class=\"target\" id=\"classWidget\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Widget</span></span></span><br/></dt><dd><p>Widget is effectively a smart pointer to a WidgetInfo object, plus some basic accessors. </p><p>Subclassed by DocuExtras</p></dd>", "a[href=\"library/data/api/Trait.html#_CPPv4I00E5Trait\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E5Trait\">\n<span id=\"_CPPv3I00E5Trait\"></span><span id=\"_CPPv2I00E5Trait\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TARGET_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VALUE_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTrait\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Trait</span></span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/WidgetExtras.html#_CPPv412WidgetExtras\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412WidgetExtras\">\n<span id=\"_CPPv312WidgetExtras\"></span><span id=\"_CPPv212WidgetExtras\"></span><span id=\"WidgetExtras\"></span><span class=\"target\" id=\"structWidgetExtras\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WidgetExtras</span></span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataLayout.html#_CPPv410DataLayout\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410DataLayout\">\n<span id=\"_CPPv310DataLayout\"></span><span id=\"_CPPv210DataLayout\"></span><span id=\"DataLayout\"></span><span class=\"target\" id=\"classDataLayout\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataLayout</span></span></span><br/></dt><dd><p>A helper class for DataMap; tracks how data is organized in a MemoryImage. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv49pad_frontRKNSt6stringEc6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49pad_frontRKNSt6stringEc6size_t\">\n<span id=\"_CPPv39pad_frontRKNSt6stringEc6size_t\"></span><span id=\"_CPPv29pad_frontRKNSt6stringEc6size_t\"></span><span id=\"pad_front__ssCR.c.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8441c4ed1229efe7e14bee0ed407c2d5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pad_front</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_str</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">padding</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/math.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/web/api/NodeDomShim.html#_CPPv411NodeDomShim\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411NodeDomShim\">\n<span id=\"_CPPv311NodeDomShim\"></span><span id=\"_CPPv211NodeDomShim\"></span><span id=\"NodeDomShim\"></span><span class=\"target\" id=\"structNodeDomShim\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NodeDomShim</span></span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/bitset_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">bitset_utils.hpp<a class=\"headerlink\" href=\"#bitset-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate bitsets. </p>", "a[href=\"library/hardware/api/BitSorter.html#_CPPv49BitSorter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49BitSorter\">\n<span id=\"_CPPv39BitSorter\"></span><span id=\"_CPPv29BitSorter\"></span><span id=\"BitSorter\"></span><span class=\"target\" id=\"classBitSorter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitSorter</span></span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/array.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">array.hpp<a class=\"headerlink\" href=\"#array-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in wrapper for std::array; adds on bounds checking in debug mode. Status: RELEASE. </p><p>If EMP_NDEBUG is set, array is just an alias for std::array. Otherwise, every time an array is accessed, tests are done to make sure that the access is legal.</p>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv427build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv427build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\">\n<span id=\"_CPPv327build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\"></span><span id=\"_CPPv227build_weighted_graph_random6size_t6size_t6size_t6size_tR6Randomb\"></span><span id=\"build_weighted_graph_random__s.s.s.s.RandomR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1aefe33643a71e9c23219ef56d94852a2a\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_weighted_graph_random</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_weight</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_weight</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">connected</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random, WEIGHTED graph with the specified number of vertices, edges, and range of edge weights. If connected is set, start by building a tree. Then connect random (unconnected) pairs of vertices until the proper number of edges are included. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv411MakeSlugify6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeSlugify6String\">\n<span id=\"_CPPv311MakeSlugify6String\"></span><span id=\"_CPPv211MakeSlugify6String\"></span><span id=\"MakeSlugify__String\"></span><span class=\"target\" id=\"String_8hpp_1a8c831de4a5c7a673bb8afd9693445e4f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeSlugify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string safe(r) </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417to_escaped_stringc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417to_escaped_stringc\">\n<span id=\"_CPPv317to_escaped_stringc\"></span><span id=\"_CPPv217to_escaped_stringc\"></span><span id=\"to_escaped_string__c\"></span><span class=\"target\" id=\"string__utils_8hpp_1ab10068cd1c55111995adbef1f7a8df31\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_escaped_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a single character to one that uses a proper escape sequence (in a string) if needed. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv418remove_punctuationRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418remove_punctuationRNSt6stringE\">\n<span id=\"_CPPv318remove_punctuationRNSt6stringE\"></span><span id=\"_CPPv218remove_punctuationRNSt6stringE\"></span><span id=\"remove_punctuation__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a1e83f770b61487da2ebc53c20daebe1a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_punctuation</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all characters from a string except letters, numbers, and whitespace. </p></dd>", "a[href=\"library/web/api/CanvasShape.html#_CPPv410CanvasRect\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410CanvasRect\">\n<span id=\"_CPPv310CanvasRect\"></span><span id=\"_CPPv210CanvasRect\"></span><span id=\"CanvasRect\"></span><span class=\"target\" id=\"classCanvasRect\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasRect</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>Track a rectangle shape to be drawn on a canvas. </p></dd>", "a[href=\"library/base/api/map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">map.hpp<a class=\"headerlink\" href=\"#map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in wrapper for std::map and std:multimap; makes sure we create vars on access. </p><p>\nThis class is a drop-in wrapper for std::map, adding on debbing where the indexing operator [square brackets] returns a proxy. That proxy can either be assigned to OR convert an existing value ONLY if it exists. This mechanism ensures that we don\u2019t accidentally write a default value to a map when all we meant to do was read from it, but had a typo. If EMP_NDEBUG is set then it reverts back to std::map. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv418ANSI_BrightMagentav\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418ANSI_BrightMagentav\">\n<span id=\"_CPPv318ANSI_BrightMagentav\"></span><span id=\"_CPPv218ANSI_BrightMagentav\"></span><span id=\"ANSI_BrightMagenta\"></span><span class=\"target\" id=\"string__utils_8hpp_1af72fe9bb2077e1765ad3acd43b022b20\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightMagenta</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv420GetWindowInnerHeightv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv420GetWindowInnerHeightv\">\n<span id=\"_CPPv320GetWindowInnerHeightv\"></span><span id=\"_CPPv220GetWindowInnerHeightv\"></span><span id=\"GetWindowInnerHeight\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a3a7a4896a0f7a2ba7a1cf84c99e202a1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWindowInnerHeight</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine with height of the current window. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415string_get_wordRKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415string_get_wordRKNSt6stringE6size_t\">\n<span id=\"_CPPv315string_get_wordRKNSt6stringE6size_t\"></span><span id=\"_CPPv215string_get_wordRKNSt6stringE6size_t\"></span><span id=\"string_get_word__ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a803d30d5374fbbbc46620d0a688fad9c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get_word</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a prefix of a string, up to the first whitespace (do not modify the original string) </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv414MakeCompressed6StringRK7CharSetcbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414MakeCompressed6StringRK7CharSetcbb\">\n<span id=\"_CPPv314MakeCompressed6StringRK7CharSetcbb\"></span><span id=\"_CPPv214MakeCompressed6StringRK7CharSetcbb\"></span><span id=\"MakeCompressed__String.CharSetCR.c.b.b\"></span><span class=\"target\" id=\"String_8hpp_1a76a71271063cdc35316bd62807781564\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeCompressed</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">chars</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv417WhitespaceCharSetv\" title=\"WhitespaceCharSet\"><span class=\"n\"><span class=\"pre\">WhitespaceCharSet</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">compress_to</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'</span> <span class=\"pre\">'</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">trim_start</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">trim_end</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/TypeID.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypeID.hpp<a class=\"headerlink\" href=\"#typeid-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TypeID provides an easy way to convert types to strings. </p><p>TypeID provides an easy way to compare types, analyze them, and convert to strings. All TypeID objects are consistent within a type, and are ordinal and hashable.</p>", "a[href=\"library/data/api/AnnotatedType.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">AnnotatedType.hpp<a class=\"headerlink\" href=\"#annotatedtype-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A base class to provide a DataMap and accessors to derived classes. </p>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv415SmallVectorBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415SmallVectorBase\">\n<span id=\"_CPPv315SmallVectorBase\"></span><span id=\"_CPPv215SmallVectorBase\"></span><span id=\"SmallVectorBase\"></span><span class=\"target\" id=\"classSmallVectorBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></span><br/></dt><dd><p>This is all the non-templated stuff common to all SmallVectors. </p><p>Subclassed by SmallVectorTemplateCommon&lt; T, typename &gt;, SmallVectorTemplateCommon&lt; T &gt;</p></dd>", "a[href=\"QuickStartGuides/3-WebTools.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Web Tools<a class=\"headerlink\" href=\"#web-tools\" title=\"Link to this heading\">\uf0c1</a></h1><p>The web tools in Empirical are structured to allow the developer to\nfully control components of a web page from C++. Note that you must have\nthe emscripten compiler installed for web utilities to function\nproperly.</p><p>Empirical web Widgets include Text, Buttons, Images, Tables, or many\nother HTML components. All widgets are derived from <code class=\"docutils literal notranslate\"><span class=\"pre\">emp::Widget</span></code> and\nstructured such that multiple widgets can properly refer to and modify\nthe same component.</p>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E5World\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5World\">\n<span id=\"_CPPv3I0E5World\"></span><span id=\"_CPPv2I0E5World\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorld\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/SolveState.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SolveState.hpp<a class=\"headerlink\" href=\"#solvestate-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Used as part of a branching solver to keep track of the current state. </p>", "a[href=\"library/prefab/api/Modal.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Modal.hpp<a class=\"headerlink\" href=\"#modal-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps a Bootstrap modal. </p>", "a[href=\"library/web/api/color_map.html#_CPPv49GetHueMap6size_tddii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49GetHueMap6size_tddii\">\n<span id=\"_CPPv39GetHueMap6size_tddii\"></span><span id=\"_CPPv29GetHueMap6size_tddii\"></span><span id=\"GetHueMap__s.double.double.i.i\"></span><span class=\"target\" id=\"color__map_8hpp_1aea507e756bce2d87bd6614ee3c984de6\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetHueMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">map_size</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_h</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_h</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">360.0</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">l</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a vector of color strings with a specified range of hues, and fixed satuation and luminosity, </p></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv415SieveCacheState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415SieveCacheState\">\n<span id=\"_CPPv315SieveCacheState\"></span><span id=\"_CPPv215SieveCacheState\"></span><span id=\"SieveCacheState\"></span><span class=\"target\" id=\"structSieveCacheState\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SieveCacheState</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv414CacheStateBase\" title=\"CacheStateBase\"><span class=\"n\"><span class=\"pre\">CacheStateBase</span></span></a><br/></dt><dd></dd>", "a[href=\"library/evolve/api/StateGrid.html#_CPPv413StateGridInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413StateGridInfo\">\n<span id=\"_CPPv313StateGridInfo\"></span><span id=\"_CPPv213StateGridInfo\"></span><span id=\"StateGridInfo\"></span><span class=\"target\" id=\"classStateGridInfo\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StateGridInfo</span></span></span><br/></dt><dd><p>Full information about the states available in a state grid and meanings of each state. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0DpE13AdaptFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE13AdaptFunction\">\n<span id=\"_CPPv3I0DpE13AdaptFunction\"></span><span id=\"_CPPv2I0DpE13AdaptFunction\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAdaptFunction\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AdaptFunction</span></span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/errors.html#_CPPv412CountExceptsv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CountExceptsv\">\n<span id=\"_CPPv312CountExceptsv\"></span><span id=\"_CPPv212CountExceptsv\"></span><span id=\"CountExcepts\"></span><span class=\"target\" id=\"errors_8hpp_1a5fea0b0a53fbfb6d18d1a6907ba43569\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountExcepts</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>How many exceptions are waiting to be dealt with? </p></dd>", "a[href=\"library/data/api/DataManager.html#_CPPv4I0_Dp4dataE11DataManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_Dp4dataE11DataManager\">\n<span id=\"_CPPv3I0_Dp4dataE11DataManager\"></span><span id=\"_CPPv2I0_Dp4dataE11DataManager\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/data/api/DataNode.html#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MODS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDataManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataManager</span></span></span><br/></dt><dd><p>DataManagers handle sets of DataNode objects that all have the same tracking settings. </p></dd>", "a[href=\"library/math/api/Distribution.html#_CPPv416NegativeBinomial\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416NegativeBinomial\">\n<span id=\"_CPPv316NegativeBinomial\"></span><span id=\"_CPPv216NegativeBinomial\"></span><span id=\"NegativeBinomial\"></span><span class=\"target\" id=\"classNegativeBinomial\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NegativeBinomial</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412Distribution\" title=\"Distribution\"><span class=\"n\"><span class=\"pre\">Distribution</span></span></a><br/></dt><dd><p>How many attempts to reach N successes, assuming p probability per attempt? </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410to_literalc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410to_literalc\">\n<span id=\"_CPPv310to_literalc\"></span><span id=\"_CPPv210to_literalc\"></span><span id=\"to_literal__c\"></span><span class=\"target\" id=\"string__utils_8hpp_1a710b7e5a33e63ec4e88f62b2f6d50e70\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_literal</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a char and convert it to a C++-style literal. </p></dd>", "a[href=\"library/math/api/DistributionSet.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DistributionSet.hpp<a class=\"headerlink\" href=\"#distributionset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Management of pre-calculated distributions with different input values. </p><p>\nA DistributionSet manages a set of pre-calculated distributions. When input values are provided, the correct distribution is identified, and the associated value is drawn. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\">\n<span id=\"_CPPv3I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\"></span><span id=\"_CPPv2I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Needle</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__contains_3_01Needle_00_01Variadic_3_01U_8_8_8_01_4_00_01Cmp_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_contains</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::Needle\"><span class=\"n\"><span class=\"pre\">Needle</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">__impl_variadics_type_traits</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">variadic_contains</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::Needle\"><span class=\"n\"><span class=\"pre\">Needle</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">__impl_variadics_type_traits</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pack</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_containsI6Needle8VariadicIDp1UE3CmpE\" title=\"variadic_contains&lt;Needle, Variadic&lt;U...&gt;, Cmp&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/value_utils.html#_CPPv4IE10FromDoubleINSt6stringEENSt6stringEd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE10FromDoubleINSt6stringEENSt6stringEd\">\n<span id=\"_CPPv3IE10FromDoubleINSt6stringEEd\"></span><span id=\"_CPPv2IE10FromDoubleINSt6stringEEd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"value__utils_8hpp_1a6abca2b80e90928b85539669475717d9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromDouble</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/constants.html#_CPPv45SQRT2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45SQRT2\">\n<span id=\"_CPPv35SQRT2\"></span><span id=\"_CPPv25SQRT2\"></span><span id=\"SQRT2__doubleC\"></span><span class=\"target\" id=\"constants_8hpp_1acfa621314aa8e534c2afc5bb1209e024\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SQRT2</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.41421356237310</span></span><br/></dt><dd><p>sqrt(2) </p></dd>", "a[href=\"library/scholar/scholar.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv415build_graph_dag6size_t6size_tR6Randomb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415build_graph_dag6size_t6size_tR6Randomb\">\n<span id=\"_CPPv315build_graph_dag6size_t6size_tR6Randomb\"></span><span id=\"_CPPv215build_graph_dag6size_t6size_tR6Randomb\"></span><span id=\"build_graph_dag__s.s.RandomR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1aa6418dfc15940c8acea806cfa71ec298\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_dag</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">connected</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random, graph with the specified number of vertices and edges. If connected is set, start by building a tree. Then connect random (unconnected) pairs of vertices until the proper number of edges are included. </p></dd>", "a[href=\"library/geometry/api/Angle2D.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Angle2D.hpp<a class=\"headerlink\" href=\"#angle2d-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Angle maintains an angle on a 2D surface. </p><p>The internal representation uses an int to represent angles. First two bytes are number of full circles. Last two bytes represent angle angles. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E16remove_ptr_valueRDaR1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16remove_ptr_valueRDaR1T\">\n<span id=\"_CPPv3I0E16remove_ptr_valueR1T\"></span><span id=\"_CPPv2I0E16remove_ptr_valueR1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a9f3d51a5561ff4c6178b60b9f68a1fb1\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_value</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E16remove_ptr_valueRDaR1T\" title=\"remove_ptr_value::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a value to a non-pointer if and only if it is one. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414ANSI_BrightRedv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414ANSI_BrightRedv\">\n<span id=\"_CPPv314ANSI_BrightRedv\"></span><span id=\"_CPPv214ANSI_BrightRedv\"></span><span id=\"ANSI_BrightRed\"></span><span class=\"target\" id=\"string__utils_8hpp_1ad36341a1d69090cadea1ad0a8f9b1a3d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightRed</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv4IDpE4Drawv6CanvasRK7SurfaceIDp10BODY_TYPESERK6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE4Drawv6CanvasRK7SurfaceIDp10BODY_TYPESERK6vectorINSt6stringEE\">\n<span id=\"_CPPv3IDpE4Draw6CanvasRK7SurfaceIDp10BODY_TYPESERK6vectorINSt6stringEE\"></span><span id=\"_CPPv2IDpE4Draw6CanvasRK7SurfaceIDp10BODY_TYPESERK6vectorINSt6stringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"canvas__utils_8hpp_1a907de00802915f5fc1ae919ad0e7d000\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/geometry/api/Surface.html#_CPPv4IDpE7Surface\" title=\"Surface\"><span class=\"n\"><span class=\"pre\">Surface</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE4Drawv6CanvasRK7SurfaceIDp10BODY_TYPESERK6vectorINSt6stringEE\" title=\"Draw::BODY_TYPES\"><span class=\"n\"><span class=\"pre\">BODY_TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">surface</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a Surface, specifying the full colormap to be used. The surface has a range of circle bodies, each with a color id. </p></dd>", "a[href=\"library/evolve/api/NK.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">NK.hpp<a class=\"headerlink\" href=\"#nk-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file provides code to build NK-based algorithms. </p><p>Two version of landscapes are provided. NKLandscape pre-calculates the entire landscape, for easy lookup. NKLandscapeMemo does lazy evaluation, memorizing values when they\u2019re first used. NKLandscape is faster, but goes up in memory size exponentially with K. NKLandscapeMemo is slightly slower, but can handle arbitrarily large landscapes.</p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E8PopFront1TR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8PopFront1TR6vectorI1TE\">\n<span id=\"_CPPv3I0E8PopFrontR6vectorI1TE\"></span><span id=\"_CPPv2I0E8PopFrontR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a0ad38bf93e634290ce5d76fb6dc99e15\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E8PopFront1TR6vectorI1TE\" title=\"PopFront::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PopFront</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8PopFront1TR6vectorI1TE\" title=\"PopFront::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove and return the first element of a vector. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv4I000E10DrawPointsv6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E10DrawPointsv6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\">\n<span id=\"_CPPv3I000E10DrawPoints6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\"></span><span id=\"_CPPv2I000E10DrawPoints6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">POINT_FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">COLOR_FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"canvas__utils_8hpp_1a09ebcfa840cf8fcbdf70824d2f4a096f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DrawPoints</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E10DrawPointsv6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\" title=\"DrawPoints::CONTAINER_T\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">radius</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E10DrawPointsv6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\" title=\"DrawPoints::POINT_FUN_T\"><span class=\"n\"><span class=\"pre\">POINT_FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">point_fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E10DrawPointsv6CanvasRR11CONTAINER_TdRR11POINT_FUN_TRR11COLOR_FUN_TRKNSt6stringE\" title=\"DrawPoints::COLOR_FUN_T\"><span class=\"n\"><span class=\"pre\">COLOR_FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_fun</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"black\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"QuickStartGuides/2-BaseTools.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Base Tools<a class=\"headerlink\" href=\"#base-tools\" title=\"Link to this heading\">\uf0c1</a></h1><p>A handful of tools are available in the include/emp/base/ folder in\nEmpirical. These mimic basic functionality available in C++ or its\nstandard library, but provide extra protection against common memory use\nerrors and additional information to the developer.  These protections\ncan be turned off by comiling with -DNDEBUG.</p>", "a[href=\"library/functional/functional.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Functional<a class=\"headerlink\" href=\"#functional\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"dev/contribution-guidelines-and-review.html#commenting-in-files\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Commenting in files<a class=\"headerlink\" href=\"#commenting-in-files\" title=\"Link to this heading\">\uf0c1</a></h2><p>All code should be well-commented such that it can be understood by a skilled\nC++ programmer that is not familiar with the code base.  Comments should be\nwritten in Doxygen format where appropriate.</p><p>Each file should have a header at the top to describe the goals of that file.\nThis header should include copyright information as well as the name of the file,\na brief description, and its status.  Statuses include:</p>", "a[href=\"library/matching/matching.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\">\n<span id=\"_CPPv3IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\"></span><span id=\"_CPPv2IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__remove__duplicates_3_01Variadic_3_01U_8_8_8_01_4_00_01Cmp_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_remove_duplicates</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\" title=\"variadic_remove_duplicates&lt;Variadic&lt;U...&gt;, Cmp&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\" title=\"variadic_remove_duplicates&lt;Variadic&lt;U...&gt;, Cmp&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpI00E0E26variadic_remove_duplicatesI8VariadicIDp1UE3CmpE\" title=\"variadic_remove_duplicates&lt;Variadic&lt;U...&gt;, Cmp&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/color_map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">color_map.hpp<a class=\"headerlink\" href=\"#color-map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to dynamically build (and cache) color maps. </p>", "a[href=\"library/compiler/compiler.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Compiler<a class=\"headerlink\" href=\"#compiler\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/math/api/math.html#_CPPv4I0E3GCD1TK1TK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3GCD1TK1TK1T\">\n<span id=\"_CPPv3I0E3GCDK1TK1T\"></span><span id=\"_CPPv2I0E3GCDK1TK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a4008cea25be02db39c3ed6b103728e76\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3GCD1TK1TK1T\" title=\"GCD::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GCD</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3GCD1TK1TK1T\" title=\"GCD::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3GCD1TK1TK1T\" title=\"GCD::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Greatest Common Divisor. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv414UnbiasedDivide6size_t6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414UnbiasedDivide6size_t6size_tR6Random\">\n<span id=\"_CPPv314UnbiasedDivide6size_t6size_tR6Random\"></span><span id=\"_CPPv214UnbiasedDivide6size_t6size_tR6Random\"></span><span id=\"UnbiasedDivide__s.s.RandomR\"></span><span class=\"target\" id=\"math_8hpp_1a0485cca7ef770038d9e6a09c620c809e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnbiasedDivide</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dividend</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">divisor</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">r</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Regular integer division is truncated, not rounded. Round the division result instead of truncating it. Rounding ties (i.e., result % divisor == 0.5) are broken by coin toss. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv412NextPowerOf28uint64_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412NextPowerOf28uint64_t\">\n<span id=\"_CPPv312NextPowerOf28uint64_t\"></span><span id=\"_CPPv212NextPowerOf28uint64_t\"></span><span id=\"NextPowerOf2__uint64_t\"></span><span class=\"target\" id=\"math_8hpp_1a0968a7354e9fa00d0046519fa0fdfd33\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NextPowerOf2</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">A</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the next power of two (in 64-bits) that is strictly greater than A. Returns zero on overflow. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE13int_bit_countIXL8EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE13int_bit_countIXL8EEE\">\n<span id=\"_CPPv3IE13int_bit_countIXL8EEE\"></span><span id=\"_CPPv2IE13int_bit_countIX8EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structint__bit__count_3_018_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">8</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\">\n<span id=\"_CPPv3I00E16SumScalarResultsR1CRR3FUN\"></span><span id=\"_CPPv2I00E16SumScalarResultsR1CRR3FUN\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1af9527f9533152c895950c145a071a957\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SumScalarResults</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\" title=\"SumScalarResults::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E16SumScalarResultsDaR1CRR3FUN\" title=\"SumScalarResults::FUN\"><span class=\"n\"><span class=\"pre\">FUN</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sum the RESULTS of scalar values in a container; if pointers to scalars, convert to scalar type. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E8find_bit6size_tK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8find_bit6size_tK1T\">\n<span id=\"_CPPv3I0E8find_bitK1T\"></span><span id=\"_CPPv2I0E8find_bitK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a9b7c2bda0d0d604846368e29e4719a8e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_bit</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8find_bit6size_tK1T\" title=\"find_bit::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the position of the first one bit. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417ANSI_DefaultColorv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417ANSI_DefaultColorv\">\n<span id=\"_CPPv317ANSI_DefaultColorv\"></span><span id=\"_CPPv217ANSI_DefaultColorv\"></span><span id=\"ANSI_DefaultColor\"></span><span class=\"target\" id=\"string__utils_8hpp_1af40c7a3b02ea9a1d5270b31aa2d45e76\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_DefaultColor</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/assert.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">assert.hpp<a class=\"headerlink\" href=\"#assert-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A more dynamic replacement for standard library asserts. Status: RELEASE. </p><p>A replacement for the system-level assert.h, called \u201cemp_assert\u201d Added functionality:<ul class=\"simple\">\n<li><p>If compiled with Emscripten, will provide pop-up alerts in a web browser.</p></li>\n<li><p>emp_assert can take additional arguments. If the assert is triggered, those extra arguments will be evaluated and printed.</p></li>\n<li><p>if NDEBUG -or- EMP_NDEBUG is defined, the expression in emp_assert() is not evaluated.</p></li>\n<li><p>if EMP_TDEBUG is defined, emp_assert() goes into test mode and records failures, but does not abort. (useful for unit tests of asserts)</p></li>\n</ul>\n</p>", "a[href=\"library/evolve/api/OEE.html#_CPPv4I00E11Skeletonize6vectorI9INST_TYPEER8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11Skeletonize6vectorI9INST_TYPEER8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\">\n<span id=\"_CPPv3I00E11SkeletonizeR8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\"></span><span id=\"_CPPv2I00E11SkeletonizeR8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INST_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"OEE_8hpp_1ae6af725dd5293587c713a8a5fe0412c5\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E11Skeletonize6vectorI9INST_TYPEER8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\" title=\"Skeletonize::INST_TYPE\"><span class=\"n\"><span class=\"pre\">INST_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Skeletonize</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E11Skeletonize6vectorI9INST_TYPEER8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\" title=\"Skeletonize::ORG_TYPE\"><span class=\"n\"><span class=\"pre\">ORG_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">org</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11Skeletonize6vectorI9INST_TYPEER8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\" title=\"Skeletonize::INST_TYPE\"><span class=\"n\"><span class=\"pre\">INST_TYPE</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">null_value</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E11Skeletonize6vectorI9INST_TYPEER8ORG_TYPEK9INST_TYPENSt8functionIFdR8ORG_TYPEEEE\" title=\"Skeletonize::ORG_TYPE\"><span class=\"n\"><span class=\"pre\">ORG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fit_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/EventDrivenGP.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">EventDrivenGP.hpp<a class=\"headerlink\" href=\"#eventdrivengp-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TODO. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv4IDpE11from_stringvRKNSt6stringEDpR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11from_stringvRKNSt6stringEDpR2Ts\">\n<span id=\"_CPPv3IDpE11from_stringRKNSt6stringEDpR2Ts\"></span><span id=\"_CPPv2IDpE11from_stringRKNSt6stringEDpR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1ad1d8bd9df65e7e5682283d49b5279c67\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">from_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE11from_stringvRKNSt6stringEDpR2Ts\" title=\"from_string::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>The from_string() function can also take multiple args instead of a return. </p></dd>", "a[href=\"library/tools/api/timing.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">timing.hpp<a class=\"headerlink\" href=\"#timing-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A collection of tools to help measure timing of code. </p>", "a[href=\"dev/empirical-development-practices.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id1\" role=\"doc-backlink\">Empirical Development Practices</a><a class=\"headerlink\" href=\"#empirical-development-practices\" title=\"Link to this heading\">\uf0c1</a></h1><p>Although the Empirical project is primarily maintained by the Primary Investigator of the Digital Evolution laboratory at Michigan State University, Dr. Charles Ofria, a large, rotating menagerie of graduate students, undergraduate students, alumni, and collaborators also regularly contribute to the library.\nSeveral active research projects depend on the library.\nThe scope of the project and the continuous turnover of our developer base have necessitated investment in extensive social and technical tooling on our part.</p><p>Our development process revolves around a standard fork and pull request workflow.\nWe use GitHub actions for continuous integration, ensuring that code merged in to our main branch meets certain quality-control criteria.\nWe check that merged code does not break existing unit tests or any demonstration code bundled with the repository.\nWe maintain an extensive unit testing suite, which, as of June 2021, covers 82% of our code base.\nWe use Codecov to measure code coverage as part of our continuous integration.\nThis allows us to enforce that merged code provides unit tests for any new content.\nIn addition to automated quality checks, we enforce manual code reviews on all pull requests.</p>", "a[href=\"library/datastructs/api/StringMap.html#_CPPv4I0E9StringMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9StringMap\">\n<span id=\"_CPPv3I0E9StringMap\"></span><span id=\"_CPPv2I0E9StringMap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classStringMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringMap</span></span></span><br/></dt><dd><p>A class that wraps maps of strings to allow for effective optimizations. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv49IDCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49IDCharSetv\">\n<span id=\"_CPPv39IDCharSetv\"></span><span id=\"_CPPv29IDCharSetv\"></span><span id=\"IDCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1aa14277ca39d25a85d313905dfab0956f\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IDCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/in_progress/api/AST.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">AST.hpp<a class=\"headerlink\" href=\"#ast-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/web/api/commands.html#_CPPv45Close\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Close\">\n<span id=\"_CPPv35Close\"></span><span id=\"_CPPv25Close\"></span><span id=\"Close\"></span><span class=\"target\" id=\"classClose\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Close</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">WidgetCommand</span></span><br/></dt><dd><p>The Close command will prevent the specified widget from accepting further appends (and instead revert to trying parents) </p></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv416TextValueControl\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416TextValueControl\">\n<span id=\"_CPPv316TextValueControl\"></span><span id=\"_CPPv216TextValueControl\"></span><span id=\"TextValueControl\"></span><span class=\"target\" id=\"classTextValueControl\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TextValueControl</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412ValueControl\" title=\"ValueControl\"><span class=\"n\"><span class=\"pre\">ValueControl</span></span></a><br/></dt><dd><p>Use a TextValueControl to display a boolean value with a label, description, and a text input to manipulate the value. </p></dd>", "a[href=\"library/data/api/DataInterface.html#_CPPv4I0_Dp4dataE17MakeDataInterfaceP13DataInterfacev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_Dp4dataE17MakeDataInterfaceP13DataInterfacev\">\n<span id=\"_CPPv3I0_Dp4dataE17MakeDataInterfacev\"></span><span id=\"_CPPv2I0_Dp4dataE17MakeDataInterfacev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/data/api/DataNode.html#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EXTRA</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"DataInterface_8hpp_1a0f10839a31604bf87ede2f0923cb2619\"></span><a class=\"reference internal\" href=\"#_CPPv413DataInterface\" title=\"DataInterface\"><span class=\"n\"><span class=\"pre\">DataInterface</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeDataInterface</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv49has_digitRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49has_digitRKNSt6stringE\">\n<span id=\"_CPPv39has_digitRKNSt6stringE\"></span><span id=\"_CPPv29has_digitRKNSt6stringE\"></span><span id=\"has_digit__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4f440aed09cf5d50594ba472393ff309\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_digit</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/constants.html#_CPPv48MAX_WORD\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48MAX_WORD\">\n<span id=\"_CPPv38MAX_WORD\"></span><span id=\"_CPPv28MAX_WORD\"></span><span id=\"MAX_WORD__uint32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1a75230eb7a63832081ae7781a9d8df49e\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_WORD</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">65535</span></span><br/></dt><dd><p>(2^16 - 1) </p></dd>", "a[href=\"library/web/api/Widget.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Widget.hpp<a class=\"headerlink\" href=\"#widget-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Widgets maintain individual components on a web page and link to Elements. </p><p>Each HTML Widget has all of its details stored in a WidgetInfo object; Multiple Widgets can be attached to the same WidgetInfo, simplifying the usage. All the library user needs to worry about is the Widget object itself; the WidgetInfo will be managed behind the scenes.</p>", "a[href=\"library/debug/api/mem_track.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">mem_track.hpp<a class=\"headerlink\" href=\"#mem-track-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of macros to track how many instances of specific classes are made. </p><p>\nOne way of tracking memory leaks is to simply count instances of classes. The macros here simplify this process.</p>", "a[href=\"library/bits/api/BitVector.html#_CPPv43old\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43old\">\n<span id=\"_CPPv33old\"></span><span id=\"_CPPv23old\"></span><span id=\"old\"></span><span class=\"target\" id=\"namespaceold\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">old</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I_bE10url_decodeNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_bE10url_decodeNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3I_bE10url_decodeRKNSt6stringE\"></span><span id=\"_CPPv2I_bE10url_decodeRKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">decode_plus</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a2dc1252fa9d770cc0940c133636a4d6d\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">url_decode</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns url decoding of string. See <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Percent-encoding\">https://en.wikipedia.org/wiki/Percent-encoding</a></p></dd>", "a[href=\"library/config/api/ConfigManager.html#_CPPv418ConfigManager_Base\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418ConfigManager_Base\">\n<span id=\"_CPPv318ConfigManager_Base\"></span><span id=\"_CPPv218ConfigManager_Base\"></span><span id=\"ConfigManager_Base\"></span><span class=\"target\" id=\"classConfigManager__Base\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConfigManager_Base</span></span></span><br/></dt><dd><p>Subclassed by ConfigManager&lt; MANAGED_TYPE &gt;</p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414is_composed_ofRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414is_composed_ofRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv314is_composed_ofRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv214is_composed_ofRKNSt6stringERKNSt6stringE\"></span><span id=\"is_composed_of__ssCR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ad6159c2ce73d59c2700f9059a44d0b79\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_composed_of</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">test_str</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">char_set</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if a string is composed only of a set of characters (represented as a string) </p></dd>", "a[href=\"library/geometry/api/Angle2D.html#_CPPv412cos_chart_1K\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412cos_chart_1K\">\n<span id=\"_CPPv312cos_chart_1K\"></span><span id=\"_CPPv212cos_chart_1K\"></span><span id=\"cos_chart_1K__int32_tCA\"></span><span class=\"target\" id=\"Angle2D_8hpp_1a260f2e11afeb077b97de07f06f0fe6f4\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cos_chart_1K</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1021</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1019</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1016</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1013</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1009</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1004</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">999</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">993</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">987</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">980</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">972</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">964</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">955</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">946</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">936</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">926</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">915</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">903</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">891</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">878</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">865</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">851</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">837</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">822</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">807</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">792</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">775</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">759</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">742</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">724</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">706</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">688</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">669</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">650</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">630</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">610</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">590</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">569</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">548</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">526</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">505</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">483</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">460</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">438</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">415</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">392</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">369</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">345</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">321</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">297</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">273</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">249</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">224</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">200</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">175</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">150</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">125</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">75</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">25</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">24</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">49</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">74</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">99</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">124</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">149</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">174</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">199</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">223</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">248</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">272</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">296</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">320</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">344</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">368</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">391</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">414</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">437</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">459</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">482</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">504</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">525</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">547</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">568</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">589</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">609</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">629</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">649</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">668</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">687</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">705</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">723</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">741</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">758</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">774</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">791</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">806</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">821</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">836</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">850</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">864</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">877</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">890</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">902</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">914</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">925</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">935</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">945</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">954</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">963</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">971</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">979</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">986</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">992</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">998</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1003</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1008</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1012</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1015</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1018</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1020</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1022</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1022</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1020</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1018</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1015</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1012</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1008</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1003</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">998</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">992</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">986</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">979</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">971</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">963</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">954</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">945</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">935</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">925</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">914</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">902</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">890</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">877</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">864</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">850</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">836</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">821</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">806</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">791</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">774</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">758</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">741</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">723</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">705</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">687</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">668</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">649</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">629</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">609</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">589</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">568</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">547</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">525</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">504</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">482</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">459</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">437</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">414</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">391</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">368</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">344</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">320</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">296</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">272</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">248</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">223</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">199</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">174</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">149</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">124</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">99</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">74</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">49</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">24</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">25</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">75</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">125</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">150</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">175</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">200</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">224</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">249</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">273</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">297</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">321</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">345</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">369</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">392</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">415</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">438</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">460</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">483</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">505</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">526</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">548</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">569</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">590</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">610</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">630</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">650</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">669</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">688</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">706</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">724</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">742</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">759</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">775</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">792</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">807</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">822</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">837</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">851</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">865</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">878</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">891</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">903</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">915</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">926</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">936</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">946</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">955</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">964</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">972</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">980</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">987</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">993</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">999</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1004</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1009</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1013</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1016</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1019</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1021</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv48OnResizeRKNSt8functionIFviiEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48OnResizeRKNSt8functionIFviiEEE\">\n<span id=\"_CPPv38OnResizeRKNSt8functionIFviiEEE\"></span><span id=\"_CPPv28OnResizeRKNSt8functionIFviiEEE\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a96f5082d47293852748742e27b065b47\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OnResize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a function to call whenever a window\u2019s size changes (new size as arguments) </p></dd>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E9CountMutsi3PtrI7taxon_tE6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9CountMutsi3PtrI7taxon_tE6vectorINSt6stringEE\">\n<span id=\"_CPPv3I0E9CountMuts3PtrI7taxon_tE6vectorINSt6stringEE\"></span><span id=\"_CPPv2I0E9CountMuts3PtrI7taxon_tE6vectorINSt6stringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a63f229a36ee40ab66a786128bf374267\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountMuts</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9CountMutsi3PtrI7taxon_tE6vectorINSt6stringEE\" title=\"CountMuts::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">types</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of mutations of the types in <code class=\"docutils literal notranslate\"><span class=\"pre\">types</span></code> that occurred along the given taxon \u2018s lineage. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412ANSI_GreenBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ANSI_GreenBGv\">\n<span id=\"_CPPv312ANSI_GreenBGv\"></span><span id=\"_CPPv212ANSI_GreenBGv\"></span><span id=\"ANSI_GreenBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a068657bedf0a80c843d4856e6ca95186\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_GreenBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_iterator.html#_CPPv4I0E14World_iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14World_iterator\">\n<span id=\"_CPPv3I0E14World_iterator\"></span><span id=\"_CPPv2I0E14World_iterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorld__iterator\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World_iterator</span></span></span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/regex_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">regex_utils.hpp<a class=\"headerlink\" href=\"#regex-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Helper functions for building regular expressions. </p>", "a[href=\"library/web/api/FileInput.html#_CPPv49FileInput\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49FileInput\">\n<span id=\"_CPPv39FileInput\"></span><span id=\"_CPPv29FileInput\"></span><span id=\"FileInput\"></span><span class=\"target\" id=\"classFileInput\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FileInput</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv49FileInput\" title=\"FileInput\"><span class=\"n\"><span class=\"pre\">FileInput</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>FileInput will convert the file to a std::string and pass the result to a designated function.</p><p>To create a new file input, you must pass it a void function that takes a const std::string &amp; as its only argument. When a file is loaded, the specified function is called and the body of the file is passed in as the string. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_RedBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_RedBGv\">\n<span id=\"_CPPv310ANSI_RedBGv\"></span><span id=\"_CPPv210ANSI_RedBGv\"></span><span id=\"ANSI_RedBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1ab65b0297bd3d139967d5089a710c7b54\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_RedBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/in_progress/in_progress.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">In_progress<a class=\"headerlink\" href=\"#in-progress\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/evolve/api/NK.html#_CPPv415NKLandscapeMemo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415NKLandscapeMemo\">\n<span id=\"_CPPv315NKLandscapeMemo\"></span><span id=\"_CPPv215NKLandscapeMemo\"></span><span id=\"NKLandscapeMemo\"></span><span class=\"target\" id=\"classNKLandscapeMemo\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NKLandscapeMemo</span></span></span><br/></dt><dd><p>The NKLandscapeMemo class is simialar to NKLandscape, but it does not pre-calculate all of the landscape states. Instead it determines the value of each gene combination on first use and memorizes it. </p></dd>", "a[href=\"library/evolve/api/Systematics.html#_CPPv4I000E11Systematics\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E11Systematics\">\n<span id=\"_CPPv3I000E11Systematics\"></span><span id=\"_CPPv2I000E11Systematics\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG_INFO</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DATA_STRUCT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410datastruct\" title=\"datastruct\"><span class=\"n\"><span class=\"pre\">datastruct</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N10datastruct7no_dataE\" title=\"datastruct::no_data\"><span class=\"n\"><span class=\"pre\">no_data</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSystematics\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Systematics</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E15SystematicsBase\" title=\"SystematicsBase\"><span class=\"n\"><span class=\"pre\">SystematicsBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E11Systematics\" title=\"Systematics::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A tool to track phylogenetic relationships among organisms. The systematics class tracks the relationships among all organisms based on the INFO_TYPE provided. If an offspring has the same value for INFO_TYPE as its parent, it is grouped into the same taxon. Otherwise a new Taxon is created and the old one is used as its parent in the phylogeny. If the provided INFO_TYPE is the organsism\u2019s genome, a traditional phylogeny is formed, with genotypes. If the organism\u2019s behavior/task set is used, then organisms are grouped by phenotypes. If the organsims\u2019s position is used, the evolutionary path through space is tracked. Any other aspect of organisms can be tracked this way as well. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE22AsymmetricNoWrapMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE22AsymmetricNoWrapMetric\">\n<span id=\"_CPPv3I_6size_tE22AsymmetricNoWrapMetric\"></span><span id=\"_CPPv2I_6size_tE22AsymmetricNoWrapMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAsymmetricNoWrapMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsymmetricNoWrapMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE22AsymmetricNoWrapMetric\" title=\"AsymmetricNoWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE22AsymmetricNoWrapMetric\" title=\"AsymmetricNoWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>BitSet-based implementation of NextUpMetric without wrapping. </p></dd>", "a[href=\"library/prefab/api/ConfigPanel.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ConfigPanel.hpp<a class=\"headerlink\" href=\"#configpanel-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Interfaces with config objects to provide UI configuration. </p>", "a[href=\"library/io/api/NullStream.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">NullStream.hpp<a class=\"headerlink\" href=\"#nullstream-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A handy no-operation output stream. </p>", "a[href=\"library/matching/api/MatchBin.html#_CPPv4I0000E8MatchBin\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0000E8MatchBin\">\n<span id=\"_CPPv3I0000E8MatchBin\"></span><span id=\"_CPPv2I0000E8MatchBin\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Val</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Selector</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Regulator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classMatchBin\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MatchBin</span></span></span><br/></dt><dd><p>A data container that allows lookup by tag similarity. It can be templated on different tag types and is configurable on construction for (1) the distance metric used to compute similarity between tags and (2) the selector that is used to select which matches to return. Regulation functionality is also provided, allowing dynamically adjustment of match strength to a particular item (i.e., making all matches stronger/weaker). A unique identifier is generated upon tag/item placement in the container. This unique identifier can be used to view or edit the stored items and their corresponding tags. Tag-based lookups return a list of matched unique identifiers. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv418ANSI_BrightWhiteBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418ANSI_BrightWhiteBGv\">\n<span id=\"_CPPv318ANSI_BrightWhiteBGv\"></span><span id=\"_CPPv218ANSI_BrightWhiteBGv\"></span><span id=\"ANSI_BrightWhiteBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a1e42b62b6e3f1713c7857963046ec68a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightWhiteBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\">\n<span id=\"_CPPv3I000E5AnyOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span id=\"_CPPv2I000E5AnyOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a32d410cd508859a5c9ed0737e793a249\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyOf</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AnyOf::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AnyOf::ELEMENT_T\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E5AnyOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AnyOf::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"dev/adding-documentation.html#how-to-include-doxygen-s-autodocs-within-sphinx-files\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">How to include Doxygen\u2019s autodocs within Sphinx files<a class=\"headerlink\" href=\"#how-to-include-doxygen-s-autodocs-within-sphinx-files\" title=\"Link to this heading\">\uf0c1</a></h2><p>Through the use of the Breathe extension it is incredibly easy to\ninclude Doxygen autodocs within a Sphinx documentation file.</p><p>Suppose we have a C++ implementation file name <code class=\"docutils literal notranslate\"><span class=\"pre\">potato.h</span></code> that has\ninline comment documentation as detailed above and that <code class=\"docutils literal notranslate\"><span class=\"pre\">potato.h</span></code> is a\ncomponent of a module named <code class=\"docutils literal notranslate\"><span class=\"pre\">ingredients</span></code> that was just created.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv413string_get_toRKNSt6stringERKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413string_get_toRKNSt6stringERKNSt6stringE6size_t\">\n<span id=\"_CPPv313string_get_toRKNSt6stringERKNSt6stringE6size_t\"></span><span id=\"_CPPv213string_get_toRKNSt6stringERKNSt6stringE6size_t\"></span><span id=\"string_get_to__ssCR.ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1af8abae7e18a7779524d5305f02b6ae27\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get_to</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/Distribution.html#_CPPv47Uniform\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47Uniform\">\n<span id=\"_CPPv37Uniform\"></span><span id=\"_CPPv27Uniform\"></span><span id=\"Uniform\"></span><span class=\"target\" id=\"classUniform\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Uniform</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412Distribution\" title=\"Distribution\"><span class=\"n\"><span class=\"pre\">Distribution</span></span></a><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#flexible-output-options\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Flexible output options<a class=\"headerlink\" href=\"#flexible-output-options\" title=\"Link to this heading\">\uf0c1</a></h4><p>At any time, you can tell the systematics manager to print out the full contents of its current phylogeny in a \u201csnapshot\u201d file. These files will be formatted according to the <a class=\"reference external\" href=\"https://alife-data-standards.github.io/alife-data-standards/phylogeny.html\">Artificial Life Phylogeny Data Standard format</a>. By default they will contain the following columns for each taxon: 1) unique ID, 2) ancestor list, 3) origin time, and 4) destruction time. However, you can add additional columns with the <a class=\"reference internal\" href=\"library/evolve/api/Systematics.html#_CPPv4N11Systematics14AddSnapshotFunERKNSt8functionIFNSt6stringERK7taxon_tEEERKNSt6stringERKNSt6stringE\" title=\"Systematics::AddSnapshotFun\"><code class=\"xref cpp cpp-func docutils literal notranslate\"><span class=\"pre\">Systematics::AddSnapshotFun()</span></code></a> method.</p><p>You can also print information on a single lineage.</p>", "a[href=\"library/web/api/Text.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Text.hpp<a class=\"headerlink\" href=\"#text-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specs for the Text widget. </p><p>A representation of text on a web page. Text Widgets can be included inside of Divs or Tables to cordon off a section of text (and will be automatically created when text is streamed into these other widgets). The primary benefit of explicitly creating your own text widget is to control the text style. </p>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E8TrackPtr3PtrI1TEP1Tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8TrackPtr3PtrI1TEP1Tb\">\n<span id=\"_CPPv3I0E8TrackPtrP1Tb\"></span><span id=\"_CPPv2I0E8TrackPtrP1Tb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a547cb8cb97bdd4646ac982d54400fc34\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8TrackPtr3PtrI1TEP1Tb\" title=\"TrackPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackPtr</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E8TrackPtr3PtrI1TEP1Tb\" title=\"TrackPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">own</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a T* to a Ptr&lt;T&gt; that we DO track. </p></dd>", "a[href=\"library/polyfill/polyfill.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Polyfill<a class=\"headerlink\" href=\"#polyfill\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/data/api/DataNode.html#_CPPv4I0E14DataNodeModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14DataNodeModule\">\n<span id=\"_CPPv3I0E14DataNodeModule\"></span><span id=\"_CPPv2I0E14DataNodeModule\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDataNodeModule_3_01VAL__TYPE_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataNodeModule</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E14DataNodeModule\" title=\"DataNodeModule::VAL_TYPE\"><span class=\"n\"><span class=\"pre\">VAL_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Base form of DataNodeModule (available in ALL data nodes.) </p></dd>", "a[href=\"library/base/api/vector.html#_CPPv4I0DpElsRNSt7ostreamERNSt7ostreamERK6vectorI1TDp2TsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpElsRNSt7ostreamERNSt7ostreamERK6vectorI1TDp2TsE\">\n<span id=\"_CPPv3I0DpElsRNSt7ostreamERK6vectorI1TDp2TsE\"></span><span id=\"_CPPv2I0DpElsRNSt7ostreamERK6vectorI1TDp2TsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector_8hpp_1a69f2d4e99fefc83e4e8a6a3573c6e0a9\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpElsRNSt7ostreamERNSt7ostreamERK6vectorI1TDp2TsE\" title=\"operator&lt;&lt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpElsRNSt7ostreamERNSt7ostreamERK6vectorI1TDp2TsE\" title=\"operator&lt;&lt;::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415string_get_uintRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415string_get_uintRKNSt6stringE\">\n<span id=\"_CPPv315string_get_uintRKNSt6stringE\"></span><span id=\"_CPPv215string_get_uintRKNSt6stringE\"></span><span id=\"string_get_uint__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae182c9713c925582e70951a30a694d59\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">long</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get_uint</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E11WorldVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11WorldVector\">\n<span id=\"_CPPv3I0E11WorldVector\"></span><span id=\"_CPPv2I0E11WorldVector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorldVector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11WorldVector\" title=\"WorldVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A vector that can be indexed with a WorldPosition. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00E11match_const\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11match_const\">\n<span id=\"_CPPv3I00E11match_const\"></span><span id=\"_CPPv2I00E11match_const\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCH_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structmatch__const\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">match_const</span></span></span><br/></dt><dd><p>Match the constness of another type. </p></dd>", "a[href=\"library/evolve/evolve.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Evolution tools<a class=\"headerlink\" href=\"#evolution-tools\" title=\"Link to this heading\">\uf0c1</a></h1><h2>Phylotracklib (Systematics Manager)<a class=\"headerlink\" href=\"#phylotracklib-systematics-manager\" title=\"Link to this heading\">\uf0c1</a></h2><p>The systematics manager tracks phylogenetic relationships among organisms within a digital\nevolution system. For asexual systems, these relationships forma phylogenetic tree\n(phylogeny). Systems with recombination (i.e. sexual reproduction systems) are not\nyet supported. One of the major benefits of doing <em>in silico</em> evolution experiments (instead of or in addition to laboratory or field experiments) is that they allow perfect measurement of quantities that can only be inferred in nature. Once such property is the precise phylogeny (i.e. ancestry tree) of the population.</p><p><img alt=\"An example phylogeny\" src=\"_images/phylogeny.jpg\"/></p>", "a[href=\"library/evolve/api/World_output.html#_CPPv4I0E21AddPhylodiversityFileR8DataFileR10WORLD_TYPEiRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21AddPhylodiversityFileR8DataFileR10WORLD_TYPEiRKNSt6stringE\">\n<span id=\"_CPPv3I0E21AddPhylodiversityFileR10WORLD_TYPEiRKNSt6stringE\"></span><span id=\"_CPPv2I0E21AddPhylodiversityFileR10WORLD_TYPEiRKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__output_8hpp_1afd104e720326a4bac2a8d4ff5fb0204e\"></span><a class=\"reference internal\" href=\"library/data/api/DataFile.html#_CPPv48DataFile\" title=\"DataFile\"><span class=\"n\"><span class=\"pre\">DataFile</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddPhylodiversityFile</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E21AddPhylodiversityFileR8DataFileR10WORLD_TYPEiRKNSt6stringE\" title=\"AddPhylodiversityFile::WORLD_TYPE\"><span class=\"n\"><span class=\"pre\">WORLD_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">systematics_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fpath</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"phylodiversity.csv\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/AvidaGP.html#_CPPv4I0E13AvidaCPU_Base\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13AvidaCPU_Base\">\n<span id=\"_CPPv3I0E13AvidaCPU_Base\"></span><span id=\"_CPPv2I0E13AvidaCPU_Base\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HARDWARE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAvidaCPU__Base\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AvidaCPU_Base</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv410IsPowerOf2K6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410IsPowerOf2K6size_t\">\n<span id=\"_CPPv310IsPowerOf2K6size_t\"></span><span id=\"_CPPv210IsPowerOf2K6size_t\"></span><span id=\"IsPowerOf2__sCCE\"></span><span class=\"target\" id=\"math_8hpp_1a35a1b480091c25a0bcf1dead1c0e7a46\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IsPowerOf2</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Tests if a number is a power of two. </p></dd>", "a[href=\"library/evolve/api/World_output.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World_output.hpp<a class=\"headerlink\" href=\"#world-output-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TODO. </p><p>This file contains functions for adding additional data files to Worlds. </p>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E9CountMutsi3PtrI7taxon_tENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9CountMutsi3PtrI7taxon_tENSt6stringE\">\n<span id=\"_CPPv3I0E9CountMuts3PtrI7taxon_tENSt6stringE\"></span><span id=\"_CPPv2I0E9CountMuts3PtrI7taxon_tENSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a32d8631646acd940a5485650ac2dee29\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountMuts</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9CountMutsi3PtrI7taxon_tENSt6stringE\" title=\"CountMuts::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"substitution\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of mutations of type <code class=\"docutils literal notranslate\"><span class=\"pre\">type</span></code> that occurred along <code class=\"docutils literal notranslate\"><span class=\"pre\">taxon</span></code> \u2018s lineage. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv413AbsDiffMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413AbsDiffMetric\">\n<span id=\"_CPPv313AbsDiffMetric\"></span><span id=\"_CPPv213AbsDiffMetric\"></span><span id=\"AbsDiffMetric\"></span><span class=\"target\" id=\"structAbsDiffMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AbsDiffMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Metric gives the absolute difference between two integers. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4IDpE16find_any_of_from6size_tRKNSt6stringE6size_tNSt6stringEDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE16find_any_of_from6size_tRKNSt6stringE6size_tNSt6stringEDp2Ts\">\n<span id=\"_CPPv3IDpE16find_any_of_fromRKNSt6stringE6size_tNSt6stringEDp2Ts\"></span><span id=\"_CPPv2IDpE16find_any_of_fromRKNSt6stringE6size_tNSt6stringEDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1aab62ec9a8df91d2407fa0cc5482cf13e\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_any_of_from</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">test_str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE16find_any_of_from6size_tRKNSt6stringE6size_tNSt6stringEDp2Ts\" title=\"find_any_of_from::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tests</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the first position found for any of a set of substring tests (or std::string::npos if none are found). </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411view_stringRKNSt11string_viewE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411view_stringRKNSt11string_viewE\">\n<span id=\"_CPPv311view_stringRKNSt11string_viewE\"></span><span id=\"_CPPv211view_stringRKNSt11string_viewE\"></span><span id=\"view_string__std::string_viewCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a28f998bd7f573ba690f572cde7d9ce3c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a string_view on a given string. </p></dd>", "a[href=\"library/evolve/api/World_iterator.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World_iterator.hpp<a class=\"headerlink\" href=\"#world-iterator-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines iterators for use with World objects. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Add a const interator. </p>\n<p>Currently we do MakeValid after every change AND before many accesses. Pick one? </p>\n<p>Fix operator\u2013 which can go off of the beginnig of the world. </p>\n</dd></dl>\n</p>", "a[href=\"library/geometry/api/Surface.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Surface.hpp<a class=\"headerlink\" href=\"#surface-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a templated class to represent a 2D suface capable of maintaining data about which 2D bodies are currently on that surface and rapidly identifying if they are overlapping. </p><p>BODY_TYPE is the class that represents the body geometry.</p>", "a[href=\"library/math/api/math.html#_CPPv4I0E3Max1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Max1T1T\">\n<span id=\"_CPPv3I0E3Max1T\"></span><span id=\"_CPPv2I0E3Max1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a5f7bc67c72acd15afb822f15f287f7da\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3Max1T1T\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Max</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Max1T1T\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Max of only one element is that element itself! </p></dd>", "a[href=\"library/meta/api/TypeID.html#_CPPv4I0E9BuildInfo3PtrIN6TypeID4InfoEEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9BuildInfo3PtrIN6TypeID4InfoEEv\">\n<span id=\"_CPPv3I0E9BuildInfov\"></span><span id=\"_CPPv2I0E9BuildInfov\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1abed81d909f171abfd1fc47f1715d8ddc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N6TypeID4InfoE\" title=\"TypeID::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildInfo</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build the information for a single TypeID. </p></dd>", "a[href=\"library/math/api/distances.html#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\">\n<span id=\"_CPPv3I0E17EuclideanDistanceR1CR1C\"></span><span id=\"_CPPv2I0E17EuclideanDistanceR1CR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"distances_8hpp_1a8fab7eb3d80974ac1e6908945787abd2\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">!</span></span><a class=\"reference internal\" href=\"library/meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\" title=\"is_ptr_type\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\" title=\"EuclideanDistance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EuclideanDistance</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\" title=\"EuclideanDistance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E17EuclideanDistanceNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEdE4typeER1CR1C\" title=\"EuclideanDistance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate Euclidean distance between two containers. If the containers contain a pointer type, the pointers will be de-referenced first. </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E10difference6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E10difference6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a44ba027c934c811dfbed3a28bb92eafd\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but no S2) </p></dd>", "a[href=\"library/control/api/Signal.html#_CPPv4I0DpE6SignalIF6RETURNDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6SignalIF6RETURNDp4ARGSEE\">\n<span id=\"_CPPv3I0DpE6SignalIF6RETURNDp4ARGSEE\"></span><span id=\"_CPPv2I0DpE6SignalIF6RETURNDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSignal_3_01RETURN_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Signal</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6SignalIF6RETURNDp4ARGSEE\" title=\"Signal&lt;RETURN(ARGS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6SignalIF6RETURNDp4ARGSEE\" title=\"Signal&lt;RETURN(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410SignalBase\" title=\"SignalBase\"><span class=\"n\"><span class=\"pre\">SignalBase</span></span></a><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0DpE8ToStringNSt6stringERK6vectorI1TDp2TsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE8ToStringNSt6stringERK6vectorI1TDp2TsE\">\n<span id=\"_CPPv3I0DpE8ToStringRK6vectorI1TDp2TsE\"></span><span id=\"_CPPv2I0DpE8ToStringRK6vectorI1TDp2TsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1ab1ee0cea42cf2293d381d5871d80b2a6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8ToStringNSt6stringERK6vectorI1TDp2TsE\" title=\"ToString::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8ToStringNSt6stringERK6vectorI1TDp2TsE\" title=\"ToString::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup ToString to work on vectors. </p></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv4I0E15RandomizeVectorvR6vectorI1TER6Random1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15RandomizeVectorvR6vectorI1TER6Random1T1T\">\n<span id=\"_CPPv3I0E15RandomizeVectorR6vectorI1TER6Random1T1T\"></span><span id=\"_CPPv2I0E15RandomizeVectorR6vectorI1TER6Random1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"random__utils_8hpp_1a43584e0bc6f7a69568a4a18941cddcc0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomizeVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15RandomizeVectorvR6vectorI1TER6Random1T1T\" title=\"RandomizeVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">vals</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E15RandomizeVectorvR6vectorI1TER6Random1T1T\" title=\"RandomizeVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E15RandomizeVectorvR6vectorI1TER6Random1T1T\" title=\"RandomizeVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random vector in the specified type and range. </p></dd>", "a[href=\"library/datastructs/api/DynamicString.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DynamicString.hpp<a class=\"headerlink\" href=\"#dynamicstring-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A string handler where sections update dynamically based on functions. </p>", "a[href=\"library/web/api/commands.html#_CPPv48PrintStr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48PrintStr\">\n<span id=\"_CPPv38PrintStr\"></span><span id=\"_CPPv28PrintStr\"></span><span id=\"PrintStr\"></span><span class=\"target\" id=\"classPrintStr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PrintStr</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">WidgetCommand</span></span><br/></dt><dd><p>The PrintStr command will print a pre-specified string to a widget. </p></dd>", "a[href=\"library/in_progress/api/TrackedPtr.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TrackedPtr.hpp<a class=\"headerlink\" href=\"#trackedptr-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_ptr_type\">\n<span id=\"_CPPv3I0E11is_ptr_type\"></span><span id=\"_CPPv2I0E11is_ptr_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__ptr__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E16remove_pointer_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16remove_pointer_t\">\n<span id=\"_CPPv3I0E16remove_pointer_t\"></span><span id=\"_CPPv2I0E16remove_pointer_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a65cd0c273e08182b700e272148419c1c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_pointer_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E17remove_ptr_type_t\" title=\"remove_ptr_type_t\"><span class=\"n\"><span class=\"pre\">remove_ptr_type_t</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16remove_pointer_t\" title=\"remove_pointer_t::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv418PunctuationCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418PunctuationCharSetv\">\n<span id=\"_CPPv318PunctuationCharSetv\"></span><span id=\"_CPPv218PunctuationCharSetv\"></span><span id=\"PunctuationCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1a10091f7bae0a3646b35c080174564c66\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PunctuationCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/games/api/PayoffMatrix.html#_CPPv412PayoffMatrix\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412PayoffMatrix\">\n<span id=\"_CPPv312PayoffMatrix\"></span><span id=\"_CPPv212PayoffMatrix\"></span><span id=\"PayoffMatrix\"></span><span class=\"target\" id=\"classPayoffMatrix\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PayoffMatrix</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/Fraction.html#_CPPv48Fraction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Fraction\">\n<span id=\"_CPPv38Fraction\"></span><span id=\"_CPPv28Fraction\"></span><span id=\"Fraction\"></span><span class=\"target\" id=\"classFraction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Fraction</span></span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv418build_graph_random6size_t6size_tR6Randomb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418build_graph_random6size_t6size_tR6Randomb\">\n<span id=\"_CPPv318build_graph_random6size_t6size_tR6Randomb\"></span><span id=\"_CPPv218build_graph_random6size_t6size_tR6Randomb\"></span><span id=\"build_graph_random__s.s.RandomR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a106cd2288f6c9bcca668737270423289\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_random</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">connected</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random, graph with the specified number of vertices and edges. If connected is set, start by building a tree. Then connect random (unconnected) pairs of vertices until the proper number of edges are included. </p></dd>", "a[href=\"library/games/api/Othello.html#_CPPv47Othello\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47Othello\">\n<span id=\"_CPPv37Othello\"></span><span id=\"_CPPv27Othello\"></span><span class=\"target\" id=\"Othello_8hpp_1a34492e2da0d32470a3c720a24728300d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Othello</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE12Othello_Game\" title=\"Othello_Game\"><span class=\"n\"><span class=\"pre\">Othello_Game</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">8</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413to_ansi_blinkRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413to_ansi_blinkRKNSt6stringE\">\n<span id=\"_CPPv313to_ansi_blinkRKNSt6stringE\"></span><span id=\"_CPPv213to_ansi_blinkRKNSt6stringE\"></span><span id=\"to_ansi_blink__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae5fef2a8fb4cbfce1718314449e2bc6d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_ansi_blink</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string appear blink when printed to the command line. </p></dd>", "a[href=\"dev/contribution-guidelines-and-review.html#checklist\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Checklist<a class=\"headerlink\" href=\"#checklist\" title=\"Link to this heading\">\uf0c1</a></h2><p>To submit code to Empirical, open a Pull Request on Github. When you are ready for it to be reviewed, add the \u201cMerge Ready\u201d label. Before requesting a review, you should ensure that all checks on Github pass and confirm that the following automatically-checkable things are true:</p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE13int_bit_countIXL32EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE13int_bit_countIXL32EEE\">\n<span id=\"_CPPv3IE13int_bit_countIXL32EEE\"></span><span id=\"_CPPv2IE13int_bit_countIX32EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structint__bit__count_3_0132_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">32</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/geometry/api/Point2D.html#_CPPv4I0E7Point2D\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7Point2D\">\n<span id=\"_CPPv3I0E7Point2D\"></span><span id=\"_CPPv2I0E7Point2D\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPoint2D\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Point2D</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E15remove_ptr_typeI3PtrI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15remove_ptr_typeI3PtrI1TEE\">\n<span id=\"_CPPv3I0E15remove_ptr_typeI3PtrI1TEE\"></span><span id=\"_CPPv2I0E15remove_ptr_typeI3PtrI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__ptr__type_3_01Ptr_3_01T_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15remove_ptr_typeI3PtrI1TEE\" title=\"remove_ptr_type&lt;Ptr&lt;T&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/tuple_utils.html#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\">\n<span id=\"_CPPv3IDp_DpiE13shuffle_tupleRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"></span><span id=\"_CPPv2IDp_DpiE13shuffle_tupleRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ps</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a1c96d5610919c37eabed347eefe097a3\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">shuffle_tuple</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\" title=\"shuffle_tuple::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span>, <a class=\"reference internal\" href=\"library/meta/api/ValPack.html#_CPPv4I_DpDaE7ValPack\" title=\"ValPack\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDp_DpiE13shuffle_tupleDaRKNSt5tupleIDp2TsEE7ValPackIDp2PsE\" title=\"shuffle_tuple::Ps\"><span class=\"n\"><span class=\"pre\">Ps</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Reorganize the entries in tuple; the provided int pack must specify the new ordering. </p></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv4I0_bE4Bits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE4Bits\">\n<span id=\"_CPPv3I0_bE4Bits\"></span><span id=\"_CPPv2I0_bE4Bits\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DATA_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ZERO_LEFT</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBits\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bits</span></span></span><br/></dt><dd><p>A flexible base template to handle BitVector, BitArray, BitSet, &amp; other combinations. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417remove_whitespaceRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417remove_whitespaceRNSt6stringE\">\n<span id=\"_CPPv317remove_whitespaceRNSt6stringE\"></span><span id=\"_CPPv217remove_whitespaceRNSt6stringE\"></span><span id=\"remove_whitespace__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a5fddb2204de19248d846e2c84018a375\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_whitespace</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all whitespace from anywhere within a string. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414to_quoted_listRK12string_vec_tKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414to_quoted_listRK12string_vec_tKNSt6stringE\">\n<span id=\"_CPPv314to_quoted_listRK12string_vec_tKNSt6stringE\"></span><span id=\"_CPPv214to_quoted_listRK12string_vec_tKNSt6stringE\"></span><span id=\"to_quoted_list__string_vec_tCR.ssC\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4bb8ff513ee7a292f091bbeae9b44871\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_quoted_list</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_strings</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">quote</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"'\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a vector of strings, put them in quotes, and then transform it into an English list. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\">\n<span id=\"_CPPv3I0E9FindIndexRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\"></span><span id=\"_CPPv2I0E9FindIndexRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1afeb3012b6340c3ddfabe62775a48f32a\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\" title=\"FindIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\" title=\"FindIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindIndex6size_tRK1TRKNSt8functionIFbN1T10value_typeEN1T10value_typeEEEE\" title=\"FindIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the index with the \u201coptimal\u201d value (picks first in cases of a tie). </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv418to_web_safe_stringRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418to_web_safe_stringRKNSt6stringE\">\n<span id=\"_CPPv318to_web_safe_stringRKNSt6stringE\"></span><span id=\"_CPPv218to_web_safe_stringRKNSt6stringE\"></span><span id=\"to_web_safe_string__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a67c7e0d1bc0e87897a1f4fb6333ca538\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_web_safe_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a string and replace reserved HTML characters with character entities. </p></dd>", "a[href=\"library/web/api/js_utils.html#_CPPv4I_NSt6size_tE0E17pass_array_to_cppvR5arrayI1T4SIZEEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_NSt6size_tE0E17pass_array_to_cppvR5arrayI1T4SIZEEb\">\n<span id=\"_CPPv3I_NSt6size_tE0E17pass_array_to_cppR5arrayI1T4SIZEEb\"></span><span id=\"_CPPv2I_NSt6size_tE0E17pass_array_to_cppR5arrayI1T4SIZEEb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"js__utils_8hpp_1a05c8a6964ca6e0e9b153f79198194bd3\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pass_array_to_cpp</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_NSt6size_tE0E17pass_array_to_cppvR5arrayI1T4SIZEEb\" title=\"pass_array_to_cpp::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_NSt6size_tE0E17pass_array_to_cppvR5arrayI1T4SIZEEb\" title=\"pass_array_to_cpp::SIZE\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arr</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">recurse</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function lets you pass an array from javascript to C++! It takes a reference to the array as an argument and populates it with the contents of emp.__outgoing_array.</p><p>Currently accepts arrays of ints, floats, doubles, chars, and std::strings The size of the passed array must be equal to the size of the array stored in emp.__outgoing_array </p></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE14StaticBitValue\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE14StaticBitValue\">\n<span id=\"_CPPv3I_6size_tE14StaticBitValue\"></span><span id=\"_CPPv2I_6size_tE14StaticBitValue\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Bits_8hpp_1a9cd40719f1e60fe0afed98d7ad022a38\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StaticBitValue</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits_Data.html#_CPPv4I_6size_tE15Bits_StaticData\" title=\"Bits_StaticData\"><span class=\"n\"><span class=\"pre\">Bits_StaticData</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE14StaticBitValue\" title=\"StaticBitValue::MAX_BITS\"><span class=\"n\"><span class=\"pre\">MAX_BITS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv4I0E12ShuffleRangevR6RandomR6vectorI1TE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12ShuffleRangevR6RandomR6vectorI1TE6size_t6size_t\">\n<span id=\"_CPPv3I0E12ShuffleRangeR6RandomR6vectorI1TE6size_t6size_t\"></span><span id=\"_CPPv2I0E12ShuffleRangeR6RandomR6vectorI1TE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"random__utils_8hpp_1a91b27e340770ad83fc715d8da3c3e51d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ShuffleRange</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12ShuffleRangevR6RandomR6vectorI1TE6size_t6size_t\" title=\"ShuffleRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">first</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">last</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IDpE15is_std_functionINSt8functionIDp2TsEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE15is_std_functionINSt8functionIDp2TsEEE\">\n<span id=\"_CPPv3IDpE15is_std_functionINSt8functionIDp2TsEEE\"></span><span id=\"_CPPv2IDpE15is_std_functionINSt8functionIDp2TsEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__std__function_3_01std_1_1function_3_01Ts_8_8_8_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_std_function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE15is_std_functionINSt8functionIDp2TsEEE\" title=\"is_std_function&lt;std::function&lt;Ts...&gt;&gt;::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_Faintv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_Faintv\">\n<span id=\"_CPPv310ANSI_Faintv\"></span><span id=\"_CPPv210ANSI_Faintv\"></span><span id=\"ANSI_Faint\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8b1972130ecc575bacb7a955c46ad44b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Faint</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_reflect.html#_CPPv4I00E16SetDefaultMutFunvR5WORLD\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E16SetDefaultMutFunvR5WORLD\">\n<span id=\"_CPPv3I00E16SetDefaultMutFunR5WORLD\"></span><span id=\"_CPPv2I00E16SetDefaultMutFunR5WORLD\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__reflect_8hpp_1a06fbfd095f810d390a1de6bf577093c5\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDefaultMutFun</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E16SetDefaultMutFunvR5WORLD\" title=\"SetDefaultMutFun::WORLD\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0DpE13AdaptTemplate\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE13AdaptTemplate\">\n<span id=\"_CPPv3I0DpE13AdaptTemplate\"></span><span id=\"_CPPv2I0DpE13AdaptTemplate\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a19fff48441a7c5a168c08059e78a4ccb\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AdaptTemplate</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">AdaptTemplateHelper</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13AdaptTemplate\" title=\"AdaptTemplate::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13AdaptTemplate\" title=\"AdaptTemplate::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/regex_utils.html#_CPPv412regex_nestedcc6size_tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412regex_nestedcc6size_tb\">\n<span id=\"_CPPv312regex_nestedcc6size_tb\"></span><span id=\"_CPPv212regex_nestedcc6size_tb\"></span><span id=\"regex_nested__c.c.s.b\"></span><span class=\"target\" id=\"regex__utils_8hpp_1afc4ba1b2f2356bc0b5686b97375b44c7\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">regex_nested</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">open</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'('</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">close</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">')'</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">depth</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_at_newline</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4NK12SimpleParser19PhonyNameDueToError17MakeDatumAccessorERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SimpleParser19PhonyNameDueToError17MakeDatumAccessorERKNSt6stringE\">\n<span id=\"_CPPv3NK12SimpleParser19PhonyNameDueToError17MakeDatumAccessorERKNSt6stringE\"></span><span id=\"_CPPv2NK12SimpleParser19PhonyNameDueToError17MakeDatumAccessorERKNSt6stringE\"></span><span id=\"SimpleParser::PhonyNameDueToError::MakeDatumAccessor__ssCRC\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1a9dfb8f816489823dd885b01d75c86230\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SimpleParser19PhonyNameDueToError5fun_tE\" title=\"SimpleParser::PhonyNameDueToError::fun_t\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeDatumAccessor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/JSWrap.html#_CPPv414empCppCallbackK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414empCppCallbackK6size_t\">\n<span id=\"_CPPv314empCppCallbackK6size_t\"></span><span id=\"_CPPv214empCppCallbackK6size_t\"></span><span id=\"empCppCallback__sC\"></span><span class=\"target\" id=\"JSWrap_8hpp_1a0d0b46d5b38223bbc36fbdec69d7d519\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empCppCallback</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cb_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Once you use JSWrap to create an ID, you can call the wrapped function from Javascript by supplying CPPCallback with the id and all args. If running with Emscripten pthreads, this method is to be called from the DOM and it will forward the call to empDoCppCallback on the web worker hosting Empirical runtime. If not running with Emscripten pthreads, this method simply calls empDoCppCallback (on the main browser thread). </p></dd>", "a[href=\"library/math/api/sequence_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">sequence_utils.hpp<a class=\"headerlink\" href=\"#sequence-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for analyzing with generic sequence types. </p><p>\nA set of functions for analyzing sequences, including distance metrics (Hamming and Edit/Levenshtein) and alignment. </p>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E15BuildObjVector2vR6vectorI5OBJ_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15BuildObjVector2vR6vectorI5OBJ_TE\">\n<span id=\"_CPPv3I0E15BuildObjVector2R6vectorI5OBJ_TE\"></span><span id=\"_CPPv2I0E15BuildObjVector2R6vectorI5OBJ_TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aa0bf4bac96274b709f444fb18226182a\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector2</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15BuildObjVector2vR6vectorI5OBJ_TE\" title=\"BuildObjVector2::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/ArgManager.html#_CPPv4eqRK7ArgSpecRK7ArgSpec\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4eqRK7ArgSpecRK7ArgSpec\">\n<span id=\"_CPPv3eqRK7ArgSpecRK7ArgSpec\"></span><span id=\"_CPPv2eqRK7ArgSpecRK7ArgSpec\"></span><span id=\"eq-operator__ArgSpecCR.ArgSpecCR\"></span><span class=\"target\" id=\"ArgManager_8hpp_1a852f7230a0d01cbf0cd0ca469a157f6b\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">==</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47ArgSpec\" title=\"ArgSpec\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">lhs</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47ArgSpec\" title=\"ArgSpec\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rhs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/io/api/serialize.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">serialize.hpp<a class=\"headerlink\" href=\"#serialize-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to save and load data from classes. </p><p>\nAll of the important information about a class is stored in a DataPod, which can be used to restore the class at a later time.</p>", "a[href=\"library/evolve/api/NK-const.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">NK-const.hpp<a class=\"headerlink\" href=\"#nk-const-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file provides code to build NK landscapes, setup at compile time.. </p><p>Knowing the size of N and K at compile time allow for slightly more optimized code, at the expense of flexibility. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0I0E0E17variadic_filter_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0I0E0E17variadic_filter_t\">\n<span id=\"_CPPv3I0I0E0E17variadic_filter_t\"></span><span id=\"_CPPv2I0I0E0E17variadic_filter_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Filter</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a3172dc808c381b67a56cdebb2a4518f3\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_filter_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0I0E0E15variadic_filter\" title=\"variadic_filter\"><span class=\"n\"><span class=\"pre\">variadic_filter</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0I0E0E17variadic_filter_t\" title=\"variadic_filter_t::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0I0E0E17variadic_filter_t\" title=\"variadic_filter_t::Filter\"><span class=\"n\"><span class=\"pre\">Filter</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/Table.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Table.hpp<a class=\"headerlink\" href=\"#table-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specs for the Table widget. </p><p>TableInfo is the core information for a table and has two helper classes: TableRowInfo and TableDataInfo. The Table class is a smart pointer to a TableInfo object.</p>", "a[href=\"library/data/api/Trait.html#_CPPv4I0E9BaseTrait\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9BaseTrait\">\n<span id=\"_CPPv3I0E9BaseTrait\"></span><span id=\"_CPPv2I0E9BaseTrait\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TARGET_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseTrait\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BaseTrait</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE10first_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE10first_type\">\n<span id=\"_CPPv3IDpE10first_type\"></span><span id=\"_CPPv2IDpE10first_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a37c3cf96964f996e0e5cc34046f13977\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">first_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE10type_index\" title=\"type_index\"><span class=\"n\"><span class=\"pre\">type_index</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE10first_type\" title=\"first_type::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">t1</span></span><br/></dt><dd><p>Trim off a specific type position from a pack. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv4I0E4Drawv6CanvasRK9Surface2DI9BODY_TYPEERK6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4Drawv6CanvasRK9Surface2DI9BODY_TYPEERK6vectorINSt6stringEE\">\n<span id=\"_CPPv3I0E4Draw6CanvasRK9Surface2DI9BODY_TYPEERK6vectorINSt6stringEE\"></span><span id=\"_CPPv2I0E4Draw6CanvasRK9Surface2DI9BODY_TYPEERK6vectorINSt6stringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"canvas__utils_8hpp_1a201b657a2958370d603de26691193a61\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/geometry/api/Surface2D.html#_CPPv4I0E9Surface2D\" title=\"Surface2D\"><span class=\"n\"><span class=\"pre\">Surface2D</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E4Drawv6CanvasRK9Surface2DI9BODY_TYPEERK6vectorINSt6stringEE\" title=\"Draw::BODY_TYPE\"><span class=\"n\"><span class=\"pre\">BODY_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">surface</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a Surface2D, specifying the full colormap to be used. The surface has a range of circle bodies, each with a color id. </p></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv418RouletteCacheState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418RouletteCacheState\">\n<span id=\"_CPPv318RouletteCacheState\"></span><span id=\"_CPPv218RouletteCacheState\"></span><span id=\"RouletteCacheState\"></span><span class=\"target\" id=\"structRouletteCacheState\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RouletteCacheState</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv414CacheStateBase\" title=\"CacheStateBase\"><span class=\"n\"><span class=\"pre\">CacheStateBase</span></span></a><br/></dt><dd></dd>", "a[href=\"library/base/api/unordered_map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">unordered_map.hpp<a class=\"headerlink\" href=\"#unordered-map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in wrapper for std::unordered_map and unordered_multi_map; makes sure we create vars on access. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E11from_string1TNSt11string_viewE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11from_string1TNSt11string_viewE\">\n<span id=\"_CPPv3I0E11from_stringNSt11string_viewE\"></span><span id=\"_CPPv2I0E11from_stringNSt11string_viewE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1aba2287e320b29ce1d964d60ba99aa955\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11from_string1TNSt11string_viewE\" title=\"from_string::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">from_string</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function tries to convert a string_view into any other type\u2026 You must need to specify the out type as the template argument. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417to_escaped_stringRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417to_escaped_stringRKNSt6stringE\">\n<span id=\"_CPPv317to_escaped_stringRKNSt6stringE\"></span><span id=\"_CPPv217to_escaped_stringRKNSt6stringE\"></span><span id=\"to_escaped_string__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3de1eb5199352ba0f566df9ff82438d0\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_escaped_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a full string to one that uses proper escape sequences, as needed. </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv49MAX_3BYTE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MAX_3BYTE\">\n<span id=\"_CPPv39MAX_3BYTE\"></span><span id=\"_CPPv29MAX_3BYTE\"></span><span id=\"MAX_3BYTE__uint32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1a6adc91fdf1cea7a3246c060e4fb5a0b0\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_3BYTE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">16777215</span></span><br/></dt><dd><p>(2^24 - 1) </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv49HasExceptv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49HasExceptv\">\n<span id=\"_CPPv39HasExceptv\"></span><span id=\"_CPPv29HasExceptv\"></span><span id=\"HasExcept\"></span><span class=\"target\" id=\"errors_8hpp_1a9eecd70b09ef6b7a033c4016e7d88d2b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Are any exceptions waiting? </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv410ExceptInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ExceptInfo\">\n<span id=\"_CPPv310ExceptInfo\"></span><span id=\"_CPPv210ExceptInfo\"></span><span id=\"ExceptInfo\"></span><span class=\"target\" id=\"structExceptInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></span><br/></dt><dd><p>Information about an exception that has occured. </p></dd>", "a[href=\"library/control/api/SignalManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SignalManager.hpp<a class=\"headerlink\" href=\"#signalmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines the SignalManager class, which collects sets of Signals to be looked up or manipulated later. </p>", "a[href=\"library/hardware/api/AvidaGP.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">AvidaGP.hpp<a class=\"headerlink\" href=\"#avidagp-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This is a simple, efficient CPU for and applied version of Avida. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Should we save a copy of the original genome? (or create a new \u201cmemory\u201d member) </p>\n<p>We should clean up how we handle scope; the root scope is zero, so the arg-based scopes are 1-16 (or however many). Right now we increment the value in various places and should be more consistent. </p>\n<p>How should Avida-GP organisms take an action? Options include sending ALL outputs and picking the maximum field; sending a single output and using its value; having specialized commands\u2026 </p>\n</dd></dl>\n</p>", "a[href=\"library/meta/api/TypePack.html#_CPPv4IDpE11is_TypePackI8TypePackIDp2TsEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11is_TypePackI8TypePackIDp2TsEE\">\n<span id=\"_CPPv3IDpE11is_TypePackI8TypePackIDp2TsEE\"></span><span id=\"_CPPv2IDpE11is_TypePackI8TypePackIDp2TsEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__TypePack_3_01TypePack_3_01Ts_8_8_8_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_TypePack</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE8TypePack\" title=\"TypePack\"><span class=\"n\"><span class=\"pre\">TypePack</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11is_TypePackI8TypePackIDp2TsEE\" title=\"is_TypePack&lt;TypePack&lt;Ts...&gt;&gt;::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\">\n<span id=\"_CPPv3I000E6NoneOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span id=\"_CPPv2I000E6NoneOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1ac0ef35787c09062bc92f4013f143470d\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NoneOf</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"NoneOf::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"NoneOf::ELEMENT_T\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E6NoneOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"NoneOf::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E13is_emp_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13is_emp_vector\">\n<span id=\"_CPPv3I0E13is_emp_vector\"></span><span id=\"_CPPv2I0E13is_emp_vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__emp__vector\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_emp_vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd><p>Determine if we have an vector. </p></dd>", "a[href=\"library/config/config.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/data/api/Datum.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Datum.hpp<a class=\"headerlink\" href=\"#datum-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A single piece of data, either a value or a string. </p><p>\nDEVELOPER NOTES:<ul class=\"simple\">\n<li><p>For now, using unions, but this creates complications with non-trivial constructor/destructor for strings, so could try shifting over. </p></li>\n</ul>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv412slice_assignRKNSt11string_viewEKcNSt6stringEK6size_tKbKbKbKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412slice_assignRKNSt11string_viewEKcNSt6stringEK6size_tKbKbKbKbKb\">\n<span id=\"_CPPv312slice_assignRKNSt11string_viewEKcNSt6stringEK6size_tKbKbKbKbKb\"></span><span id=\"_CPPv212slice_assignRKNSt11string_viewEKcNSt6stringEK6size_tKbKbKbKbKb\"></span><span id=\"slice_assign__std::string_viewCR.cC.ss.sC.bC.bC.bC.bC.bC\"></span><span class=\"target\" id=\"string__utils_8hpp_1aaf9fc40c4d9f5bdca3732cbc70518911\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">slice_assign</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">','</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">assign_op</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"=\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_split</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">trim_whitespace</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Slice a string without passing in result vector (may be less efficient). </p></dd>", "a[href=\"library/compiler/api/Lexer.html#_CPPv45Token\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Token\">\n<span id=\"_CPPv35Token\"></span><span id=\"_CPPv25Token\"></span><span id=\"Token\"></span><span class=\"target\" id=\"structToken\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Token</span></span></span><br/></dt><dd><p>Information about a token instance from an input stream. </p></dd>", "a[href=\"library/tools/api/TypeTracker.html#_CPPv4IDpE11TypeTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11TypeTracker\">\n<span id=\"_CPPv3IDpE11TypeTracker\"></span><span id=\"_CPPv2IDpE11TypeTracker\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeTracker\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeTracker</span></span></span><br/></dt><dd><p>Dynamic functions that are indexed by parameter types; calls lookup the correct function to forward arguments into. </p></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv48OnResizeRKNSt8functionIFvvEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48OnResizeRKNSt8functionIFvvEEE\">\n<span id=\"_CPPv38OnResizeRKNSt8functionIFvvEEE\"></span><span id=\"_CPPv28OnResizeRKNSt8functionIFvvEEE\"></span><span class=\"target\" id=\"emfunctions_8hpp_1aeefb45ba631fd9f31a8a2e6b2b18fb60\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OnResize</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a function to call whenever a window\u2019s size changes (no arguments). </p></dd>", "a[href=\"library/config/api/command_line.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">command_line.hpp<a class=\"headerlink\" href=\"#command-line-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file contains tools for dealing with command-line arguments (argv and argc). </p><p>Functions here include:</p>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv416BitFieldToString12bits_field_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416BitFieldToString12bits_field_t\">\n<span id=\"_CPPv316BitFieldToString12bits_field_t\"></span><span id=\"_CPPv216BitFieldToString12bits_field_t\"></span><span id=\"BitFieldToString__bits_field_t\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1a3039c6f7848346eb7378c54ca99fa081\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitFieldToString</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv412bits_field_t\" title=\"bits_field_t\"><span class=\"n\"><span class=\"pre\">bits_field_t</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">field</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a single bit field to a string. </p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv4I0_Dp4dataE11DataMonitor\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_Dp4dataE11DataMonitor\">\n<span id=\"_CPPv3I0_Dp4dataE11DataMonitor\"></span><span id=\"_CPPv2I0_Dp4dataE11DataMonitor\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MODS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"DataNode_8hpp_1aea6f56153cf9aedc219a89c9e559392b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataMonitor</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE8DataNode\" title=\"DataNode\"><span class=\"n\"><span class=\"pre\">DataNode</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE11DataMonitor\" title=\"DataMonitor::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data7CurrentE\" title=\"data::Current\"><span class=\"n\"><span class=\"pre\">Current</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data4InfoE\" title=\"data::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data5RangeE\" title=\"data::Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data5StatsE\" title=\"data::Stats\"><span class=\"n\"><span class=\"pre\">Stats</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE11DataMonitor\" title=\"DataMonitor::MODS\"><span class=\"n\"><span class=\"pre\">MODS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A node that stores data about the most recent value it received, as well as the distribution (min, max, count, total, and mean) of values it has received since the last reset. It also allows you to give it a name, description, and keyword. </p></dd>", "a[href=\"library/math/api/sequence_utils.html#_CPPv4I0E18calc_edit_distance6size_tRK4TYPERK4TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E18calc_edit_distance6size_tRK4TYPERK4TYPE\">\n<span id=\"_CPPv3I0E18calc_edit_distanceRK4TYPERK4TYPE\"></span><span id=\"_CPPv2I0E18calc_edit_distanceRK4TYPERK4TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"sequence__utils_8hpp_1a3499809beac06b7e061ec073027c2605\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">calc_edit_distance</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E18calc_edit_distance6size_tRK4TYPERK4TYPE\" title=\"calc_edit_distance::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E18calc_edit_distance6size_tRK4TYPERK4TYPE\" title=\"calc_edit_distance::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Edit distance is the minimum number of insertions, deletions and substitutions to convert one array to another. </p></dd>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\">\n<span id=\"_CPPv3I0E23SmallVectorTemplateBaseI1TXL1EEE\"></span><span id=\"_CPPv2I0E23SmallVectorTemplateBaseI1TXtrueEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase_3_01T_00_01true_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23SmallVectorTemplateBaseI1TXL1EEE\" title=\"SmallVectorTemplateBase&lt;T, true&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>SmallVectorTemplateBase&lt;TriviallyCopyable = true&gt; - This is where we put method implementations that are designed to work with POD-like T\u2019s. </p></dd>", "a[href=\"library/datastructs/api/hash_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">hash_utils.hpp<a class=\"headerlink\" href=\"#hash-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file provides tools for hashing values and containers. </p>", "a[href=\"library/evolve/api/SystematicsAnalysis.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SystematicsAnalysis.hpp<a class=\"headerlink\" href=\"#systematicsanalysis-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TODO. </p>", "a[href=\"library/functional/api/AnyFunction.html#_CPPv412BaseFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412BaseFunction\">\n<span id=\"_CPPv312BaseFunction\"></span><span id=\"_CPPv212BaseFunction\"></span><span id=\"BaseFunction\"></span><span class=\"target\" id=\"classBaseFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></span><br/></dt><dd><p>An BaseFunction object can be converted back into the derived type with the .Convert&lt;return(args\u2026)&gt;() member function. </p><p>Subclassed by DerivedFunction&lt; RETURN(PARAMS\u2026)&gt;</p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E6IntPow4TYPE4TYPE4TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6IntPow4TYPE4TYPE4TYPE\">\n<span id=\"_CPPv3I0E6IntPow4TYPE4TYPE\"></span><span id=\"_CPPv2I0E6IntPow4TYPE4TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1ac215ac1af3c17b60cfae2fec3ed0f3d4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6IntPow4TYPE4TYPE4TYPE\" title=\"IntPow::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IntPow</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6IntPow4TYPE4TYPE4TYPE\" title=\"IntPow::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">base</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E6IntPow4TYPE4TYPE4TYPE\" title=\"IntPow::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">exp</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A fast method for calculating exponents for int types. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I000DpE15BuildObjVector2vR6vectorI5OBJ_TER2T1R2T2DpR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000DpE15BuildObjVector2vR6vectorI5OBJ_TER2T1R2T2DpR2Ts\">\n<span id=\"_CPPv3I000DpE15BuildObjVector2R6vectorI5OBJ_TER2T1R2T2DpR2Ts\"></span><span id=\"_CPPv2I000DpE15BuildObjVector2R6vectorI5OBJ_TER2T1R2T2DpR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1ab7d6f749d43a7b3a2033014da00f3a58\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector2</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000DpE15BuildObjVector2vR6vectorI5OBJ_TER2T1R2T2DpR2Ts\" title=\"BuildObjVector2::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000DpE15BuildObjVector2vR6vectorI5OBJ_TER2T1R2T2DpR2Ts\" title=\"BuildObjVector2::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000DpE15BuildObjVector2vR6vectorI5OBJ_TER2T1R2T2DpR2Ts\" title=\"BuildObjVector2::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000DpE15BuildObjVector2vR6vectorI5OBJ_TER2T1R2T2DpR2Ts\" title=\"BuildObjVector2::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/errors.html#_CPPv49HasExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49HasExceptRKNSt6stringE\">\n<span id=\"_CPPv39HasExceptRKNSt6stringE\"></span><span id=\"_CPPv29HasExceptRKNSt6stringE\"></span><span id=\"HasExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1a37c84e221d4cebdda64d49ec5d35f721\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Are any exceptions of a particular type waiting? </p></dd>", "a[href=\"library/functional/api/AnyFunction.html#_CPPv411AnyFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411AnyFunction\">\n<span id=\"_CPPv311AnyFunction\"></span><span id=\"_CPPv211AnyFunction\"></span><span id=\"AnyFunction\"></span><span class=\"target\" id=\"classAnyFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyFunction</span></span></span><br/></dt><dd><p>AnyFunction manages the function pointers to be dynamically handled. </p></dd>", "a[href=\"library/base/api/unordered_map.html#_CPPv4I00DpE13unordered_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE13unordered_map\">\n<span id=\"_CPPv3I00DpE13unordered_map\"></span><span id=\"_CPPv2I00DpE13unordered_map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classunordered__map\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">unordered_map</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE13unordered_map\" title=\"unordered_map::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE13unordered_map\" title=\"unordered_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE13unordered_map\" title=\"unordered_map::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv44Pow2d\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Pow2d\">\n<span id=\"_CPPv34Pow2d\"></span><span id=\"_CPPv24Pow2d\"></span><span id=\"Pow2__doubleCE\"></span><span class=\"target\" id=\"math_8hpp_1a3355f7a783877a89574a4fd9cbf72e50\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Pow2</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">exp</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A fast 2^x command. </p></dd>", "a[href=\"library/geometry/api/Body2D.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Body2D.hpp<a class=\"headerlink\" href=\"#body2d-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines classes to represent bodies that exist on a 2D surface. </p><p>Each class should be able to:<ul class=\"simple\">\n<li><p>Maintain a pointer to information about the full organism associated with this body.</p></li>\n<li><p>provide a circular perimeter of the body (for phase1 of collision detection)</p></li>\n<li><p>Provide body an anchor point and center point of the body (typically the same)</p></li>\n</ul>\n</p>", "a[href=\"library/data/api/DataNode.html#_CPPv411StatsModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411StatsModule\">\n<span id=\"_CPPv311StatsModule\"></span><span id=\"_CPPv211StatsModule\"></span><span id=\"StatsModule\"></span><span class=\"target\" id=\"classStatsModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StatsModule</span></span></span><br/></dt><dd><p>== data::Stats == Note: These statistics are calculated with the assumption that the data this node has received is the entire population of measurements we\u2019re interested in, not a sample.</p><p>Note 2: Kurtosis is calculated using Snedecor and Cochran (1967)\u2019s formula. A perfect normal distribution has a kurtosis of 0. To use this class, add data::Stats to the template arguments on your DataNode. Do not use the StatsModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE21ExactDualStreakMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE21ExactDualStreakMetric\">\n<span id=\"_CPPv3I_6size_tE21ExactDualStreakMetric\"></span><span id=\"_CPPv2I_6size_tE21ExactDualStreakMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structExactDualStreakMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExactDualStreakMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE21ExactDualStreakMetric\" title=\"ExactDualStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE21ExactDualStreakMetric\" title=\"ExactDualStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Matches based on longest streaks of equal and unequal bits in two bitsets. This implementation uses Corect Math adapted from <a class=\"reference external\" href=\"https://www.askamathematician.com/2010/07/q-whats-the-chance-of-getting-a-run-of-k-successes-in-n-bernoulli-trials-why-use-approximations-when-the-exact-answer-is-known/\">https://www.askamathematician.com/2010/07/q-whats-the-chance-of-getting-a-run-of-k-successes-in-n-bernoulli-trials-why-use-approximations-when-the-exact-answer-is-known/</a> This metric is NOT uniformly distributed. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00I00EDpE19variadic_index_of_v\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00I00EDpE19variadic_index_of_v\">\n<span id=\"_CPPv3I00I00EDpE19variadic_index_of_v\"></span><span id=\"_CPPv2I00I00EDpE19variadic_index_of_v\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Needle</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1ab902a775681417a30f0e6285b91344a5\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_index_of_v</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><a class=\"reference internal\" href=\"#_CPPv4I00I00E0E17variadic_index_of\" title=\"variadic_index_of\"><span class=\"n\"><span class=\"pre\">variadic_index_of</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00I00EDpE19variadic_index_of_v\" title=\"variadic_index_of_v::Needle\"><span class=\"n\"><span class=\"pre\">Needle</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00I00EDpE19variadic_index_of_v\" title=\"variadic_index_of_v::Haystack\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00I00EDpE19variadic_index_of_v\" title=\"variadic_index_of_v::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/CanvasShape.html#_CPPv415CanvasClearRect\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415CanvasClearRect\">\n<span id=\"_CPPv315CanvasClearRect\"></span><span id=\"_CPPv215CanvasClearRect\"></span><span id=\"CanvasClearRect\"></span><span class=\"target\" id=\"classCanvasClearRect\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasClearRect</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>Clear a rectangular area in a canvas. </p></dd>", "a[href=\"library/data/api/Datum.html#_CPPv45Datum\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Datum\">\n<span id=\"_CPPv35Datum\"></span><span id=\"_CPPv25Datum\"></span><span id=\"Datum\"></span><span class=\"target\" id=\"classDatum\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Datum</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I_6size_tDpE7pack_id\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tDpE7pack_id\">\n<span id=\"_CPPv3I_6size_tDpE7pack_id\"></span><span id=\"_CPPv2I_6size_tDpE7pack_id\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ID</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1acfb37f238dc62ae91bb852fb12cbd2b0\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pack_id</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pack_id_impl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tDpE7pack_id\" title=\"pack_id::ID\"><span class=\"n\"><span class=\"pre\">ID</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tDpE7pack_id\" title=\"pack_id::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd><p>Pick a specific position from a type pack. </p></dd>", "a[href=\"library/web/api/TextFeed.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TextFeed.hpp<a class=\"headerlink\" href=\"#textfeed-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A representation of text on a web page optimized for rapid appends. </p>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E9int_decoy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9int_decoy\">\n<span id=\"_CPPv3I0E9int_decoy\"></span><span id=\"_CPPv2I0E9int_decoy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aef30ddd919076d3ac8079bee27862d5b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_decoy</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/ra_set.html#_CPPv4I0E6ra_set\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6ra_set\">\n<span id=\"_CPPv3I0E6ra_set\"></span><span id=\"_CPPv2I0E6ra_set\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classra__set\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_set</span></span></span><br/></dt><dd><p>This class uses a combination of a hashtable (std::unordered_map) and vector to lookup insert, lookup, and delete values in constant time, while still being able to step through all values (albeit in an arbitrary order).</p></dd>", "a[href=\"QuickStartGuides/0-Overview.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Overview<a class=\"headerlink\" href=\"#overview\" title=\"Link to this heading\">\uf0c1</a></h1><p>The goal of Empirical is to simplify the development of efficient,\nreliable, and accessible scientific software.</p><p>We have several quick-start guides for different portions of the code.</p>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0E12SelectorBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SelectorBase\">\n<span id=\"_CPPv3I0E12SelectorBase\"></span><span id=\"_CPPv2I0E12SelectorBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CacheType</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structSelectorBase\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SelectorBase</span></span></span><br/></dt><dd><p>Abstract base class for selectors. </p></dd>", "a[href=\"library/tools/tools.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/string_utils.html#_CPPv415ViewNestedBlockNSt11string_viewEKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415ViewNestedBlockNSt11string_viewEKNSt6stringE6size_t\">\n<span id=\"_CPPv315ViewNestedBlockNSt11string_viewEKNSt6stringE6size_t\"></span><span id=\"_CPPv215ViewNestedBlockNSt11string_viewEKNSt6stringE6size_t\"></span><span id=\"ViewNestedBlock__std::string_view.ssC.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a755caff84fd0f9c765a9e3a88e74503c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ViewNestedBlock</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">symbols</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"()\"</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>View a section of a string with the properly matching nested blocks. For example if ((abc(de))f(ghi)) would return \u201c(abc(de))f(ghi)\u201d at 0, \u201cde\u201d at 5, or \u201c\u201d at 2 (since there is no start!) </p></dd>", "a[href=\"library/data/api/DataLog.html#_CPPv4I0E7DataLog\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7DataLog\">\n<span id=\"_CPPv3I0E7DataLog\"></span><span id=\"_CPPv2I0E7DataLog\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDataLog\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataLog</span></span></span><br/></dt><dd></dd>", "a[href=\"library/scholar/api/Bibliography.html#_CPPv412Bibliography\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412Bibliography\">\n<span id=\"_CPPv312Bibliography\"></span><span id=\"_CPPv212Bibliography\"></span><span id=\"Bibliography\"></span><span class=\"target\" id=\"classBibliography\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bibliography</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE11second_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11second_type\">\n<span id=\"_CPPv3IDpE11second_type\"></span><span id=\"_CPPv2IDpE11second_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a8a3ea5eda09d9746f8ba6a27998df5ee\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">second_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE10type_index\" title=\"type_index\"><span class=\"n\"><span class=\"pre\">type_index</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11second_type\" title=\"second_type::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">t2</span></span><br/></dt><dd></dd>", "a[href=\"library/bits/bits.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv416load_graph_tableNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416load_graph_tableNSt6stringE\">\n<span id=\"_CPPv316load_graph_tableNSt6stringE\"></span><span id=\"_CPPv216load_graph_tableNSt6stringE\"></span><span id=\"load_graph_table__ss\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a94ba68b330de5e151df726d00a9067c8\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_table</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Load a graph from a connection matrix in a file by the specified name. </p></dd>", "a[href=\"library/web/api/Div.html#_CPPv43Div\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43Div\">\n<span id=\"_CPPv33Div\"></span><span id=\"_CPPv23Div\"></span><span id=\"Div\"></span><span class=\"target\" id=\"classDiv\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Div</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A widget to track a div in an HTML file, and all of its contents. </p><p>Subclassed by Card, CommentBox, ConfigPanel, Document, Element, Modal, ValueBox</p></dd>", "a[href=\"library/math/api/math.html#_CPPv4IDpE7AnyTruebbDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE7AnyTruebbDp2Ts\">\n<span id=\"_CPPv3IDpE7AnyTruebDp2Ts\"></span><span id=\"_CPPv2IDpE7AnyTruebDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a84e11e43f933ac2d3cff5c7dfbc7d4d5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyTrue</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">result</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE7AnyTruebbDp2Ts\" title=\"AnyTrue::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">OTHER</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_Resetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_Resetv\">\n<span id=\"_CPPv310ANSI_Resetv\"></span><span id=\"_CPPv210ANSI_Resetv\"></span><span id=\"ANSI_Reset\"></span><span class=\"target\" id=\"string__utils_8hpp_1ab07e98c587ab424898ba1734afd77aa8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Reset</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/base.html#empirical-warnings\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Empirical Warnings<a class=\"headerlink\" href=\"#empirical-warnings\" title=\"Link to this heading\">\uf0c1</a></h2><p>These work very similar to Empirical asserts, except they do not throw assertion errors. When compiled in debug mode, they will print a warning (and any desired additional information) on failure but program execution will continue. When compiled outside of debug mode they do nothing.</p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\">\n<span id=\"_CPPv3I00DpE6AppendR6vectorI1TERK2V1DpRK2Vs\"></span><span id=\"_CPPv2I00DpE6AppendR6vectorI1TERK2V1DpRK2Vs\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Vs</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ad0f2ad3961a515c885c05fc9c45e556d\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Append</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">base</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::V1\"><span class=\"n\"><span class=\"pre\">V1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE6AppendR6vectorI1TER6vectorI1TERK2V1DpRK2Vs\" title=\"Append::Vs\"><span class=\"n\"><span class=\"pre\">Vs</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Append one or more vectors on to the end of an existing vector. </p></dd>", "a[href=\"library/data/api/DataInterface.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataInterface.hpp<a class=\"headerlink\" href=\"#datainterface-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>DataInterface is a <em>generic</em> interface to a DataNode. </p>", "a[href=\"library/base/api/Ptr.html#_CPPv411GetPtrDebugv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411GetPtrDebugv\">\n<span id=\"_CPPv311GetPtrDebugv\"></span><span id=\"_CPPv211GetPtrDebugv\"></span><span id=\"GetPtrDebug\"></span><span class=\"target\" id=\"Ptr_8hpp_1abc88a95cab0bbdae5e97b69bc548f95f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetPtrDebug</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv411SetPtrDebugb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411SetPtrDebugb\">\n<span id=\"_CPPv311SetPtrDebugb\"></span><span id=\"_CPPv211SetPtrDebugb\"></span><span id=\"SetPtrDebug__b\"></span><span class=\"target\" id=\"Ptr_8hpp_1a653dbe3ec1e0bc84926a6fff815d24e4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetPtrDebug</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_d</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#useful-background-information\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Useful background information<a class=\"headerlink\" href=\"#useful-background-information\" title=\"Link to this heading\">\uf0c1</a></h3><p>There are certain quirks associated with real-time phylogenies that you might not be used to thinking about if you\u2019re used to dealing with reconstructed phylogenies. Many of these discrepancies are the result of the very different temporal resolutions on which these types of phylogenies are measured, and the fact that the taxonomic units we work with are often at a finer resolution than species. We document some here so that they don\u2019t catch you off guard:</p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E12FindMaxIndex6size_tRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12FindMaxIndex6size_tRK1T\">\n<span id=\"_CPPv3I0E12FindMaxIndexRK1T\"></span><span id=\"_CPPv2I0E12FindMaxIndexRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a973a451e854aa77949fc1f5cee6c4b24\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMaxIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12FindMaxIndex6size_tRK1T\" title=\"FindMaxIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the index with the maximal value (picks first in cases of a tie). </p></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv411murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\">\n<span id=\"_CPPv311murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\"></span><span id=\"_CPPv211murmur_hashKNSt4spanIKNSt4byteEEEK8uint64_t\"></span><span id=\"murmur_hash__std::span:std::byteC:C.uint64_tCCE\"></span><span class=\"target\" id=\"hash__utils_8hpp_1afe9b35a3c7e31b458e9fd9e7f93bb6d5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">murmur_hash</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">byte</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">seed</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Implementation of the murmur3 hash, a fast hash with low collisions. This hash makes it suitable for hash-based lookups. For more info, see: <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/MurmurHash\">https://en.wikipedia.org/wiki/MurmurHash</a> This implementation was directly based on: <a class=\"reference external\" href=\"https://github.com/aappleby/smhasher/blob/92cf3702fcfaadc84eb7bef59825a23e0cd84f56/src/MurmurHash3.cpp\">https://github.com/aappleby/smhasher/blob/92cf3702fcfaadc84eb7bef59825a23e0cd84f56/src/MurmurHash3.cpp</a> </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412ANSI_BlackBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ANSI_BlackBGv\">\n<span id=\"_CPPv312ANSI_BlackBGv\"></span><span id=\"_CPPv212ANSI_BlackBGv\"></span><span id=\"ANSI_BlackBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a90705dfe9ca9eed7500e098cda74773b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BlackBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/LinearCode.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">LinearCode.hpp<a class=\"headerlink\" href=\"#linearcode-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A linear sequence of instructions. </p>", "a[href=\"library/math/api/stats.html#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E13ApplyFunctionRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E13ApplyFunctionRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a5d281e9336fad564b0e97c329500320e\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ApplyFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E13ApplyFunction6vectorI8RET_TYPEERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"ApplyFunction::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return a vector of ALL results. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv414run_and_ignore\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414run_and_ignore\">\n<span id=\"_CPPv314run_and_ignore\"></span><span id=\"_CPPv214run_and_ignore\"></span><span id=\"run_and_ignore\"></span><span class=\"target\" id=\"structrun__and__ignore\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">run_and_ignore</span></span></span><br/></dt><dd><p>Effectively create a function (via constructor) where all args are computed, then ignored. </p></dd>", "a[href=\"library/text/api/EmphaticEncoding.html#_CPPv4IDpE16MakeEmphaticText4TextDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE16MakeEmphaticText4TextDpRR2Ts\">\n<span id=\"_CPPv3IDpE16MakeEmphaticTextDpRR2Ts\"></span><span id=\"_CPPv2IDpE16MakeEmphaticTextDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"EmphaticEncoding_8hpp_1a220bf45477a035beea1249931f568d20\"></span><a class=\"reference internal\" href=\"library/text/api/Text.html#_CPPv44Text\" title=\"Text\"><span class=\"n\"><span class=\"pre\">Text</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeEmphaticText</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE16MakeEmphaticText4TextDpRR2Ts\" title=\"MakeEmphaticText::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv410MakeStringRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410MakeStringRK6String\">\n<span id=\"_CPPv310MakeStringRK6String\"></span><span id=\"_CPPv210MakeStringRK6String\"></span><span id=\"MakeString__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1a5cffb13d43fd24484ff12888f6d06b0e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/spatial_stats.html#_CPPv4I0E16GridPointDensitydR5WorldI3ORGE6size_t6size_ti\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16GridPointDensitydR5WorldI3ORGE6size_t6size_ti\">\n<span id=\"_CPPv3I0E16GridPointDensityR5WorldI3ORGE6size_t6size_ti\"></span><span id=\"_CPPv2I0E16GridPointDensityR5WorldI3ORGE6size_t6size_ti\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"spatial__stats_8hpp_1a159a5a5a1bfa906042a523a5ab85bd8a\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GridPointDensity</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16GridPointDensitydR5WorldI3ORGE6size_t6size_ti\" title=\"GridPointDensity::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">w</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">xid</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">yid</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">neighborhood_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE13int_bit_countIXL64EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE13int_bit_countIXL64EEE\">\n<span id=\"_CPPv3IE13int_bit_countIXL64EEE\"></span><span id=\"_CPPv2IE13int_bit_countIX64EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structint__bit__count_3_0164_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">64</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv415MakeRemoveChars6StringRK7CharSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415MakeRemoveChars6StringRK7CharSet\">\n<span id=\"_CPPv315MakeRemoveChars6StringRK7CharSet\"></span><span id=\"_CPPv215MakeRemoveChars6StringRK7CharSet\"></span><span id=\"MakeRemoveChars__String.CharSetCR\"></span><span class=\"target\" id=\"String_8hpp_1af197fcd656b959daec75b7fe74a0306b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeRemoveChars</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">chars</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all instances of specified characters from file. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv49tree_left6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49tree_left6size_t\">\n<span id=\"_CPPv39tree_left6size_t\"></span><span id=\"_CPPv29tree_left6size_t\"></span><span id=\"tree_left__sCE\"></span><span class=\"target\" id=\"vector__utils_8hpp_1aefa5950206da0188f259e1ec34f4d188\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tree_left</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Tree manipulation in vectors. </p></dd>", "a[href=\"library/bits/api/BitArray.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BitArray.hpp<a class=\"headerlink\" href=\"#bitarray-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>An Array of a fixed number of bits; similar to std::bitset, but with extra bit magic. Status: RELEASE. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Some of the functions allow a start bit and end bit; each of these should be checked to make sure that they will work if the start and end are part of the same byte. One option is to do this well ONCE with a macro that properly fills in the details. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv412left_justifyRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412left_justifyRNSt6stringE\">\n<span id=\"_CPPv312left_justifyRNSt6stringE\"></span><span id=\"_CPPv212left_justifyRNSt6stringE\"></span><span id=\"left_justify__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a918581035a8f843bd19011043cd899a9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">left_justify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all whitespace at the beginning of a string. Return the whitespace removed. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00DpE21has_unique_first_typebv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE21has_unique_first_typebv\">\n<span id=\"_CPPv3I00DpE21has_unique_first_typev\"></span><span id=\"_CPPv2I00DpE21has_unique_first_typev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE_LIST</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1af2b7b60228b5b68f3bc977b3d5f2b450\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_unique_first_type</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv47find_idNSt11string_viewENSt6stringE6size_tbbbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47find_idNSt11string_viewENSt6stringE6size_tbbbb\">\n<span id=\"_CPPv37find_idNSt11string_viewENSt6stringE6size_tbbbb\"></span><span id=\"_CPPv27find_idNSt11string_viewENSt6stringE6size_tbbbb\"></span><span id=\"find_id__std::string_view.ss.s.b.b.b.b\"></span><span class=\"target\" id=\"string__utils_8hpp_1a1638351251e246c10554dfef8bb408dc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_id</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3MinRK1TNSt16initializer_listIRK1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3MinRK1TNSt16initializer_listIRK1TEE\">\n<span id=\"_CPPv3I0E3MinNSt16initializer_listIRK1TEE\"></span><span id=\"_CPPv2I0E3MinNSt16initializer_listIRK1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1ac3e9e52a38631b307779f049bab0b848\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MinRK1TNSt16initializer_listIRK1TEE\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Min</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MinRK1TNSt16initializer_listIRK1TEE\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">lst</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A version of Min that allows a variable number of inputs to be compared. </p></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv414load_graph_symNSt6stringEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414load_graph_symNSt6stringEb\">\n<span id=\"_CPPv314load_graph_symNSt6stringEb\"></span><span id=\"_CPPv214load_graph_symNSt6stringEb\"></span><span id=\"load_graph_sym__ss.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a4afcf11cf8bd25b90511f8fb90431dfc\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_sym</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">sub1</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Load a graph with a specified filename. </p></dd>", "a[href=\"library/io/api/NullStream.html#_CPPv44nout\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44nout\">\n<span id=\"_CPPv34nout\"></span><span id=\"_CPPv24nout\"></span><span id=\"nout__NullStream\"></span><span class=\"target\" id=\"NullStream_8hpp_1ad13cef470642d596566b7b79ee1d59a9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410NullStream\" title=\"NullStream\"><span class=\"n\"><span class=\"pre\">NullStream</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">nout</span></span></span><br/></dt><dd><p>No-operation drop-in replacement for std::cout. </p></dd>", "a[href=\"library/math/api/info_theory.html#_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\">\n<span id=\"_CPPv3I00E7EntropyRK9CONTAINER10WEIGHT_FUNd\"></span><span id=\"_CPPv2I00E7EntropyRK9CONTAINER10WEIGHT_FUNd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WEIGHT_FUN</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"info__theory_8hpp_1a11d9b50a770d467aff8255774e571323\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Entropy</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\" title=\"Entropy::CONTAINER\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">objs</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E7EntropydRK9CONTAINER10WEIGHT_FUNd\" title=\"Entropy::WEIGHT_FUN\"><span class=\"n\"><span class=\"pre\">WEIGHT_FUN</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">total</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the entropy in a container of arbitrary objects. Args are a container, a function to extract the weight of each member, and an (optional) total weight. </p></dd>", "a[href=\"library/math/api/Range.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Range.hpp<a class=\"headerlink\" href=\"#range-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple way to track value ranges. </p>", "a[href=\"library/tools/api/TypeTracker.html#_CPPv4I0_6size_tE17TrackedInfo_Value\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE17TrackedInfo_Value\">\n<span id=\"_CPPv3I0_6size_tE17TrackedInfo_Value\"></span><span id=\"_CPPv2I0_6size_tE17TrackedInfo_Value\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ID</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTrackedInfo__Value\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Value</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv416TrackedInfo_Base\" title=\"TrackedInfo_Base\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></a><br/></dt><dd><p>TrackedInfo_Value store both the real type and an ID for it (to be identified from the base class for each conversion back.) </p></dd>", "a[href=\"library/io/api/NullStream.html#_CPPv410NullBuffer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410NullBuffer\">\n<span id=\"_CPPv310NullBuffer\"></span><span id=\"_CPPv210NullBuffer\"></span><span id=\"NullBuffer\"></span><span class=\"target\" id=\"classNullBuffer\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NullBuffer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">streambuf</span></span><br/></dt><dd><p>A no-operation buffer class. </p></dd>", "a[href=\"library/config/api/ConfigManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ConfigManager.hpp<a class=\"headerlink\" href=\"#configmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>The ConfigManager templated class handles the building and configuration of new objects of the target type. </p><p>The manager is created with two keywords; one for the type of the managed class, and the other for the keyword to trigger commands for it.</p>", "a[href=\"library/math/api/random_utils.html#_CPPv415CountRngTouchesNSt8functionIFvR6RandomEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415CountRngTouchesNSt8functionIFvR6RandomEEE\">\n<span id=\"_CPPv315CountRngTouchesNSt8functionIFvR6RandomEEE\"></span><span id=\"_CPPv215CountRngTouchesNSt8functionIFvR6RandomEEE\"></span><span class=\"target\" id=\"random__utils_8hpp_1af8df9276445796eae95359ce891ce46f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountRngTouches</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">routine</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/notify.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">notify.hpp<a class=\"headerlink\" href=\"#notify-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to alert users of messages (including errors and warnings) in a consistant manner. </p><p>\nThere are a handful of notification types to consider:<ul class=\"simple\">\n<li><p>Message: A simple notification.</p></li>\n<li><p>Verbose: Optional messages that can be activated by category.</p></li>\n<li><p>Warning: Something looks suspicious, but is not technically a problem (don\u2019t exit)</p></li>\n<li><p>Error: Something has gone horribly wrong and is impossible to recover from (exit)</p></li>\n<li><p>Exception: Something didn\u2019t go the way we expected, but we can still recover (exit if not handled)</p></li>\n<li><p>Debug: A simple notification that should only be printed when NDEBUG is not set (don\u2019t exit)</p></li>\n</ul>\n</p>", "a[href=\"library/meta/api/meta.html#_CPPv4I00DpE15BuildObjVector1vR6vectorI5OBJ_TER2T1DpR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE15BuildObjVector1vR6vectorI5OBJ_TER2T1DpR2Ts\">\n<span id=\"_CPPv3I00DpE15BuildObjVector1R6vectorI5OBJ_TER2T1DpR2Ts\"></span><span id=\"_CPPv2I00DpE15BuildObjVector1R6vectorI5OBJ_TER2T1DpR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a2cf4faac6c0f114ef3b2a7037051e0ce\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector1</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE15BuildObjVector1vR6vectorI5OBJ_TER2T1DpR2Ts\" title=\"BuildObjVector1::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE15BuildObjVector1vR6vectorI5OBJ_TER2T1DpR2Ts\" title=\"BuildObjVector1::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE15BuildObjVector1vR6vectorI5OBJ_TER2T1DpR2Ts\" title=\"BuildObjVector1::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/always_assert.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">always_assert.hpp<a class=\"headerlink\" href=\"#always-assert-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A more dynamic replacement for standard library asserts. Status: RELEASE. </p><p>A replacement for the system-level assert.h, called \u201cemp_always_assert\u201d Added functionality:<ul class=\"simple\">\n<li><p>If compiled with Emscripten, will provide pop-up alerts in a web browser.</p></li>\n<li><p>emp_assert can take additional arguments. If the assert is triggered, those extra arguments will be evaluated and printed.</p></li>\n<li><p>If a literal string is provided as an argument, it will be printed as an error message.</p></li>\n<li><p>if EMP_TDEBUG is defined, emp_assert() goes into test mode and records failures, but does not abort. (useful for unit tests of asserts)</p></li>\n</ul>\n</p>", "a[href=\"library/functional/api/FunctionSet.html#_CPPv4I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\">\n<span id=\"_CPPv3I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\"></span><span id=\"_CPPv2I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunctionSet_3_01RETURN__T_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunctionSet</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\" title=\"FunctionSet&lt;RETURN_T(ARGS...)&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\" title=\"FunctionSet&lt;RETURN_T(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\" title=\"FunctionSet&lt;RETURN_T(ARGS...)&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE11FunctionSetIF8RETURN_TDp4ARGSEE\" title=\"FunctionSet&lt;RETURN_T(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A vector of functions that can all be triggered at onece; results can either be returned in a vector or post-processed in a function (such as max, min, etc.) Derived from vector, hence with all of the same methods as vector. </p></dd>", "a[href=\"library/math/api/combos.html#_CPPv48ComboIDs\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ComboIDs\">\n<span id=\"_CPPv38ComboIDs\"></span><span id=\"_CPPv28ComboIDs\"></span><span id=\"ComboIDs\"></span><span class=\"target\" id=\"classComboIDs\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ComboIDs</span></span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/Card.html#_CPPv44Card\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Card\">\n<span id=\"_CPPv34Card\"></span><span id=\"_CPPv24Card\"></span><span id=\"Card\"></span><span class=\"target\" id=\"classCard\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Card</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>Use Card class to create Bootstrap style cards. </p><p>Subclassed by ReadoutPanel</p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv415FullRangeModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415FullRangeModule\">\n<span id=\"_CPPv315FullRangeModule\"></span><span id=\"_CPPv215FullRangeModule\"></span><span id=\"FullRangeModule\"></span><span class=\"target\" id=\"classFullRangeModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FullRangeModule</span></span></span><br/></dt><dd><p>== data::FullRange == This module makes the DataNode store a history of distributional information measured by data::Range between calls to Reset(). Series of historical values are stored in vectors (except mean, which is calculated from total and count). To use this class, add data::Histogram to the template arguments on your DataNode. Do not use the FullRangeModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/testing/api/unit_tests.html#_CPPv422ProcessUnitTestResultsv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv422ProcessUnitTestResultsv\">\n<span id=\"_CPPv322ProcessUnitTestResultsv\"></span><span id=\"_CPPv222ProcessUnitTestResultsv\"></span><span id=\"ProcessUnitTestResults\"></span><span class=\"target\" id=\"unit__tests_8hpp_1a6641dd41a20ee042c3c4f17c643e6115\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ProcessUnitTestResults</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE11fourth_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11fourth_type\">\n<span id=\"_CPPv3IDpE11fourth_type\"></span><span id=\"_CPPv2IDpE11fourth_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a637a6349fb4bf7b3dfee8be3a16fa4dc\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fourth_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE10type_index\" title=\"type_index\"><span class=\"n\"><span class=\"pre\">type_index</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11fourth_type\" title=\"fourth_type::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">t4</span></span><br/></dt><dd></dd>", "a[href=\"library/testing/api/unit_tests.html#_CPPv415ResolveUnitTestbRKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE6size_tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415ResolveUnitTestbRKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE6size_tb\">\n<span id=\"_CPPv315ResolveUnitTestbRKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE6size_tb\"></span><span id=\"_CPPv215ResolveUnitTestbRKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE6size_tb\"></span><span id=\"ResolveUnitTest__b.ssCR.ssCR.ssCR.ssCR.s.b\"></span><span class=\"target\" id=\"unit__tests_8hpp_1a107197912a78e95a3d9af25717f764b2\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResolveUnitTest</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pass</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">test_input</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">result</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">exp_result</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">line_num</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">is_require</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv418RandomizeBitVectorR9BitVectorR6Randomd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418RandomizeBitVectorR9BitVectorR6Randomd\">\n<span id=\"_CPPv318RandomizeBitVectorR9BitVectorR6Randomd\"></span><span id=\"_CPPv218RandomizeBitVectorR9BitVectorR6Randomd\"></span><span id=\"RandomizeBitVector__BitVectorR.RandomR.double\"></span><span class=\"target\" id=\"random__utils_8hpp_1af4009dc3cf02b7b0f2cd60363c9d91df\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomizeBitVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bits</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.5</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random BitVector of the specified size. </p></dd>", "a[href=\"library/math/api/spatial_stats.html#_CPPv4I0E11GridDensity6vectorI6vectorIdEER5WorldI3ORGEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11GridDensity6vectorI6vectorIdEER5WorldI3ORGEi\">\n<span id=\"_CPPv3I0E11GridDensityR5WorldI3ORGEi\"></span><span id=\"_CPPv2I0E11GridDensityR5WorldI3ORGEi\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"spatial__stats_8hpp_1af63da543ba46d3d36a943d5e5680354e\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GridDensity</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11GridDensity6vectorI6vectorIdEER5WorldI3ORGEi\" title=\"GridDensity::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">w</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">neighborhood_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/io/api/MemoryIStream.html#_CPPv49MemoryBuf\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MemoryBuf\">\n<span id=\"_CPPv39MemoryBuf\"></span><span id=\"_CPPv29MemoryBuf\"></span><span id=\"MemoryBuf\"></span><span class=\"target\" id=\"structMemoryBuf\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MemoryBuf</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">streambuf</span></span><br/></dt><dd><p>Subclassed by MemoryIStream</p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E18FillMemoryFunctionv3PtrIhEK6size_t1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E18FillMemoryFunctionv3PtrIhEK6size_t1T\">\n<span id=\"_CPPv3I0E18FillMemoryFunction3PtrIhEK6size_t1T\"></span><span id=\"_CPPv2I0E18FillMemoryFunction3PtrIhEK6size_t1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a4d23aefb5d52b92c84a75c1539523db2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FillMemoryFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mem_ptr</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bytes</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E18FillMemoryFunctionv3PtrIhEK6size_t1T\" title=\"FillMemoryFunction::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fill_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Fill an array by repeatedly calling the provided fill functions. </p></dd>", "a[href=\"library/meta/api/ValPack.html#_CPPv4IE7ValPackIE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE7ValPackIE\">\n<span id=\"_CPPv3IE7ValPackIE\"></span><span id=\"_CPPv2IE7ValPackIE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structValPack_3_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv412ValueControl\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ValueControl\">\n<span id=\"_CPPv312ValueControl\"></span><span id=\"_CPPv212ValueControl\"></span><span id=\"ValueControl\"></span><span class=\"target\" id=\"classValueControl\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValueControl</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48ValueBox\" title=\"ValueBox\"><span class=\"n\"><span class=\"pre\">ValueBox</span></span></a><br/></dt><dd><p>ValueControl is the base class for components the user should be able to interact with. The view will contain the Input object for controlling the value. </p><p>Subclassed by NumericValueControl, TextValueControl</p></dd>", "a[href=\"library/testing/testing.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\">\n<span id=\"_CPPv3I0_jE17capacity_in_bytesRK11SmallVectorI1T1NE\"></span><span id=\"_CPPv2I0_jE17capacity_in_bytesRK11SmallVectorI1T1NE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SmallVector_8hpp_1af24a9a98ea2e0d04793ae9da7af0ed98\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">capacity_in_bytes</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\" title=\"capacity_in_bytes::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE17capacity_in_bytes6size_tRK11SmallVectorI1T1NE\" title=\"capacity_in_bytes::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">X</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0000DpE10type_index\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0000DpE10type_index\">\n<span id=\"_CPPv3I0000DpE10type_index\"></span><span id=\"_CPPv2I0000DpE10type_index\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T3</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T4</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtype__index_3_01T1_00_01T2_00_01T3_00_01T4_00_01Ts_8_8_8_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_index</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0000DpE10type_index\" title=\"type_index::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0000DpE10type_index\" title=\"type_index::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0000DpE10type_index\" title=\"type_index::T3\"><span class=\"n\"><span class=\"pre\">T3</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0000DpE10type_index\" title=\"type_index::T4\"><span class=\"n\"><span class=\"pre\">T4</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0000DpE10type_index\" title=\"type_index::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/QueueCache.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">QueueCache.hpp<a class=\"headerlink\" href=\"#queuecache-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple implementation of a Least-Recently Used Cache. It orders elements by access time and removes the stalest ones in case maximum capacity is reached. </p>", "a[href=\"library/base/base.html#emp-vector-example\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">emp::vector Example<a class=\"headerlink\" href=\"#emp-vector-example\" title=\"Link to this heading\">\uf0c1</a></h3>", "a[href=\"library/geometry/api/Surface2D.html#_CPPv4I0E9Surface2D\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9Surface2D\">\n<span id=\"_CPPv3I0E9Surface2D\"></span><span id=\"_CPPv2I0E9Surface2D\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSurface2D\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Surface2D</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0DpE6MaxRefRK1TRK1TRK1TDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6MaxRefRK1TRK1TRK1TDpRK2Ts\">\n<span id=\"_CPPv3I0DpE6MaxRefRK1TRK1TDpRK2Ts\"></span><span id=\"_CPPv2I0DpE6MaxRefRK1TRK1TDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1ab0054d1c3f302bfa72c84b22bb8ab429\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MaxRefRK1TRK1TRK1TDpRK2Ts\" title=\"MaxRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MaxRefRK1TRK1TRK1TDpRK2Ts\" title=\"MaxRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MaxRefRK1TRK1TRK1TDpRK2Ts\" title=\"MaxRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MaxRefRK1TRK1TRK1TDpRK2Ts\" title=\"MaxRef::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>MaxRef of multiple elements returns reference to maximum value. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414has_whitespaceRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414has_whitespaceRKNSt6stringE\">\n<span id=\"_CPPv314has_whitespaceRKNSt6stringE\"></span><span id=\"_CPPv214has_whitespaceRKNSt6stringE\"></span><span id=\"has_whitespace__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ad184c672f63dc1b1d7205d73066b71e3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_whitespace</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if there is whitespace anywhere in a string. </p></dd>", "a[href=\"library/evolve/evolve.html#taxon-properties\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Taxon properties<a class=\"headerlink\" href=\"#taxon-properties\" title=\"Link to this heading\">\uf0c1</a></h3><p><a class=\"reference internal\" href=\"library/evolve/api/Systematics.html#_CPPv4I00E5Taxon\" title=\"Taxon\"><code class=\"xref cpp cpp-class docutils literal notranslate\"><span class=\"pre\">Taxon</span></code></a> objects maintain the following information:</p>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorIN5WorldI3ORGE18fun_calc_fitness_tEEd6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorIN5WorldI3ORGE18fun_calc_fitness_tEEd6size_t6size_t\">\n<span id=\"_CPPv3I0E9EcoSelectR5WorldI3ORGERK6vectorIN5WorldI3ORGE18fun_calc_fitness_tEEd6size_t6size_t\"></span><span id=\"_CPPv2I0E9EcoSelectR5WorldI3ORGERK6vectorIN5WorldI3ORGE18fun_calc_fitness_tEEd6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1af7546244de5f8637960c60ad5385c0b7\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EcoSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorIN5WorldI3ORGE18fun_calc_fitness_tEEd6size_t6size_t\" title=\"EcoSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorIN5WorldI3ORGE18fun_calc_fitness_tEEd6size_t6size_t\" title=\"EcoSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">fun_calc_fitness_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">extra_funs</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pool_sizes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">t_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tourny_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>EcoSelect can be provided a single value if all pool sizes are identical. </p></dd>", "a[href=\"library/web/api/JSWrap.html#_CPPv416empDoCppCallbackK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416empDoCppCallbackK6size_t\">\n<span id=\"_CPPv316empDoCppCallbackK6size_t\"></span><span id=\"_CPPv216empDoCppCallbackK6size_t\"></span><span id=\"empDoCppCallback__sC\"></span><span class=\"target\" id=\"JSWrap_8hpp_1a93719f8ed2484cc0c34e191066b6fbbd\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empDoCppCallback</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cb_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function is dispatched by empCppCallback. It should be dispatched on the thread hosting the main Empirical runtime. If running with Emscripten pthreads, that would be the worker thread hosting the main Empirical runtime. If not running with Emscripten pthreads, that would be the main browser thread. (In a few limited cases when running with Emscripten pthreads, this function is called on the main browser thread.) </p></dd>", "a[href=\"library/math/api/random_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">random_utils.hpp<a class=\"headerlink\" href=\"#random-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Helper functions for Random for common random tasks. Status: RELEASE. </p>", "a[href=\"library/datastructs/api/Bool.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"library/bits/api/Bits_Data.html#_CPPv48BitsMode\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48BitsMode\">\n<span id=\"_CPPv38BitsMode\"></span><span id=\"_CPPv28BitsMode\"></span><span class=\"target\" id=\"Bits__Data_8hpp_1af31ec97e6be574fed2c89681498298a7\"></span><span class=\"k\"><span class=\"pre\">enum</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitsMode</span></span></span><br/></dt><dd><p><em>Values:</em></p></dd>", "a[href=\"library/datastructs/api/TypeMap.html#_CPPv4I0E7TypeMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7TypeMap\">\n<span id=\"_CPPv3I0E7TypeMap\"></span><span id=\"_CPPv2I0E7TypeMap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTypeMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeMap</span></span></span><br/></dt><dd><p>A map of types to objects. </p></dd>", "a[href=\"library/base/base.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">General Purpose Debugging Tools<a class=\"headerlink\" href=\"#general-purpose-debugging-tools\" title=\"Link to this heading\">\uf0c1</a></h1><h2>Empirical vectors and arrays<a class=\"headerlink\" href=\"#empirical-vectors-and-arrays\" title=\"Link to this heading\">\uf0c1</a></h2><p>Empirical contains of intelligent versions of STL vectors and arrays\nthat will warn you if you make common errors, but otherwise behave\nidentically to the STL version. Most importantly, they will detect\nattempts to index to out-of-bounds locations and throw an error. These\nfeatures are critical for writing code that will be compiled to\nJavascript with Emscripten, because Valgrind doesn\u2019t run on Javascript.\nThey also save a lot of debugging time when writing native C++ code.</p><p>\u201cBut wait,\u201d you might say, \u201csurely all of these additional checks\nslow down your code!\u201d This is true when you compile in debug mode (the\ndefault). However, when you compile with the -DNDEBUG flag, these\nobjects are directly replaced with their STL equivalent, removing any\nslowdown. That way, you can get all the debugging benefits while you\u2019re\nwriting your program, but all the speed benefits when you\u2019re actually\nusing it.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv414ANSI_MagentaBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414ANSI_MagentaBGv\">\n<span id=\"_CPPv314ANSI_MagentaBGv\"></span><span id=\"_CPPv214ANSI_MagentaBGv\"></span><span id=\"ANSI_MagentaBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1af104d91d678366dcb6a1ea25f554f1c9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_MagentaBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv43Modii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43Modii\">\n<span id=\"_CPPv33Modii\"></span><span id=\"_CPPv23Modii\"></span><span id=\"Mod__i.iCE\"></span><span class=\"target\" id=\"math_8hpp_1a761ca5c4fa9271087ae59472b341ddb5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Mod</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_val</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mod_val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>% is actually remainder; Mod is a proper modulus command that handles negative #\u2019s correctly </p></dd>", "a[href=\"library/prefab/api/Collapse.html#_CPPv416CollapseCoupling\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416CollapseCoupling\">\n<span id=\"_CPPv316CollapseCoupling\"></span><span id=\"_CPPv216CollapseCoupling\"></span><span id=\"CollapseCoupling\"></span><span class=\"target\" id=\"classCollapseCoupling\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CollapseCoupling</span></span></span><br/></dt><dd><p>CollapseCoupling class maintains a group of targets and controllers. When a controller is clicked on a web page, all the associated targets will change state (expand/collapse). </p></dd>", "a[href=\"library/testing/api/unit_tests.html#_CPPv414UnitTestOutput\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414UnitTestOutput\">\n<span id=\"_CPPv314UnitTestOutput\"></span><span id=\"_CPPv214UnitTestOutput\"></span><span id=\"UnitTestOutput\"></span><span class=\"target\" id=\"structUnitTestOutput\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnitTestOutput</span></span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0_6size_tE14RankedSelector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE14RankedSelector\">\n<span id=\"_CPPv3I0_6size_tE14RankedSelector\"></span><span id=\"_CPPv2I0_6size_tE14RankedSelector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ThreshRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultN</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structRankedSelector\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RankedSelector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12SelectorBase\" title=\"SelectorBase\"><span class=\"n\"><span class=\"pre\">SelectorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv416RankedCacheState\" title=\"RankedCacheState\"><span class=\"n\"><span class=\"pre\">RankedCacheState</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Returns matches within the threshold ThreshRatio sorted by match quality. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I000E10type_index\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E10type_index\">\n<span id=\"_CPPv3I000E10type_index\"></span><span id=\"_CPPv2I000E10type_index\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T3</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtype__index_3_01T1_00_01T2_00_01T3_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_index</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10type_index\" title=\"type_index::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E10type_index\" title=\"type_index::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E10type_index\" title=\"type_index::T3\"><span class=\"n\"><span class=\"pre\">T3</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv420ANSI_BrightMagentaBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv420ANSI_BrightMagentaBGv\">\n<span id=\"_CPPv320ANSI_BrightMagentaBGv\"></span><span id=\"_CPPv220ANSI_BrightMagentaBGv\"></span><span id=\"ANSI_BrightMagentaBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae1d5574751ebe252d107a4dc04c86e95\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightMagentaBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417transform_stringsRK12string_vec_tNSt8functionIFNSt6stringERKNSt6stringEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417transform_stringsRK12string_vec_tNSt8functionIFNSt6stringERKNSt6stringEEEE\">\n<span id=\"_CPPv317transform_stringsRK12string_vec_tNSt8functionIFNSt6stringERKNSt6stringEEEE\"></span><span id=\"_CPPv217transform_stringsRK12string_vec_tNSt8functionIFNSt6stringERKNSt6stringEEEE\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4a44fa18e37534c15a77e38c1abe7795\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">transform_strings</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_strings</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Transform all strings in a vector. </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt18unordered_multisetI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt18unordered_multisetI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a14d64d0b371edc9278e7d6ad7b4e6351\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_multiset</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt18unordered_multisetI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::unordered_multiset has a particular element without modifying the set in any way. </p></dd>", "a[href=\"library/data/api/DataFile.html#_CPPv48DataFile\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48DataFile\">\n<span id=\"_CPPv38DataFile\"></span><span id=\"_CPPv28DataFile\"></span><span id=\"DataFile\"></span><span class=\"target\" id=\"classDataFile\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataFile</span></span></span><br/></dt><dd><p>Keep track of everything associated with periodically printing data to a file. Maintain a set of functions for calculating the desired measurements at each point in time that they are required. It also handles the formating of the file. </p></dd>", "a[href=\"library/control/control.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I_iE13UIntMaskFirst8uint32_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_iE13UIntMaskFirst8uint32_tv\">\n<span id=\"_CPPv3I_iE13UIntMaskFirstv\"></span><span id=\"_CPPv2I_iE13UIntMaskFirstv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1ae70283466ca10eae033a8b985e60469a\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UIntMaskFirst</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Create a series of a specified number of ones (at compile time) in a uint. </p></dd>", "a[href=\"library/games/api/Othello.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Othello.hpp<a class=\"headerlink\" href=\"#othello-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple Othello game state handler. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Add Hash for boards to be able to cachce moves. </p>\n<p>Setup OPTIONAL caching of expensive board measures. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv417view_string_rangeRKNSt11string_viewE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417view_string_rangeRKNSt11string_viewE6size_t6size_t\">\n<span id=\"_CPPv317view_string_rangeRKNSt11string_viewE6size_t6size_t\"></span><span id=\"_CPPv217view_string_rangeRKNSt11string_viewE6size_t6size_t\"></span><span id=\"view_string_range__std::string_viewCR.s.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2fb132fb595bcd7520a4e561e3653515\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string_range</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a string_view on a string from a starting point to an ending point. </p></dd>", "a[href=\"library/tools/api/SolveState.html#_CPPv410SolveState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410SolveState\">\n<span id=\"_CPPv310SolveState\"></span><span id=\"_CPPv210SolveState\"></span><span id=\"SolveState\"></span><span class=\"target\" id=\"classSolveState\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SolveState</span></span></span><br/></dt><dd><p>Often in a branch-and-bound algorithm, we need to identify the sub-set of items that maximizes (or minimizes) an optimization metric. SolveState keeps track of the current state for which items have been locked in as \u201cincluded\u201d in the current branks, which have been \u201cexcluded\u201d, and which are still \u201cunknown\u201d (still to be decided upon.) All tracking is performed with BitVectors for high efficiency. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411has_char_atRKNSt6stringEc6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411has_char_atRKNSt6stringEc6size_t\">\n<span id=\"_CPPv311has_char_atRKNSt6stringEc6size_t\"></span><span id=\"_CPPv211has_char_atRKNSt6stringEc6size_t\"></span><span id=\"has_char_at__ssCR.c.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a58694ab97dc0b3375bb6571221962457\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_char_at</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/StringMap.html#_CPPv48StringID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48StringID\">\n<span id=\"_CPPv38StringID\"></span><span id=\"_CPPv28StringID\"></span><span id=\"StringID\"></span><span class=\"target\" id=\"classStringID\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StringID</span></span></span><br/></dt><dd><p>A small class for maintaining unique string IDs. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv43Expd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43Expd\">\n<span id=\"_CPPv33Expd\"></span><span id=\"_CPPv23Expd\"></span><span id=\"Exp__doubleCE\"></span><span class=\"target\" id=\"math_8hpp_1a4fbbef7aeb0831c915e4d24480871cf7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Exp</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">exp</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A fast method of calculating e^x. </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv49MAX_2BYTE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MAX_2BYTE\">\n<span id=\"_CPPv39MAX_2BYTE\"></span><span id=\"_CPPv29MAX_2BYTE\"></span><span id=\"MAX_2BYTE__uint32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1ae3a0808df405f9187d3457a9c26523b8\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_2BYTE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">65535</span></span><br/></dt><dd><p>(2^16 - 1) </p></dd>", "a[href=\"library/datastructs/api/UnorderedIndexMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">UnorderedIndexMap.hpp<a class=\"headerlink\" href=\"#unorderedindexmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple class to weight items differently within a container and return the correct index. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Convert to a template that acts as a glorified vector, simplifying random selection? </p>\n<p>Should operator[] index by element count or by weight? </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv418ANSI_BrightBlackBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418ANSI_BrightBlackBGv\">\n<span id=\"_CPPv318ANSI_BrightBlackBGv\"></span><span id=\"_CPPv218ANSI_BrightBlackBGv\"></span><span id=\"ANSI_BrightBlackBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1aaebcc1ec6c619a1b93d0143efceca224\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightBlackBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/control/api/SignalControl.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SignalControl.hpp<a class=\"headerlink\" href=\"#signalcontrol-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>The SignalControl class manages all of the signals and actions, linking them together upon request (by name, base class, or derived class). </p><p>Developer notes:<ul class=\"simple\">\n<li><p>Right now SignalControl can only link to signals that it creates. Ideally, external signals should also be able to be added to it. The question is, how should this be done?<ul>\n<li><p>They could be copied. But should we copy existing actions? How do we provide keys?</p></li>\n<li><p>They could use a smart pointer style, so only deleted with final version (slow down?) </p></li>\n</ul>\n</p></li>\n</ul>\n</p>", "a[href=\"library/hardware/api/AvidaGP.html#_CPPv47AvidaGP\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47AvidaGP\">\n<span id=\"_CPPv37AvidaGP\"></span><span id=\"_CPPv27AvidaGP\"></span><span id=\"AvidaGP\"></span><span class=\"target\" id=\"classAvidaGP\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AvidaGP</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E13AvidaCPU_Base\" title=\"AvidaCPU_Base\"><span class=\"n\"><span class=\"pre\">AvidaCPU_Base</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv47AvidaGP\" title=\"AvidaGP\"><span class=\"n\"><span class=\"pre\">AvidaGP</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bits.hpp<a class=\"headerlink\" href=\"#bits-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A generic bit-handler to replace vector&lt;bool&gt;, etc +additional bitwise logic features. </p><p>\nThe Bits template allows the user to recreate the functionality of std::vector&lt;bool&gt;, array&lt;bool&gt;, std::bitset, and other such bit-handling classes.</p>", "a[href=\"library/in_progress/api/Parser.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Parser.hpp<a class=\"headerlink\" href=\"#parser-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/compiler/api/NFA.html#_CPPv4I_6size_t0E4tNFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E4tNFA\">\n<span id=\"_CPPv3I_6size_t0E4tNFA\"></span><span id=\"_CPPv2I_6size_t0E4tNFA\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">S</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">STOP_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classtNFA\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tNFA</span></span></span><br/></dt><dd><p>A dynamic NFA class, for easily building non-determanistic finite automata. </p></dd>", "a[href=\"library/functional/api/memo_function.html#_CPPv4I00E13memo_functionIF1R3ARGEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E13memo_functionIF1R3ARGEE\">\n<span id=\"_CPPv3I00E13memo_functionIF1R3ARGEE\"></span><span id=\"_CPPv2I00E13memo_functionIF1R3ARGEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmemo__function_3_01R_07ARG_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">memo_function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13memo_functionIF1R3ARGEE\" title=\"memo_function&lt;R(ARG)&gt;::R\"><span class=\"n\"><span class=\"pre\">R</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13memo_functionIF1R3ARGEE\" title=\"memo_function&lt;R(ARG)&gt;::ARG\"><span class=\"n\"><span class=\"pre\">ARG</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>The simplest form of a memoized function with a single argument that is used as the cache key (no need for more complex caching). </p></dd>", "a[href=\"library/games/api/Mancala.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Mancala.hpp<a class=\"headerlink\" href=\"#mancala-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple Malcala game state handler. </p>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv411BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411BloomFilter\">\n<span id=\"_CPPv311BloomFilter\"></span><span id=\"_CPPv211BloomFilter\"></span><span id=\"BloomFilter\"></span><span class=\"target\" id=\"classBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></span><br/></dt><dd><p>This class implements a Bloom filter, which is a memory-efficient data structure for identifying values that have been seen before (with a tunable probability of a false positive - thinking that we have already seen a value when we actually haven\u2019t) </p><p>Subclassed by CompressibleBloomFilter</p></dd>", "a[href=\"library/base/api/vector.html#_CPPv4I0DpErsRNSt7istreamERNSt7istreamER6vectorI1TDp2TsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpErsRNSt7istreamERNSt7istreamER6vectorI1TDp2TsE\">\n<span id=\"_CPPv3I0DpErsRNSt7istreamER6vectorI1TDp2TsE\"></span><span id=\"_CPPv2I0DpErsRNSt7istreamER6vectorI1TDp2TsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector_8hpp_1aa713e622c28b081b13f80e31a7383516\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;&gt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpErsRNSt7istreamERNSt7istreamER6vectorI1TDp2TsE\" title=\"operator&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpErsRNSt7istreamERNSt7istreamER6vectorI1TDp2TsE\" title=\"operator&gt;&gt;::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/js_utils.html#_CPPv4I0E18pass_vector_to_cppvR6vectorI1TEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E18pass_vector_to_cppvR6vectorI1TEb\">\n<span id=\"_CPPv3I0E18pass_vector_to_cppR6vectorI1TEb\"></span><span id=\"_CPPv2I0E18pass_vector_to_cppR6vectorI1TEb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"js__utils_8hpp_1a7722cd429dd71ba17832de4d70df5c03\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pass_vector_to_cpp</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E18pass_vector_to_cppvR6vectorI1TEb\" title=\"pass_vector_to_cpp::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arr</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">recurse</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Same as pass_array_to_cpp, but lets you store values in a vector instead. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv419compress_whitespaceRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419compress_whitespaceRNSt6stringE\">\n<span id=\"_CPPv319compress_whitespaceRNSt6stringE\"></span><span id=\"_CPPv219compress_whitespaceRNSt6stringE\"></span><span id=\"compress_whitespace__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a58a16ce235b38d8251f3cf85050e2979\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">compress_whitespace</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Every time one or more whitespace characters appear replace them with a single space. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv412ToEscapeCharc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ToEscapeCharc\">\n<span id=\"_CPPv312ToEscapeCharc\"></span><span id=\"_CPPv212ToEscapeCharc\"></span><span id=\"ToEscapeChar__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a61269e9a336f073e5293c55c6f3fff91\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToEscapeChar</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a char after a backslash to its escaped version. </p></dd>", "a[href=\"library/matching/api/MatchBin.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MatchBin.hpp<a class=\"headerlink\" href=\"#matchbin-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A container that supports flexible tag-based lookup. . </p>", "a[href=\"library/base/api/optional.html#_CPPv4I0DpE13make_optional8optionalI1TEDpRR4Args\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE13make_optional8optionalI1TEDpRR4Args\">\n<span id=\"_CPPv3I0DpE13make_optionalDpRR4Args\"></span><span id=\"_CPPv2I0DpE13make_optionalDpRR4Args\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Args</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"optional_8hpp_1ad5c73f0b9d8a415593421c6c0beabda6\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13make_optional8optionalI1TEDpRR4Args\" title=\"make_optional::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">make_optional</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13make_optional8optionalI1TEDpRR4Args\" title=\"make_optional::Args\"><span class=\"n\"><span class=\"pre\">Args</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E15remove_ptr_typeIPC1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15remove_ptr_typeIPC1TE\">\n<span id=\"_CPPv3I0E15remove_ptr_typeIPC1TE\"></span><span id=\"_CPPv2I0E15remove_ptr_typeIPC1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__ptr__type_3_01T_01_5const_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15remove_ptr_typeIPC1TE\" title=\"remove_ptr_type&lt;T*const&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv44Log2d\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Log2d\">\n<span id=\"_CPPv34Log2d\"></span><span id=\"_CPPv24Log2d\"></span><span id=\"Log2__doubleCE\"></span><span class=\"target\" id=\"math_8hpp_1abc450d351bd3b6169f345a1ca4a7a455\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Log2</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compile-time log base 2 calculator. </p></dd>", "a[href=\"library/functional/api/FunctionSet.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">FunctionSet.hpp<a class=\"headerlink\" href=\"#functionset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Setup a collection of functions, all with the same signature, that can be run as a group. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I_6size_t0E16uint_bit_count_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E16uint_bit_count_t\">\n<span id=\"_CPPv3I_6size_t0E16uint_bit_count_t\"></span><span id=\"_CPPv2I_6size_t0E16uint_bit_count_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BIT_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DEFAULT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1adaa36c7803c02faa4101b6afef287591\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uint_bit_count_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E14uint_bit_count\" title=\"uint_bit_count\"><span class=\"n\"><span class=\"pre\">uint_bit_count</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E16uint_bit_count_t\" title=\"uint_bit_count_t::BIT_COUNT\"><span class=\"n\"><span class=\"pre\">BIT_COUNT</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E16uint_bit_count_t\" title=\"uint_bit_count_t::DEFAULT\"><span class=\"n\"><span class=\"pre\">DEFAULT</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3LCM1TK1TK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3LCM1TK1TK1T\">\n<span id=\"_CPPv3I0E3LCMK1TK1T\"></span><span id=\"_CPPv2I0E3LCMK1TK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a370a6856b2279395e33e6bb76f87f212\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3LCM1TK1TK1T\" title=\"LCM::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LCM</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3LCM1TK1TK1T\" title=\"LCM::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3LCM1TK1TK1T\" title=\"LCM::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Least common multiple. </p></dd>", "a[href=\"library/web/api/Image.html#_CPPv45Image\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Image\">\n<span id=\"_CPPv35Image\"></span><span id=\"_CPPv25Image\"></span><span id=\"Image\"></span><span class=\"target\" id=\"classImage\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Image</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv45Image\" title=\"Image\"><span class=\"n\"><span class=\"pre\">Image</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>The Image widget will load an image from a specified URL. For example, you can use Image(\u201chttp://kripken.github.io/emscripten-site/_static/Emscripten_logo_full.png\u201d) to load the emscripten logo from its website. These can be easily inserted into a web document using &lt;&lt; and all JS callbacks (after loading) will be handled automatically.</p><p>You can also set the Alt-text with the Alt() function. </p></dd>", "a[href=\"library/functional/api/AnyFunction.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">AnyFunction.hpp<a class=\"headerlink\" href=\"#anyfunction-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Based on std::function, but with a generic base class. </p><p>\n(Built from GenericFunction.h) </p>", "a[href=\"library/evolve/api/Systematics.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Systematics.hpp<a class=\"headerlink\" href=\"#systematics-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Track genotypes, species, clades, or lineages of organisms in a world. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Technically, we don\u2019t need to keep the ancestors in a set in order to track a lineage\u2026 If we delete all of their descendants they should automaticaly be deleted. </p>\n<p>We should provide an option to back up systematics data to a file so that it doesn\u2019t all need to be kept in memory, especially if we\u2019re only doing post-analysis. </p>\n<p>This inheritance system makes adding new systematics-related data tracking kind of a pain. Over time, this will probably become a maintainability problem. We can probably make the whole inheritance thing go away through judicious use of signals. </p>\n<p>This does not currently handle situations where organisms change locations during their lifetimes gracefully. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv49to_stringRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49to_stringRKNSt6stringE\">\n<span id=\"_CPPv39to_stringRKNSt6stringE\"></span><span id=\"_CPPv29to_stringRKNSt6stringE\"></span><span id=\"to_string__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1aaee4e81a9c4ee8803d73869debd67189\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Overload of to_string() string arguments to be directly returned. </p></dd>", "a[href=\"library/datastructs/api/BloomFilter.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BloomFilter.hpp<a class=\"headerlink\" href=\"#bloomfilter-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A Bloom filter implementation. </p><p><dl class=\"simple\">\n<dt><strong>Copyright</strong></dt><dd><p>Arash Partow, 2000 (modified slightly by Emily Dolson) </p>\n</dd>\n</dl>\n</p>", "a[href=\"library/web/api/TextArea.html#_CPPv48TextArea\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48TextArea\">\n<span id=\"_CPPv38TextArea\"></span><span id=\"_CPPv28TextArea\"></span><span id=\"TextArea\"></span><span class=\"target\" id=\"classTextArea\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TextArea</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv48TextArea\" title=\"TextArea\"><span class=\"n\"><span class=\"pre\">TextArea</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>An input field for text data. A function provided at creation time will be called each time the contents of the TextWidget are changed. The current text contents can also always be accessed with the GetText() member function. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410to_literalRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410to_literalRKNSt6stringE\">\n<span id=\"_CPPv310to_literalRKNSt6stringE\"></span><span id=\"_CPPv210to_literalRKNSt6stringE\"></span><span id=\"to_literal__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3a0c38ce2a6a715e7a4a5ef06520c01f\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_literal</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a string or iterable and convert it to a C++-style literal. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv4IDpE13InternalErrorvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE13InternalErrorvDpRR2Ts\">\n<span id=\"_CPPv3IDpE13InternalErrorDpRR2Ts\"></span><span id=\"_CPPv2IDpE13InternalErrorDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1aef349daa61329c7255594ef0d98eb7fd\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InternalError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE13InternalErrorvDpRR2Ts\" title=\"InternalError::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Original library implementers must have made an error. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\">\n<span id=\"_CPPv3IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\"></span><span id=\"_CPPv2IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U0</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__union_3_01Cmp_00_01Variadic_3_01U0_8_8_8_01_4_00_01U1_00_01U_8_8_8_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_union</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::U0\"><span class=\"n\"><span class=\"pre\">U0</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::U1\"><span class=\"n\"><span class=\"pre\">U1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE14variadic_unionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/ReadoutPanel.html#_CPPv412ReadoutPanel\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ReadoutPanel\">\n<span id=\"_CPPv312ReadoutPanel\"></span><span id=\"_CPPv212ReadoutPanel\"></span><span id=\"ReadoutPanel\"></span><span class=\"target\" id=\"classReadoutPanel\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ReadoutPanel</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/prefab/api/Card.html#_CPPv44Card\" title=\"Card\"><span class=\"n\"><span class=\"pre\">Card</span></span></a><br/></dt><dd><p>Use a ReadoutPanel to display a collection of related live values in a Card. </p></dd>", "a[href=\"library/io/api/NullStream.html#_CPPv410NullStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410NullStream\">\n<span id=\"_CPPv310NullStream\"></span><span id=\"_CPPv210NullStream\"></span><span id=\"NullStream\"></span><span class=\"target\" id=\"classNullStream\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NullStream</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><br/></dt><dd><p>A no-operation output stream class. </p></dd>", "a[href=\"library/datastructs/api/ra_map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ra_map.hpp<a class=\"headerlink\" href=\"#ra-map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a Random Access Map template. </p><p>\nA random access map allows for simple traversal by index and a guarantee that a value at a given index will always be at that index unless any map element is deleted. This allows storage of indices for maps with a fixed layout, resulting in easy access. </p>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectviR1TDp4ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectviR1TDp4ARGS\">\n<span id=\"_CPPv3I0DpE31EMPCall_TriggerOnLexicaseSelectiR1TDp4ARGS\"></span><span id=\"_CPPv2I0DpE31EMPCall_TriggerOnLexicaseSelectiR1TDp4ARGS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a62b5262ff041ba2f374b0778792e85df\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EMPCall_TriggerOnLexicaseSelect</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectviR1TDp4ARGS\" title=\"EMPCall_TriggerOnLexicaseSelect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE31EMPCall_TriggerOnLexicaseSelectviR1TDp4ARGS\" title=\"EMPCall_TriggerOnLexicaseSelect::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\">\n<span id=\"_CPPv3IDpE9to_stringDpRK2Ts\"></span><span id=\"_CPPv2IDpE9to_stringDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a7af65396b89bea62546ac7b6f7eda07f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE9to_stringNSt6stringEDpRK2Ts\" title=\"to_string::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">values</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function does its best to convert any type to a string. Accepts any number of arguments and returns a single concatenated string. Conversions attempted for an object \u2018x\u2019 include (in order):<ul class=\"simple\">\n<li><p>Call a x.ToString()</p></li>\n<li><p>Call appropriate ToString(x) overload</p></li>\n<li><p>Pass x through stringstream </p></li>\n</ul>\n</p></dd>", "a[href=\"library/text/api/EmphaticEncoding.html#_CPPv412EmphaticText\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412EmphaticText\">\n<span id=\"_CPPv312EmphaticText\"></span><span id=\"_CPPv212EmphaticText\"></span><span class=\"target\" id=\"EmphaticEncoding_8hpp_1a718e7b2e8d6e989bc5879ce24efecb5b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EmphaticText</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">EncodedText</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv416EmphaticEncoding\" title=\"EmphaticEncoding\"><span class=\"n\"><span class=\"pre\">EmphaticEncoding</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/data/data.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Data Collection and Recording Tools<a class=\"headerlink\" href=\"#data-collection-and-recording-tools\" title=\"Link to this heading\">\uf0c1</a></h1><p>Empirical includes a variety of tools for gathering and recording data.\nThe core of these tools is the DataNode class. DataNodes are containers\nthat you can pass as much data as you like into. When DataNodes are\nbuilt, they can be given various modifiers (specified as template\narguments) which control how much information they will collect about\nthe data they are passed. For instance, the <code class=\"docutils literal notranslate\"><span class=\"pre\">data::Current</span></code> modifier\ngives the DataNode the power to remember the last value it was passed,\nwhereas the <code class=\"docutils literal notranslate\"><span class=\"pre\">data::Stats</span></code> modifier keeps track of a variety of\nstatistics about the distribution of data that the node has been\npassed. Except where otherwise noted, modifiers can be combined freely.\nSome also have dependencies on simpler modifiers. On the whole,\nDataNodes are designed to be as light-weight as possible while still\nkeeping track of the desired information.</p><p>DataNodes that accept the same type of data and have the same modifiers\ncan be grouped together using a DataManager.</p>", "a[href=\"library/meta/api/ValPack.html#_CPPv4I_DpDaE7ValPack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_DpDaE7ValPack\">\n<span id=\"_CPPv3I_DpDaE7ValPack\"></span><span id=\"_CPPv2I_DpDaE7ValPack\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structValPack\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></span><br/></dt><dd></dd>", "a[href=\"library/config/api/SettingCombos.html#_CPPv413SettingCombos\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413SettingCombos\">\n<span id=\"_CPPv313SettingCombos\"></span><span id=\"_CPPv213SettingCombos\"></span><span id=\"SettingCombos\"></span><span class=\"target\" id=\"classSettingCombos\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SettingCombos</span></span></span><br/></dt><dd><p>Class to take a set of value for each \u201csetting\u201d and then step through all combinations of those values for a factorial analysis. </p></dd>", "a[href=\"library/math/api/DistributionSet.html#_CPPv4I0DpE15DistributionSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE15DistributionSet\">\n<span id=\"_CPPv3I0DpE15DistributionSet\"></span><span id=\"_CPPv2I0DpE15DistributionSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DIST_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDistributionSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DistributionSet</span></span></span><br/></dt><dd></dd>", "a[href=\"library/debug/api/alert.html#_CPPv4IDpE11CappedAlertv6size_tDp8TYPE_SET\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11CappedAlertv6size_tDp8TYPE_SET\">\n<span id=\"_CPPv3IDpE11CappedAlert6size_tDp8TYPE_SET\"></span><span id=\"_CPPv2IDpE11CappedAlert6size_tDp8TYPE_SET\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE_SET</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"alert_8hpp_1aaab893b14cd54d1978b31329e3551597\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CappedAlert</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cap</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE11CappedAlertv6size_tDp8TYPE_SET\" title=\"CappedAlert::TYPE_SET\"><span class=\"n\"><span class=\"pre\">TYPE_SET</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">inputs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A version of Alert that will cap how many times it can go off. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413quote_stringsRK12string_vec_tKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413quote_stringsRK12string_vec_tKNSt6stringE\">\n<span id=\"_CPPv313quote_stringsRK12string_vec_tKNSt6stringE\"></span><span id=\"_CPPv213quote_stringsRK12string_vec_tKNSt6stringE\"></span><span id=\"quote_strings__string_vec_tCR.ssC\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3bccce06ab55a9b8c1e4d58e8f188e5e\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">quote_strings</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_strings</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">quote</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"'\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Put all strings provided in quotes (Like \u2018this\u2019), pre- and post-fixing another string if provided. </p></dd>", "a[href=\"library/prefab/api/ToggleSwitch.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ToggleSwitch.hpp<a class=\"headerlink\" href=\"#toggleswitch-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps Bootstrap\u2019s toggle switch. </p>", "a[href=\"library/web/d3/d3-contents.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">D3 Wrapper API<a class=\"headerlink\" href=\"#d3-wrapper-api\" title=\"Link to this heading\">\uf0c1</a></h1><h2>Basic D3 Objects {#D3_Base}<a class=\"headerlink\" href=\"#basic-d3-objects-d3-base\" title=\"Link to this heading\">\uf0c1</a></h2><p>::: {.doxygenfile project=\u201dEmpirical\u201d}\nemp/web/d3/d3_init.hpp\n:::</p>", "a[href=\"library/math/api/math.html#_CPPv4I0E7IntLog2i4TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7IntLog2i4TYPE\">\n<span id=\"_CPPv3I0E7IntLog24TYPE\"></span><span id=\"_CPPv2I0E7IntLog24TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a8f9086cf8fa09da5c77e36a7d9352431\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IntLog2</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E7IntLog2i4TYPE\" title=\"IntLog2::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A compile-time int-log calculator (aka, significant bits) </p></dd>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv46to_NFARK3NFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_NFARK3NFA\">\n<span id=\"_CPPv36to_NFARK3NFA\"></span><span id=\"_CPPv26to_NFARK3NFA\"></span><span id=\"to_NFA__NFACR\"></span><span class=\"target\" id=\"group__lexer__utilities_1gacc9595a4f5d2c70ac537ee325271078b\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_NFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">nfa</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Converting NFA to MFA &amp;#8212; no change needed. </p></dd>", "a[href=\"library/io/api/StreamManager.html#_CPPv413StreamManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413StreamManager\">\n<span id=\"_CPPv313StreamManager\"></span><span id=\"_CPPv213StreamManager\"></span><span id=\"StreamManager\"></span><span class=\"target\" id=\"classStreamManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StreamManager</span></span></span><br/></dt><dd><p>A class to maintain files and other streams. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\">\n<span id=\"_CPPv3I00E6ToUMapRK6vectorI1TE\"></span><span id=\"_CPPv2I00E6ToUMapRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aea94f4a86c96bb9c1ded857ba4524407\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\" title=\"ToUMap::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\" title=\"ToUMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToUMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E6ToUMapNSt13unordered_mapI7INDEX_T1TEERK6vectorI1TE\" title=\"ToUMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_vec</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector into a map. </p></dd>", "a[href=\"library/text/api/HTMLEncoding.html#_CPPv4IDpE12MakeHTMLText4TextDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE12MakeHTMLText4TextDpRR2Ts\">\n<span id=\"_CPPv3IDpE12MakeHTMLTextDpRR2Ts\"></span><span id=\"_CPPv2IDpE12MakeHTMLTextDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"HTMLEncoding_8hpp_1a2aed24614f447ba0714f625cf4705ff0\"></span><a class=\"reference internal\" href=\"library/text/api/Text.html#_CPPv44Text\" title=\"Text\"><span class=\"n\"><span class=\"pre\">Text</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeHTMLText</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE12MakeHTMLText4TextDpRR2Ts\" title=\"MakeHTMLText::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/geometry/api/Body2D.html#_CPPv411Body2D_Base\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411Body2D_Base\">\n<span id=\"_CPPv311Body2D_Base\"></span><span id=\"_CPPv211Body2D_Base\"></span><span id=\"Body2D_Base\"></span><span class=\"target\" id=\"classBody2D__Base\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Body2D_Base</span></span></span><br/></dt><dd><p>Subclassed by CircleBody2D</p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv410tree_right6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410tree_right6size_t\">\n<span id=\"_CPPv310tree_right6size_t\"></span><span id=\"_CPPv210tree_right6size_t\"></span><span id=\"tree_right__sCE\"></span><span class=\"target\" id=\"vector__utils_8hpp_1a41baa90bc7887ea694c6408c9c9e0e8c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tree_right</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv46repeatRKNSt6stringEK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46repeatRKNSt6stringEK6size_t\">\n<span id=\"_CPPv36repeatRKNSt6stringEK6size_t\"></span><span id=\"_CPPv26repeatRKNSt6stringEK6size_t\"></span><span id=\"repeat__ssCR.sC\"></span><span class=\"target\" id=\"string__utils_8hpp_1a166d94c566570b4d0e6388a24ec7b32f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">repeat</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">n</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Concatenate n copies of a string. </p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv49LogModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49LogModule\">\n<span id=\"_CPPv39LogModule\"></span><span id=\"_CPPv29LogModule\"></span><span id=\"LogModule\"></span><span class=\"target\" id=\"classLogModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LogModule</span></span></span><br/></dt><dd><p>== data::Log == This module lets you log all of the values that have been added since the last re-set To use this class, add data::Log to the template arguments on your DataNode. Do not use the LogModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E10count_bits6size_t1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10count_bits6size_t1T\">\n<span id=\"_CPPv3I0E10count_bits1T\"></span><span id=\"_CPPv2I0E10count_bits1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a0802c2874c664d19fd91a6e7cde25e67\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">count_bits</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E10count_bits6size_t1T\" title=\"count_bits::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Count the number of bits in an unsigned integer. </p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv415HistogramModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415HistogramModule\">\n<span id=\"_CPPv315HistogramModule\"></span><span id=\"_CPPv215HistogramModule\"></span><span id=\"HistogramModule\"></span><span class=\"target\" id=\"classHistogramModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HistogramModule</span></span></span><br/></dt><dd><p>== data::Histogram == Make the DataNode track a histogram of values observed since the last reset. To use this class, add data::Histogram to the template arguments on your DataNode. Do not use the HistogramModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/control/api/Signal.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Signal.hpp<a class=\"headerlink\" href=\"#signal-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Allow functions to be bundled (as Actions) and triggered enmasse. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Setup easier mechanism to control the order in which actions are triggered. </p>\n<p>Signals should have default parameters so not all need be supplied when triggered. </p>\n</dd></dl>\n</p>", "a[href=\"library/bits/api/BitVector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BitVector.hpp<a class=\"headerlink\" href=\"#bitvector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in replacement for std::vector&lt;bool&gt;, with additional bitwise logic features. Status: RELEASE. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Most of the operators don\u2019t check to make sure that both BitVectors are the same size. We should create versions (Intersection() and Union()?) that adjust sizes if needed. </p>\n<p>For large BitVectors we can use a factory to preserve/adjust bit info. That should be just as efficient than a reserve, but without the need to store extra in-class info. </p>\n<p>Implement append(), resize(), push_bit(), insert(), remove() </p>\n<p>Think about how iterators should work for BitVector. It should probably go bit-by-bit, but there are very few circumstances where that would be useful. Going through the positions of all ones would be more useful, but perhaps less intuitive.</p>\n</dd></dl>\n</p>", "a[href=\"library/math/api/stats.html#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E10MeanResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E10MeanResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a192a527002cae8a7beab20cd860efdf1\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_scalar</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MeanResult</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E10MeanResultNSt9enable_ifINSt9is_scalarI8RET_TYPEE5valueEdE4typeERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MeanResult::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return the AVERAGE result. Function must return a scalar (i.e. numeric) type. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0DpE14get_type_indexiv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE14get_type_indexiv\">\n<span id=\"_CPPv3I0DpE14get_type_indexv\"></span><span id=\"_CPPv2I0DpE14get_type_indexv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aa489f8fffe5aacfab381ca82cc30babf\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">get_type_index</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00I00EDpE19variadic_contains_v\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00I00EDpE19variadic_contains_v\">\n<span id=\"_CPPv3I00I00EDpE19variadic_contains_v\"></span><span id=\"_CPPv2I00I00EDpE19variadic_contains_v\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Needle</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1ab2161313cc12643e8c3e225a969e0a38\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_contains_v</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><a class=\"reference internal\" href=\"#_CPPv4I00I00E0E17variadic_contains\" title=\"variadic_contains\"><span class=\"n\"><span class=\"pre\">variadic_contains</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00I00EDpE19variadic_contains_v\" title=\"variadic_contains_v::Needle\"><span class=\"n\"><span class=\"pre\">Needle</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00I00EDpE19variadic_contains_v\" title=\"variadic_contains_v::Haystack\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00I00EDpE19variadic_contains_v\" title=\"variadic_contains_v::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt13unordered_setI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt13unordered_setI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a0f82f63004b09090c6dfc5e24b0598a2\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt13unordered_setI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::unordered_set has a particular element without modifying the set in any way. </p></dd>", "a[href=\"library/datastructs/api/DynamicString.html#_CPPv413DynamicString\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413DynamicString\">\n<span id=\"_CPPv313DynamicString\"></span><span id=\"_CPPv213DynamicString\"></span><span id=\"DynamicString\"></span><span class=\"target\" id=\"classDynamicString\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DynamicString</span></span></span><br/></dt><dd><p>A string handler where some sections can be fixed strings, while others update dynamically based on functions. </p></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv4I0_6size_tE13ContainerHash\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE13ContainerHash\">\n<span id=\"_CPPv3I0_6size_tE13ContainerHash\"></span><span id=\"_CPPv2I0_6size_tE13ContainerHash\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Container</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Seed</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structContainerHash\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ContainerHash</span></span></span><br/></dt><dd><p>This structure serves as a hash for containers that are iterable. Use as a drop-in replacement for std::hash. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv48is_validc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48is_validc\">\n<span id=\"_CPPv38is_validc\"></span><span id=\"_CPPv28is_validc\"></span><span id=\"is_valid__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a9955f9ef92f6d37d8a0a2668723bf428\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_valid</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>If no functions are provided to is_valid(), always return false as base case. </p></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4NK12SimpleParser19PhonyNameDueToError10AsFunctionER9ValueTypeI5arg_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NK12SimpleParser19PhonyNameDueToError10AsFunctionER9ValueTypeI5arg_tE\">\n<span id=\"_CPPv3NK12SimpleParser19PhonyNameDueToError10AsFunctionER9ValueTypeI5arg_tE\"></span><span id=\"_CPPv2NK12SimpleParser19PhonyNameDueToError10AsFunctionER9ValueTypeI5arg_tE\"></span><span id=\"SimpleParser::PhonyNameDueToError::AsFunction__ValueType:arg_t:RC\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1a05feace752c776336aa6a73685e94066\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0EN12SimpleParser9ValueTypeE\" title=\"SimpleParser::ValueType\"><span class=\"n\"><span class=\"pre\">ValueType</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N12SimpleParser19PhonyNameDueToError5arg_tE\" title=\"SimpleParser::PhonyNameDueToError::arg_t\"><span class=\"n\"><span class=\"pre\">arg_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><br/></dt><dd><p>By default, let the value handle its own converstion to a function. </p></dd>", "a[href=\"library/datastructs/api/reference_vector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">reference_vector.hpp<a class=\"headerlink\" href=\"#reference-vector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A version of vector that holds only references to objects. Be careful! </p>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE9last_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9last_type\">\n<span id=\"_CPPv3IDpE9last_type\"></span><span id=\"_CPPv2IDpE9last_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a9a15d193a45be7be8245eb524942457f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">last_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tDpE7pack_id\" title=\"pack_id\"><span class=\"n\"><span class=\"pre\">pack_id</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">sizeof</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE9last_type\" title=\"last_type::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE9last_type\" title=\"last_type::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Trim off the last type from a pack. </p></dd>", "a[href=\"library/debug/api/debug.html#_CPPv410test_debugv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410test_debugv\">\n<span id=\"_CPPv310test_debugv\"></span><span id=\"_CPPv210test_debugv\"></span><span id=\"test_debugCE\"></span><span class=\"target\" id=\"debug_8hpp_1a4a4659554db6b9324c43bc95d1f64e46\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">test_debug</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3Sgni1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Sgni1T\">\n<span id=\"_CPPv3I0E3Sgn1T\"></span><span id=\"_CPPv2I0E3Sgn1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a26e765e84d3e0c1c42172200d6c6a13b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sgn</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Sgni1T\" title=\"Sgn::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the sign (i.e., +1, -1, or 0) of a value. </p></dd>", "a[href=\"library/io/api/ascii_utils.html#_CPPv4I0E14AsciiHistogramv6vectorI1TE6size_t6size_tbRNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14AsciiHistogramv6vectorI1TE6size_t6size_tbRNSt7ostreamE\">\n<span id=\"_CPPv3I0E14AsciiHistogram6vectorI1TE6size_t6size_tbRNSt7ostreamE\"></span><span id=\"_CPPv2I0E14AsciiHistogram6vectorI1TE6size_t6size_tbRNSt7ostreamE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"ascii__utils_8hpp_1abc97b83e62ad1236d2b4470af46696e6\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsciiHistogram</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E14AsciiHistogramv6vectorI1TE6size_t6size_tbRNSt7ostreamE\" title=\"AsciiHistogram::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bins</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">40</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_width</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">80</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">show_scale</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take the input data, break it into bins, and print it as a bar graph. </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv410MAX_SIZE_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410MAX_SIZE_T\">\n<span id=\"_CPPv310MAX_SIZE_T\"></span><span id=\"_CPPv210MAX_SIZE_T\"></span><span id=\"MAX_SIZE_T__sC\"></span><span class=\"target\" id=\"constants_8hpp_1a56ea054f07c77be754ab2c59c71f8914\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_SIZE_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">static_cast</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">)</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/Input.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Input.hpp<a class=\"headerlink\" href=\"#input-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Create/control an HTML input and call a specified function when it receives input. </p><p>Use example:</p>", "a[href=\"library/control/api/Signal.html#_CPPv410SignalBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410SignalBase\">\n<span id=\"_CPPv310SignalBase\"></span><span id=\"_CPPv210SignalBase\"></span><span id=\"SignalBase\"></span><span class=\"target\" id=\"classSignalBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SignalBase</span></span></span><br/></dt><dd><p>Base class for all signals. </p><p>Subclassed by Signal&lt; RETURN(ARGS\u2026)&gt;, Signal&lt; void(ARGS\u2026)&gt;</p></dd>", "a[href=\"library/datastructs/api/Graph.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Graph.hpp<a class=\"headerlink\" href=\"#graph-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple, fast class for managing vertices (nodes) and edges. </p>", "a[href=\"library/datastructs/api/TimeQueue.html#_CPPv4I0E9TimeQueue\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9TimeQueue\">\n<span id=\"_CPPv3I0E9TimeQueue\"></span><span id=\"_CPPv2I0E9TimeQueue\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTimeQueue\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TimeQueue</span></span></span><br/></dt><dd><p>A TimeQueue is used to track when \u201citems\u201d are ready. Insert() items with the time they should be triggered. Must be at least min_wait in the future. </p></dd>", "a[href=\"library/functional/api/memo_function.html#_CPPv4I0E13memo_function\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13memo_function\">\n<span id=\"_CPPv3I0E13memo_function\"></span><span id=\"_CPPv2I0E13memo_function\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmemo__function\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">memo_function</span></span></span><br/></dt><dd><p>Identical to std::function, but memorizes prior results (caches them) so that the function doesn\u2019t have to process those results again. (note: Genetic version is undefinined; must have a function signature.) </p></dd>", "a[href=\"library/control/api/ActionManager.html#_CPPv413ActionManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413ActionManager\">\n<span id=\"_CPPv313ActionManager\"></span><span id=\"_CPPv213ActionManager\"></span><span id=\"ActionManager\"></span><span class=\"target\" id=\"classActionManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ActionManager</span></span></span><br/></dt><dd></dd>", "a[href=\"library/web/web.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/debug/api/debug.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">debug.hpp<a class=\"headerlink\" href=\"#debug-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Basic tools for use in developing high-assurance code. </p>", "a[href=\"library/math/api/math.html#_CPPv43Logdd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43Logdd\">\n<span id=\"_CPPv33Logdd\"></span><span id=\"_CPPv23Logdd\"></span><span id=\"Log__double.doubleCE\"></span><span class=\"target\" id=\"math_8hpp_1a71711adceeb2c4ff8eab3482471afba7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Log</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">x</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">base</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10.0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compile-time log calculator. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E15BuildObjVector3vR6vectorI5OBJ_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15BuildObjVector3vR6vectorI5OBJ_TE\">\n<span id=\"_CPPv3I0E15BuildObjVector3R6vectorI5OBJ_TE\"></span><span id=\"_CPPv2I0E15BuildObjVector3R6vectorI5OBJ_TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aef5931ba11c659cd41f807be4b61cede\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector3</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15BuildObjVector3vR6vectorI5OBJ_TE\" title=\"BuildObjVector3::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/functional/api/AnyFunction.html#_CPPv4IDpE15DerivedFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE15DerivedFunction\">\n<span id=\"_CPPv3IDpE15DerivedFunction\"></span><span id=\"_CPPv2IDpE15DerivedFunction\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DerivedFunction</span></span></span><br/></dt><dd><p>Undefined base type for DerivedFunction, to create an error if a function type is not passed in. </p></dd>", "a[href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E32MultiplicativeCountdownRegulator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E32MultiplicativeCountdownRegulator\">\n<span id=\"_CPPv3I0E32MultiplicativeCountdownRegulator\"></span><span id=\"_CPPv2I0E32MultiplicativeCountdownRegulator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Slope</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structMultiplicativeCountdownRegulator\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MultiplicativeCountdownRegulator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E13RegulatorBase\" title=\"RegulatorBase\"><span class=\"n\"><span class=\"pre\">RegulatorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/UrlParams.html#_CPPv412GetUrlParamsv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412GetUrlParamsv\">\n<span id=\"_CPPv312GetUrlParamsv\"></span><span id=\"_CPPv212GetUrlParamsv\"></span><span id=\"GetUrlParams\"></span><span class=\"target\" id=\"UrlParams_8hpp_1a91afee3b79fcc09ce3d8572b70866d48\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUrlParams</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Extracts the query portion of a url and parses for key value pairs.</p><p>\nSome esoterica: \u201c?string=this+that\u201d and \u201c?string=this&amp;string=that\u201d have different meanings and may result in different behavior. Similarly \u201c?test\u201d becomes [[\u201ctest\u201d]] while \u201c?test=\u201d becomes [[\u201ctest\u201d, \u201c\u201d]]. </p></dd>", "a[href=\"library/math/api/spatial_stats.html#_CPPv4I0E18GridShannonEntropy6vectorI6vectorIdEER5WorldI3ORGEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E18GridShannonEntropy6vectorI6vectorIdEER5WorldI3ORGEi\">\n<span id=\"_CPPv3I0E18GridShannonEntropyR5WorldI3ORGEi\"></span><span id=\"_CPPv2I0E18GridShannonEntropyR5WorldI3ORGEi\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"spatial__stats_8hpp_1a6d775c329a31e9e70dec863594c04381\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GridShannonEntropy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E18GridShannonEntropy6vectorI6vectorIdEER5WorldI3ORGEi\" title=\"GridShannonEntropy::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">w</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">neighborhood_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/config_utils.html#_CPPv414GetEmptyConfigv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414GetEmptyConfigv\">\n<span id=\"_CPPv314GetEmptyConfigv\"></span><span id=\"_CPPv214GetEmptyConfigv\"></span><span id=\"GetEmptyConfig\"></span><span class=\"target\" id=\"config__utils_8hpp_1a05344e985188f810bf59099e9533023d\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/config/api/config.html#_CPPv46Config\" title=\"Config\"><span class=\"n\"><span class=\"pre\">Config</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEmptyConfig</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4N12SimpleParser19PhonyNameDueToError6layoutE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SimpleParser19PhonyNameDueToError6layoutE\">\n<span id=\"_CPPv3N12SimpleParser19PhonyNameDueToError6layoutE\"></span><span id=\"_CPPv2N12SimpleParser19PhonyNameDueToError6layoutE\"></span><span id=\"SimpleParser::PhonyNameDueToError::layout__map_t::layout_tCR\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1ae990875bc6e9f5814a95d1a54c77cd91\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SimpleParser19PhonyNameDueToError5map_tE\" title=\"SimpleParser::PhonyNameDueToError::map_t\"><span class=\"n\"><span class=\"pre\">map_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">layout_t</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">layout</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I_6size_t0E14uint_bit_count\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E14uint_bit_count\">\n<span id=\"_CPPv3I_6size_t0E14uint_bit_count\"></span><span id=\"_CPPv2I_6size_t0E14uint_bit_count\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BIT_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DEFAULT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structuint__bit__count\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uint_bit_count</span></span></span><br/></dt><dd><p>Figure out which type is an unsigned integer with a specified number of bits. </p></dd>", "a[href=\"library/hardware/api/BitSorter.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BitSorter.hpp<a class=\"headerlink\" href=\"#bitsorter-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A quick series of comparisons intended for sorting bits. </p>", "a[href=\"library/text/api/TextEncoding.html#_CPPv412TextEncoding\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412TextEncoding\">\n<span id=\"_CPPv312TextEncoding\"></span><span id=\"_CPPv212TextEncoding\"></span><span id=\"TextEncoding\"></span><span class=\"target\" id=\"classTextEncoding\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TextEncoding</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/text/api/Text.html#_CPPv422TextEncoding_Interface\" title=\"TextEncoding_Interface\"><span class=\"n\"><span class=\"pre\">TextEncoding_Interface</span></span></a><br/></dt><dd><p>Subclassed by EmphaticEncoding, HTMLEncoding</p></dd>", "a[href=\"library/math/api/spatial_stats.html#_CPPv4I0E23GridPointShannonEntropydR5WorldI3ORGE6size_t6size_ti\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E23GridPointShannonEntropydR5WorldI3ORGE6size_t6size_ti\">\n<span id=\"_CPPv3I0E23GridPointShannonEntropyR5WorldI3ORGE6size_t6size_ti\"></span><span id=\"_CPPv2I0E23GridPointShannonEntropyR5WorldI3ORGE6size_t6size_ti\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"spatial__stats_8hpp_1acb2e50d986d0d4d93e0a346674d50c90\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GridPointShannonEntropy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23GridPointShannonEntropydR5WorldI3ORGE6size_t6size_ti\" title=\"GridPointShannonEntropy::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">w</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">xid</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">yid</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">neighborhood_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/io/api/ContiguousStream.html#_CPPv416ContiguousBuffer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ContiguousBuffer\">\n<span id=\"_CPPv316ContiguousBuffer\"></span><span id=\"_CPPv216ContiguousBuffer\"></span><span id=\"ContiguousBuffer\"></span><span class=\"target\" id=\"classContiguousBuffer\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ContiguousBuffer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">streambuf</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E13is_ptr_type_vbRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13is_ptr_type_vbRK1T\">\n<span id=\"_CPPv3I0E13is_ptr_type_vRK1T\"></span><span id=\"_CPPv2I0E13is_ptr_type_vRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a341ab486bcc11c1caf6dbb8397436838\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type_v</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E13is_ptr_type_vbRK1T\" title=\"is_ptr_type_v::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv4I0DpE21AlignedCharArrayUnion\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE21AlignedCharArrayUnion\">\n<span id=\"_CPPv3I0DpE21AlignedCharArrayUnion\"></span><span id=\"_CPPv2I0DpE21AlignedCharArrayUnion\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAlignedCharArrayUnion\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlignedCharArrayUnion</span></span></span><br/></dt><dd><p>A suitably aligned and sized character array member which can hold elements of any type.</p><p>These types may be arrays, structs, or any other types. This exposes a <code class=\"docutils literal notranslate\"><span class=\"pre\">buffer</span></code> member which can be used as suitable storage for a placement new of any of these types. </p></dd>", "a[href=\"library/web/api/Table.html#_CPPv411TableWidget\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411TableWidget\">\n<span id=\"_CPPv311TableWidget\"></span><span id=\"_CPPv211TableWidget\"></span><span id=\"TableWidget\"></span><span class=\"target\" id=\"classTableWidget\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TableWidget</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv411TableWidget\" title=\"TableWidget\"><span class=\"n\"><span class=\"pre\">TableWidget</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Subclassed by Table</p></dd>", "a[href=\"library/matching/api/matchbin_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">matchbin_utils.hpp<a class=\"headerlink\" href=\"#matchbin-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Metric, Selector, and Regulator structs that can be plugged into MatchBin. </p>", "a[href=\"library/tools/api/unique.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">unique.hpp<a class=\"headerlink\" href=\"#unique-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Methods to generate UIDs. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_Blinkv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_Blinkv\">\n<span id=\"_CPPv310ANSI_Blinkv\"></span><span id=\"_CPPv210ANSI_Blinkv\"></span><span id=\"ANSI_Blink\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4eed1ea066b8efa4b7e86b92cb828457\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Blink</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/meta.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/web/api/Selector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Selector.hpp<a class=\"headerlink\" href=\"#selector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specs for the Selector widget. </p><p>A Selector widget provides the user with a pull-down menu. It can be examined at any time (via GetSelectID()) or else alerts call a designated function when a particular option is chosen.</p>", "a[href=\"library/web/api/emfunctions.html#_CPPv410OpenWindowRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410OpenWindowRKNSt6stringE\">\n<span id=\"_CPPv310OpenWindowRKNSt6stringE\"></span><span id=\"_CPPv210OpenWindowRKNSt6stringE\"></span><span id=\"OpenWindow__ssCR\"></span><span class=\"target\" id=\"emfunctions_8hpp_1ae6af4103795765715a5a88fa6700dcbd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OpenWindow</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">url</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"QuickStartGuides/todos/todo.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Work In Progress<a class=\"headerlink\" href=\"#work-in-progress\" title=\"Link to this heading\">\uf0c1</a></h1><p>The following pages are a work in progress \ud83d\udea7.\n<a class=\"reference internal\" href=\"dev/contribution-guidelines-and-review.html\"><span class=\"doc std std-doc\">Contributions</span></a> are welcome!</p>", "a[href=\"library/data/api/Datum.html#_CPPv4lsRNSt7ostreamERK5Datum\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4lsRNSt7ostreamERK5Datum\">\n<span id=\"_CPPv3lsRNSt7ostreamERK5Datum\"></span><span id=\"_CPPv2lsRNSt7ostreamERK5Datum\"></span><span id=\"lshift-operator__osR.DatumCR\"></span><span class=\"target\" id=\"Datum_8hpp_1a91c5b70d0ce18540042488dbf98feac2\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Datum\" title=\"Datum\"><span class=\"n\"><span class=\"pre\">Datum</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">d</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/Table.html#_CPPv45Table\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Table\">\n<span id=\"_CPPv35Table\"></span><span id=\"_CPPv25Table\"></span><span id=\"Table\"></span><span class=\"target\" id=\"classTable\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Table</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411TableWidget\" title=\"TableWidget\"><span class=\"n\"><span class=\"pre\">TableWidget</span></span></a><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E7ToRange4TYPERK4TYPERK4TYPERK4TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7ToRange4TYPERK4TYPERK4TYPERK4TYPE\">\n<span id=\"_CPPv3I0E7ToRangeRK4TYPERK4TYPERK4TYPE\"></span><span id=\"_CPPv2I0E7ToRangeRK4TYPERK4TYPERK4TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a516dd4b230daaa9bba0a9517408bdec1\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7ToRange4TYPERK4TYPERK4TYPERK4TYPE\" title=\"ToRange::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7ToRange4TYPERK4TYPERK4TYPERK4TYPE\" title=\"ToRange::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7ToRange4TYPERK4TYPERK4TYPERK4TYPE\" title=\"ToRange::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_min</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7ToRange4TYPERK4TYPERK4TYPERK4TYPE\" title=\"ToRange::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_max</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run both min and max on a value to put it into a desired range. </p></dd>", "a[href=\"library/games/games.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Games<a class=\"headerlink\" href=\"#games\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/compiler/api/RegEx.html#_CPPv46to_NFARK5RegEx6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_NFARK5RegEx6size_t\">\n<span id=\"_CPPv36to_NFARK5RegEx6size_t\"></span><span id=\"_CPPv26to_NFARK5RegEx6size_t\"></span><span id=\"to_NFA__RegExCR.s\"></span><span class=\"target\" id=\"RegEx_8hpp_1af795231c51f8ed5ec4cea33e96ce5739\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_NFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45RegEx\" title=\"RegEx\"><span class=\"n\"><span class=\"pre\">RegEx</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">regex</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Simple conversion of RegEx to NFA (mostly implemented in RegEx) </p></dd>", "a[href=\"library/web/api/Image.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Image.hpp<a class=\"headerlink\" href=\"#image-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Easily load an image and place it in a document. </p>", "a[href=\"library/config/api/SettingCombos.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SettingCombos.hpp<a class=\"headerlink\" href=\"#settingcombos-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A tool for exploring all parameter combinations. </p>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I0E7FunInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7FunInfo\">\n<span id=\"_CPPv3I0E7FunInfo\"></span><span id=\"_CPPv2I0E7FunInfo\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structFunInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunInfo</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv412DigitCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412DigitCharSetv\">\n<span id=\"_CPPv312DigitCharSetv\"></span><span id=\"_CPPv212DigitCharSetv\"></span><span id=\"DigitCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1ad1ca5d96c5dfd1530dadc1cac96c4db4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DigitCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/compiler/compiler.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/TypeID.html#_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\">\n<span id=\"_CPPv3I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\"></span><span id=\"_CPPv2I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasEMPGetTypeName_3_01decoy__t_3_01T_00_01decltype_07T_1_1EMPGetTypeName_07_08_08_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasEMPGetTypeName</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E7decoy_t\" title=\"decoy_t\"><span class=\"n\"><span class=\"pre\">decoy_t</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\" title=\"HasEMPGetTypeName&lt;decoy_t&lt;T, decltype(T::EMPGetTypeName())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E17HasEMPGetTypeNameI7decoy_tI1TDTclN1T14EMPGetTypeNameEEEEE\" title=\"HasEMPGetTypeName&lt;decoy_t&lt;T, decltype(T::EMPGetTypeName())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">EMPGetTypeName</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0I0E0E15variadic_filter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0I0E0E15variadic_filter\">\n<span id=\"_CPPv3I0I0E0E15variadic_filter\"></span><span id=\"_CPPv2I0I0E0E15variadic_filter\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Filter</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__filter\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_filter</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/Range.html#_CPPv4I0_bE5Range\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE5Range\">\n<span id=\"_CPPv3I0_bE5Range\"></span><span id=\"_CPPv2I0_bE5Range\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRange\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Range</span></span></span><br/></dt><dd><p>A range of values from a lower limit to and upper limit, of any provided type. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE10third_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE10third_type\">\n<span id=\"_CPPv3IDpE10third_type\"></span><span id=\"_CPPv2IDpE10third_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1ad0c87e5c4d5cd3071ee9259131ab18de\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">third_type</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE10type_index\" title=\"type_index\"><span class=\"n\"><span class=\"pre\">type_index</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE10third_type\" title=\"third_type::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">t3</span></span><br/></dt><dd></dd>", "a[href=\"#empirical-a-library-of-tools-for-scientific-software-development\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Empirical \u2013 A library of tools for scientific software development<a class=\"headerlink\" href=\"#empirical-a-library-of-tools-for-scientific-software-development\" title=\"Link to this heading\">\uf0c1</a></h1><p>Empirical is a library of tools for scientific software development with\nan emphasis on being able to build web interfaces using Mozilla\u2019s\nEmscripten compiler. The project goal is to improve the accessibility\nand reproducibility of the computational research.</p><p>Empirical is a C++ project though it uses Python for development\ninfrastructure.</p>", "a[href=\"library/debug/api/alert.html#_CPPv45AlertRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45AlertRKNSt6stringE\">\n<span id=\"_CPPv35AlertRKNSt6stringE\"></span><span id=\"_CPPv25AlertRKNSt6stringE\"></span><span id=\"Alert__ssCR\"></span><span class=\"target\" id=\"alert_8hpp_1af4fddfdeef00c84e7d80cd71e73426bb\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Alert</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Send msg to cerr if in C++, or show msg in an alert box if compiled to Javascript Input can be any number of arguments of any types as long as the can be converted to strings with to_string(). </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv47ViewCSVRKNSt11string_viewE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47ViewCSVRKNSt11string_viewE\">\n<span id=\"_CPPv37ViewCSVRKNSt11string_viewE\"></span><span id=\"_CPPv27ViewCSVRKNSt11string_viewE\"></span><span id=\"ViewCSV__std::string_viewCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a314152ede94d9e2d6f4ef5b05eac8293\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ViewCSV</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv425build_weighted_graph_tree6size_t6size_t6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv425build_weighted_graph_tree6size_t6size_t6size_tR6Random\">\n<span id=\"_CPPv325build_weighted_graph_tree6size_t6size_t6size_tR6Random\"></span><span id=\"_CPPv225build_weighted_graph_tree6size_t6size_t6size_tR6Random\"></span><span id=\"build_weighted_graph_tree__s.s.s.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a55df2803a637ce5c3f62edfe3dd25b00\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv413WeightedGraph\" title=\"WeightedGraph\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_weighted_graph_tree</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_weight</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_weight</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a random WEIGHTED tree graph (new vertices are repeatedly attached to a random position in a tree as it is constructed.) </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\">\n<span id=\"_CPPv3I00E7FindRefRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span id=\"_CPPv2I00E7FindRefRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a4de0d9947945a8c3110beb8b9e594298\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"FindRef::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"FindRef::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7FindRefRKDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"FindRef::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">mapped_type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dval</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map and element, run find() member function, and return a reference to the result found (or default value if no results found). </p></dd>", "a[href=\"library/meta/api/type_traits.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">type_traits.hpp<a class=\"headerlink\" href=\"#type-traits-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Extensions on the standard library type traits to handle Empirical classes (such as Ptr). </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv413quote_stringsRK12string_vec_tKNSt6stringEKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413quote_stringsRK12string_vec_tKNSt6stringEKNSt6stringE\">\n<span id=\"_CPPv313quote_stringsRK12string_vec_tKNSt6stringEKNSt6stringE\"></span><span id=\"_CPPv213quote_stringsRK12string_vec_tKNSt6stringEKNSt6stringE\"></span><span id=\"quote_strings__string_vec_tCR.ssC.ssC\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae93e9cdeb291423caa1ba90ea8858076\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">quote_strings</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_strings</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">open_quote</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">close_quote</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Pre-pend and post-pend specified sequences to all strings provided. </p></dd>", "a[href=\"library/evolve/api/Resource.html#_CPPv4I0E14ResourceSelectvR5WorldI3ORGER6vectorINSt8functionIFdR3ORGEEEER6vectorI8ResourceE6size_t6size_tdddbd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14ResourceSelectvR5WorldI3ORGER6vectorINSt8functionIFdR3ORGEEEER6vectorI8ResourceE6size_t6size_tdddbd\">\n<span id=\"_CPPv3I0E14ResourceSelectR5WorldI3ORGER6vectorINSt8functionIFdR3ORGEEEER6vectorI8ResourceE6size_t6size_tdddbd\"></span><span id=\"_CPPv2I0E14ResourceSelectR5WorldI3ORGER6vectorINSt8functionIFdR3ORGEEEER6vectorI8ResourceE6size_t6size_tdddbd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Resource_8hpp_1a89d4ff9f3cf55750d2504f21667c9c3d\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ResourceSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E14ResourceSelectvR5WorldI3ORGER6vectorINSt8functionIFdR3ORGEEEER6vectorI8ResourceE6size_t6size_tdddbd\" title=\"ResourceSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E14ResourceSelectvR5WorldI3ORGER6vectorINSt8functionIFdR3ORGEEEER6vectorI8ResourceE6size_t6size_tdddbd\" title=\"ResourceSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">extra_funs</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv48Resource\" title=\"Resource\"><span class=\"n\"><span class=\"pre\">Resource</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">pools</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">t_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tourny_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">frac</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">.0025</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_bonus</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cost</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">use_base</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_score</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E9set_unionRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E9set_unionRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a161397f90d067faced17e696bd025f96\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417is_literal_stringRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417is_literal_stringRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv317is_literal_stringRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv217is_literal_stringRKNSt6stringERKNSt6stringE\"></span><span id=\"is_literal_string__ssCR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1acc430aeef8f7dd16b35422c2da07203a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_literal_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">quote_marks</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\\\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an input string is properly formatted as a literal string. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00E7decoy_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E7decoy_t\">\n<span id=\"_CPPv3I00E7decoy_t\"></span><span id=\"_CPPv2I00E7decoy_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aa4f756a7e078c5689cc1eb42033f4596\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">decoy_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E7decoy_t\" title=\"decoy_t::REAL_TYPE\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></a><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv42Lnd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv42Lnd\">\n<span id=\"_CPPv32Lnd\"></span><span id=\"_CPPv22Lnd\"></span><span id=\"Ln__doubleCE\"></span><span class=\"target\" id=\"math_8hpp_1a4763d50afac45be02d48402048209539\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ln</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compile-time natural log calculator. </p></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I_6size_t00E6BindAtDa5FUN_TRR7BOUND_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t00E6BindAtDa5FUN_TRR7BOUND_T\">\n<span id=\"_CPPv3I_6size_t00E6BindAt5FUN_TRR7BOUND_T\"></span><span id=\"_CPPv2I_6size_t00E6BindAt5FUN_TRR7BOUND_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">POS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BOUND_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1a83ea52808a92e68a916958b512d0cb2e\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BindAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E6BindAtDa5FUN_TRR7BOUND_T\" title=\"BindAt::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E6BindAtDa5FUN_TRR7BOUND_T\" title=\"BindAt::BOUND_T\"><span class=\"n\"><span class=\"pre\">BOUND_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bound</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Lock in a specified argument of a function. </p></dd>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv4I00E25SmallVectorTemplateCommon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E25SmallVectorTemplateCommon\">\n<span id=\"_CPPv3I00E25SmallVectorTemplateCommon\"></span><span id=\"_CPPv2I00E25SmallVectorTemplateCommon\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateCommon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv415SmallVectorBase\" title=\"SmallVectorBase\"><span class=\"n\"><span class=\"pre\">SmallVectorBase</span></span></a><br/></dt><dd><p>This is the part of SmallVectorTemplateBase which does not depend on whether the type T is a POD. The extra dummy template argument is used by ArrayRef to avoid unnecessarily requiring T to be complete. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE12NextUpMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE12NextUpMetric\">\n<span id=\"_CPPv3I_6size_tE12NextUpMetric\"></span><span id=\"_CPPv2I_6size_tE12NextUpMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Max</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1000</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structNextUpMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NextUpMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Metric gives the matchings by the closest tag on or above itself. Wraps on Max. Adapted from Spector, Lee, et al. \u201cTag-based modules in genetic programming.\u201d Proceedings of the 13th annual conference on Genetic and evolutionary computation. ACM, 2011. </p></dd>", "a[href=\"library/io/api/ContiguousStream.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ContiguousStream.hpp<a class=\"headerlink\" href=\"#contiguousstream-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Useful for streaming data to contiguous memory. Status: RELEASE. </p>", "a[href=\"library/web/api/KeypressManager.html#_CPPv415KeypressManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415KeypressManager\">\n<span id=\"_CPPv315KeypressManager\"></span><span id=\"_CPPv215KeypressManager\"></span><span id=\"KeypressManager\"></span><span class=\"target\" id=\"classKeypressManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KeypressManager</span></span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/CanvasShape.html#_CPPv415CanvasMultiLine\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415CanvasMultiLine\">\n<span id=\"_CPPv315CanvasMultiLine\"></span><span id=\"_CPPv215CanvasMultiLine\"></span><span id=\"CanvasMultiLine\"></span><span class=\"target\" id=\"classCanvasMultiLine\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasMultiLine</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>A whole series of line segments on the canvas. Currently not working\u2026 </p></dd>", "a[href=\"library/math/api/math.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">math.hpp<a class=\"headerlink\" href=\"#math-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Useful mathematical functions (that are constexpr when possible.) </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE14uint_bit_countIXL64EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE14uint_bit_countIXL64EEE\">\n<span id=\"_CPPv3IE14uint_bit_countIXL64EEE\"></span><span id=\"_CPPv2IE14uint_bit_countIX64EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structuint__bit__count_3_0164_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uint_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">64</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/ValPack.html#_CPPv4I_Da_DpDaE7ValPack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_Da_DpDaE7ValPack\">\n<span id=\"_CPPv3I_Da_DpDaE7ValPack\"></span><span id=\"_CPPv2I_Da_DpDaE7ValPack\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Vs</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structValPack_3_01V1_00_01Vs_8_8_8_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValPack</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_Da_DpDaE7ValPack\" title=\"ValPack::V1\"><span class=\"n\"><span class=\"pre\">V1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_Da_DpDaE7ValPack\" title=\"ValPack::Vs\"><span class=\"n\"><span class=\"pre\">Vs</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>ValPack with at least one value. </p></dd>", "a[href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE5array\">\n<span id=\"_CPPv3I0_6size_tE5array\"></span><span id=\"_CPPv2I0_6size_tE5array\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_ELEMENTS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structarray\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">array</span></span></span><br/></dt><dd><p>We are in debug mode, so array has the same interface as std::array, but with extra bounds checking. Using vector as our base since it has the right pieces and is dynamic. </p></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4N12SimpleParser19PhonyNameDueToError5map_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SimpleParser19PhonyNameDueToError5map_tE\">\n<span id=\"_CPPv3N12SimpleParser19PhonyNameDueToError5map_tE\"></span><span id=\"_CPPv2N12SimpleParser19PhonyNameDueToError5map_tE\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1a19f63df8406e4e42baa0b255ae729eba\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">map_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/datastructs/api/ra_map.html#_CPPv4I00000E6ra_map\" title=\"ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">VALUE_T</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E15remove_ptr_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15remove_ptr_type\">\n<span id=\"_CPPv3I0E15remove_ptr_type\"></span><span id=\"_CPPv2I0E15remove_ptr_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__ptr__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/errors.html#_CPPv4IDpE12LibraryErrorvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE12LibraryErrorvDpRR2Ts\">\n<span id=\"_CPPv3IDpE12LibraryErrorDpRR2Ts\"></span><span id=\"_CPPv2IDpE12LibraryErrorDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1a318786ba8539c317a04998176837d007\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LibraryError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE12LibraryErrorvDpRR2Ts\" title=\"LibraryError::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Library user has made an error in how they are using the library. </p></dd>", "a[href=\"library/meta/api/macros.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">macros.hpp<a class=\"headerlink\" href=\"#macros-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Generally useful macros that can perform cools tricks. Status: RELEASE. </p><p>Generally useful macros that can perform cools tricks. As with all macros, use only after careful exclusion of alternative approaches.</p>", "a[href=\"library/web/api/emfunctions.html#_CPPv418SetBackgroundColorKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418SetBackgroundColorKNSt6stringE\">\n<span id=\"_CPPv318SetBackgroundColorKNSt6stringE\"></span><span id=\"_CPPv218SetBackgroundColorKNSt6stringE\"></span><span id=\"SetBackgroundColor__ssC\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a8f507e75f25581b625e5625ae6766eb9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetBackgroundColor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">color</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the background color of this web page. </p></dd>", "a[href=\"library/evolve/evolve.html#pruning\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Pruning<a class=\"headerlink\" href=\"#pruning\" title=\"Link to this heading\">\uf0c1</a></h4><p>Phylogenies can get very large. So large that they can cause you program to exceed its available memory. To combat this problem, phylogenies can be \u201cpruned\u201d so they only contain extant (i.e. not extinct) taxa and their ancestors. If the <code class=\"docutils literal notranslate\"><span class=\"pre\">store_outside</span></code> variable for a systematics object is set to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code> (the default), this pruning will happen automatically. If you truly want to keep track of every taxon that ever existed, you can do so by setting <code class=\"docutils literal notranslate\"><span class=\"pre\">store_outside</span></code> to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>. If you want to keep track of some historical data but can\u2019t afford the memory overhead of storing every taxon that ever existed, an intermediate options is to periodically print \u201csnapshot\u201d files containing all taxa currently in the phylogeny.</p>", "a[href=\"library/math/api/stats.html#_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\">\n<span id=\"_CPPv3I0E6Median1C\"></span><span id=\"_CPPv2I0E6Median1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a5329660baa46acc2c19779f77a90717c\"></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\" title=\"Median::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Median</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6Median12sfinae_decoyIdN1C10value_typeEE1C\" title=\"Median::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/AvidaCPU_InstLib.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">AvidaCPU_InstLib.hpp<a class=\"headerlink\" href=\"#avidacpu-instlib-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A specialized version of InstLib to handle AvidaCPU Instructions. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv410string_popRNSt6stringEKc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410string_popRNSt6stringEKc\">\n<span id=\"_CPPv310string_popRNSt6stringEKc\"></span><span id=\"_CPPv210string_popRNSt6stringEKc\"></span><span id=\"string_pop__ssR.cC\"></span><span class=\"target\" id=\"string__utils_8hpp_1a222eb1f9a8ff8f908943daab816f9a51\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'</span> <span class=\"pre\">'</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove a prefix of the input string (up to a specified delimeter) and return it. If the delimeter is not found, return the entire input string and clear it. </p></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I000E21ConvertParameterTypesDa5FUN_T11CONVERTER_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E21ConvertParameterTypesDa5FUN_T11CONVERTER_T\">\n<span id=\"_CPPv3I000E21ConvertParameterTypes5FUN_T11CONVERTER_T\"></span><span id=\"_CPPv2I000E21ConvertParameterTypes5FUN_T11CONVERTER_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NEW_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERTER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1abefea01a590fa6a00c9498b3086ab6fa\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConvertParameterTypes</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E21ConvertParameterTypesDa5FUN_T11CONVERTER_T\" title=\"ConvertParameterTypes::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E21ConvertParameterTypesDa5FUN_T11CONVERTER_T\" title=\"ConvertParameterTypes::CONVERTER_T\"><span class=\"n\"><span class=\"pre\">CONVERTER_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">convert_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a function\u2019s arguments using a templated lambda. </p></dd>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\">\n<span id=\"_CPPv3I00DpE8MergeNFARR2T1RR2T2DpRR2Ts\"></span><span id=\"_CPPv2I00DpE8MergeNFARR2T1RR2T2DpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"group__lexer__utilities_1gadce3bbc9ed385c58088b6a9133ec42f0\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MergeNFA</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\" title=\"MergeNFA::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\" title=\"MergeNFA::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeNFA3NFARR2T1RR2T2DpRR2Ts\" title=\"MergeNFA::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">others</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge multiple automata (DFA, NFA, RegEx) into one NFA. </p></dd>", "a[href=\"library/evolve/evolve.html#phylogeny-metrics\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Phylogeny metrics<a class=\"headerlink\" href=\"#phylogeny-metrics\" title=\"Link to this heading\">\uf0c1</a></h3><p>Many different metrics can be used to quantify th topology of a phylogeny.\nFor more information, see <span id=\"id4\">[<a class=\"reference internal\" href=\"bibliography.html#id13\" title=\"Marten Winter, Vincent Devictor, and Oliver Schweiger. Phylogenetic diversity and nature conservation: where are we? Trends in Ecology &amp; Evolution, 28(4):199\u2013204, 2013. URL: http://www.sciencedirect.com/science/article/pii/S0169534712002881, doi:10.1016/j.tree.2012.10.015.\">Winter <em>et al.</em>, 2013</a>, <a class=\"reference internal\" href=\"bibliography.html#id9\" title=\"Caroline M. Tucker, Marc W. Cadotte, Silvia B. Carvalho, T. Jonathan Davies, Simon Ferrier, Susanne A. Fritz, Rich Grenyer, Matthew R. Helmus, Lanna S. Jin, Arne O. Mooers, Sandrine Pavoine, Oliver Purschke, David W. Redding, Dan F. Rosauer, Marten Winter, and Florent Mazel. A guide to phylogenetic metrics for conservation, community ecology and macroecology. Biological Reviews, 92(2):698\u2013715, 2017. URL: http://onlinelibrary.wiley.com/doi/10.1111/brv.12252/abstract, doi:10.1111/brv.12252.\">Tucker <em>et al.</em>, 2017</a>, <a class=\"reference internal\" href=\"bibliography.html#id3\" title=\"Emily Dolson, Alexander Lalejini, Steven Jorgensen, and Charles Ofria. Interpreting the tape of life: ancestry-based analyses provide insights and intuition about evolutionary dynamics. Artificial Life, 26(1):1\u201322, 2020. URL: https://direct.mit.edu/artl/article/26/1/58/93272/Interpreting-the-Tape-of-Life-Ancestry-Based.\">Dolson <em>et al.</em>, 2020</a>]</span>.</p><p>The Empirical systematics manager can calculate</p>", "a[href=\"library/compiler/api/DFA.html#_CPPv4I_i0E4tDFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_i0E4tDFA\">\n<span id=\"_CPPv3I_i0E4tDFA\"></span><span id=\"_CPPv2I_i0E4tDFA\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_SYMBOLS</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">STOP_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classtDFA\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tDFA</span></span></span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\">\n<span id=\"_CPPv3I_6size_t00E19GenRandSignalGPInstR6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\"></span><span id=\"_CPPv2I_6size_t00E19GenRandSignalGPInstR6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/MatchBin.html#_CPPv4I0000E8MatchBin\" title=\"MatchBin\"><span class=\"n\"><span class=\"pre\">MatchBin</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric\"><span class=\"n\"><span class=\"pre\">HammingMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0_6size_tE14RankedSelector\" title=\"RankedSelector\"><span class=\"n\"><span class=\"pre\">RankedSelector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E32MultiplicativeCountdownRegulator\" title=\"MultiplicativeCountdownRegulator\"><span class=\"n\"><span class=\"pre\">MultiplicativeCountdownRegulator</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"signalgp__utils_8hpp_1a27ce5e3d83235c12f87b17737d82e398\"></span><a class=\"reference internal\" href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::TRAIT_T\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::MATCHBIN_T\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Instruction</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenRandSignalGPInst</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rnd</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/hardware/api/InstLib.html#_CPPv4I00_6size_tE7InstLib\" title=\"InstLib\"><span class=\"n\"><span class=\"pre\">InstLib</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::TRAIT_T\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E19GenRandSignalGPInstN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE11InstructionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEEii\" title=\"GenRandSignalGPInst::MATCHBIN_T\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">inst_lib</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_arg_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_arg_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">15</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random SignalGP instruction (templated off of tag width). </p></dd>", "a[href=\"library/debug/debug.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00E11HasToDouble\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11HasToDouble\">\n<span id=\"_CPPv3I00E11HasToDouble\"></span><span id=\"_CPPv2I00E11HasToDouble\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasToDouble\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasToDouble</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415ANSI_BrightCyanv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415ANSI_BrightCyanv\">\n<span id=\"_CPPv315ANSI_BrightCyanv\"></span><span id=\"_CPPv215ANSI_BrightCyanv\"></span><span id=\"ANSI_BrightCyan\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8e313c73ac03d36902b2103d3210955e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightCyan</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/web/api/WidgetExtras.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">WidgetExtras.hpp<a class=\"headerlink\" href=\"#widgetextras-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A collection of extra details about HTML Widgets (attributes, style, listerns) </p>", "a[href=\"dev/guide-to-testing.html#running-tests-with-docker\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Running Tests with Docker<a class=\"headerlink\" href=\"#running-tests-with-docker\" title=\"Link to this heading\">\uf0c1</a></h2><p>A <a class=\"reference external\" href=\"https://hub.docker.com/r/devosoft/empirical\">devosoft/empirical</a> Docker image has been set up\nto make recreating a development environment on your machine easier.\nThe first step is to download Docker. <a class=\"reference external\" href=\"https://docs.docker.com/get-docker/\">https://docs.docker.com/get-docker/</a></p><p>To download and run the Docker image, enter the following commands in the Docker terminal</p>", "a[href=\"library/geometry/api/Surface2D.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Surface2D.hpp<a class=\"headerlink\" href=\"#surface2d-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a templated class to represent a 2D suface capable of maintaining data about which 2D bodies are currently on that surface and rapidly identifying if they are overlapping. </p><p>BODY_TYPE is the class that represents the body geometry. BODY_INFO represents the internal infomation about the body, including the controller.</p>", "a[href=\"library/hardware/api/LinearCode.html#_CPPv4I_6size_t0E10LinearCode\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E10LinearCode\">\n<span id=\"_CPPv3I_6size_t0E10LinearCode\"></span><span id=\"_CPPv2I_6size_t0E10LinearCode\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_COUNT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classLinearCode\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LinearCode</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E11Instruction\" title=\"Instruction\"><span class=\"n\"><span class=\"pre\">Instruction</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/KeypressManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">KeypressManager.hpp<a class=\"headerlink\" href=\"#keypressmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>KeypressManager is a tracker for keypresses in HTML5 pages. </p><p>When a KeypressManager is created, it can be given functions to run in response to different types of key presses via overloaded version of the AddKeydownCallback method. Each of these accepts an order parameter that is optional and, if provided, will indicate the order in which tests should be performed to resolve a keypress. If order is not provided, tests will occur in the order that they were given to the manager.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv418string_pop_if_charRNSt6stringEc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418string_pop_if_charRNSt6stringEc\">\n<span id=\"_CPPv318string_pop_if_charRNSt6stringEc\"></span><span id=\"_CPPv218string_pop_if_charRNSt6stringEc\"></span><span id=\"string_pop_if_char__ssR.c\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3cf6e034905231bdf60269b2933a0fe6\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_if_char</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\">\n<span id=\"_CPPv3I0000DpE15BuildObjVector3R6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\"></span><span id=\"_CPPv2I0000DpE15BuildObjVector3R6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T3</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a2f51f9fc411922755509ec3d4d1456e9\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector3</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\" title=\"BuildObjVector3::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\" title=\"BuildObjVector3::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\" title=\"BuildObjVector3::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\" title=\"BuildObjVector3::T3\"><span class=\"n\"><span class=\"pre\">T3</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg3</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0000DpE15BuildObjVector3vR6vectorI5OBJ_TER2T1R2T2R2T3DpR2Ts\" title=\"BuildObjVector3::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IIDpE00E15test_type_existbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE00E15test_type_existbv\">\n<span id=\"_CPPv3IIDpE00E15test_type_existv\"></span><span id=\"_CPPv2IIDpE00E15test_type_existv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1ab9bc10a27fa4b324ce330f990b492fd6\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">test_type_exist</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/Bool.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bool.hpp<a class=\"headerlink\" href=\"#bool-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A bool representation that doesn\u2019t trip up std::vector. </p>", "a[href=\"library/web/api/events.html#_CPPv410WheelEvent\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410WheelEvent\">\n<span id=\"_CPPv310WheelEvent\"></span><span id=\"_CPPv210WheelEvent\"></span><span id=\"WheelEvent\"></span><span class=\"target\" id=\"structWheelEvent\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WheelEvent</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Event\" title=\"Event\"><span class=\"n\"><span class=\"pre\">Event</span></span></a><br/></dt><dd><p>Mouse-wheel-specific information about web events. </p></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\">\n<span id=\"_CPPv3I0E17StandardDeviationR1C\"></span><span id=\"_CPPv2I0E17StandardDeviationR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a7745484f6480a90bcfb3aae07595da06\"></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardDeviation::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StandardDeviation</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E17StandardDeviation12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardDeviation::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the standard deviation of the values in a container If values are pointers, they will be automatically de-referenced Values must be numeric. </p></dd>", "a[href=\"library/base/api/optional.html#_CPPv4I0E8optional\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8optional\">\n<span id=\"_CPPv3I0E8optional\"></span><span id=\"_CPPv2I0E8optional\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classoptional\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">optional</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">optional</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8optional\" title=\"optional::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE15StaticBitVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE15StaticBitVector\">\n<span id=\"_CPPv3I_6size_tE15StaticBitVector\"></span><span id=\"_CPPv2I_6size_tE15StaticBitVector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Bits_8hpp_1ae9d65ab65fc04ca4ef076abdb2f1e0bf\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StaticBitVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits_Data.html#_CPPv4I_6size_tE15Bits_StaticData\" title=\"Bits_StaticData\"><span class=\"n\"><span class=\"pre\">Bits_StaticData</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE15StaticBitVector\" title=\"StaticBitVector::MAX_BITS\"><span class=\"n\"><span class=\"pre\">MAX_BITS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00DpE10count_type6size_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE10count_type6size_tv\">\n<span id=\"_CPPv3I00DpE10count_typev\"></span><span id=\"_CPPv2I00DpE10count_typev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FIRST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OTHERS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aee984475c403c8706bcf42eb2365eff0\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">count_type</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/control/api/Action.html#_CPPv410ActionBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ActionBase\">\n<span id=\"_CPPv310ActionBase\"></span><span id=\"_CPPv210ActionBase\"></span><span id=\"ActionBase\"></span><span class=\"target\" id=\"classActionBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ActionBase</span></span></span><br/></dt><dd><p>BaseActions abstract functions and allow for signals to be setup at runtime; they can be called with types specified in the call.</p><p>Actions can be a bit heavyweight, but can easily be converted to std::function objects. </p><p>Subclassed by ActionSize&lt; ARG_COUNT &gt;, ActionSize&lt; sizeof\u2026(ARGS)&gt;</p></dd>", "a[href=\"library/web/api/canvas_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">canvas_utils.hpp<a class=\"headerlink\" href=\"#canvas-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Various versions of the Draw() function to draw images onto a canvas. </p><p>Each version of Draw() takes a canvas widget and some form of data to be drawn on the widget, such as a circle, a bit matrix, or a geometric surface. </p>", "a[href=\"library/text/api/Text.html#_CPPv44Text\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Text\">\n<span id=\"_CPPv34Text\"></span><span id=\"_CPPv24Text\"></span><span id=\"Text\"></span><span class=\"target\" id=\"classText\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Text</span></span></span><br/></dt><dd><p>A Text widget handles putting text on a web page that can be controlled and modified. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0E7AntiMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7AntiMod\">\n<span id=\"_CPPv3I0E7AntiMod\"></span><span id=\"_CPPv2I0E7AntiMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAntiMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AntiMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7AntiMod\" title=\"AntiMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv417EscapeCodeCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417EscapeCodeCharSetv\">\n<span id=\"_CPPv317EscapeCodeCharSetv\"></span><span id=\"_CPPv217EscapeCodeCharSetv\"></span><span id=\"EscapeCodeCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1a2a2e5976caae3747cf30b535a1df7347\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EscapeCodeCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Which characters can come after a backslash in a string? </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv47MIN_INT\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47MIN_INT\">\n<span id=\"_CPPv37MIN_INT\"></span><span id=\"_CPPv27MIN_INT\"></span><span id=\"MIN_INT__int32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1aeff4ca14817d378fc7f3e57fc109b176\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MIN_INT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2147483648</span></span><br/></dt><dd><p>(- 2^31) </p></dd>", "a[href=\"library/io/api/serialize.html#_CPPv49serialize\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49serialize\">\n<span id=\"_CPPv39serialize\"></span><span id=\"_CPPv29serialize\"></span><span id=\"serialize\"></span><span class=\"target\" id=\"namespaceserialize\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">serialize</span></span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#flexible-taxon-definitions\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Flexible taxon definitions<a class=\"headerlink\" href=\"#flexible-taxon-definitions\" title=\"Link to this heading\">\uf0c1</a></h4><p>One of the central decisions when creating a phylogeny is choosing what the taxonomic units (i.e. the nodes in the tree) are. In a traditional phylogeny, these nodes are species. However, the concept of species is so murky that it is impossible to generically apply to computational evolution systems (we\u2019d argue that it\u2019s questionable whether it could even be applied to biological data recorded at perfect temporal resolution, but that\u2019s a separate conversation). One alternative would be to make a phylogeny in which all nodes are individuals, but these trees are usually so large that they are impractical to work with.</p><p>Increasingly, biologists have embraced the idea of building trees in which the taxonomic units are not species. Often, these are denoted by referring to them as an \u201cX tree\u201d, where X is the taxonomic unit of interest. A traditional phylogeny, then, is a species tree. This terminology is particularly common in cancer evolution research, in which species trees are often contrasted with \u201cclone trees\u201d or \u201cgene trees\u201d, in which the taxonomic units are genotypes.</p>", "a[href=\"library/prefab/api/ReadoutPanel.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ReadoutPanel.hpp<a class=\"headerlink\" href=\"#readoutpanel-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>UI framework for live statistic readouts. </p>", "a[href=\"library/tools/api/unique.html#_CPPv410UniqueNameRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410UniqueNameRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv310UniqueNameRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv210UniqueNameRKNSt6stringERKNSt6stringE\"></span><span id=\"UniqueName__ssCR.ssCR\"></span><span class=\"target\" id=\"unique_8hpp_1a60af08e5e19dff37d4030f9bc1952010\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UniqueName</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">prefix</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">postfix</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A function that will always return a unique stringname (using UniqVal) with provided prefix and postfix.) </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E6MinRefRK1TRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6MinRefRK1TRK1T\">\n<span id=\"_CPPv3I0E6MinRefRK1T\"></span><span id=\"_CPPv2I0E6MinRefRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a388322621c7c574bc741d69709a43492\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6MinRefRK1TRK1T\" title=\"MinRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MinRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6MinRefRK1TRK1T\" title=\"MinRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>MinRef works like Min, but never copies any inputs; always treats as references. MinRef of only one element returns reference to that element itself! </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00DpE8has_typebv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE8has_typebv\">\n<span id=\"_CPPv3I00DpE8has_typev\"></span><span id=\"_CPPv2I00DpE8has_typev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FIRST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OTHERS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1ad5efff55bd412d345458e5b2a1ba8187\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_type</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE10type_index\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE10type_index\">\n<span id=\"_CPPv3IDpE10type_index\"></span><span id=\"_CPPv2IDpE10type_index\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtype__index\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_index</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv4I0E15MakeFromLiteral1TRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15MakeFromLiteral1TRK6String\">\n<span id=\"_CPPv3I0E15MakeFromLiteralRK6String\"></span><span id=\"_CPPv2I0E15MakeFromLiteralRK6String\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1a0cc68f62c0e851e311f85b2d1819982d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E15MakeFromLiteral1TRK6String\" title=\"MakeFromLiteral::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeFromLiteral</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/config.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">config.hpp<a class=\"headerlink\" href=\"#config-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Maintains a set of configuration options. </p><p>This file defines a master configuration option Config, whose values can be loaded at runtime or else set as constant values throughout the code.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv48next_posNSt11string_viewE6size_tbbbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48next_posNSt11string_viewE6size_tbbbb\">\n<span id=\"_CPPv38next_posNSt11string_viewE6size_tbbbb\"></span><span id=\"_CPPv28next_posNSt11string_viewE6size_tbbbb\"></span><span id=\"next_pos__std::string_view.s.b.b.b.b\"></span><span class=\"target\" id=\"string__utils_8hpp_1af0e5b327695f70acd4bd45ce8b70606c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">next_pos</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Advance a position in a string, respecting quotes, parens, braces, and brackets as indicated </p></dd>", "a[href=\"library/web/d3/d3-intro.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Using Empirica\u2019s D3.js Wrapper<a class=\"headerlink\" href=\"#using-empirica-s-d3-js-wrapper\" title=\"Link to this heading\">\uf0c1</a></h1><p>If you\u2019re writing scientific code that runs on the web, you\u2019ll\nprobably want to visualize the results (either as your program runs or\nafter it\u2019s done). To make this as easy as possible, Empirical includes\na C++ wrapper for d3.js, a wildly popular and powerful Javascript data\nvisualization library. Using the wrapper, you can create visualizations\ndirectly from C++.</p><p>At a base level, the wrapper provides C++ equivalents for all objects,\nmethods, and functions in d3.js. So, if you\u2019re used to using d3, using\nthe wrapper should be very similar. However, d3.js is a library that you\nuse to build visualizations rather than a library of pre-built\nvisualizations (a fact that has lead to the proliferation of many very\nsimilar libraries built on top of d3 that provide pre-built graphs).\nWhere possible, we have tried to provide short-cut functions and\npre-built graph objects in an effort to help those new to Javascript\nvisualization get started fast. This is an ongoing process and we\u2019re\nalways open to suggestions!</p>", "a[href=\"library/geometry/geometry.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Geometry<a class=\"headerlink\" href=\"#geometry\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/String.html#_CPPv4I0E11MakeLiteral6StringRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11MakeLiteral6StringRK1T\">\n<span id=\"_CPPv3I0E11MakeLiteralRK1T\"></span><span id=\"_CPPv2I0E11MakeLiteralRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1a5e777b137fd5d3e48bbefcbd8cbc12b5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeLiteral</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11MakeLiteral6StringRK1T\" title=\"MakeLiteral::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/VirtualCPU_InstLib.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">VirtualCPU_InstLib.hpp<a class=\"headerlink\" href=\"#virtualcpu-instlib-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A specialized version of InstLib to handle VirtualCPU instructions. </p>", "a[href=\"library/in_progress/api/fixed.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">fixed.hpp<a class=\"headerlink\" href=\"#fixed-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E13CountMutStepsi3PtrI7taxon_tENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13CountMutStepsi3PtrI7taxon_tENSt6stringE\">\n<span id=\"_CPPv3I0E13CountMutSteps3PtrI7taxon_tENSt6stringE\"></span><span id=\"_CPPv2I0E13CountMutSteps3PtrI7taxon_tENSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a15d491207663e7e4668a6de418163700\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountMutSteps</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13CountMutStepsi3PtrI7taxon_tENSt6stringE\" title=\"CountMutSteps::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"substitution\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of times a mutation of type <code class=\"docutils literal notranslate\"><span class=\"pre\">type</span></code> occurred along <code class=\"docutils literal notranslate\"><span class=\"pre\">taxon</span></code> \u2018s lineage. (Different from CountMuts in that CountMuts sums them whereas CountMutSteps would count two simultaneous mutations of the same type as one event) Assumes each taxon has a struct containing an unordered map with keys that are strings indicating types of mutations and keys that are numbers indicating the number of that type of mutation that occurred to make this taxon from the parent. </p></dd>", "a[href=\"library/bits/api/Bits_Data.html#_CPPv416Bits_DynamicData\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416Bits_DynamicData\">\n<span id=\"_CPPv316Bits_DynamicData\"></span><span id=\"_CPPv216Bits_DynamicData\"></span><span class=\"target\" id=\"Bits__Data_8hpp_1a580f800f2b155f908a037f3225932ed6\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bits_DynamicData</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data_Mem_Dynamic</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv4I0E15MakeEnglishList6StringRK11CONTAINER_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15MakeEnglishList6StringRK11CONTAINER_T\">\n<span id=\"_CPPv3I0E15MakeEnglishListRK11CONTAINER_T\"></span><span id=\"_CPPv2I0E15MakeEnglishListRK11CONTAINER_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1ae88cb57312afd869d4c3f2e22c763f54\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeEnglishList</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E15MakeEnglishList6StringRK11CONTAINER_T\" title=\"MakeEnglishList::CONTAINER_T\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IIDpE00E15test_type_valuebv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE00E15test_type_valuebv\">\n<span id=\"_CPPv3IIDpE00E15test_type_valuev\"></span><span id=\"_CPPv2IIDpE00E15test_type_valuev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a80ba2bc24692bd61351e1e486f8fbad0\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">test_type_value</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/InstLib.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">InstLib.hpp<a class=\"headerlink\" href=\"#instlib-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file maintains information about instructions availabel in virtual hardware. </p>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\">\n<span id=\"_CPPv3I_6size_t00E22GenRandSignalGPProgramR6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\"></span><span id=\"_CPPv2I_6size_t00E22GenRandSignalGPProgramR6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/MatchBin.html#_CPPv4I0000E8MatchBin\" title=\"MatchBin\"><span class=\"n\"><span class=\"pre\">MatchBin</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric\"><span class=\"n\"><span class=\"pre\">HammingMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0_6size_tE14RankedSelector\" title=\"RankedSelector\"><span class=\"n\"><span class=\"pre\">RankedSelector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E32MultiplicativeCountdownRegulator\" title=\"MultiplicativeCountdownRegulator\"><span class=\"n\"><span class=\"pre\">MultiplicativeCountdownRegulator</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"signalgp__utils_8hpp_1ade3ae90c3c91a1b73ff9b5d4660f765e\"></span><a class=\"reference internal\" href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::TRAIT_T\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::MATCHBIN_T\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Program</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenRandSignalGPProgram</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rnd</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/hardware/api/InstLib.html#_CPPv4I00_6size_tE7InstLib\" title=\"InstLib\"><span class=\"n\"><span class=\"pre\">InstLib</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::TRAIT_T\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E22GenRandSignalGPProgramN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE7ProgramER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_t6size_t6size_tii\" title=\"GenRandSignalGPProgram::MATCHBIN_T\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">inst_lib</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_func_cnt</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_func_cnt</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">16</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_fun_len</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_fun_len</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">32</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_arg_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_arg_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">15</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random SignalGP program (templated off of tag width). </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\">\n<span id=\"_CPPv3I00E9flip_pairRKNSt4pairI1A1BEE\"></span><span id=\"_CPPv2I00E9flip_pairRKNSt4pairI1A1BEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">B</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a066ca2b0d02aae707dd1f4190750cf15\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flip_pair</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E9flip_pairNSt4pairI1B1AEERKNSt4pairI1A1BEE\" title=\"flip_pair::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an std::pair&lt;A,B&gt; and return the flipped pair std::pair&lt;B,A&gt; </p></dd>", "a[href=\"library/debug/api/alert.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">alert.hpp<a class=\"headerlink\" href=\"#alert-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Define an Alert function that goes to std::cerr in c++ or to Alert() in Javascript. Status: RELEASE. </p>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E13find_last_bit6size_t1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13find_last_bit6size_t1T\">\n<span id=\"_CPPv3I0E13find_last_bit1T\"></span><span id=\"_CPPv2I0E13find_last_bit1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1aa45c4adfa63b08e273327e545835d98c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_last_bit</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E13find_last_bit6size_t1T\" title=\"find_last_bit::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the position of the first one bit. </p></dd>", "a[href=\"library/hardware/api/EventLib.html#_CPPv4I0E8EventLib\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8EventLib\">\n<span id=\"_CPPv3I0E8EventLib\"></span><span id=\"_CPPv2I0E8EventLib\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HARDWARE_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classEventLib\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EventLib</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/constants.html#_CPPv43PHI\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43PHI\">\n<span id=\"_CPPv33PHI\"></span><span id=\"_CPPv23PHI\"></span><span id=\"PHI__doubleC\"></span><span class=\"target\" id=\"constants_8hpp_1ab165908327c65ab091aa39919c0eaca4\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PHI</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.61803398874</span></span><br/></dt><dd><p>Golden ratio. </p></dd>", "a[href=\"library/scholar/api/Author.html#_CPPv46Author\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Author\">\n<span id=\"_CPPv36Author\"></span><span id=\"_CPPv26Author\"></span><span id=\"Author\"></span><span class=\"target\" id=\"classAuthor\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Author</span></span></span><br/></dt><dd></dd>", "a[href=\"dev/guide-to-testing.html#tidyness-enforcement\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Tidyness Enforcement<a class=\"headerlink\" href=\"#tidyness-enforcement\" title=\"Link to this heading\">\uf0c1</a></h2><p>As part of our continuous integration, we test for several tidyness violations, including</p>", "a[href=\"library/meta/api/reflection.html#_CPPv4I0DpDpE10SubsetCall6RETURNNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpDpE10SubsetCall6RETURNNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\">\n<span id=\"_CPPv3I0DpDpE10SubsetCallNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\"></span><span id=\"_CPPv2I0DpDpE10SubsetCallNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_ARGS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CALL_ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"reflection_8hpp_1a51af548352983e4f9808cc1ab9bd27b2\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SubsetCall</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpDpE10SubsetCall6RETURNNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\" title=\"SubsetCall::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpDpE10SubsetCall6RETURNNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\" title=\"SubsetCall::FUN_ARGS\"><span class=\"n\"><span class=\"pre\">FUN_ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpDpE10SubsetCall6RETURNNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\" title=\"SubsetCall::CALL_ARGS\"><span class=\"n\"><span class=\"pre\">CALL_ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-&gt;</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpDpE10SubsetCall6RETURNNSt8functionIF6RETURNDp8FUN_ARGSEEEDp9CALL_ARGS\" title=\"SubsetCall::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><br/></dt><dd><p>Identify the number of parameters in a function and pass in correct number of argument. </p></dd>", "a[href=\"library/games/api/Mancala.html#_CPPv47Mancala\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47Mancala\">\n<span id=\"_CPPv37Mancala\"></span><span id=\"_CPPv27Mancala\"></span><span id=\"Mancala\"></span><span class=\"target\" id=\"classMancala\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Mancala</span></span></span><br/></dt><dd></dd>", "a[href=\"library/in_progress/api/ConfigLexer.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ConfigLexer.hpp<a class=\"headerlink\" href=\"#configlexer-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E12element_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12element_type\">\n<span id=\"_CPPv3I0E12element_type\"></span><span id=\"_CPPv2I0E12element_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structelement__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">element_type</span></span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataInterface.html#_CPPv413DataInterface\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413DataInterface\">\n<span id=\"_CPPv313DataInterface\"></span><span id=\"_CPPv213DataInterface\"></span><span id=\"DataInterface\"></span><span class=\"target\" id=\"classDataInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataInterface</span></span></span><br/></dt><dd><p>A generic interface to a DataNode (so that you don\u2019t need to know the node\u2019s exact type) </p></dd>", "a[href=\"library/web/api/Button.html#_CPPv46Button\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Button\">\n<span id=\"_CPPv36Button\"></span><span id=\"_CPPv26Button\"></span><span id=\"Button\"></span><span class=\"target\" id=\"classButton\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Button</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46Button\" title=\"Button\"><span class=\"n\"><span class=\"pre\">Button</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Create or control an HTML Button object that you can manipulate and update as needed. </p></dd>", "a[href=\"library/hardware/api/LinearCode.html#_CPPv4I_6size_t0E11Instruction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E11Instruction\">\n<span id=\"_CPPv3I_6size_t0E11Instruction\"></span><span id=\"_CPPv2I_6size_t0E11Instruction\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structInstruction\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Instruction</span></span></span><br/></dt><dd><p>A single instruction in a linear genome. </p></dd>", "a[href=\"library/evolve/api/StateGrid.html#_CPPv49StateGrid\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49StateGrid\">\n<span id=\"_CPPv39StateGrid\"></span><span id=\"_CPPv29StateGrid\"></span><span id=\"StateGrid\"></span><span class=\"target\" id=\"classStateGrid\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StateGrid</span></span></span><br/></dt><dd><p>A StateGrid describes a map of grid positions to the current state of each position. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv419from_literal_stringRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419from_literal_stringRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv319from_literal_stringRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv219from_literal_stringRKNSt6stringERKNSt6stringE\"></span><span id=\"from_literal_string__ssCR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a7c0bb4f00266d090843e0ea7d509d386\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">from_literal_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"p\"><span class=\"pre\">[[</span></span><span class=\"pre\">maybe_unused</span><span class=\"p\"><span class=\"pre\">]]</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">quote_marks</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\\\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a literal string representation to an actual string. </p></dd>", "a[href=\"library/math/api/DistributionSet.html#_CPPv411BinomialSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411BinomialSet\">\n<span id=\"_CPPv311BinomialSet\"></span><span id=\"_CPPv211BinomialSet\"></span><span class=\"target\" id=\"DistributionSet_8hpp_1ac0ff958b31f60944ecab68a807a30194\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BinomialSet</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DistributionSet\" title=\"DistributionSet\"><span class=\"n\"><span class=\"pre\">DistributionSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/math/api/Distribution.html#_CPPv48Binomial\" title=\"Binomial\"><span class=\"n\"><span class=\"pre\">Binomial</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\">\n<span id=\"_CPPv3I0E16RemoveDuplicatesRK6vectorI1TE\"></span><span id=\"_CPPv2I0E16RemoveDuplicatesRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a8efa9be502b13750c7d301b1660bf485\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\" title=\"RemoveDuplicates::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveDuplicates</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16RemoveDuplicates6vectorI1TERK6vectorI1TE\" title=\"RemoveDuplicates::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a new vector containing the same elements as</p></dd>", "a[href=\"library/hardware/api/EventDrivenGP.html#_CPPv413EventDrivenGP\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413EventDrivenGP\">\n<span id=\"_CPPv313EventDrivenGP\"></span><span id=\"_CPPv213EventDrivenGP\"></span><span class=\"target\" id=\"EventDrivenGP_8hpp_1ad41518fa75580d4890e521f18740d5fd\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EventDrivenGP</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">8</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A convenient shortcut for using EventDrivenGP_AW class with affinity width set to a default of 8. </p></dd>", "a[href=\"library/compiler/api/NFA.html#_CPPv43NFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43NFA\">\n<span id=\"_CPPv33NFA\"></span><span id=\"_CPPv23NFA\"></span><span class=\"target\" id=\"NFA_8hpp_1a6264006192b7a64500e0b4d060e3e727\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NFA</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E4tNFA\" title=\"tNFA\"><span class=\"n\"><span class=\"pre\">tNFA</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>NFA is the most standard tNFA setup. </p></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv416RandomUIntVectorR6Random6size_t6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416RandomUIntVectorR6Random6size_t6size_t6size_t\">\n<span id=\"_CPPv316RandomUIntVectorR6Random6size_t6size_t6size_t\"></span><span id=\"_CPPv216RandomUIntVectorR6Random6size_t6size_t6size_t\"></span><span id=\"RandomUIntVector__RandomR.s.s.s\"></span><span class=\"target\" id=\"random__utils_8hpp_1a3f910d809c0067ba1d4d7ed832854f38\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomUIntVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random size_t vector in the specified range. </p></dd>", "a[href=\"library/control/api/Signal.html#_CPPv4IDpE6Signal\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE6Signal\">\n<span id=\"_CPPv3IDpE6Signal\"></span><span id=\"_CPPv2IDpE6Signal\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSignal\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Signal</span></span></span><br/></dt><dd><p>Generic version of Signals; needs specialization to a function type.. </p></dd>", "a[href=\"library/data/api/DataNode.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataNode.hpp<a class=\"headerlink\" href=\"#datanode-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>DataNode objects track a specific type of data over the course of a run. </p><p>Collection: New data can be pushed or pulled. Add(VAL\u2026 v) pushes data to a node AddDatum(VAL v) pushes just one datum, but can be used as an action for a signal.</p>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E15BuildObjVector4vR6vectorI5OBJ_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15BuildObjVector4vR6vectorI5OBJ_TE\">\n<span id=\"_CPPv3I0E15BuildObjVector4R6vectorI5OBJ_TE\"></span><span id=\"_CPPv2I0E15BuildObjVector4R6vectorI5OBJ_TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aba01327fd44fd578ec04718493ff80db\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector4</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15BuildObjVector4vR6vectorI5OBJ_TE\" title=\"BuildObjVector4::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/CanvasAction.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">CanvasAction.hpp<a class=\"headerlink\" href=\"#canvasaction-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Define a base class for all actions that can be done to widgets, plus simple actions. </p><p>CanvasAction objects modify the appearance of a canvas and can be tracked to reconstruct the state of the canvas from scratch.</p>", "a[href=\"library/web/api/Button.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Button.hpp<a class=\"headerlink\" href=\"#button-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Create/control an HTML button and call a specified function when that button is clicked. </p><p>Use example:</p>", "a[href=\"library/data/data.html#data-tools-api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Data Tools API<a class=\"headerlink\" href=\"#data-tools-api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E10differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E10differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1aede5c0206dc71ca00e2391362407059c\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but no S2) </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0_6size_tE9MinDimMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE9MinDimMod\">\n<span id=\"_CPPv3I0_6size_tE9MinDimMod\"></span><span id=\"_CPPv2I0_6size_tE9MinDimMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Dim</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structMinDimMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MinDimMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE9MinDimMod\" title=\"MinDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">query_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE9MinDimMod\" title=\"MinDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE9MinDimMod\" title=\"MinDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tag_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE9MinDimMod\" title=\"MinDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/VirtualCPU_InstLib.html#_CPPv4I00_6size_tE18VirtualCPU_InstLib\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE18VirtualCPU_InstLib\">\n<span id=\"_CPPv3I00_6size_tE18VirtualCPU_InstLib\"></span><span id=\"_CPPv2I00_6size_tE18VirtualCPU_InstLib\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HARDWARE_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_COUNT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structVirtualCPU__InstLib\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VirtualCPU_InstLib</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/hardware/api/InstLib.html#_CPPv4I00_6size_tE7InstLib\" title=\"InstLib\"><span class=\"n\"><span class=\"pre\">InstLib</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE18VirtualCPU_InstLib\" title=\"VirtualCPU_InstLib::HARDWARE_T\"><span class=\"n\"><span class=\"pre\">HARDWARE_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A pure-virtual class that defines a series of instructions for VirtualCPU_Base or any of its derived classes. </p></dd>", "a[href=\"library/io/api/ContiguousStream.html#_CPPv416ContiguousStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ContiguousStream\">\n<span id=\"_CPPv316ContiguousStream\"></span><span id=\"_CPPv216ContiguousStream\"></span><span id=\"ContiguousStream\"></span><span class=\"target\" id=\"classContiguousStream\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ContiguousStream</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\">\n<span id=\"_CPPv3I0E9TransposeRK6vectorI6vectorI1TEE\"></span><span id=\"_CPPv2I0E9TransposeRK6vectorI6vectorI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a7d8c477875d17bf518c283a3a07ab8ef\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\" title=\"Transpose::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Transpose</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9Transpose6vectorI6vectorI1TEERK6vectorI6vectorI1TEE\" title=\"Transpose::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_vv</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Swap the order of a vector of vectors. That is, swap rows and columns. NOTE: All rows must be the same size or smaller than those above for this to work. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv412NumBitFields6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412NumBitFields6size_t\">\n<span id=\"_CPPv312NumBitFields6size_t\"></span><span id=\"_CPPv212NumBitFields6size_t\"></span><span id=\"NumBitFields__sCE\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1aaa54122b5cc5a5021996a37ca05c125c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NumBitFields</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bits</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Convert a bit count to the number of fields needed to store them. </p></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv4I000_6size_tE16RouletteSelector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000_6size_tE16RouletteSelector\">\n<span id=\"_CPPv3I000_6size_tE16RouletteSelector\"></span><span id=\"_CPPv2I000_6size_tE16RouletteSelector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ThreshRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SkewRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxBaselineRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultN</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structRouletteSelector\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RouletteSelector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12SelectorBase\" title=\"SelectorBase\"><span class=\"n\"><span class=\"pre\">SelectorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv418RouletteCacheState\" title=\"RouletteCacheState\"><span class=\"n\"><span class=\"pre\">RouletteCacheState</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Selector chooses probabilistically based on match quality with replacement. ThreshRatio: what is the raw maximum score to even be considered to match SkewRatio: how much more heavily should the best matches be weighted in terms of match probability; must be greater than 0 (close to zero: very heavily, large: mostly even weighting) MaxBaselineRatio: maximum score that all scores will be normalized to baseline = min(min_score, MaxBaselineRatio) normalized_score = score - baseline \u2026 overall, p_match ~ 1 / (skew + score - baseline) </p></dd>", "a[href=\"library/base/api/optional.html#_CPPv4I0E13make_optional8optionalINSt7decay_tI1TEEERR1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13make_optional8optionalINSt7decay_tI1TEEERR1T\">\n<span id=\"_CPPv3I0E13make_optionalRR1T\"></span><span id=\"_CPPv2I0E13make_optionalRR1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"optional_8hpp_1af6040948c2f0c5b69b031405517f6f41\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8optional\" title=\"optional\"><span class=\"n\"><span class=\"pre\">optional</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">decay_t</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13make_optional8optionalINSt7decay_tI1TEEERR1T\" title=\"make_optional::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">make_optional</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E13make_optional8optionalINSt7decay_tI1TEEERR1T\" title=\"make_optional::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/Tween.html#_CPPv45Tween\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Tween\">\n<span id=\"_CPPv35Tween\"></span><span id=\"_CPPv25Tween\"></span><span id=\"Tween\"></span><span class=\"target\" id=\"classTween\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tween</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\">\n<span id=\"_CPPv3I000E3HasRKNSt3setI1T1HEERK1V\"></span><span id=\"_CPPv2I000E3HasRKNSt3setI1T1HEERK1V\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">H</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">V</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a2174ac0e86797e2c0e46920d5aa7a757\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\" title=\"Has::H\"><span class=\"n\"><span class=\"pre\">H</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E3HasbRKNSt3setI1T1HEERK1V\" title=\"Has::V\"><span class=\"n\"><span class=\"pre\">V</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an std::set has a particular element without modifying the set in any way. </p></dd>", "a[href=\"library/web/api/Animate.html#_CPPv47Animate\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47Animate\">\n<span id=\"_CPPv37Animate\"></span><span id=\"_CPPv27Animate\"></span><span id=\"Animate\"></span><span class=\"target\" id=\"classAnimate\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Animate</span></span></span><br/></dt><dd><p>An object that, when active, repeatedly calls a function as fast as possible, to a maximum of 60 frames per second. </p><p>Parameters to the animation function can be:<ul class=\"simple\">\n<li><p>double (representing time since the last frame)</p></li>\n<li><p>a const reference to the animation object itself</p></li>\n<li><p>nothing</p></li>\n</ul>\n</p><p>Control methods: void Start() void Stop() void Step() void ToggleActive()</p><p>Access methods: bool GetActive() const bool GetDoStep() const double GetStartTime() const double GetPrevTime() const double GetCurTime() const double GetStepTime() const double GetRunTime() const int GetFrameCount() const</p><p>Config methods: void SetCallback(const std::function&lt;void(const Animate &amp;)&gt; &amp; fun) void SetCallback(const std::function&lt;void(double)&gt; &amp; fun) void SetCallback(const std::function&lt;void()&gt; &amp; fun)</p></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\">\n<span id=\"_CPPv3I0E11UniqueCountR1C\"></span><span id=\"_CPPv2I0E11UniqueCountR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a1b29bc8e23ad18f2c620e1ad05285d23\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">enable_if</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">!</span></span><a class=\"reference internal\" href=\"library/meta/api/type_traits.html#_CPPv4I0E11is_ptr_type\" title=\"is_ptr_type\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\" title=\"UniqueCount::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UniqueCount</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E11UniqueCountNSt9enable_ifIXntN11is_ptr_typeIN1C10value_typeEE5valueEEiE4typeER1C\" title=\"UniqueCount::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Count the number of unique elements in a container. </p></dd>", "a[href=\"library/matching/api/MatchDepository.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MatchDepository.hpp<a class=\"headerlink\" href=\"#matchdepository-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A container for tag-based lookup, optimized for situations where tags are not removed from the lookup set. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv412has_digit_atRKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412has_digit_atRKNSt6stringE6size_t\">\n<span id=\"_CPPv312has_digit_atRKNSt6stringE6size_t\"></span><span id=\"_CPPv212has_digit_atRKNSt6stringE6size_t\"></span><span id=\"has_digit_at__ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1aceecb2e5a1d79fb2643e60eabaaea050\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_digit_at</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv410MakeRepeat6String6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410MakeRepeat6String6size_t\">\n<span id=\"_CPPv310MakeRepeat6String6size_t\"></span><span id=\"_CPPv210MakeRepeat6String6size_t\"></span><span id=\"MakeRepeat__String.s\"></span><span class=\"target\" id=\"String_8hpp_1a8e36050813dea0f871b365b96fe189f6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeRepeat</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">base</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">n</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Concatenate n copies of a string. </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E12intersection6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E12intersection6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1ae87fbdad417b62f1eb4959a2b111c013\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"library/in_progress/api/ConfigParser.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ConfigParser.hpp<a class=\"headerlink\" href=\"#configparser-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/web/api/CanvasShape.html#_CPPv411CanvasShape\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411CanvasShape\">\n<span id=\"_CPPv311CanvasShape\"></span><span id=\"_CPPv211CanvasShape\"></span><span id=\"CanvasShape\"></span><span class=\"target\" id=\"classCanvasShape\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/CanvasAction.html#_CPPv412CanvasAction\" title=\"CanvasAction\"><span class=\"n\"><span class=\"pre\">CanvasAction</span></span></a><br/></dt><dd><p>Define an arbitrary shape to draw on a canvas (base class) </p><p>Subclassed by CanvasCircle, CanvasClearRect, CanvasLine, CanvasMultiLine, CanvasPolygon, CanvasRect, CanvasText</p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv415is_lower_letterc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415is_lower_letterc\">\n<span id=\"_CPPv315is_lower_letterc\"></span><span id=\"_CPPv215is_lower_letterc\"></span><span id=\"is_lower_letter__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a3c41f8f3c4af4cd92b7ff43d64e52713\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_lower_letter</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv414GetPermutationR6Random6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414GetPermutationR6Random6size_t\">\n<span id=\"_CPPv314GetPermutationR6Random6size_t\"></span><span id=\"_CPPv214GetPermutationR6Random6size_t\"></span><span id=\"GetPermutation__RandomR.s\"></span><span class=\"target\" id=\"random__utils_8hpp_1ac1b7e8c5da1cd3716fd6c58ac1f735c5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetPermutation</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return an vector&lt;int&gt; numbered 0 through size-1 in a random order. </p></dd>", "a[href=\"library/math/api/Distribution.html#_CPPv48Binomial\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Binomial\">\n<span id=\"_CPPv38Binomial\"></span><span id=\"_CPPv28Binomial\"></span><span id=\"Binomial\"></span><span class=\"target\" id=\"classBinomial\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Binomial</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412Distribution\" title=\"Distribution\"><span class=\"n\"><span class=\"pre\">Distribution</span></span></a><br/></dt><dd><p>How many successes with p probability and N attempts? </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48find_allNSt11string_viewEcbbbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48find_allNSt11string_viewEcbbbb\">\n<span id=\"_CPPv38find_allNSt11string_viewEcbbbb\"></span><span id=\"_CPPv28find_allNSt11string_viewEcbbbb\"></span><span id=\"find_all__std::string_view.c.b.b.b.b\"></span><span class=\"target\" id=\"string__utils_8hpp_1affd6d794da72d63ea85e056793d567e9\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_all</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/ToggleSwitch.html#_CPPv412ToggleSwitch\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ToggleSwitch\">\n<span id=\"_CPPv312ToggleSwitch\"></span><span id=\"_CPPv212ToggleSwitch\"></span><span id=\"ToggleSwitch\"></span><span class=\"target\" id=\"classToggleSwitch\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToggleSwitch</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#phylotracklib-systematics-manager\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Phylotracklib (Systematics Manager)<a class=\"headerlink\" href=\"#phylotracklib-systematics-manager\" title=\"Link to this heading\">\uf0c1</a></h2><p>The systematics manager tracks phylogenetic relationships among organisms within a digital\nevolution system. For asexual systems, these relationships forma phylogenetic tree\n(phylogeny). Systems with recombination (i.e. sexual reproduction systems) are not\nyet supported. One of the major benefits of doing <em>in silico</em> evolution experiments (instead of or in addition to laboratory or field experiments) is that they allow perfect measurement of quantities that can only be inferred in nature. Once such property is the precise phylogeny (i.e. ancestry tree) of the population.</p><p><img alt=\"An example phylogeny\" src=\"_images/phylogeny.jpg\"/></p>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0DpE11find_any_of6size_tRKNSt6stringE1TDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE11find_any_of6size_tRKNSt6stringE1TDp2Ts\">\n<span id=\"_CPPv3I0DpE11find_any_ofRKNSt6stringE1TDp2Ts\"></span><span id=\"_CPPv2I0DpE11find_any_ofRKNSt6stringE1TDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a287801400f2ebbebc5e22852d6a5ebf4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_any_of</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">test_str</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE11find_any_of6size_tRKNSt6stringE1TDp2Ts\" title=\"find_any_of::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE11find_any_of6size_tRKNSt6stringE1TDp2Ts\" title=\"find_any_of::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tests</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/constants.html#_CPPv49MAX_4BYTE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MAX_4BYTE\">\n<span id=\"_CPPv39MAX_4BYTE\"></span><span id=\"_CPPv29MAX_4BYTE\"></span><span id=\"MAX_4BYTE__uint32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1a219d18062cc86bf7ab390239c20a4ba3\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_4BYTE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4294967295</span></span><br/></dt><dd><p>(2^32 - 1) </p></dd>", "a[href=\"dev/guide-to-testing.html#running-tests\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Running Tests<a class=\"headerlink\" href=\"#running-tests\" title=\"Link to this heading\">\uf0c1</a></h2><p>In the root directory of Empirical, use the maketarget <code class=\"docutils literal notranslate\"><span class=\"pre\">test</span></code>, like so:</p>", "a[href=\"library/config/api/FlagManager.html#_CPPv411FlagManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411FlagManager\">\n<span id=\"_CPPv311FlagManager\"></span><span id=\"_CPPv211FlagManager\"></span><span id=\"FlagManager\"></span><span class=\"target\" id=\"classFlagManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FlagManager</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E13replace_macroNSt6stringERKNSt6stringENSt6stringERR5FUN_Tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13replace_macroNSt6stringERKNSt6stringENSt6stringERR5FUN_Tb\">\n<span id=\"_CPPv3I0E13replace_macroRKNSt6stringENSt6stringERR5FUN_Tb\"></span><span id=\"_CPPv2I0E13replace_macroRKNSt6stringENSt6stringERR5FUN_Tb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a53934c1cb6ba662fec6dca3e6a4c86c4\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">replace_macro</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">macro_name</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E13replace_macroNSt6stringERKNSt6stringENSt6stringERR5FUN_Tb\" title=\"replace_macro::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find any instance of MACRO_NAME(ARGS) and call replace it with fun(ARGS). </p><p>Find any instance of MACRO_NAME(ARGS) and replace it with fun(ARGS).</p></dd>", "a[href=\"library/io/api/StreamManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">StreamManager.hpp<a class=\"headerlink\" href=\"#streammanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>The StreamManager object links names to files or other streams. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Ideally should also work with File</p>\n</dd></dl>\n</p>", "a[href=\"library/config/api/ArgManager.html#_CPPv47ArgSpec\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47ArgSpec\">\n<span id=\"_CPPv37ArgSpec\"></span><span id=\"_CPPv27ArgSpec\"></span><span id=\"ArgSpec\"></span><span class=\"target\" id=\"structArgSpec\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgSpec</span></span></span><br/></dt><dd><p>A helper struct for ArgManager that specifies a single argument type. Note that the primary argument name is specified as the keys of the specs map constructor argument for ArgManager. </p></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv48SetColorKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48SetColorKNSt6stringE\">\n<span id=\"_CPPv38SetColorKNSt6stringE\"></span><span id=\"_CPPv28SetColorKNSt6stringE\"></span><span id=\"SetColor__ssC\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a06fd79beb8e9ad87080defefb48388c4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetColor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">color</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/DistributionSet.html#_CPPv419NegativeBinomialSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419NegativeBinomialSet\">\n<span id=\"_CPPv319NegativeBinomialSet\"></span><span id=\"_CPPv219NegativeBinomialSet\"></span><span class=\"target\" id=\"DistributionSet_8hpp_1a742b034395727474abaa11c8e44355b8\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NegativeBinomialSet</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DistributionSet\" title=\"DistributionSet\"><span class=\"n\"><span class=\"pre\">DistributionSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/math/api/Distribution.html#_CPPv416NegativeBinomial\" title=\"NegativeBinomial\"><span class=\"n\"><span class=\"pre\">NegativeBinomial</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv49ByteCount\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49ByteCount\">\n<span id=\"_CPPv39ByteCount\"></span><span id=\"_CPPv29ByteCount\"></span><span id=\"ByteCount__sA\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1a951965118edfdd6f9ee02944f0604a7c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ByteCount</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"m\"><span class=\"pre\">256</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">7</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">8</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd><p>How many bits are set to one in each possible byte? </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\">\n<span id=\"_CPPv3IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\"></span><span id=\"_CPPv2IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__intersection_3_01Cmp_00_01Variadic_3_01U_8_8_8_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_intersection</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U...&gt;&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U...&gt;&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0DpE21variadic_intersectionI3Cmp8VariadicIDp1UEE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U...&gt;&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv412SimpleParser\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412SimpleParser\">\n<span id=\"_CPPv312SimpleParser\"></span><span id=\"_CPPv212SimpleParser\"></span><span id=\"SimpleParser\"></span><span class=\"target\" id=\"classSimpleParser\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SimpleParser</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/info_theory.html#_CPPv4I0E7EntropydRK9CONTAINER\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7EntropydRK9CONTAINER\">\n<span id=\"_CPPv3I0E7EntropyRK9CONTAINER\"></span><span id=\"_CPPv2I0E7EntropyRK9CONTAINER\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"info__theory_8hpp_1a0090b1b2949e69ad692b124d4cec07c8\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Entropy</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7EntropydRK9CONTAINER\" title=\"Entropy::CONTAINER\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">weights</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector of weights to probabilities and return the entropy of the system. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417to_ansi_underlineRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417to_ansi_underlineRKNSt6stringE\">\n<span id=\"_CPPv317to_ansi_underlineRKNSt6stringE\"></span><span id=\"_CPPv217to_ansi_underlineRKNSt6stringE\"></span><span id=\"to_ansi_underline__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a52845ce43233d8bea92e17621650ad29\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_ansi_underline</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string appear underline when printed to the command line. </p></dd>", "a[href=\"library/compiler/api/RegEx.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">RegEx.hpp<a class=\"headerlink\" href=\"#regex-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Basic regular expression handler. </p><p>\nA fully (well, mostly) functional regular expression processor.</p>", "a[href=\"library/web/api/emfunctions.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">emfunctions.hpp<a class=\"headerlink\" href=\"#emfunctions-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specialized, useful function for Empirical. </p>", "a[href=\"library/math/api/combos.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">combos.hpp<a class=\"headerlink\" href=\"#combos-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to step through combinations of items. </p><p>Step through all combinations of size K from a set of N values. For ComboIDs just return the indecies (the specific of the container don\u2019t matter). Other versions will directly wrapper containers.</p>", "a[href=\"library/math/api/RangeSet.html#_CPPv4I0E8RangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8RangeSet\">\n<span id=\"_CPPv3I0E8RangeSet\"></span><span id=\"_CPPv2I0E8RangeSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classRangeSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RangeSet</span></span></span><br/></dt><dd><p>RangeSet maintains a collection of ranges. The ranges are exclusive of the endpoint and kept sorted and non-adjacent (i.e., there is a gap between successive ranges). </p></dd>", "a[href=\"library/functional/api/GenericFunction.html#_CPPv4IDpE8Function\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE8Function\">\n<span id=\"_CPPv3IDpE8Function\"></span><span id=\"_CPPv2IDpE8Function\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Function</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412to_ansi_boldRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412to_ansi_boldRKNSt6stringE\">\n<span id=\"_CPPv312to_ansi_boldRKNSt6stringE\"></span><span id=\"_CPPv212to_ansi_boldRKNSt6stringE\"></span><span id=\"to_ansi_bold__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a817b97a135f9e167d1f1f54a06586b14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_ansi_bold</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string appear bold when printed to the command line. </p></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE6size_t\">\n<span id=\"_CPPv3I0E16SetDiverseElitesR5WorldI3ORGE6size_t\"></span><span id=\"_CPPv2I0E16SetDiverseElitesR5WorldI3ORGE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1abbf62d16041d32b7c0cde46a615bcb8d\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDiverseElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE6size_t\" title=\"SetDiverseElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">world_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a Diverse-Elites world, given the provided world already has set of phenotypes. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4II00E0DpE21variadic_intersection\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4II00E0DpE21variadic_intersection\">\n<span id=\"_CPPv3II00E0DpE21variadic_intersection\"></span><span id=\"_CPPv2II00E0DpE21variadic_intersection\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__intersection\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_intersection</span></span></span><br/></dt><dd></dd>", "a[href=\"library/scholar/api/Citation.html#_CPPv48Citation\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Citation\">\n<span id=\"_CPPv38Citation\"></span><span id=\"_CPPv28Citation\"></span><span id=\"Citation\"></span><span class=\"target\" id=\"classCitation\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Citation</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">set_utils.hpp<a class=\"headerlink\" href=\"#set-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to save and load data from classes. </p>", "a[href=\"library/games/api/PayoffMatrix.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">PayoffMatrix.hpp<a class=\"headerlink\" href=\"#payoffmatrix-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple game theory payoff matrix. </p>", "a[href=\"library/web/api/CanvasAction.html#_CPPv417CanvasStrokeColor\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417CanvasStrokeColor\">\n<span id=\"_CPPv317CanvasStrokeColor\"></span><span id=\"_CPPv217CanvasStrokeColor\"></span><span id=\"CanvasStrokeColor\"></span><span class=\"target\" id=\"classCanvasStrokeColor\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasStrokeColor</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412CanvasAction\" title=\"CanvasAction\"><span class=\"n\"><span class=\"pre\">CanvasAction</span></span></a><br/></dt><dd><p>Set the line color on subsequent draw-related actions. </p></dd>", "a[href=\"library/base/api/error.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">error.hpp<a class=\"headerlink\" href=\"#error-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Nearly-universal error, to use in place of emp_assert(false, \u2026). Aborts program in both debug and release mode, but does NOT terminate in TDEBUG for testing. </p>", "a[href=\"library/prefab/api/LoadingIcon.html#_CPPv411LoadingIcon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411LoadingIcon\">\n<span id=\"_CPPv311LoadingIcon\"></span><span id=\"_CPPv211LoadingIcon\"></span><span id=\"LoadingIcon\"></span><span class=\"target\" id=\"classLoadingIcon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LoadingIcon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><br/></dt><dd><p>Use LoadingIcon class to add a loading glyph from the FontAwesome library to your web app. (<a class=\"reference external\" href=\"https://fontawesome.com/v4.7.0/icon/spinner\">https://fontawesome.com/v4.7.0/icon/spinner</a>) </p></dd>", "a[href=\"library/evolve/api/World_reflect.html#_CPPv4I0E13find_genome_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13find_genome_t\">\n<span id=\"_CPPv3I0E13find_genome_t\"></span><span id=\"_CPPv2I0E13find_genome_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__reflect_8hpp_1a6697fe9d7c4cd5e4a85be5d52348b1c2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_genome_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"n\"><span class=\"pre\">Org2Genome</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13find_genome_t\" title=\"find_genome_t::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">)</span></span><br/></dt><dd></dd>", "a[href=\"library/scholar/api/Citation.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Citation.hpp<a class=\"headerlink\" href=\"#citation-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Information about a citation for a single paper / book / etc. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv410string_popRNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410string_popRNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv310string_popRNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv210string_popRNSt6stringERKNSt6stringE\"></span><span id=\"string_pop__ssR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1af6e82bfdf8b0b25dc64408add401e8b5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">delim_set</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove a prefix of the input string (up to any of a specified set of delimeters) and return it. If the delimeter is not found, return the entire input string and clear it. </p></dd>", "a[href=\"library/in_progress/api/SimpleLexer.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SimpleLexer.hpp<a class=\"headerlink\" href=\"#simplelexer-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E11HasToStringI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToStringEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11HasToStringI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToStringEEEE\">\n<span id=\"_CPPv3I0E11HasToStringI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToStringEEEE\"></span><span id=\"_CPPv2I0E11HasToStringI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToStringEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasToString_3_01decoy__t_3_01T_00_01decltype_07std_1_1declval_3_01T_01_4_07_08_8ToString_07_08_08_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasToString</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E7decoy_t\" title=\"decoy_t\"><span class=\"n\"><span class=\"pre\">decoy_t</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HasToStringI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToStringEEEE\" title=\"HasToString&lt;decoy_t&lt;T, decltype(std::declval&lt;T&gt;().ToString())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">declval</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HasToStringI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToStringEEEE\" title=\"HasToString&lt;decoy_t&lt;T, decltype(std::declval&lt;T&gt;().ToString())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">.</span></span><span class=\"n\"><span class=\"pre\">ToString</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E8CopyPtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8CopyPtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\">\n<span id=\"_CPPv3I0E8CopyPtrsRK6vectorI3PtrI1TEE\"></span><span id=\"_CPPv2I0E8CopyPtrsRK6vectorI3PtrI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a1a6056ea9b62041183d81f949c278be7\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8CopyPtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\" title=\"CopyPtrs::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CopyPtrs</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8CopyPtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\" title=\"CopyPtrs::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy a vector of objects pointed to; return a vector of Ptrs to the new copies. </p></dd>", "a[href=\"library/web/api/UrlParams.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">UrlParams.hpp<a class=\"headerlink\" href=\"#urlparams-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Get an unordered_map containing url query key/value parameters. </p>", "a[href=\"library/text/api/Text.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Text.hpp<a class=\"headerlink\" href=\"#text-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functionality similar to String, but tracks text formatting for easy conversion. </p><p>Text should be functionally interchangable with string, but can easily convert to HTML, Latex, RTF, or other formats that support bold, italic, super/sub-scripting, fonts, etc.</p>", "a[href=\"library/math/api/math.html#_CPPv4I0E3MaxRK1TNSt16initializer_listIRK1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3MaxRK1TNSt16initializer_listIRK1TEE\">\n<span id=\"_CPPv3I0E3MaxNSt16initializer_listIRK1TEE\"></span><span id=\"_CPPv2I0E3MaxNSt16initializer_listIRK1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a7a155e7ea0b61c16cfa3cd7fd2d57eb4\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MaxRK1TNSt16initializer_listIRK1TEE\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Max</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">initializer_list</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MaxRK1TNSt16initializer_listIRK1TEE\" title=\"Max::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">lst</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A version of Max that allows a variable number of inputs to be compared. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE23ExactSingleStreakMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE23ExactSingleStreakMetric\">\n<span id=\"_CPPv3I_6size_tE23ExactSingleStreakMetric\"></span><span id=\"_CPPv2I_6size_tE23ExactSingleStreakMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structExactSingleStreakMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExactSingleStreakMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE23ExactSingleStreakMetric\" title=\"ExactSingleStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE23ExactSingleStreakMetric\" title=\"ExactSingleStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Matches based on longest streak of equal bits in two bitsets. This implementation uses Corect Math adapted from <a class=\"reference external\" href=\"https://www.askamathematician.com/2010/07/q-whats-the-chance-of-getting-a-run-of-k-successes-in-n-bernoulli-trials-why-use-approximations-when-the-exact-answer-is-known/\">https://www.askamathematician.com/2010/07/q-whats-the-chance-of-getting-a-run-of-k-successes-in-n-bernoulli-trials-why-use-approximations-when-the-exact-answer-is-known/</a> This metric is uniformly distributed. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv414load_graph_symRNSt7istreamEb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414load_graph_symRNSt7istreamEb\">\n<span id=\"_CPPv314load_graph_symRNSt7istreamEb\"></span><span id=\"_CPPv214load_graph_symRNSt7istreamEb\"></span><span id=\"load_graph_sym__isR.b\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a282e90abe69399b3c27c2a36b01c42ec\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">load_graph_sym</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">sub1</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Helper function for loading symmetric graphs from an input stream. sub1 indicates that verticies are numbered 1 to N instead of 0 to N-1. </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E12intersectionRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E12intersectionRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1af5d624355427f48673435a72e77a343d\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"library/games/api/Othello8.html#_CPPv48Othello8\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Othello8\">\n<span id=\"_CPPv38Othello8\"></span><span id=\"_CPPv28Othello8\"></span><span id=\"Othello8\"></span><span class=\"target\" id=\"classOthello8\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Othello8</span></span></span><br/></dt><dd><p>Class for size-8 othello games. </p><p>NOTE: This game could be made more black-box.<ul class=\"simple\">\n<li><p>Hide almost everything. Only give users access to game-advancing functions (don\u2019t allow willy-nilly board manipulation, etc). This would let us make lots of assumptions about calculating flip lists, scores, etc, which would speed up asking for flip lists, etc. multiple times during a turn. </p></li>\n</ul>\n</p></dd>", "a[href=\"library/bits/api/Bits_Data.html#_CPPv4I_6size_tE14Bits_FixedData\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE14Bits_FixedData\">\n<span id=\"_CPPv3I_6size_tE14Bits_FixedData\"></span><span id=\"_CPPv2I_6size_tE14Bits_FixedData\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Bits__Data_8hpp_1ad370dc18ea5364779ff1d4f4f0d5b7b7\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bits_FixedData</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Bits_Data_Mem_Fixed</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE14Bits_FixedData\" title=\"Bits_FixedData::NUM_BITS\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv44Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdd\">\n<span id=\"_CPPv34Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdd\"></span><span id=\"_CPPv24Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdd\"></span><span id=\"Draw__Canvas.vector:vector:s::CR.vector:ss:CR.ss.double.double\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1ad86ef7445237f0be879c392493c47585\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">grid</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cell_w</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cell_h</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a grid onto a canvas, but without offsets provided &amp;#8212; the grid is centered. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E7is_span\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7is_span\">\n<span id=\"_CPPv3I0E7is_span\"></span><span id=\"_CPPv2I0E7is_span\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__span\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_span</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd><p>Determine if we have a span. </p></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv413WorldPosition\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413WorldPosition\">\n<span id=\"_CPPv313WorldPosition\"></span><span id=\"_CPPv213WorldPosition\"></span><span id=\"WorldPosition\"></span><span class=\"target\" id=\"classWorldPosition\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WorldPosition</span></span></span><br/></dt><dd><p>A class to track positions in World. For the moment, the only informaiton beyond index is active (vs. next) population when using synchronous generations. </p></dd>", "a[href=\"library/config/api/SettingConfig.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SettingConfig.hpp<a class=\"headerlink\" href=\"#settingconfig-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A tool for collecting settings, including from files and the command line. </p>", "a[href=\"library/evolve/api/World_reflect.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World_reflect.hpp<a class=\"headerlink\" href=\"#world-reflect-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Handle reflection on organisms to setup reasonable defaults in World. </p>", "a[href=\"library/base/api/unordered_map.html#_CPPv4I00DpE18unordered_multimap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE18unordered_multimap\">\n<span id=\"_CPPv3I00DpE18unordered_multimap\"></span><span id=\"_CPPv2I00DpE18unordered_multimap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classunordered__multimap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">unordered_multimap</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE18unordered_multimap\" title=\"unordered_multimap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE18unordered_multimap\" title=\"unordered_multimap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE18unordered_multimap\" title=\"unordered_multimap::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48pad_backRKNSt6stringEc6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48pad_backRKNSt6stringEc6size_t\">\n<span id=\"_CPPv38pad_backRKNSt6stringEc6size_t\"></span><span id=\"_CPPv28pad_backRKNSt6stringEc6size_t\"></span><span id=\"pad_back__ssCR.c.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a7e40af39c3835a0a89dee8776876923b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pad_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_str</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">padding</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\">\n<span id=\"_CPPv3I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\"></span><span id=\"_CPPv2I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structFunInfo_3_01RETURN__T_07_5_08_07PARAM__Ts_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunInfo</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (*)(PARAM_Ts...)&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (*)(PARAM_Ts...)&gt;::PARAM_Ts\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">FunInfo</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (*)(PARAM_Ts...)&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIPF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (*)(PARAM_Ts...)&gt;::PARAM_Ts\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"dev/getting-started.html#your-second-contribution\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id6\" role=\"doc-backlink\">Your second contribution\u2026</a><a class=\"headerlink\" href=\"#your-second-contribution\" title=\"Link to this heading\">\uf0c1</a></h2><p>Here are a few pointers on getting started on your second (or third, or\nfourth, or nth contribution).</p><p>So, assuming you\u2019ve found an issue you\u2019d like to work on there are a\ncouple things to do to make sure your local copy of the repository is\nready for a new issue\u2013specifically, we need to make sure it\u2019s in sync\nwith the remote repository so you aren\u2019t working on a old copy. So:</p>", "a[href=\"library/math/api/Random.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Random.hpp<a class=\"headerlink\" href=\"#random-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A versatile and non-patterned pseudo-random-number generator. Status: RELEASE. </p>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a4027257f9eb9f02a8b0e51b354099ac9\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"library/data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGERK6vectorI6size_tE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">traits</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">trait_counts</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Set the population to use a MapElites structure. This means that organism placement has two key components: 1: Organism position is based on their phenotypic traits. 2: Organisms must have a higher fitness than the current resident of a position to steal it.</p><p>Note: Since organisms compete with their predecessors for space in the populations, synchronous generations do not make sense.</p><p>This for version will setup a MAP-Elites world; traits to use an how many bins for each (trait counts) must be provided. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00E12sfinae_decoy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E12sfinae_decoy\">\n<span id=\"_CPPv3I00E12sfinae_decoy\"></span><span id=\"_CPPv2I00E12sfinae_decoy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1afc8a980e8cee7112a4dca4a5b36e5673\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy::REAL_TYPE\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></a><br/></dt><dd></dd>", "a[href=\"library/tools/api/MemoryFactory.html#_CPPv4I0_6size_t_6size_tE19StaticMemoryFactory\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_t_6size_tE19StaticMemoryFactory\">\n<span id=\"_CPPv3I0_6size_t_6size_tE19StaticMemoryFactory\"></span><span id=\"_CPPv2I0_6size_t_6size_tE19StaticMemoryFactory\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MEM_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">POOL_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"MemoryFactory_8hpp_1a395b9e904ae298e31427287ff680325b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StaticMemoryFactory</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">MemFactory_impl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_t_6size_tE19StaticMemoryFactory\" title=\"StaticMemoryFactory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">MemFactory_StaticData</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_t_6size_tE19StaticMemoryFactory\" title=\"StaticMemoryFactory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_t_6size_tE19StaticMemoryFactory\" title=\"StaticMemoryFactory::MEM_COUNT\"><span class=\"n\"><span class=\"pre\">MEM_COUNT</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_t_6size_tE19StaticMemoryFactory\" title=\"StaticMemoryFactory::POOL_COUNT\"><span class=\"n\"><span class=\"pre\">POOL_COUNT</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv416BoolValueControl\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416BoolValueControl\">\n<span id=\"_CPPv316BoolValueControl\"></span><span id=\"_CPPv216BoolValueControl\"></span><span id=\"BoolValueControl\"></span><span class=\"target\" id=\"classBoolValueControl\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BoolValueControl</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48ValueBox\" title=\"ValueBox\"><span class=\"n\"><span class=\"pre\">ValueBox</span></span></a><br/></dt><dd><p>Use a BoolValueControl to display a boolean value with a label, description, and a switch to toggle the value. </p></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv416RankedCacheState\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416RankedCacheState\">\n<span id=\"_CPPv316RankedCacheState\"></span><span id=\"_CPPv216RankedCacheState\"></span><span id=\"RankedCacheState\"></span><span class=\"target\" id=\"structRankedCacheState\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RankedCacheState</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv414CacheStateBase\" title=\"CacheStateBase\"><span class=\"n\"><span class=\"pre\">CacheStateBase</span></span></a><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#usage\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Usage<a class=\"headerlink\" href=\"#usage\" title=\"Link to this heading\">\uf0c1</a></h4><h5>Creating a systematics object<a class=\"headerlink\" href=\"#creating-a-systematics-object\" title=\"Link to this heading\">\uf0c1</a></h5><p>The first step in tracking a phylogeny with the systematics manager is to make a systematics object. The most important decision to make at this point is how to define taxa in your phylogeny (for more information, see the \u201cflexible taxon definition\u201d section under \u201cfeatures\u201d). You can do so by passing a function to the systematics constructor which takes an organism object and returns a string that specifies a taxon.</p><p>For example, to build a phylogeny based on genotypes, you could do the following:</p>", "a[href=\"library/tools/api/char_utils.html#_CPPv415is_alphanumericc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415is_alphanumericc\">\n<span id=\"_CPPv315is_alphanumericc\"></span><span id=\"_CPPv215is_alphanumericc\"></span><span id=\"is_alphanumeric__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a5474b5f9c469c5dc416b83bf3abc2588\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_alphanumeric</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E20symmetric_difference6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E20symmetric_difference6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a4ac08882b336e6391f7ba974afca0c4a\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"library/functional/api/FunctionSet.html#_CPPv4IDpE11FunctionSetIFvDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11FunctionSetIFvDp4ARGSEE\">\n<span id=\"_CPPv3IDpE11FunctionSetIFvDp4ARGSEE\"></span><span id=\"_CPPv2IDpE11FunctionSetIFvDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunctionSet_3_01void_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunctionSet</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11FunctionSetIFvDp4ARGSEE\" title=\"FunctionSet&lt;void(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE11FunctionSetIFvDp4ARGSEE\" title=\"FunctionSet&lt;void(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A specialized version of FunctionSet for void functions. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E24remove_std_function_type\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E24remove_std_function_type\">\n<span id=\"_CPPv3I0E24remove_std_function_type\"></span><span id=\"_CPPv2I0E24remove_std_function_type\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__std__function__type\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_std_function_type</span></span></span><br/></dt><dd><p>Convert std::function to base function type. </p></dd>", "a[href=\"library/web/api/JSWrap.html#_CPPv48JSDelete6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48JSDelete6size_t\">\n<span id=\"_CPPv38JSDelete6size_t\"></span><span id=\"_CPPv28JSDelete6size_t\"></span><span id=\"JSDelete__s\"></span><span class=\"target\" id=\"JSWrap_8hpp_1ad379b43ed5f73e209e4a9d6fb9d87428\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">JSDelete</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun_id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Cleanup a function pointer when finished with it. </p></dd>", "a[href=\"library/datastructs/api/span_utils.html#_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\">\n<span id=\"_CPPv3I0DpE7to_span6vectorI1TDp2TsE\"></span><span id=\"_CPPv2I0DpE7to_span6vectorI1TDp2TsE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a0d773a6a92632ea5c8c19e4c9ce72445\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_span</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\" title=\"to_span::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7to_spanDa6vectorI1TDp2TsE\" title=\"to_span::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an vector to an equivalent span. </p></dd>", "a[href=\"library/web/api/NodeDomShim.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">NodeDomShim.hpp<a class=\"headerlink\" href=\"#nodedomshim-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Shim for Empirical compatibility with node.js. Mimicks the browser document object model (DOM). </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv45countRKNSt6stringEc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45countRKNSt6stringEc\">\n<span id=\"_CPPv35countRKNSt6stringEc\"></span><span id=\"_CPPv25countRKNSt6stringEc\"></span><span id=\"count__ssCR.c\"></span><span class=\"target\" id=\"string__utils_8hpp_1af203fc6463618270cd821bd9b5173abd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">count</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Count the number of times a specific character appears in a string (a clean shortcut to std::count) </p></dd>", "a[href=\"library/text/text.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Text<a class=\"headerlink\" href=\"#text\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/io/io.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">IO<a class=\"headerlink\" href=\"#io\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/string_utils.html#_CPPv418ANSI_BrightGreenBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418ANSI_BrightGreenBGv\">\n<span id=\"_CPPv318ANSI_BrightGreenBGv\"></span><span id=\"_CPPv218ANSI_BrightGreenBGv\"></span><span id=\"ANSI_BrightGreenBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a0ce7c680360d57cc242c7ff1e258799d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightGreenBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/matching/api/MatchBin.html#_CPPv46cereal\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46cereal\">\n<span id=\"_CPPv36cereal\"></span><span id=\"_CPPv26cereal\"></span><span id=\"cereal\"></span><span class=\"target\" id=\"namespacecereal\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cereal</span></span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataFile.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataFile.hpp<a class=\"headerlink\" href=\"#datafile-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>DataFile objects use DataNode objects to dynamically fill out file contents. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv44findNSt11string_viewENSt6stringE6size_tbbbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44findNSt11string_viewENSt6stringE6size_tbbbb\">\n<span id=\"_CPPv34findNSt11string_viewENSt6stringE6size_tbbbb\"></span><span id=\"_CPPv24findNSt11string_viewENSt6stringE6size_tbbbb\"></span><span id=\"find__std::string_view.ss.s.b.b.b.b\"></span><span class=\"target\" id=\"string__utils_8hpp_1acb6363d9f55f6a3568133c642baa7db4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv412CharSetRangecc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CharSetRangecc\">\n<span id=\"_CPPv312CharSetRangecc\"></span><span id=\"_CPPv212CharSetRangecc\"></span><span id=\"CharSetRange__c.c\"></span><span class=\"target\" id=\"char__utils_8hpp_1af5fd5fa224124f135a65d787050c4c15\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CharSetRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c1</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/RawImage.html#_CPPv48RawImage\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48RawImage\">\n<span id=\"_CPPv38RawImage\"></span><span id=\"_CPPv28RawImage\"></span><span id=\"RawImage\"></span><span class=\"target\" id=\"classRawImage\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawImage</span></span></span><br/></dt><dd><p>Fundamental information about a single image. </p></dd>", "a[href=\"library/web/d3/d3.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/ValPack.html#_CPPv44pack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44pack\">\n<span id=\"_CPPv34pack\"></span><span id=\"_CPPv24pack\"></span><span id=\"pack\"></span><span class=\"target\" id=\"namespacepack\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pack</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/keyname_utils.html#_CPPv47keyname\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47keyname\">\n<span id=\"_CPPv37keyname\"></span><span id=\"_CPPv27keyname\"></span><span id=\"keyname\"></span><span class=\"target\" id=\"namespacekeyname\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">keyname</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/TypeID.html#_CPPv4IDpE10GetTypeIDs6vectorI6TypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE10GetTypeIDs6vectorI6TypeIDEv\">\n<span id=\"_CPPv3IDpE10GetTypeIDsv\"></span><span id=\"_CPPv2IDpE10GetTypeIDsv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1a1c9c2be04cbc68ee933d030c174e2c3a\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeIDs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Retrieve a vector of TypeIDs for a pack of types passed in. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0ElsRNSt7ostreamERNSt7ostreamERK3PtrI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0ElsRNSt7ostreamERNSt7ostreamERK3PtrI1TE\">\n<span id=\"_CPPv3I0ElsRNSt7ostreamERK3PtrI1TE\"></span><span id=\"_CPPv2I0ElsRNSt7ostreamERK3PtrI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a08c0434119d22ac1b83184269e165bf2\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&lt;&lt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0ElsRNSt7ostreamERNSt7ostreamERK3PtrI1TE\" title=\"operator&lt;&lt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/signalgp_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">signalgp_utils.hpp<a class=\"headerlink\" href=\"#signalgp-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Helper functions for working with SignalGP virtual hardware/programs. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Mutator class </p>\n<p>tests </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv416string_pop_fixedRNSt6stringENSt6size_tE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416string_pop_fixedRNSt6stringENSt6size_tE6size_t\">\n<span id=\"_CPPv316string_pop_fixedRNSt6stringENSt6size_tE6size_t\"></span><span id=\"_CPPv216string_pop_fixedRNSt6stringENSt6size_tE6size_t\"></span><span id=\"string_pop_fixed__ssR.std::s.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1af035d5a6d0c6bdd1836d3b33b5eb2daf\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_fixed</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end_pos</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Pop a segment from the beginning of a string as another string, shortening original. </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E20symmetric_differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E20symmetric_differenceRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a6c77fc072550b940d12b318077b63604\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"library/math/math.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Math<a class=\"headerlink\" href=\"#math\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/prefab/api/CommentBox.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">CommentBox.hpp<a class=\"headerlink\" href=\"#commentbox-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Create a light grey \u201ccomment bubble.\u201d. </p><p>TODO: When prefab tools for adding mobile only and desktop only content are created, remove AddMobileContent(), desktop_content and mobile_content divs, and ConfigPanel as a friend class. AddContent() should stream into all_content div. </p>", "a[href=\"library/datastructs/api/UnorderedIndexMap.html#_CPPv417UnorderedIndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417UnorderedIndexMap\">\n<span id=\"_CPPv317UnorderedIndexMap\"></span><span id=\"_CPPv217UnorderedIndexMap\"></span><span id=\"UnorderedIndexMap\"></span><span class=\"target\" id=\"classUnorderedIndexMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnorderedIndexMap</span></span></span><br/></dt><dd><p>A map of weighted indices. If a random index is selected, the probability of an index being returned is directly proportional to its weight. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\">\n<span id=\"_CPPv3I0E8InsertAtR6vectorI1TE6size_t1T\"></span><span id=\"_CPPv2I0E8InsertAtR6vectorI1TE6size_t1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a77dfa86bfa3242b41d1a76f484bbd15a\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InsertAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\" title=\"InsertAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E8InsertAtvR6vectorI1TE6size_t1T\" title=\"InsertAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a value at a specified position in a vector. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E15remove_ptr_typeIP1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15remove_ptr_typeIP1TE\">\n<span id=\"_CPPv3I0E15remove_ptr_typeIP1TE\"></span><span id=\"_CPPv2I0E15remove_ptr_typeIP1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__ptr__type_3_01T_01_5_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_ptr_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15remove_ptr_typeIP1TE\" title=\"remove_ptr_type&lt;T*&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/config/api/config_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">config_utils.hpp<a class=\"headerlink\" href=\"#config-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Helper functions for working with Config objects. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E8ptr_pairI1T1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8ptr_pairI1T1TE\">\n<span id=\"_CPPv3I0E8ptr_pairI1T1TE\"></span><span id=\"_CPPv2I0E8ptr_pairI1T1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structptr__pair_3_01T_00_01T_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ptr_pair</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8ptr_pairI1T1TE\" title=\"ptr_pair&lt;T, T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8ptr_pairI1T1TE\" title=\"ptr_pair&lt;T, T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E21CountDeleteriousStepsi3PtrI7taxon_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21CountDeleteriousStepsi3PtrI7taxon_tE\">\n<span id=\"_CPPv3I0E21CountDeleteriousSteps3PtrI7taxon_tE\"></span><span id=\"_CPPv2I0E21CountDeleteriousSteps3PtrI7taxon_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a2cd83134def9da5c1b3537e1b54ec23d\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountDeleteriousSteps</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21CountDeleteriousStepsi3PtrI7taxon_tE\" title=\"CountDeleteriousSteps::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of deleterious mutational steps that occurred along the given taxon\u2019s lineage. (a change from parent to child taxon counts as a single step, regardless of the number of mutations that happened at that time point) </p></dd>", "a[href=\"library/base/api/map.html#_CPPv4I00DpE8multimap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE8multimap\">\n<span id=\"_CPPv3I00DpE8multimap\"></span><span id=\"_CPPv2I00DpE8multimap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmultimap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">multimap</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8multimap\" title=\"multimap::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8multimap\" title=\"multimap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8multimap\" title=\"multimap::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv4I0_jE11SmallVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_jE11SmallVector\">\n<span id=\"_CPPv3I0_jE11SmallVector\"></span><span id=\"_CPPv2I0_jE11SmallVector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SmallVectorImpl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">private</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SmallVectorStorage</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_jE11SmallVector\" title=\"SmallVector::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>This is a \u2018vector\u2019 (really, a variable-sized array), optimized for the case when the array is small. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal \u201csmall\u201d cases to be fast without losing generality for large inputs.</p><p>Note that this does not attempt to be exception safe. </p></dd>", "a[href=\"library/compiler/api/RegEx.html#_CPPv46to_DFARK5RegEx\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_DFARK5RegEx\">\n<span id=\"_CPPv36to_DFARK5RegEx\"></span><span id=\"_CPPv26to_DFARK5RegEx\"></span><span id=\"to_DFA__RegExCR\"></span><span class=\"target\" id=\"RegEx_8hpp_1ad98491cb6e0de7f368d60030032160eb\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_DFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45RegEx\" title=\"RegEx\"><span class=\"n\"><span class=\"pre\">RegEx</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">regex</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Conversion of RegEx to DFA, via NFA intermediate. </p></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv418RandomDoubleVectorR6Random6size_tdd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv418RandomDoubleVectorR6Random6size_tdd\">\n<span id=\"_CPPv318RandomDoubleVectorR6Random6size_tdd\"></span><span id=\"_CPPv218RandomDoubleVectorR6Random6size_tdd\"></span><span id=\"RandomDoubleVector__RandomR.s.double.double\"></span><span class=\"target\" id=\"random__utils_8hpp_1ab561c6dae9a8bf8c1d4cf7d962a148ad\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomDoubleVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">size</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random double vector in the specified range. </p></dd>", "a[href=\"library/web/api/Animate.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Animate.hpp<a class=\"headerlink\" href=\"#animate-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Manage animations on a web site. </p><p>To build an animation, you must provide a function to be run repeatedly. When Start() is triggered, the function will be called 60 time per second (or as close as possible), until Stop() is caled. </p>", "a[href=\"library/web/api/FileInput.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">FileInput.hpp<a class=\"headerlink\" href=\"#fileinput-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specs for the FileInput widget (click on to upload a file) </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Setup FileInput to work outside of web mode as well. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv412empty_stringv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412empty_stringv\">\n<span id=\"_CPPv312empty_stringv\"></span><span id=\"_CPPv212empty_stringv\"></span><span id=\"empty_string\"></span><span class=\"target\" id=\"string__utils_8hpp_1a34ebe732465ce3d9091e8c57d42d03fb\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">empty_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a const reference to an empty string. This function is useful to implement other functions that need to return a const reference for efficiency, but also need a null response. </p></dd>", "a[href=\"library/scholar/api/Author.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Author.hpp<a class=\"headerlink\" href=\"#author-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Basic information about an author. </p><p>Developer notes:<ul class=\"simple\">\n<li><p>Prefixs (Dr., Prof., etc) and Suffixes (Jr., Sr., III, etc.) should be allowed.</p></li>\n<li><p>Most parts of names can be auto-detected.</p></li>\n<li><p>GetName() (with formatting) needs to be implemented (notes below)</p></li>\n<li><p>Consider using ce_string for inputs? And making other aspects const experession? </p></li>\n</ul>\n</p>", "a[href=\"library/base/api/assert.html#_CPPv413is_debug_mode\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413is_debug_mode\">\n<span id=\"_CPPv313is_debug_mode\"></span><span id=\"_CPPv213is_debug_mode\"></span><span id=\"is_debug_mode__b\"></span><span class=\"target\" id=\"assert_8hpp_1a37875fba245f33146df58bb0a895479c\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_debug_mode</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E8ptr_pairIK1T1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8ptr_pairIK1T1TE\">\n<span id=\"_CPPv3I0E8ptr_pairIK1T1TE\"></span><span id=\"_CPPv2I0E8ptr_pairIK1T1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structptr__pair_3_01const_01T_00_01T_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ptr_pair</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8ptr_pairIK1T1TE\" title=\"ptr_pair&lt;const T, T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8ptr_pairIK1T1TE\" title=\"ptr_pair&lt;const T, T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv413MakeTitleCase6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413MakeTitleCase6String\">\n<span id=\"_CPPv313MakeTitleCase6String\"></span><span id=\"_CPPv213MakeTitleCase6String\"></span><span id=\"MakeTitleCase__String\"></span><span class=\"target\" id=\"String_8hpp_1aae0c14c7792caa9950b8e0f690d7cf74\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeTitleCase</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make first letter of each word upper case. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv46String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46String\">\n<span id=\"_CPPv36String\"></span><span id=\"_CPPv26String\"></span><span id=\"String\"></span><span class=\"target\" id=\"classString\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">String</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv414is_punctuationc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414is_punctuationc\">\n<span id=\"_CPPv314is_punctuationc\"></span><span id=\"_CPPv214is_punctuationc\"></span><span id=\"is_punctuation__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1aaaf056c9db199cdd81dfe7958272e2d6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_punctuation</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/notify.html#_CPPv46notify\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46notify\">\n<span id=\"_CPPv36notify\"></span><span id=\"_CPPv26notify\"></span><span id=\"notify\"></span><span class=\"target\" id=\"namespacenotify\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">notify</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t\">\n<span id=\"_CPPv3I0E8RemoveAtR6vectorI1TE6size_t\"></span><span id=\"_CPPv2I0E8RemoveAtR6vectorI1TE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a4f4f418c6c499a70baae73b119c81a34\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t\" title=\"RemoveAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove value at an index. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv419find_non_whitespaceNSt11string_viewE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419find_non_whitespaceNSt11string_viewE6size_t\">\n<span id=\"_CPPv319find_non_whitespaceNSt11string_viewE6size_t\"></span><span id=\"_CPPv219find_non_whitespaceNSt11string_viewE6size_t\"></span><span id=\"find_non_whitespace__std::string_view.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8e0d3a6c0184111104f2a0f2022e890d\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_non_whitespace</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"dev/guide-to-testing.html#writing-tests\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Writing Tests<a class=\"headerlink\" href=\"#writing-tests\" title=\"Link to this heading\">\uf0c1</a></h2><p>It is required that contributions to the Empirical library have test\ncoverage. Though writing tests can be a complex task in some cases the\nCatch testing framework is extremely easy to use.</p><p>In general the best way to understand how to write tests is to look at\nthe existing tests. I recommend skimming through <code class=\"docutils literal notranslate\"><span class=\"pre\">test_tools.cc</span></code> for an\noverview.</p>", "a[href=\"library/base/base.html#emp-array-example\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">emp::array Example<a class=\"headerlink\" href=\"#emp-array-example\" title=\"Link to this heading\">\uf0c1</a></h3>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4N12SimpleParser19PhonyNameDueToError5arg_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SimpleParser19PhonyNameDueToError5arg_tE\">\n<span id=\"_CPPv3N12SimpleParser19PhonyNameDueToError5arg_tE\"></span><span id=\"_CPPv2N12SimpleParser19PhonyNameDueToError5arg_tE\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1a9e135faec55df056d5f30846e480a85c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">arg_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N12SimpleParser19PhonyNameDueToError5map_tE\" title=\"SimpleParser::PhonyNameDueToError::map_t\"><span class=\"n\"><span class=\"pre\">map_t</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\">\n<span id=\"_CPPv3IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\"></span><span id=\"_CPPv2IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__union_3_01Cmp_00_01Variadic_3_01U_8_8_8_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_union</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U...&gt;&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U...&gt;&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0DpE14variadic_unionI3Cmp8VariadicIDp1UEE\" title=\"variadic_union&lt;Cmp, Variadic&lt;U...&gt;&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\">\n<span id=\"_CPPv3I0E10BuildRange1T1T1T\"></span><span id=\"_CPPv2I0E10BuildRange1T1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a8cdebb7580467e8bc106045fc61a8abc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildRange</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10BuildRange6vectorI1TE1T1T1T\" title=\"BuildRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">step</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a vector with a range of values from min to max at the provided step size. </p></dd>", "a[href=\"library/datastructs/api/Cache.html#_CPPv4I00000E5Cache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000E5Cache\">\n<span id=\"_CPPv3I00000E5Cache\"></span><span id=\"_CPPv2I00000E5Cache\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HASH</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PRED</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ALLOC</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::KEY\"><span class=\"n\"><span class=\"pre\">KEY</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E5Cache\" title=\"Cache::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classCache\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cache</span></span></span><br/></dt><dd></dd>", "a[href=\"library/scholar/scholar.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Scholar<a class=\"headerlink\" href=\"#scholar\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/attrs.html#_CPPv45tools\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45tools\">\n<span id=\"_CPPv35tools\"></span><span id=\"_CPPv25tools\"></span><span id=\"tools\"></span><span class=\"target\" id=\"namespacetools\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tools</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415to_ansi_reverseRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415to_ansi_reverseRKNSt6stringE\">\n<span id=\"_CPPv315to_ansi_reverseRKNSt6stringE\"></span><span id=\"_CPPv215to_ansi_reverseRKNSt6stringE\"></span><span id=\"to_ansi_reverse__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae6ed51ff45e0bc5a7a791c0363173a97\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_ansi_reverse</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string appear reverse when printed to the command line. </p></dd>", "a[href=\"library/math/api/info_theory.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">info_theory.hpp<a class=\"headerlink\" href=\"#info-theory-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to calculate Information Theory metrics. </p><p>\nInfo-theory formulas: H(X) = -SUM(X: p[x] log2 p[x]) H(X|Y) = H(XY) - H(Y) I(X:Y) = H(X) - H(X|Y) H2(p) = -p log2(p) - (1-p)log2(1-p) = H({p, 1-p})</p>", "a[href=\"library/web/api/color_map.html#_CPPv48ColorHSLddd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ColorHSLddd\">\n<span id=\"_CPPv38ColorHSLddd\"></span><span id=\"_CPPv28ColorHSLddd\"></span><span id=\"ColorHSL__double.double.double\"></span><span class=\"target\" id=\"color__map_8hpp_1a3ff548bbad05e0454eae5dc1a20cfb3c\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ColorHSL</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">h</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">l</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a string to describe a JS color out of HSL values. </p></dd>", "a[href=\"library/datastructs/api/IndexSet.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">IndexSet.hpp<a class=\"headerlink\" href=\"#indexset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Collection of indices, ideally optimized for memory size. </p>", "a[href=\"library/web/api/CanvasShape.html#_CPPv410CanvasLine\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410CanvasLine\">\n<span id=\"_CPPv310CanvasLine\"></span><span id=\"_CPPv210CanvasLine\"></span><span id=\"CanvasLine\"></span><span class=\"target\" id=\"classCanvasLine\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasLine</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>A line segment on the canvas. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E21remove_std_function_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21remove_std_function_t\">\n<span id=\"_CPPv3I0E21remove_std_function_t\"></span><span id=\"_CPPv2I0E21remove_std_function_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a77bda0149af44e925f0f37934f110ffb\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_std_function_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E24remove_std_function_type\" title=\"remove_std_function_type\"><span class=\"n\"><span class=\"pre\">remove_std_function_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21remove_std_function_t\" title=\"remove_std_function_t::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I0E8VarianceDaR1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8VarianceDaR1C\">\n<span id=\"_CPPv3I0E8VarianceR1C\"></span><span id=\"_CPPv2I0E8VarianceR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a17b7f82c100d057ce3871cbe623f4fbf\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variance</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E8VarianceDaR1C\" title=\"Variance::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate variance of the members of the container passed Only works on containers with a scalar member type </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv4IDpE10MakeString6StringDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE10MakeString6StringDpRR2Ts\">\n<span id=\"_CPPv3IDpE10MakeStringDpRR2Ts\"></span><span id=\"_CPPv2IDpE10MakeStringDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1ae20ad7c58739e28294b0a4662a9290e6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeString</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE10MakeString6StringDpRR2Ts\" title=\"MakeString::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv413ArchiveModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413ArchiveModule\">\n<span id=\"_CPPv313ArchiveModule\"></span><span id=\"_CPPv213ArchiveModule\"></span><span id=\"ArchiveModule\"></span><span class=\"target\" id=\"classArchiveModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArchiveModule</span></span></span><br/></dt><dd><p>== data::Archive == This module keeps track of historical values in addition to those added since the last re-set. Every time Reset() is called, all values that have been added since the previous time Reset() are stored in a vector in the archive. To use this class, add data::Archive to the template arguments on your DataNode. Do not use the ArchiveModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/datastructs/api/graph_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">graph_utils.hpp<a class=\"headerlink\" href=\"#graph-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file provides a number of tools for manipulating graphs. </p>", "a[href=\"library/math/api/distances.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">distances.hpp<a class=\"headerlink\" href=\"#distances-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Library of commonly used distance functions. </p>", "a[href=\"library/web/api/Div.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Div.hpp<a class=\"headerlink\" href=\"#div-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Div Widgets maintain an ordered collection of other widgets in an HTML div. </p><p>When printed to the web page, these internal widgets are presented in order.</p>", "a[href=\"library/meta/api/TypeID.html#_CPPv4I0E14GetTypePackIDs6vectorI6TypeIDEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14GetTypePackIDs6vectorI6TypeIDEv\">\n<span id=\"_CPPv3I0E14GetTypePackIDsv\"></span><span id=\"_CPPv2I0E14GetTypePackIDsv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1a9bc1e8ccf338bbfc21e3acd2cc83b6e0\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypePackIDs</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Retrieve a vector of TypeIDs for a TypePack of types passed in. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415string_pop_wordRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415string_pop_wordRNSt6stringE\">\n<span id=\"_CPPv315string_pop_wordRNSt6stringE\"></span><span id=\"_CPPv215string_pop_wordRNSt6stringE\"></span><span id=\"string_pop_word__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1aba0c4046ca3b4d40ce8aff2543342054\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_word</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove a prefix of a string, up to the first whitespace, and return it. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv4IDpE11NotifyErrorvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11NotifyErrorvDpRR2Ts\">\n<span id=\"_CPPv3IDpE11NotifyErrorDpRR2Ts\"></span><span id=\"_CPPv2IDpE11NotifyErrorDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1a578ebcf9e13df44165c0352e0e204f6e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NotifyError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE11NotifyErrorvDpRR2Ts\" title=\"NotifyError::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>End user has done something resulting in an non-recoverable problem. </p></dd>", "a[href=\"library/web/api/CanvasAction.html#_CPPv410CanvasFont\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410CanvasFont\">\n<span id=\"_CPPv310CanvasFont\"></span><span id=\"_CPPv210CanvasFont\"></span><span id=\"CanvasFont\"></span><span class=\"target\" id=\"classCanvasFont\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasFont</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412CanvasAction\" title=\"CanvasAction\"><span class=\"n\"><span class=\"pre\">CanvasAction</span></span></a><br/></dt><dd><p>Change the default font to be used. </p></dd>", "a[href=\"library/math/api/sequence_utils.html#_CPPv4I00E5align6size_tR4TYPER4TYPE8GAP_TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E5align6size_tR4TYPER4TYPE8GAP_TYPE\">\n<span id=\"_CPPv3I00E5alignR4TYPER4TYPE8GAP_TYPE\"></span><span id=\"_CPPv2I00E5alignR4TYPER4TYPE8GAP_TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GAP_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"sequence__utils_8hpp_1a5641f11090acc7c728dca8eea323c77b\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">align</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E5align6size_tR4TYPER4TYPE8GAP_TYPE\" title=\"align::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E5align6size_tR4TYPER4TYPE8GAP_TYPE\" title=\"align::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E5align6size_tR4TYPER4TYPE8GAP_TYPE\" title=\"align::GAP_TYPE\"><span class=\"n\"><span class=\"pre\">GAP_TYPE</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">gap</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Use edit distance to find the minimum number of insertions, deletions and substitutions to convert one array to another, and then insert gaps into the arrays appropriately. </p></dd>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv48bit_mask\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48bit_mask\">\n<span id=\"_CPPv38bit_mask\"></span><span id=\"_CPPv28bit_mask\"></span><span id=\"bit_mask__unsigned-cCA\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1ad8efa1f72bd4e98e84492918f19bd2a2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">unsigned</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bit_mask</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference internal\" href=\"#_CPPv413bits_per_char\" title=\"bits_per_char\"><span class=\"n\"><span class=\"pre\">bits_per_char</span></span></a><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">0x01</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x02</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x04</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x08</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x10</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x20</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x40</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x80</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"library/functional/api/GenericFunction.html#_CPPv415GenericFunction\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415GenericFunction\">\n<span id=\"_CPPv315GenericFunction\"></span><span id=\"_CPPv215GenericFunction\"></span><span id=\"GenericFunction\"></span><span class=\"target\" id=\"classGenericFunction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenericFunction</span></span></span><br/></dt><dd><p>The Function templated class behaves almost identically to std::function, but can be reduced to the GenericFunction base class which is NOT templated.</p><p>An GenericFunction object can be converted back into the derived type with the .Convert&lt;return(args\u2026)&gt;() member function. </p><p>Subclassed by Function&lt; RETURN(PARAMS\u2026)&gt;</p></dd>", "a[href=\"library/config/api/ArgManager.html#_CPPv4N2cl10ArgManagerE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N2cl10ArgManagerE\">\n<span id=\"_CPPv3N2cl10ArgManagerE\"></span><span id=\"_CPPv2N2cl10ArgManagerE\"></span><span id=\"cl::ArgManager\"></span><span class=\"target\" id=\"classcl_1_1ArgManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A simple class to manage command-line arguments that were passed in. Derived from vector&lt;std::string&gt;, but with added functionality for argument handling. </p></dd>", "a[href=\"library/evolve/evolve.html#installation\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Installation<a class=\"headerlink\" href=\"#installation\" title=\"Link to this heading\">\uf0c1</a></h4><p>The Systematics manager is part of Empirical. Because Empirical is header-only, you can include whichever parts of it you want. To just use the Systematics manager, you just need to include the Systematics.hpp header. Note that the Systematics manager depends on the result of Empirical, so you will need to download the entire library. Currently, we recommend using the mabe-systematics branch:</p>", "a[href=\"library/datastructs/api/TypeMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypeMap.hpp<a class=\"headerlink\" href=\"#typemap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A class that will map types to values of a designated type. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv415trim_whitespaceRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415trim_whitespaceRNSt6stringE\">\n<span id=\"_CPPv315trim_whitespaceRNSt6stringE\"></span><span id=\"_CPPv215trim_whitespaceRNSt6stringE\"></span><span id=\"trim_whitespace__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1aba3b276cf9ef95198bda7008bacea909\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">trim_whitespace</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove whitespace from the beginning or end of a string. </p></dd>", "a[href=\"library/web/api/Listeners.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Listeners.hpp<a class=\"headerlink\" href=\"#listeners-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A class for tracking font event listeners for Widgets. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv416view_string_backRKNSt11string_viewE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416view_string_backRKNSt11string_viewE6size_t\">\n<span id=\"_CPPv316view_string_backRKNSt11string_viewE6size_t\"></span><span id=\"_CPPv216view_string_backRKNSt11string_viewE6size_t\"></span><span id=\"view_string_back__std::string_viewCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1ac52e8f56590a00aebf5b580cfe56b40f\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string_back</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">npos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a string_view on a string from a starting point with a given size. </p></dd>", "a[href=\"library/web/api/js_utils.html#_CPPv422get_type_to_string_mapv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv422get_type_to_string_mapv\">\n<span id=\"_CPPv322get_type_to_string_mapv\"></span><span id=\"_CPPv222get_type_to_string_mapv\"></span><span id=\"get_type_to_string_map\"></span><span class=\"target\" id=\"js__utils_8hpp_1a965145f9a06daafb806b4314a36a471f\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">get_type_to_string_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function returns a std::map mapping typeid names to the appropriate strings to describe those types in Javscript. This is useful when using getValue() from within MAIN_THREAD_EM_ASM macros.</p><p>For example, say we have a templated function that takes a pointer to type T. We find out the appropriate string for type T : <div class=\"highlight-cpp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">map</span><span class=\"o\">&lt;</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">type_map</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">GetTypeToStringMap</span><span class=\"p\">();</span>\n<span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">type_string</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">type_map</span><span class=\"p\">[</span><span class=\"k\">typeid</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"p\">).</span><span class=\"n\">name</span><span class=\"p\">()];</span>\n</pre></div>\n</div>\n</p><p>Now we can pass type_string.c_str() into MAIN_THREAD_EM_ASM: <div class=\"highlight-cpp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">MAIN_THREAD_EM_ASM</span><span class=\"p\">({</span>\n<span class=\"w\">   </span><span class=\"n\">var</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">getValue</span><span class=\"p\">(</span><span class=\"n\">$0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">$1</span><span class=\"p\">);</span>\n<span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">type_string</span><span class=\"p\">.</span><span class=\"n\">c_str</span><span class=\"p\">();</span>\n</pre></div>\n</div>\n</p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0_6size_tDpE14BuildObjVector6vectorI5OBJ_TEDpR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tDpE14BuildObjVector6vectorI5OBJ_TEDpR2Ts\">\n<span id=\"_CPPv3I0_6size_tDpE14BuildObjVectorDpR2Ts\"></span><span id=\"_CPPv2I0_6size_tDpE14BuildObjVectorDpR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_ARGS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a317a33666b5961f4e9b4537c613ccfe2\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tDpE14BuildObjVector6vectorI5OBJ_TEDpR2Ts\" title=\"BuildObjVector::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tDpE14BuildObjVector6vectorI5OBJ_TEDpR2Ts\" title=\"BuildObjVector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE21SymmetricNoWrapMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE21SymmetricNoWrapMetric\">\n<span id=\"_CPPv3I_6size_tE21SymmetricNoWrapMetric\"></span><span id=\"_CPPv2I_6size_tE21SymmetricNoWrapMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structSymmetricNoWrapMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SymmetricNoWrapMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE21SymmetricNoWrapMetric\" title=\"SymmetricNoWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE21SymmetricNoWrapMetric\" title=\"SymmetricNoWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Metric gives the absolute value of the difference between the integer representations of the BitSets. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/data/api/AnnotatedType.html#_CPPv413AnnotatedType\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413AnnotatedType\">\n<span id=\"_CPPv313AnnotatedType\"></span><span id=\"_CPPv213AnnotatedType\"></span><span id=\"AnnotatedType\"></span><span class=\"target\" id=\"classAnnotatedType\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnnotatedType</span></span></span><br/></dt><dd><p>A generic base class implementing the use of dynamic traits via DataMaps. </p></dd>", "a[href=\"library/datastructs/datastructs.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/control/api/Action.html#_CPPv4I0DpE6ActionIF6RETURNDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6ActionIF6RETURNDp4ARGSEE\">\n<span id=\"_CPPv3I0DpE6ActionIF6RETURNDp4ARGSEE\"></span><span id=\"_CPPv2I0DpE6ActionIF6RETURNDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAction_3_01RETURN_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Action</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6ActionIF6RETURNDp4ARGSEE\" title=\"Action&lt;RETURN(ARGS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6ActionIF6RETURNDp4ARGSEE\" title=\"Action&lt;RETURN(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE10ActionSize\" title=\"ActionSize\"><span class=\"n\"><span class=\"pre\">ActionSize</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">sizeof</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6ActionIF6RETURNDp4ARGSEE\" title=\"Action&lt;RETURN(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>This Action class specialization takes a function with any non-void return type and builds it off of the action base classes. </p></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv419GetWindowInnerWidthv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419GetWindowInnerWidthv\">\n<span id=\"_CPPv319GetWindowInnerWidthv\"></span><span id=\"_CPPv219GetWindowInnerWidthv\"></span><span id=\"GetWindowInnerWidth\"></span><span class=\"target\" id=\"emfunctions_8hpp_1abd4581a24de66bdad0c4de20a736be8f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetWindowInnerWidth</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine with width of the current window. </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\">\n<span id=\"_CPPv3I00E8flip_mapRKNSt3mapI1A1BEE\"></span><span id=\"_CPPv2I00E8flip_mapRKNSt3mapI1A1BEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">B</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a2d4f7b90688a003ae4d8202fe879cd7e\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flip_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_mapNSt8multimapI1B1AEERKNSt3mapI1A1BEE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">src</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an std::map&lt;A,B&gt; and return the flipped map (now multimap to be safe): std::multimap&lt;B,A&gt; </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416string_uint_sizeRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416string_uint_sizeRKNSt6stringE\">\n<span id=\"_CPPv316string_uint_sizeRKNSt6stringE\"></span><span id=\"_CPPv216string_uint_sizeRKNSt6stringE\"></span><span id=\"string_uint_size__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a33f55bc6deb6648fdc32353daef13a7a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_uint_size</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv411MakeLiteralc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeLiteralc\">\n<span id=\"_CPPv311MakeLiteralc\"></span><span id=\"_CPPv211MakeLiteralc\"></span><span id=\"MakeLiteral__c\"></span><span class=\"target\" id=\"String_8hpp_1ac19834a1ac45ed09c7c540f9e39b61e6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeLiteral</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a char and convert it to a C++-style literal. </p></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv4I00000_6size_tE19ExpRouletteSelector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000_6size_tE19ExpRouletteSelector\">\n<span id=\"_CPPv3I00000_6size_tE19ExpRouletteSelector\"></span><span id=\"_CPPv2I00000_6size_tE19ExpRouletteSelector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ThreshRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">13</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ZRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxBaselineRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">5</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultN</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structExpRouletteSelector\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExpRouletteSelector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12SelectorBase\" title=\"SelectorBase\"><span class=\"n\"><span class=\"pre\">SelectorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv418RouletteCacheState\" title=\"RouletteCacheState\"><span class=\"n\"><span class=\"pre\">RouletteCacheState</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Selector chooses probabilistically based on match quality with replacement using exponentially. ThreshRatio: what is the minimum probability of matching to even be considered for a match BRatio, CRatio, ZRatio: p_match ~ b ^ (c * normalized_score) ^ z MaxBaselineRatio: maximum score that all scores will be normalized to baseline = min(min_score, MaxBaselineRatio) normalized_score = score - baseline </p></dd>", "a[href=\"library/web/api/Document.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Document.hpp<a class=\"headerlink\" href=\"#document-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Manage an entire document. </p><p>The Document class is built off of Div, but initializes the EMP web framework, if neeeded, and activates itself. It also provides quick ways to add and lookup widgets.</p>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\">\n<span id=\"_CPPv3I00E11GetConstRefRK5MAP_TRK5KEY_T\"></span><span id=\"_CPPv2I00E11GetConstRefRK5MAP_TRK5KEY_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a98ddb4b8a7b6fdc71968a36c51e19172\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetConstRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\" title=\"GetConstRef::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11GetConstRefRKDaRK5MAP_TRK5KEY_T\" title=\"GetConstRef::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map and element, run find() member function, and return a reference to the result found; trip assert if the result is not present. </p></dd>", "a[href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6vector\">\n<span id=\"_CPPv3I0DpE6vector\"></span><span id=\"_CPPv2I0DpE6vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6vector\" title=\"vector::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a debug wrapper vector around std::vector. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\">\n<span id=\"_CPPv3I00E8ToVectorRKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\"></span><span id=\"_CPPv2I00E8ToVectorRKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1afae1ba18acc64a78c749db9c8cc88271\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">unordered_map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">default_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt13unordered_mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index_cap</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">32768</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an unordered map to a vector. </p></dd>", "a[href=\"library/prefab/api/ConfigPanel.html#_CPPv411ConfigPanel\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ConfigPanel\">\n<span id=\"_CPPv311ConfigPanel\"></span><span id=\"_CPPv211ConfigPanel\"></span><span id=\"ConfigPanel\"></span><span class=\"target\" id=\"classConfigPanel\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConfigPanel</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>Use the ConfigPanel class to easily add a dynamic configuration panel to your web app. Users can interact with the config panel by updating values.</p><p>The ConfigPanel is constructed using sub-components. Groups of settings are placed in Cards, and individual settings are represented by ValueControls. </p></dd>", "a[href=\"library/tools/api/attrs.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">attrs.hpp<a class=\"headerlink\" href=\"#attrs-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TODO. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E11is_ptr_typeIPC1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_ptr_typeIPC1TE\">\n<span id=\"_CPPv3I0E11is_ptr_typeIPC1TE\"></span><span id=\"_CPPv2I0E11is_ptr_typeIPC1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__ptr__type_3_01T_01_5const_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11is_ptr_typeIPC1TE\" title=\"is_ptr_type&lt;T*const&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/Distribution.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Distribution.hpp<a class=\"headerlink\" href=\"#distribution-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of pre-calculated discrete distributions that can quickly generate random values. </p><p>\nA Distribution is a pre-calculated set of probabilities to quickly pick a whole-number result. These should be used when either we need to draw from the same distribution many time (and hence the extra time to pre-calculate it is amortized away) -or- in functions that we want to call with a range of distributions that we may not know ahead of time.</p>", "a[href=\"library/meta/api/TypePack.html#_CPPv4I0DpE8TypePack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE8TypePack\">\n<span id=\"_CPPv3I0DpE8TypePack\"></span><span id=\"_CPPv2I0DpE8TypePack\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTypePack_3_01T1_00_01Ts_8_8_8_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypePack</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8TypePack\" title=\"TypePack::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8TypePack\" title=\"TypePack::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv4I00_6size_tE13SieveSelector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE13SieveSelector\">\n<span id=\"_CPPv3I00_6size_tE13SieveSelector\"></span><span id=\"_CPPv2I00_6size_tE13SieveSelector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StochasticRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LockInRatio</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultN</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structSieveSelector\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SieveSelector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12SelectorBase\" title=\"SelectorBase\"><span class=\"n\"><span class=\"pre\">SelectorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv415SieveCacheState\" title=\"SieveCacheState\"><span class=\"n\"><span class=\"pre\">SieveCacheState</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Selector treats each element of the MatchBin independently. As match distance increases, each element passes through a regime where selection is guaranteed, a regime where selection is stochastic, and then a regime where non-selection is guaranteed. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\">\n<span id=\"_CPPv3I0E5Slice6vectorI1TEii\"></span><span id=\"_CPPv2I0E5Slice6vectorI1TEii\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a957174f9fb5266bd582d9c79e31997c9\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\" title=\"Slice::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Slice</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5Slice6vectorI1TE6vectorI1TEii\" title=\"Slice::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vec</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">stop</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns a vector containing a chunk of elements from</p></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\">\n<span id=\"_CPPv3I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\"></span><span id=\"_CPPv2I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structFunInfo_3_01RETURN__T_07PARAM__Ts_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunInfo</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T(PARAM_Ts...)&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T(PARAM_Ts...)&gt;::PARAM_Ts\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">FunInfo</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T(PARAM_Ts...)&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE7FunInfoIF8RETURN_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T(PARAM_Ts...)&gt;::PARAM_Ts\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv4I0E12RandomVector6vectorI1TER6Random6size_t1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12RandomVector6vectorI1TER6Random6size_t1T1T\">\n<span id=\"_CPPv3I0E12RandomVectorR6Random6size_t1T1T\"></span><span id=\"_CPPv2I0E12RandomVectorR6Random6size_t1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"random__utils_8hpp_1a0da9230ff83d394d182e5c71b1b2a0ce\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12RandomVector6vectorI1TER6Random6size_t1T1T\" title=\"RandomVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">size</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E12RandomVector6vectorI1TER6Random6size_t1T1T\" title=\"RandomVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E12RandomVector6vectorI1TER6Random6size_t1T1T\" title=\"RandomVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random vector in the specified type and range. </p></dd>", "a[href=\"library/base/api/errors.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">errors.hpp<a class=\"headerlink\" href=\"#errors-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to help manage various problems in command-line or Emscripten-based applications. </p><p>\nThere are three possible recipiants for all errors/warnings.<ul class=\"simple\">\n<li><p>The end-user if the problem stems from inputs they provided to the executable.</p></li>\n<li><p>The library user if the problem is due to mis-use of library functionality.</p></li>\n<li><p>The library developers if something that should be impossible occurs.</p></li>\n</ul>\n</p>", "a[href=\"dev/adding-documentation.html#how-to-add-docs-to-the-sphinx-documentation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">How to add docs to the Sphinx documentation<a class=\"headerlink\" href=\"#how-to-add-docs-to-the-sphinx-documentation\" title=\"Link to this heading\">\uf0c1</a></h2><p>Sphinx is the system used to generate the developer guide and similar\nreference documentation. A primer to using ReStructured Text, the markup\nlanguage used by Sphinx, can be found\n<a class=\"reference external\" href=\"http://docutils.sourceforge.net/docs/user/rst/quickstart.html\">here</a>.\nYou can also look at any of the [.rst]{.title-ref} files in the\n[doc/]{.title-ref} directory to get a feel for how thinks work.</p><p>New documents must be included in the <code class=\"docutils literal notranslate\"><span class=\"pre\">toctree</span></code> in the <code class=\"docutils literal notranslate\"><span class=\"pre\">index.md</span></code>\nfile for the directory the added file lives in. For example, if you add\n<code class=\"docutils literal notranslate\"><span class=\"pre\">CowFacts.md</span></code> to the <code class=\"docutils literal notranslate\"><span class=\"pre\">CoolFacts/</span></code> directory you must add <code class=\"docutils literal notranslate\"><span class=\"pre\">CowFacts.md</span></code>\nto the toctree found in <code class=\"docutils literal notranslate\"><span class=\"pre\">CoolFacts/CowFacts.md</span></code>:</p>", "a[href=\"library/evolve/api/OEE.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">OEE.hpp<a class=\"headerlink\" href=\"#oee-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TODO. </p>", "a[href=\"library/tools/api/char_utils.html#_CPPv417WhitespaceCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417WhitespaceCharSetv\">\n<span id=\"_CPPv317WhitespaceCharSetv\"></span><span id=\"_CPPv217WhitespaceCharSetv\"></span><span id=\"WhitespaceCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1aba425798febeb788777dc902bdf09bdc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WhitespaceCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/SettingConfig.html#_CPPv413SettingConfig\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413SettingConfig\">\n<span id=\"_CPPv313SettingConfig\"></span><span id=\"_CPPv213SettingConfig\"></span><span id=\"SettingConfig\"></span><span class=\"target\" id=\"classSettingConfig\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SettingConfig</span></span></span><br/></dt><dd><p>Class to take a set of value for each \u201csetting\u201d and then step through all combinations of those values for a factorial analysis. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IIDpE00E9test_typebv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE00E9test_typebv\">\n<span id=\"_CPPv3IIDpE00E9test_typev\"></span><span id=\"_CPPv2IIDpE00E9test_typev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TEST</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1af83bdd7a9d701864d3872aae8b17e85c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">test_type</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/Fraction.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Fraction.hpp<a class=\"headerlink\" href=\"#fraction-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools to maintain a more exact fraction (rather than lose precision as a double) </p>", "a[href=\"library/data/api/DataNode.html#_CPPv411RangeModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411RangeModule\">\n<span id=\"_CPPv311RangeModule\"></span><span id=\"_CPPv211RangeModule\"></span><span id=\"RangeModule\"></span><span class=\"target\" id=\"classRangeModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RangeModule</span></span></span><br/></dt><dd><p>== data::Range == This module allows this DataNode to store information (min, max, mean, count, and total) about the distribution of the values that have been added since the last call to Reset(). To use this class, add data::Range to the template arguments on your DataNode. Do not use the RangeModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/io/api/MemoryIStream.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MemoryIStream.hpp<a class=\"headerlink\" href=\"#memoryistream-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Useful for streaming data from contiguous memory. Status: RELEASE. </p>", "a[href=\"library/matching/api/matchbin_regulators.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">matchbin_regulators.hpp<a class=\"headerlink\" href=\"#matchbin-regulators-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Regulator structs that can be plugged into MatchBin. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\">\n<span id=\"_CPPv3I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\"></span><span id=\"_CPPv2I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Needle</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__index__of_3_01Needle_00_01Haystack_3_01U_8_8_8_01_4_00_01Cmp_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_index_of</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::Needle\"><span class=\"n\"><span class=\"pre\">Needle</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::Haystack\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">__impl_variadics_type_traits</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">variadic_index_of</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::Needle\"><span class=\"n\"><span class=\"pre\">Needle</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">__impl_variadics_type_traits</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pack</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0IDpE0DpI00E0E17variadic_index_ofI6Needle8HaystackIDp1UE3CmpE\" title=\"variadic_index_of&lt;Needle, Haystack&lt;U...&gt;, Cmp&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"dev/getting-started.html#pull-request-cleanup-commit-squashing\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id7\" role=\"doc-backlink\">Pull request cleanup (commit squashing)</a><a class=\"headerlink\" href=\"#pull-request-cleanup-commit-squashing\" title=\"Link to this heading\">\uf0c1</a></h2><p>Submitters are invited to reduce the numbers of commits in their pull\nrequests either via [git rebase -i upstream/master]{.title-ref} or this\nrecipe:</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv45sliceRKNSt11string_viewEKcK6size_tKbKbKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45sliceRKNSt11string_viewEKcK6size_tKbKbKbKb\">\n<span id=\"_CPPv35sliceRKNSt11string_viewEKcK6size_tKbKbKbKb\"></span><span id=\"_CPPv25sliceRKNSt11string_viewEKcK6size_tKbKbKbKb\"></span><span id=\"slice__std::string_viewCR.cC.sC.bC.bC.bC.bC\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8e51bae75ea3a5d4b2030f7a5b7f98ce\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">slice</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'\\n'</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_split</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Slice a string without passing in result vector (may be less efficient). </p></dd>", "a[href=\"library/web/api/CanvasAction.html#_CPPv412CanvasRotate\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CanvasRotate\">\n<span id=\"_CPPv312CanvasRotate\"></span><span id=\"_CPPv212CanvasRotate\"></span><span id=\"CanvasRotate\"></span><span class=\"target\" id=\"classCanvasRotate\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasRotate</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412CanvasAction\" title=\"CanvasAction\"><span class=\"n\"><span class=\"pre\">CanvasAction</span></span></a><br/></dt><dd><p>Rotate the entire canvas for subsequent drawings. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410string_getRKNSt6stringEKc6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410string_getRKNSt6stringEKc6size_t\">\n<span id=\"_CPPv310string_getRKNSt6stringEKc6size_t\"></span><span id=\"_CPPv210string_getRKNSt6stringEKc6size_t\"></span><span id=\"string_get__ssCR.cC.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4e43003b34314aaf7eae3d132b91f15c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'</span> <span class=\"pre\">'</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a prefix of the input string (up to a specified delimeter), but do not modify it. If the delimeter is not found, return the entire input string. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE10HashMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE10HashMetric\">\n<span id=\"_CPPv3I_6size_tE10HashMetric\"></span><span id=\"_CPPv2I_6size_tE10HashMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHashMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HashMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE10HashMetric\" title=\"HashMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE10HashMetric\" title=\"HashMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Generate an arbitrary, but consistent, match score between 0 and 1. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E7Product1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7Product1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E7ProductRK6vectorI1TE\"></span><span id=\"_CPPv2I0E7ProductRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a9e56fe4f5e29bd0eebb87fbd14df11f2\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Product1TRK6vectorI1TE\" title=\"Product::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Product</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Product1TRK6vectorI1TE\" title=\"Product::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Multiply all of the contents of a vector. </p></dd>", "a[href=\"library/web/api/Font.html#_CPPv44Font\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Font\">\n<span id=\"_CPPv34Font\"></span><span id=\"_CPPv24Font\"></span><span id=\"Font\"></span><span class=\"target\" id=\"classFont\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Font</span></span></span><br/></dt><dd><p>Maintain information about an HTML font. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410has_prefixRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410has_prefixRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv310has_prefixRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv210has_prefixRKNSt6stringERKNSt6stringE\"></span><span id=\"has_prefix__ssCR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1add139ab93d951b65aeabb5b4356ad97a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_prefix</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">prefix</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if a string has a given prefix. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411view_stringRKNSt11string_viewE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411view_stringRKNSt11string_viewE6size_t\">\n<span id=\"_CPPv311view_stringRKNSt11string_viewE6size_t\"></span><span id=\"_CPPv211view_stringRKNSt11string_viewE6size_t\"></span><span id=\"view_string__std::string_viewCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1af1ea9499868b45ed538384ad61a0b9df\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a string_view on a string from a given starting point. </p></dd>", "a[href=\"library/tools/api/value_utils.html#_CPPv4I0E8ToDoubledRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8ToDoubledRK1T\">\n<span id=\"_CPPv3I0E8ToDoubleRK1T\"></span><span id=\"_CPPv2I0E8ToDoubleRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"value__utils_8hpp_1a8ef49aef84edb2e746d913a32c0c9db9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8ToDoubledRK1T\" title=\"ToDouble::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv47AnyTruev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47AnyTruev\">\n<span id=\"_CPPv37AnyTruev\"></span><span id=\"_CPPv27AnyTruev\"></span><span id=\"AnyTrueCE\"></span><span class=\"target\" id=\"math_8hpp_1ae6d5083dc4bce4ffda96b39d6b03e6f8\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AnyTrue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Combine bools to OR them all together. </p></dd>", "a[href=\"library/control/api/Signal.html#_CPPv49SignalKey\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49SignalKey\">\n<span id=\"_CPPv39SignalKey\"></span><span id=\"_CPPv29SignalKey\"></span><span id=\"SignalKey\"></span><span class=\"target\" id=\"classSignalKey\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SignalKey</span></span></span><br/></dt><dd><p>SignalKey tracks a specific function triggered by a signal. For now, its just a value pair. </p></dd>", "a[href=\"library/evolve/api/Resource.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Resource.hpp<a class=\"headerlink\" href=\"#resource-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Implement resource-based selection. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Ultimately, we probably want a much more full-featured resource system. This one works for Eco-EA and could be the basis for something Avida-like but lacks a lot of features for Artificial Life systems. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv412remove_charsRNSt6stringENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412remove_charsRNSt6stringENSt6stringE\">\n<span id=\"_CPPv312remove_charsRNSt6stringENSt6stringE\"></span><span id=\"_CPPv212remove_charsRNSt6stringENSt6stringE\"></span><span id=\"remove_chars__ssR.ss\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2a126069403553b33eb5d5550bb73052\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_chars</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">chars</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove instances of characters from file. </p></dd>", "a[href=\"library/tools/api/char_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">char_utils.hpp<a class=\"headerlink\" href=\"#char-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Simple functions and tools to manipulate individual characters. </p><p>\nAvailable Class CharSet - A collection of characters for use in other functions.</p>", "a[href=\"library/web/api/color_map.html#_CPPv48ColorRGBiiid\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ColorRGBiiid\">\n<span id=\"_CPPv38ColorRGBiiid\"></span><span id=\"_CPPv28ColorRGBiiid\"></span><span id=\"ColorRGB__i.i.i.double\"></span><span class=\"target\" id=\"color__map_8hpp_1a581ffc509a9a38f0ff0d6ffdcb602fed\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ColorRGB</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">r</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">g</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">a</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a string to describe a JS color with an alpha channel. </p></dd>", "a[href=\"library/web/api/commands.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">commands.hpp<a class=\"headerlink\" href=\"#commands-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of command-defining classes that can be fed into widgets using the &lt;&lt; operator. </p>", "a[href=\"library/datastructs/api/Graph.html#_CPPv45Graph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Graph\">\n<span id=\"_CPPv35Graph\"></span><span id=\"_CPPv25Graph\"></span><span id=\"Graph\"></span><span class=\"target\" id=\"classGraph\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Graph</span></span></span><br/></dt><dd><p>A graph class that maintains a set of vertices (nodes) and edges (connecting pairs of nodes) </p><p>Subclassed by WeightedGraph</p></dd>", "a[href=\"library/meta/api/ValPack.html#_CPPv4I_DaE12ValPackCount\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_DaE12ValPackCount\">\n<span id=\"_CPPv3I_DaE12ValPackCount\"></span><span id=\"_CPPv2I_DaE12ValPackCount\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">COUNT</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"ValPack_8hpp_1a52ebb9c92665923a30770799503ff5fc\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValPackCount</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_Da_Da_DaE12ValPackRange\" title=\"ValPackRange\"><span class=\"n\"><span class=\"pre\">ValPackRange</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_DaE12ValPackCount\" title=\"ValPackCount::COUNT\"><span class=\"n\"><span class=\"pre\">COUNT</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Generate a count from 0 to COUNT-1 (so a total of COUNT values) </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0_6size_tE8CacheMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE8CacheMod\">\n<span id=\"_CPPv3I0_6size_tE8CacheMod\"></span><span id=\"_CPPv2I0_6size_tE8CacheMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxCapacity</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100000</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structCacheMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CacheMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE8CacheMod\" title=\"CacheMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd></dd>", "a[href=\"library/meta/api/TypePack.html#_CPPv4IE8TypePackIE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE8TypePackIE\">\n<span id=\"_CPPv3IE8TypePackIE\"></span><span id=\"_CPPv2IE8TypePackIE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTypePack_3_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypePack</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv4I0_6size_tE11CharSetBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE11CharSetBase\">\n<span id=\"_CPPv3I0_6size_tE11CharSetBase\"></span><span id=\"_CPPv2I0_6size_tE11CharSetBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CHAR_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_CHAR</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classCharSetBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CharSetBase</span></span></span><br/></dt><dd><p>A char_set is a fast true/false lookup table to identify which ASCII chars are in a set. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413string_pop_toRNSt6stringERKNSt6stringE6size_tbbbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413string_pop_toRNSt6stringERKNSt6stringE6size_tbbbb\">\n<span id=\"_CPPv313string_pop_toRNSt6stringERKNSt6stringE6size_tbbbb\"></span><span id=\"_CPPv213string_pop_toRNSt6stringERKNSt6stringE6size_tbbbb\"></span><span id=\"string_pop_to__ssR.ssCR.s.b.b.b.b\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae7283f8d840dee44417ae5058731c274\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_to</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415ANSI_BrightBluev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415ANSI_BrightBluev\">\n<span id=\"_CPPv315ANSI_BrightBluev\"></span><span id=\"_CPPv215ANSI_BrightBluev\"></span><span id=\"ANSI_BrightBlue\"></span><span class=\"target\" id=\"string__utils_8hpp_1a7e7c622a4c50b43a3934b6ce0203e50d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightBlue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"dev/getting-started.html#building-empirical-and-running-the-tests\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id3\" role=\"doc-backlink\">Building Empirical and running the tests</a><a class=\"headerlink\" href=\"#building-empirical-and-running-the-tests\" title=\"Link to this heading\">\uf0c1</a></h3><p>Congratulations! You\u2019re ready to develop!</p>", "a[href=\"library/games/api/Othello8.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Othello8.hpp<a class=\"headerlink\" href=\"#othello8-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple Othello game state handler limited to an 8x8 board. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Add Hash for boards to be able to cachce moves. </p>\n<p>Setup OPTIONAL caching of expensive board measures. </p>\n</dd></dl>\n</p>", "a[href=\"library/meta/api/reflection.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">reflection.hpp<a class=\"headerlink\" href=\"#reflection-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Macros and template utilities to help determine details about unknown classes. </p>", "a[href=\"library/web/api/js_utils.html#_CPPv4I00_6size_tE22pass_map_to_javascriptvRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE22pass_map_to_javascriptvRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\">\n<span id=\"_CPPv3I00_6size_tE22pass_map_to_javascriptRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\"></span><span id=\"_CPPv2I00_6size_tE22pass_map_to_javascriptRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VAL_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"js__utils_8hpp_1aebce0edc1699bac1481efc7239ec152f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pass_map_to_javascript</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE22pass_map_to_javascriptvRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\" title=\"pass_map_to_javascript::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE22pass_map_to_javascriptvRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\" title=\"pass_map_to_javascript::SIZE\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">keys</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE22pass_map_to_javascriptvRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\" title=\"pass_map_to_javascript::VAL_T\"><span class=\"n\"><span class=\"pre\">VAL_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE22pass_map_to_javascriptvRK5arrayI5KEY_T4SIZEERK5arrayI5VAL_T4SIZEE\" title=\"pass_map_to_javascript::SIZE\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">values</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function can be called to pass two arrays of the same length into JavaScript (where a map is then created) One array should hold keys, and the other should hold values (note that the key-value pairs must line up across the arrays) The resulting JavaScript object will be stored in emp.__incoming_map. </p></dd>", "a[href=\"library/geometry/api/Circle2D.html#_CPPv46Circle\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Circle\">\n<span id=\"_CPPv36Circle\"></span><span id=\"_CPPv26Circle\"></span><span class=\"target\" id=\"Circle2D_8hpp_1a776bcfe5b5a28bebeac2add61208ef19\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Circle</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8Circle2D\" title=\"Circle2D\"><span class=\"n\"><span class=\"pre\">Circle2D</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/color_map.html#_CPPv48ColorHSVddd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ColorHSVddd\">\n<span id=\"_CPPv38ColorHSVddd\"></span><span id=\"_CPPv28ColorHSVddd\"></span><span id=\"ColorHSV__double.double.double\"></span><span class=\"target\" id=\"color__map_8hpp_1a97b9bc96bd509b5b0462610aee44bb03\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ColorHSV</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">h</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a string to describe a JS color out of HSV values. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv47PtrInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47PtrInfo\">\n<span id=\"_CPPv37PtrInfo\"></span><span id=\"_CPPv27PtrInfo\"></span><span id=\"PtrInfo\"></span><span class=\"target\" id=\"classPtrInfo\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PtrInfo</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/sequence_utils.html#_CPPv4I0E21calc_hamming_distance6size_tRK4TYPERK4TYPEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21calc_hamming_distance6size_tRK4TYPERK4TYPEi\">\n<span id=\"_CPPv3I0E21calc_hamming_distanceRK4TYPERK4TYPEi\"></span><span id=\"_CPPv2I0E21calc_hamming_distanceRK4TYPERK4TYPEi\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"sequence__utils_8hpp_1ad8646a5b85919843a9f74622d8554848\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">calc_hamming_distance</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E21calc_hamming_distance6size_tRK4TYPERK4TYPEi\" title=\"calc_hamming_distance::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E21calc_hamming_distance6size_tRK4TYPERK4TYPEi\" title=\"calc_hamming_distance::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">offset</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Hamming distance is a simple count of substitutions needed to convert one array to another. </p></dd>", "a[href=\"library/text/api/Text.html#_CPPv422TextEncoding_Interface\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv422TextEncoding_Interface\">\n<span id=\"_CPPv322TextEncoding_Interface\"></span><span id=\"_CPPv222TextEncoding_Interface\"></span><span id=\"TextEncoding_Interface\"></span><span class=\"target\" id=\"structTextEncoding__Interface\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TextEncoding_Interface</span></span></span><br/></dt><dd><p>Subclassed by TextEncoding, TextEncoding_None</p></dd>", "a[href=\"library/datastructs/api/reference_vector.html#_CPPv4I0E16reference_vector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16reference_vector\">\n<span id=\"_CPPv3I0E16reference_vector\"></span><span id=\"_CPPv2I0E16reference_vector\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classreference__vector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">reference_vector</span></span></span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv46to_DFARK3DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_DFARK3DFA\">\n<span id=\"_CPPv36to_DFARK3DFA\"></span><span id=\"_CPPv26to_DFARK3DFA\"></span><span id=\"to_DFA__DFACR\"></span><span class=\"target\" id=\"group__lexer__utilities_1ga90b35165db31201b4092a7309c184f07\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_DFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dfa</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Converting DFA to DFA &amp;#8212; no change needed. </p></dd>", "a[href=\"library/config/api/config_web_interface.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">config_web_interface.hpp<a class=\"headerlink\" href=\"#config-web-interface-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>TODO. </p>", "a[href=\"library/io/api/ascii_utils.html#_CPPv4I0E13AsciiBarGraphv6vectorI1TE6size_tbbRNSt7ostreamE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13AsciiBarGraphv6vectorI1TE6size_tbbRNSt7ostreamE\">\n<span id=\"_CPPv3I0E13AsciiBarGraph6vectorI1TE6size_tbbRNSt7ostreamE\"></span><span id=\"_CPPv2I0E13AsciiBarGraph6vectorI1TE6size_tbbRNSt7ostreamE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"ascii__utils_8hpp_1a2688a40a31564a8548711c0567c57a1e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AsciiBarGraph</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13AsciiBarGraphv6vectorI1TE6size_tbbRNSt7ostreamE\" title=\"AsciiBarGraph::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">data</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_width</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">80</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">show_scale</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_scale_1</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>The following function prints an ascii bar graph on to the screen (or provided stream). </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv48MAX_BYTE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48MAX_BYTE\">\n<span id=\"_CPPv38MAX_BYTE\"></span><span id=\"_CPPv28MAX_BYTE\"></span><span id=\"MAX_BYTE__uint32_tC\"></span><span class=\"target\" id=\"constants_8hpp_1a6922997756cb01269fc9ca7bbd0ec7d4\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAX_BYTE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">255</span></span><br/></dt><dd><p>(2^8 - 1) </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410string_getRKNSt6stringERKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410string_getRKNSt6stringERKNSt6stringE6size_t\">\n<span id=\"_CPPv310string_getRKNSt6stringERKNSt6stringE6size_t\"></span><span id=\"_CPPv210string_getRKNSt6stringERKNSt6stringE6size_t\"></span><span id=\"string_get__ssCR.ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8e4ea9e4a173369624809c9cce09f139\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">delim_set</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a prefix of the input string (up to any of a specified set of delimeters), but do not modify it. If the delimeter is not found, return the entire input string. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv4IDpE4Drawv6CanvasRK7SurfaceIDp10BODY_TYPESE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE4Drawv6CanvasRK7SurfaceIDp10BODY_TYPESE6size_t\">\n<span id=\"_CPPv3IDpE4Draw6CanvasRK7SurfaceIDp10BODY_TYPESE6size_t\"></span><span id=\"_CPPv2IDpE4Draw6CanvasRK7SurfaceIDp10BODY_TYPESE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"canvas__utils_8hpp_1aefc50c3b646caec9501c2f73a7280a2f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/geometry/api/Surface.html#_CPPv4IDpE7Surface\" title=\"Surface\"><span class=\"n\"><span class=\"pre\">Surface</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE4Drawv6CanvasRK7SurfaceIDp10BODY_TYPESE6size_t\" title=\"Draw::BODY_TYPES\"><span class=\"n\"><span class=\"pre\">BODY_TYPES</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">surface</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_colors</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a Surface, just specifying the number of colors (and using a generated hue map). The surface has a range of circle bodies, each with a color id. </p></dd>", "a[href=\"library/datastructs/api/ra_map.html#_CPPv4I00000E6ra_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000E6ra_map\">\n<span id=\"_CPPv3I00000E6ra_map\"></span><span id=\"_CPPv2I00000E6ra_map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hash</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KeyEqual</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Allocator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">allocator</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">pair</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00000E6ra_map\" title=\"ra_map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classra__map\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></span><br/></dt><dd><p>This class uses a combination of a hashtable (std::unordered_map) and vector to lookup insert, lookup, and delete values in constant time, while still being able to step through all values (albeit in an arbitrary order).</p></dd>", "a[href=\"library/web/api/events.html#_CPPv4I0E14OnDocumentLoadvRR8FUN_TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14OnDocumentLoadvRR8FUN_TYPE\">\n<span id=\"_CPPv3I0E14OnDocumentLoadRR8FUN_TYPE\"></span><span id=\"_CPPv2I0E14OnDocumentLoadRR8FUN_TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"events_8hpp_1accf375b12b6271dd8cee37002dd91226\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OnDocumentLoad</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E14OnDocumentLoadvRR8FUN_TYPE\" title=\"OnDocumentLoad::FUN_TYPE\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Runs the specified function when the document is finished loading. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416string_pop_quoteRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416string_pop_quoteRNSt6stringE\">\n<span id=\"_CPPv316string_pop_quoteRNSt6stringE\"></span><span id=\"_CPPv216string_pop_quoteRNSt6stringE\"></span><span id=\"string_pop_quote__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2b65351784131e8a79241cd20e86bc39\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_quote</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/functional/api/GenericFunction.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">GenericFunction.hpp<a class=\"headerlink\" href=\"#genericfunction-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Based on std::function, but with a common base class. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Need to setup Call on GenericFunction to just take a function signature as a template argument, rather than listing all types. </p>\n</dd></dl>\n</p>", "a[href=\"library/datastructs/api/Cache.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Cache.hpp<a class=\"headerlink\" href=\"#cache-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>similar to an std::unordered_map, but all lookups come with a function to generate the result should the lookup fail. </p>", "a[href=\"library/tools/api/TypeTracker.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypeTracker.hpp<a class=\"headerlink\" href=\"#typetracker-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Track class types abstractly to dynamically call correct function overloads. </p><p>TypeTracker is a templated class that must be declared with all of the types that can possibly be tracked. For example: <div class=\"highlight-cpp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">TypeTracker</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">double</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">tt</span><span class=\"p\">;</span>\n</pre></div>\n</div>\n</p>", "a[href=\"library/web/api/events.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">events.hpp<a class=\"headerlink\" href=\"#events-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Event handlers that use JQuery. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Events can be further sub-divided and built up (similar to DataNode objects) so that we save only the information that we\u2019re planning to use. This may be slightly faster (given how frequently some of these like mouse move might be used), but likely to be more compelx. </p>\n<p>An alternative speed-up might be to save the current event somewhere in emp_i on the Javascript side, and then just request the information that we might need. This approach should be easier to implement, but since everything would be copied anyway in such as case, it might not actually be a speedup. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/char_utils.html#_CPPv4IDpE8is_validbcNSt8functionIFbcEEEDp4FUNS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE8is_validbcNSt8functionIFbcEEEDp4FUNS\">\n<span id=\"_CPPv3IDpE8is_validcNSt8functionIFbcEEEDp4FUNS\"></span><span id=\"_CPPv2IDpE8is_validcNSt8functionIFbcEEEDp4FUNS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUNS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"char__utils_8hpp_1a24e2f7be6e7c5221b3fd2f0f01b50bac\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_valid</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE8is_validbcNSt8functionIFbcEEEDp4FUNS\" title=\"is_valid::FUNS\"><span class=\"n\"><span class=\"pre\">FUNS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">funs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if a character passes any of the test functions provided. </p></dd>", "a[href=\"library/testing/api/unit_tests.html#_CPPv417GetUnitTestOutputv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417GetUnitTestOutputv\">\n<span id=\"_CPPv317GetUnitTestOutputv\"></span><span id=\"_CPPv217GetUnitTestOutputv\"></span><span id=\"GetUnitTestOutput\"></span><span class=\"target\" id=\"unit__tests_8hpp_1aea41dc7dfebf777f685e9672144e0f90\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv414UnitTestOutput\" title=\"UnitTestOutput\"><span class=\"n\"><span class=\"pre\">UnitTestOutput</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetUnitTestOutput</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E11is_ptr_typeIP1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_ptr_typeIP1TE\">\n<span id=\"_CPPv3I0E11is_ptr_typeIP1TE\"></span><span id=\"_CPPv2I0E11is_ptr_typeIP1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__ptr__type_3_01T_01_5_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11is_ptr_typeIP1TE\" title=\"is_ptr_type&lt;T*&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv4IDpE13MakeFormatted6StringRK6StringDp4Args\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE13MakeFormatted6StringRK6StringDp4Args\">\n<span id=\"_CPPv3IDpE13MakeFormattedRK6StringDp4Args\"></span><span id=\"_CPPv2IDpE13MakeFormattedRK6StringDp4Args\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Args</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1acd11352b18378b4f1208f7edec0d47f4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeFormatted</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">format</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE13MakeFormatted6StringRK6StringDp4Args\" title=\"MakeFormatted::Args\"><span class=\"n\"><span class=\"pre\">Args</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/base.html#empirical-pointers\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Empirical pointers<a class=\"headerlink\" href=\"#empirical-pointers\" title=\"Link to this heading\">\uf0c1</a></h2><p>Ptr objects behave as normal pointers under most conditions. However, if\na program is compiled with <code class=\"docutils literal notranslate\"><span class=\"pre\">EMP_TRACK_MEM</span></code> set, then these pointers\nperform extra tests to ensure that they point to valid memory and that\nmemory is freed before pointers are released.</p><p>If you trip an assert, you can re-do the run a track a specific pointer\nby defining <code class=\"docutils literal notranslate\"><span class=\"pre\">EMP_ABORT_PTR_NEW</span></code> or <code class=\"docutils literal notranslate\"><span class=\"pre\">EMP_ABORT_PTR_DELETE</span></code> to the ID of\nthe pointer in question. This will allow you to track the pointer more\neasily in a debugger.</p>", "a[href=\"library/web/api/Input.html#_CPPv45Input\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Input\">\n<span id=\"_CPPv35Input\"></span><span id=\"_CPPv25Input\"></span><span id=\"Input\"></span><span class=\"target\" id=\"classInput\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Input</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv45Input\" title=\"Input\"><span class=\"n\"><span class=\"pre\">Input</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Create or control an HTML Input object that you can manipulate and update as needed. </p></dd>", "a[href=\"library/datastructs/api/Graph.html#_CPPv413WeightedGraph\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413WeightedGraph\">\n<span id=\"_CPPv313WeightedGraph\"></span><span id=\"_CPPv213WeightedGraph\"></span><span id=\"WeightedGraph\"></span><span class=\"target\" id=\"classWeightedGraph\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WeightedGraph</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><br/></dt><dd><p>A graph class that maintains a set of vertices (nodes), edges (connecting pairs of nodes), and edge weights </p></dd>", "a[href=\"library/web/api/JSWrap.html#_CPPv4I0E10JSWrapOnce6size_tRR8FUN_TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10JSWrapOnce6size_tRR8FUN_TYPE\">\n<span id=\"_CPPv3I0E10JSWrapOnceRR8FUN_TYPE\"></span><span id=\"_CPPv2I0E10JSWrapOnceRR8FUN_TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"JSWrap_8hpp_1ae42b98e8c5c40ea5eada32c2330c7c1b\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">JSWrapOnce</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E10JSWrapOnce6size_tRR8FUN_TYPE\" title=\"JSWrapOnce::FUN_TYPE\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>If we want a quick, unnammed, disposable function, use JSWrapOnce. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E7CopyPtr3PtrI1TE3PtrI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7CopyPtr3PtrI1TE3PtrI1TE\">\n<span id=\"_CPPv3I0E7CopyPtr3PtrI1TE\"></span><span id=\"_CPPv2I0E7CopyPtr3PtrI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1aeaee64164e17d032d6a7f6b9d73171a9\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7CopyPtr3PtrI1TE3PtrI1TE\" title=\"CopyPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CopyPtr</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7CopyPtr3PtrI1TE3PtrI1TE\" title=\"CopyPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy an object pointed to and return a Ptr to the copy. </p></dd>", "a[href=\"library/in_progress/api/Trait.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Trait.hpp<a class=\"headerlink\" href=\"#trait-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/compiler/api/lexer_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">lexer_utils.hpp<a class=\"headerlink\" href=\"#lexer-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of utilities to convert between NFAs and DFAs. </p>", "a[href=\"library/base/api/vector.html#_CPPv4I0E6vectorIbE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6vectorIbE\">\n<span id=\"_CPPv3I0E6vectorIbE\"></span><span id=\"_CPPv2I0E6vectorIbE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvector_3_01bool_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">vector</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Build a specialized debug wrapper for vector&lt;bool&gt;</p></dd>", "a[href=\"library/tools/api/String.html#_CPPv412MakeTrimBackRK6StringRK7CharSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412MakeTrimBackRK6StringRK7CharSet\">\n<span id=\"_CPPv312MakeTrimBackRK6StringRK7CharSet\"></span><span id=\"_CPPv212MakeTrimBackRK6StringRK7CharSet\"></span><span id=\"MakeTrimBack__StringCR.CharSetCR\"></span><span class=\"target\" id=\"String_8hpp_1a20a64afecf41dcb4d1c1d4e5ad2bddfc\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeTrimBack</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">chars</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv417WhitespaceCharSetv\" title=\"WhitespaceCharSet\"><span class=\"n\"><span class=\"pre\">WhitespaceCharSet</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/NFA.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">NFA.hpp<a class=\"headerlink\" href=\"#nfa-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A Non-deterministic Finite Automata simulator. </p><p>\nTo build a standard NFA, use NFA. If you want to have more symbols or more stop states, use tNFA&lt;S,T&gt; where S is the number of symbols and T is the type used for stop. (defaults are 128 for ASCII-128 and uint8_t respectively.)</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv49is_numberRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49is_numberRKNSt6stringE\">\n<span id=\"_CPPv39is_numberRKNSt6stringE\"></span><span id=\"_CPPv29is_numberRKNSt6stringE\"></span><span id=\"is_number__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a6d95cbf36b63ec32b365fa013a497b72\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_number</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if this string represents a proper number. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0DpE6NewPtr3PtrI1TEDpRR4ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6NewPtr3PtrI1TEDpRR4ARGS\">\n<span id=\"_CPPv3I0DpE6NewPtrDpRR4ARGS\"></span><span id=\"_CPPv2I0DpE6NewPtrDpRR4ARGS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a35d6cb6abd06c82cb96ff56fe8f8ce92\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6NewPtr3PtrI1TEDpRR4ARGS\" title=\"NewPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NewPtr</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6NewPtr3PtrI1TEDpRR4ARGS\" title=\"NewPtr::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Create a new Ptr of the target type; use the args in the constructor. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411ANSI_BlueBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ANSI_BlueBGv\">\n<span id=\"_CPPv311ANSI_BlueBGv\"></span><span id=\"_CPPv211ANSI_BlueBGv\"></span><span id=\"ANSI_BlueBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3a6312dc4834c03d79cd92aee064ab4c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BlueBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48to_upperNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48to_upperNSt6stringE\">\n<span id=\"_CPPv38to_upperNSt6stringE\"></span><span id=\"_CPPv28to_upperNSt6stringE\"></span><span id=\"to_upper__ss\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3b9867e1a8a2ecd7b8a04b23f22f9e11\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_upper</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a string to all uppercase. </p></dd>", "a[href=\"library/functional/api/FunctionSet.html#_CPPv4I0E11FunctionSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11FunctionSet\">\n<span id=\"_CPPv3I0E11FunctionSet\"></span><span id=\"_CPPv2I0E11FunctionSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunctionSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunctionSet</span></span></span><br/></dt><dd></dd>", "a[href=\"library/config/config.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Config<a class=\"headerlink\" href=\"#config\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E8MaskHigh4TYPENSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8MaskHigh4TYPENSt6size_tE\">\n<span id=\"_CPPv3I0E8MaskHighNSt6size_tE\"></span><span id=\"_CPPv2I0E8MaskHighNSt6size_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1adc5b023063c4841243c082e429d334dc\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8MaskHigh4TYPENSt6size_tE\" title=\"MaskHigh::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaskHigh</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bits</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Quick bit-mask generator for high bits. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv49is_idcharc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49is_idcharc\">\n<span id=\"_CPPv39is_idcharc\"></span><span id=\"_CPPv29is_idcharc\"></span><span id=\"is_idchar__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a7e9f847834ea14af51933d5b5e4d47c0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_idchar</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/OEE.html#_CPPv415SeenBloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415SeenBloomFilter\">\n<span id=\"_CPPv315SeenBloomFilter\"></span><span id=\"_CPPv215SeenBloomFilter\"></span><span id=\"SeenBloomFilter\"></span><span class=\"target\" id=\"classSeenBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SeenBloomFilter</span></span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_select.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World_select.hpp<a class=\"headerlink\" href=\"#world-select-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for popular selection methods applied to worlds. </p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t6size_t\">\n<span id=\"_CPPv3I0E8RemoveAtR6vectorI1TE6size_t6size_t\"></span><span id=\"_CPPv2I0E8RemoveAtR6vectorI1TE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1accc468b1ecf80373cbf5f89e46a12b1e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveAt</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8RemoveAtvR6vectorI1TE6size_t6size_t\" title=\"RemoveAt::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">count</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove values starting at an index. </p></dd>", "a[href=\"dev/getting-started.html#after-your-first-issue-is-successfully-merged\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id5\" role=\"doc-backlink\">After your first issue is successfully merged\u2026</a><a class=\"headerlink\" href=\"#after-your-first-issue-is-successfully-merged\" title=\"Link to this heading\">\uf0c1</a></h2><p>You\u2019re now an experienced GitHub user! Go ahead and take some more\ntasks; you can broaden out beyond the low hanging fruit if you like.</p>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv417BitFieldsToString3PtrI12bits_field_tE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417BitFieldsToString3PtrI12bits_field_tE6size_t\">\n<span id=\"_CPPv317BitFieldsToString3PtrI12bits_field_tE6size_t\"></span><span id=\"_CPPv217BitFieldsToString3PtrI12bits_field_tE6size_t\"></span><span id=\"BitFieldsToString__Ptr:bits_field_t:.s\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1a16f7722d9f790006155ebf98a2a5bdba\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitFieldsToString</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv412bits_field_t\" title=\"bits_field_t\"><span class=\"n\"><span class=\"pre\">bits_field_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bits</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">count</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a series of bit fields to a string. </p></dd>", "a[href=\"library/evolve/api/World_reflect.html#_CPPv4I00E22SetDefaultGetGenomeFunvR5WORLD\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E22SetDefaultGetGenomeFunvR5WORLD\">\n<span id=\"_CPPv3I00E22SetDefaultGetGenomeFunR5WORLD\"></span><span id=\"_CPPv2I00E22SetDefaultGetGenomeFunR5WORLD\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__reflect_8hpp_1ac5bafa1b878ec384ba5f4cfa47068181\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDefaultGetGenomeFun</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E22SetDefaultGetGenomeFunvR5WORLD\" title=\"SetDefaultGetGenomeFun::WORLD\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/span_utils.html#_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\">\n<span id=\"_CPPv3I0_6size_tE7to_span5arrayI1T4SIZEE\"></span><span id=\"_CPPv2I0_6size_tE7to_span5arrayI1T4SIZEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a55b6bdad46590ed946eefa1aca76ecb3\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_span</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/array.html#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\" title=\"to_span::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7to_spanDa5arrayI1T4SIZEE\" title=\"to_span::SIZE\"><span class=\"n\"><span class=\"pre\">SIZE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">a</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an array to an equivalent span. </p></dd>", "a[href=\"library/prefab/prefab.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/web/api/canvas_utils.html#_CPPv410DrawGridBG6Canvas6size_t6size_tRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410DrawGridBG6Canvas6size_t6size_tRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv310DrawGridBG6Canvas6size_t6size_tRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv210DrawGridBG6Canvas6size_t6size_tRKNSt6stringERKNSt6stringE\"></span><span id=\"DrawGridBG__Canvas.s.s.ssCR.ssCR\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1a4d31af9ad55e7fd34e21eb36a2e47f24\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DrawGridBG</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rows</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cols</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bg_color</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a grid as the background of a canvas. Since this is a BG, clear the canvas first. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv49CountBitsRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49CountBitsRKNSt6stringE\">\n<span id=\"_CPPv39CountBitsRKNSt6stringE\"></span><span id=\"_CPPv29CountBitsRKNSt6stringE\"></span><span id=\"CountBits__ssCR\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1aaa6940662e724836ec20b84f31fc28b2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountBits</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bitstring</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Count the number of bits (\u20180\u2019 or \u20181\u2019) found in a string. </p></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv47GetTimev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47GetTimev\">\n<span id=\"_CPPv37GetTimev\"></span><span id=\"_CPPv27GetTimev\"></span><span id=\"GetTime\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a0e47c74b5a3e6246b9936d96ff4c66b1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTime</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the current time, as provided by the web browser. </p></dd>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv413bits_per_char\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413bits_per_char\">\n<span id=\"_CPPv313bits_per_char\"></span><span id=\"_CPPv213bits_per_char\"></span><span id=\"bits_per_char__std::sC\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1af7f0947bbb7d57153df699c642db6a38\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bits_per_char</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0x08</span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/LoadingModal.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">LoadingModal.hpp<a class=\"headerlink\" href=\"#loadingmodal-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wrapper for loading moadal. </p><p>To add a loading modal to your web page, you must link the LoadingModal.js script directly after the body tag in the HTML doc. To close the script, call CloseLoadingModal() at the end of your .cc file, or at the point which you wish to loading modal to disappear.</p>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE22ApproxDualStreakMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE22ApproxDualStreakMetric\">\n<span id=\"_CPPv3I_6size_tE22ApproxDualStreakMetric\"></span><span id=\"_CPPv2I_6size_tE22ApproxDualStreakMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structApproxDualStreakMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ApproxDualStreakMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE22ApproxDualStreakMetric\" title=\"ApproxDualStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE22ApproxDualStreakMetric\" title=\"ApproxDualStreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Matches based on longest streaks of equal and unequal bits in two bitsets. This implementation uses Incorrect Math from Downing\u2019s Intelligence Emerging. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3Pow1T1TN8internal8identityI1TE4typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Pow1T1TN8internal8identityI1TE4typeE\">\n<span id=\"_CPPv3I0E3Pow1TN8internal8identityI1TE4typeE\"></span><span id=\"_CPPv2I0E3Pow1TN8internal8identityI1TE4typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a6ab92772c6a8e2c2743cd2b745efeb33\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3Pow1T1TN8internal8identityI1TE4typeE\" title=\"Pow::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Pow</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Pow1T1TN8internal8identityI1TE4typeE\" title=\"Pow::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">base</span></span>, <span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">identity</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Pow1T1TN8internal8identityI1TE4typeE\" title=\"Pow::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">exp</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A fast method for calculating exponents on doubles or integral types. Uses if constexpr to work around compiler bug in Emscripten (issue #296). </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416has_upper_letterRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416has_upper_letterRKNSt6stringE\">\n<span id=\"_CPPv316has_upper_letterRKNSt6stringE\"></span><span id=\"_CPPv216has_upper_letterRKNSt6stringE\"></span><span id=\"has_upper_letter__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4f0ab1a9abcfc969bb01c03ff2793fc2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_upper_letter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorINSt8functionIFdR3ORGEEEERK6vectorIdE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorINSt8functionIFdR3ORGEEEERK6vectorIdE6size_t6size_t\">\n<span id=\"_CPPv3I0E9EcoSelectR5WorldI3ORGERK6vectorINSt8functionIFdR3ORGEEEERK6vectorIdE6size_t6size_t\"></span><span id=\"_CPPv2I0E9EcoSelectR5WorldI3ORGERK6vectorINSt8functionIFdR3ORGEEEERK6vectorIdE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a5dfc0d976cc2238a394c1b6bea6dcada\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EcoSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorINSt8functionIFdR3ORGEEEERK6vectorIdE6size_t6size_t\" title=\"EcoSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9EcoSelectvR5WorldI3ORGERK6vectorINSt8functionIFdR3ORGEEEERK6vectorIdE6size_t6size_t\" title=\"EcoSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">extra_funs</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">pool_sizes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">t_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tourny_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#quickstart\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Quickstart<a class=\"headerlink\" href=\"#quickstart\" title=\"Link to this heading\">\uf0c1</a></h3><h4>Installation<a class=\"headerlink\" href=\"#installation\" title=\"Link to this heading\">\uf0c1</a></h4><p>The Systematics manager is part of Empirical. Because Empirical is header-only, you can include whichever parts of it you want. To just use the Systematics manager, you just need to include the Systematics.hpp header. Note that the Systematics manager depends on the result of Empirical, so you will need to download the entire library. Currently, we recommend using the mabe-systematics branch:</p>", "a[href=\"library/base/base.html#empirical-vectors-and-arrays\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Empirical vectors and arrays<a class=\"headerlink\" href=\"#empirical-vectors-and-arrays\" title=\"Link to this heading\">\uf0c1</a></h2><p>Empirical contains of intelligent versions of STL vectors and arrays\nthat will warn you if you make common errors, but otherwise behave\nidentically to the STL version. Most importantly, they will detect\nattempts to index to out-of-bounds locations and throw an error. These\nfeatures are critical for writing code that will be compiled to\nJavascript with Emscripten, because Valgrind doesn\u2019t run on Javascript.\nThey also save a lot of debugging time when writing native C++ code.</p><p>\u201cBut wait,\u201d you might say, \u201csurely all of these additional checks\nslow down your code!\u201d This is true when you compile in debug mode (the\ndefault). However, when you compile with the -DNDEBUG flag, these\nobjects are directly replaced with their STL equivalent, removing any\nslowdown. That way, you can get all the debugging benefits while you\u2019re\nwriting your program, but all the speed benefits when you\u2019re actually\nusing it.</p>", "a[href=\"library/text/api/TextEncoding.html#_CPPv4I0DpE15MakeEncodedText4TextDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE15MakeEncodedText4TextDpRR2Ts\">\n<span id=\"_CPPv3I0DpE15MakeEncodedTextDpRR2Ts\"></span><span id=\"_CPPv2I0DpE15MakeEncodedTextDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ENCODING_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TextEncoding_8hpp_1a9e1bc36711c1f175ba9bd978fa0f2a4b\"></span><a class=\"reference internal\" href=\"library/text/api/Text.html#_CPPv44Text\" title=\"Text\"><span class=\"n\"><span class=\"pre\">Text</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeEncodedText</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15MakeEncodedText4TextDpRR2Ts\" title=\"MakeEncodedText::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415combine_stringsRK12string_vec_tNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415combine_stringsRK12string_vec_tNSt6stringE\">\n<span id=\"_CPPv315combine_stringsRK12string_vec_tNSt6stringE\"></span><span id=\"_CPPv215combine_stringsRK12string_vec_tNSt6stringE\"></span><span id=\"combine_strings__string_vec_tCR.ss\"></span><span class=\"target\" id=\"string__utils_8hpp_1a92aca98d188c1b7e358b7f0facb51f27\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">combine_strings</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">strings</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">spacer</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/ConceptWrapper.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ConceptWrapper.hpp<a class=\"headerlink\" href=\"#conceptwrapper-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A template wrapper that will either enforce functionality or provide default functions. </p><p>Starting in future versions of C++, a concept is a set of requirements for a class to be used in a template. This wrapper around a class is slightly more powerful than that. It can either REQUIRE or marks as OPTIONAL specific member functions, variables or types for a wrapped class. REQUIRE-d members must be available in the internal class. OPTIONAL members are giving a default that will be used for classes where that member is missing.</p>", "a[href=\"library/evolve/api/NK.html#_CPPv411NKLandscape\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411NKLandscape\">\n<span id=\"_CPPv311NKLandscape\"></span><span id=\"_CPPv211NKLandscape\"></span><span id=\"NKLandscape\"></span><span class=\"target\" id=\"classNKLandscape\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NKLandscape</span></span></span><br/></dt><dd><p>An NK Landscape is a popular tool for studying theoretical questions about evolutionary dynamics. It is a randomly generated fitness landscape on which bitstrings can evolve. NK Landscapes have two parameters: N (the length of the bitstrings) and K (epistasis). Since you have control over the amount of epistasis, NK Landscapes are often called \u201ctunably rugged\u201d - a useful feature, since the ruggedness of the fitness landscape is thought to be important to many evolutionary dynamics. For each possible value that a site and its K neighbors to the right can have, a random fitness contribution is chosen. These contributions are summed across the bitstring. So when K = 0, each site has a single optimal value, resulting in a single smooth fitness peak.</p><p>For more information, see Kauffman and Levin, 1987 (Towards a general theory of adaptive walks on rugged landscapes).</p><p>This object handles generating and maintaining an NK fitness landscape. Note: Overly large Ns and Ks currently trigger a seg-fault, caused by trying to build a table that is larger than will fit in memory. If you are using small values for N and K, you can get better performance by using an NKLandscapeConst instead. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv413RoundedDivideii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413RoundedDivideii\">\n<span id=\"_CPPv313RoundedDivideii\"></span><span id=\"_CPPv213RoundedDivideii\"></span><span id=\"RoundedDivide__i.i\"></span><span class=\"target\" id=\"math_8hpp_1a3d0e0b2257def22b8eb288621fda7ad6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RoundedDivide</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dividend</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">divisor</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Default integer division is truncated, not rounded. Round the division result instead of truncating it. Rounding ties (i.e., result % divisor == 0.5) are rounded up. </p></dd>", "a[href=\"library/control/api/Action.html#_CPPv4IDpE6ActionIFvDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE6ActionIFvDp4ARGSEE\">\n<span id=\"_CPPv3IDpE6ActionIFvDp4ARGSEE\"></span><span id=\"_CPPv2IDpE6ActionIFvDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAction_3_01void_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Action</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE6ActionIFvDp4ARGSEE\" title=\"Action&lt;void(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE10ActionSize\" title=\"ActionSize\"><span class=\"n\"><span class=\"pre\">ActionSize</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">sizeof</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE6ActionIFvDp4ARGSEE\" title=\"Action&lt;void(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>This Action class specialization takes a function with a void return type and builds it off of the action base classes. </p></dd>", "a[href=\"library/tools/tools.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Other Tools<a class=\"headerlink\" href=\"#other-tools\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/tuple_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">tuple_utils.hpp<a class=\"headerlink\" href=\"#tuple-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions to simplify the use of std::tuple Status: RELEASE. </p>", "a[href=\"library/functional/api/flex_function.html#_CPPv4I0DpE13flex_functionIF1RDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE13flex_functionIF1RDp4ARGSEE\">\n<span id=\"_CPPv3I0DpE13flex_functionIF1RDp4ARGSEE\"></span><span id=\"_CPPv2I0DpE13flex_functionIF1RDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classflex__function_3_01R_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flex_function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13flex_functionIF1RDp4ARGSEE\" title=\"flex_function&lt;R(ARGS...)&gt;::R\"><span class=\"n\"><span class=\"pre\">R</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE13flex_functionIF1RDp4ARGSEE\" title=\"flex_function&lt;R(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A functon class that is almost identical to std::function, but is provided with default values for all parameters so that it can be called with fewer arguments, as needed. </p></dd>", "a[href=\"library/matching/api/matchbin_regulators.html#_CPPv415LegacyRegulator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415LegacyRegulator\">\n<span id=\"_CPPv315LegacyRegulator\"></span><span id=\"_CPPv215LegacyRegulator\"></span><span id=\"LegacyRegulator\"></span><span class=\"target\" id=\"structLegacyRegulator\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LegacyRegulator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E13RegulatorBase\" title=\"RegulatorBase\"><span class=\"n\"><span class=\"pre\">RegulatorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Don\u2019t use this regulator. It\u2019s here so tests don\u2019t break. </p></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E11EliteSelectvR5WorldI3ORGE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11EliteSelectvR5WorldI3ORGE6size_t6size_t\">\n<span id=\"_CPPv3I0E11EliteSelectR5WorldI3ORGE6size_t6size_t\"></span><span id=\"_CPPv2I0E11EliteSelectR5WorldI3ORGE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a82bd5f0f1d51af6ea4b5f041b5ef2fbc\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EliteSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11EliteSelectvR5WorldI3ORGE6size_t6size_t\" title=\"EliteSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">e_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">copy_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==ELITE== Selection picks a set of the most fit individuals from the population to move to the next generation. Find top e_count individuals and make copy_count copies of each. </p></dd>", "a[href=\"library/bits/bits.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bits<a class=\"headerlink\" href=\"#bits\" title=\"Link to this heading\">\uf0c1</a></h1><p>Stuff about bits</p>", "a[href=\"library/meta/api/meta.html#_CPPv4I00E18AdaptTemplate_Arg1\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E18AdaptTemplate_Arg1\">\n<span id=\"_CPPv3I00E18AdaptTemplate_Arg1\"></span><span id=\"_CPPv2I00E18AdaptTemplate_Arg1\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1ab6f02150e4b905005216bc0d2f6ba0e0\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AdaptTemplate_Arg1</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">AdaptTemplateHelper_Arg1</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E18AdaptTemplate_Arg1\" title=\"AdaptTemplate_Arg1::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E18AdaptTemplate_Arg1\" title=\"AdaptTemplate_Arg1::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/valsort_map.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">valsort_map.hpp<a class=\"headerlink\" href=\"#valsort-map-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a map that is sorted by value, not key. </p><p>valsort_map is a limited implementation of map that also keeps track of the values set, in order, as you go. This is accomplished by keeping a second data structure, a sorted set, of all of the values maintained in the map.</p>", "a[href=\"library/base/base.html#empirical-asserts\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Empirical asserts<a class=\"headerlink\" href=\"#empirical-asserts\" title=\"Link to this heading\">\uf0c1</a></h2><p>These asserts function similarly to normal asserts, with a few important\nadditional features:</p>", "a[href=\"library/base/api/assert_warning.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">assert_warning.hpp<a class=\"headerlink\" href=\"#assert-warning-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A non-terminating replacement for standard library asserts. </p><p>A supplement for the system-level assert.h, called \u201cemp_assert_warning\u201d Added functionality:<ul class=\"simple\">\n<li><p>If compiled with Emscripten, will provide pop-up alerts in a web browser.</p></li>\n<li><p>emp_assert_warning can take additional arguments. If the assert is triggered, those extra arguments will be evaluated and printed.</p></li>\n<li><p>if NDEBUG -or- EMP_NDEBUG is defined, the expression in emp_assert_warning() is not evaluated.</p></li>\n<li><p>emp_assert_warning() records failures, but does not abort.</p></li>\n</ul>\n</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv410has_letterRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410has_letterRKNSt6stringE\">\n<span id=\"_CPPv310has_letterRKNSt6stringE\"></span><span id=\"_CPPv210has_letterRKNSt6stringE\"></span><span id=\"has_letter__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a719163a5942df88eba076b198c889185\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_letter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/errors.html#_CPPv4IDpE14LibraryWarningvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE14LibraryWarningvDpRR2Ts\">\n<span id=\"_CPPv3IDpE14LibraryWarningDpRR2Ts\"></span><span id=\"_CPPv2IDpE14LibraryWarningDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1ac15add070021ddaa4d40feca493ac8de\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LibraryWarning</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE14LibraryWarningvDpRR2Ts\" title=\"LibraryWarning::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Library user has made an error in how they are using the library. </p></dd>", "a[href=\"library/evolve/api/OEE.html#_CPPv4I0E7SeenSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7SeenSet\">\n<span id=\"_CPPv3I0E7SeenSet\"></span><span id=\"_CPPv2I0E7SeenSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SKEL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSeenSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SeenSet</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E8ptr_pairI1TK1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8ptr_pairI1TK1TE\">\n<span id=\"_CPPv3I0E8ptr_pairI1TK1TE\"></span><span id=\"_CPPv2I0E8ptr_pairI1TK1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structptr__pair_3_01T_00_01const_01T_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ptr_pair</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E8ptr_pairI1TK1TE\" title=\"ptr_pair&lt;T, const T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8ptr_pairI1TK1TE\" title=\"ptr_pair&lt;T, const T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48ANSI_Redv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ANSI_Redv\">\n<span id=\"_CPPv38ANSI_Redv\"></span><span id=\"_CPPv28ANSI_Redv\"></span><span id=\"ANSI_Red\"></span><span class=\"target\" id=\"string__utils_8hpp_1a92e19808453e81f031be115a540b4d6f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Red</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/TypeID.html#_CPPv4I0E9GetTypeID6TypeIDv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9GetTypeID6TypeIDv\">\n<span id=\"_CPPv3I0E9GetTypeIDv\"></span><span id=\"_CPPv2I0E9GetTypeIDv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"TypeID_8hpp_1a3017b5e727a28628c6f20af3ba6154c7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46TypeID\" title=\"TypeID\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetTypeID</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Retrieve the correct TypeID for a given type. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417ANSI_BrightYellowv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417ANSI_BrightYellowv\">\n<span id=\"_CPPv317ANSI_BrightYellowv\"></span><span id=\"_CPPv217ANSI_BrightYellowv\"></span><span id=\"ANSI_BrightYellow\"></span><span class=\"target\" id=\"string__utils_8hpp_1a26968553b0cb8441f5e841a26affa74b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightYellow</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417ANSI_BrightBlueBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417ANSI_BrightBlueBGv\">\n<span id=\"_CPPv317ANSI_BrightBlueBGv\"></span><span id=\"_CPPv217ANSI_BrightBlueBGv\"></span><span id=\"ANSI_BrightBlueBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1acaac624d401d5c1b9e910ca51b6ceb18\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightBlueBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0_6size_tE14HarmonicDimMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE14HarmonicDimMod\">\n<span id=\"_CPPv3I0_6size_tE14HarmonicDimMod\"></span><span id=\"_CPPv2I0_6size_tE14HarmonicDimMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Dim</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHarmonicDimMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HarmonicDimMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE14HarmonicDimMod\" title=\"HarmonicDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">query_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE14HarmonicDimMod\" title=\"HarmonicDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE14HarmonicDimMod\" title=\"HarmonicDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tag_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE14HarmonicDimMod\" title=\"HarmonicDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/ValueBox.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ValueBox.hpp<a class=\"headerlink\" href=\"#valuebox-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>UI sub-component for ConfigPanel and ReadoutPanel. </p>", "a[href=\"library/data/api/DataMap.html#_CPPv47DataMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47DataMap\">\n<span id=\"_CPPv37DataMap\"></span><span id=\"_CPPv27DataMap\"></span><span id=\"DataMap\"></span><span class=\"target\" id=\"classDataMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataMap</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\">\n<span id=\"_CPPv3I0E4MeanR1C\"></span><span id=\"_CPPv2I0E4MeanR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1aaddf75b2570b9b76bcc1c2f8b1ae7cb2\"></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\" title=\"Mean::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Mean</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E4Mean12sfinae_decoyIdN1C10value_typeEER1C\" title=\"Mean::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the mean of the values in a container If values are pointers, they will be automatically de-referenced Values must be numeric. </p></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I_Dp6size_t0DpE4BindDa5FUN_TDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_Dp6size_t0DpE4BindDa5FUN_TDpRR2Ts\">\n<span id=\"_CPPv3I_Dp6size_t0DpE4Bind5FUN_TDpRR2Ts\"></span><span id=\"_CPPv2I_Dp6size_t0DpE4Bind5FUN_TDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IDs</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1a46cc1788b8e313022a95325b834ccabd\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bind</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I_Dp6size_t0DpE4BindDa5FUN_TDpRR2Ts\" title=\"Bind::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I_Dp6size_t0DpE4BindDa5FUN_TDpRR2Ts\" title=\"Bind::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bound</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Lock in a series of specified arguments to a function. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv43Moddd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43Moddd\">\n<span id=\"_CPPv33Moddd\"></span><span id=\"_CPPv23Moddd\"></span><span id=\"Mod__double.double\"></span><span class=\"target\" id=\"math_8hpp_1ac6244b311aea73c4953b3718cfe3af27\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Mod</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_val</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mod_val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Regular Mod doesn\u2019t work on doubles. Build one that does! </p></dd>", "a[href=\"library/tools/api/StaticString.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">StaticString.hpp<a class=\"headerlink\" href=\"#staticstring-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>String substitute with a fixed max character count and always in place. </p><p>\nA fixed number of chars are reserved for the string; errors will trigger for longer attempts. The last allocated byte stores the number of unused positions in the string; this naturally becomes zero (the final character in a string) when all positions are used. </p>", "a[href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t00E16EventDrivenGP_AW\">\n<span id=\"_CPPv3I_6size_t00E16EventDrivenGP_AW\"></span><span id=\"_CPPv2I_6size_t00E16EventDrivenGP_AW\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AFFINITY_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/MatchBin.html#_CPPv4I0000E8MatchBin\" title=\"MatchBin\"><span class=\"n\"><span class=\"pre\">MatchBin</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric\"><span class=\"n\"><span class=\"pre\">HammingMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW::AFFINITY_WIDTH\"><span class=\"n\"><span class=\"pre\">AFFINITY_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0_6size_tE14RankedSelector\" title=\"RankedSelector\"><span class=\"n\"><span class=\"pre\">RankedSelector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E32MultiplicativeCountdownRegulator\" title=\"MultiplicativeCountdownRegulator\"><span class=\"n\"><span class=\"pre\">MultiplicativeCountdownRegulator</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classEventDrivenGP__AW\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></span><br/></dt><dd><p>A linear GP (inspired by AvidaGP) virtual hardware CPU that supports an event-driven programming paradigm. </p><p>\nThe EventDrivenGP virtual hardware runs programs where each program is a set of named functions. Function names are mutable bit strings, or affinities, and each function consists of a sequence of instructions. Functions are called by name, and can be called from within the hardware (via Call instructions) or from outside the hardware (via Events).</p><p>The EventDrivenGP virtual hardware CPU is capable of multi-core/parallel processing. This hardware maintains a (bounded) set of cores. Each core maintains its own program call stack that stores information about the active functions on that core. Cores execute in simulated parallel. For every single CPU cycle (see SingleProcess function) given to the virtual hardware, each core is given the opportunity to advance by a single cycle.</p><p>When functions are called from within the hardware (via Call instructions), a new call state is pushed onto the program call stack on the core from which the function was called. No new core is spawned (unless using a non-standard Call instruction). When functions are called from outside the hardware (via Events), if there is an available inactive core, an inactive core will be made active with the called function.</p><p>Affinity matching/binding is used to determine which functions should be called by events or by Call instructions. The hardware looks at the event/instruction\u2019s associated affinity and finds the best match (using a simple matching coefficient) among function affinities in the hardware\u2019s program. The best match must be better than a given minimum threshold (min_bind_thresh) for that function to be called. If there are not functions that meet the minimum threshold, no function is called. If two or more functions are tied for best match and are above the minimum threshold, one is selected randomly to be called; otherwise, if there is no tie, the best matching function is called.</p><p>Terminology:<ul class=\"simple\">\n<li><p>Programs<ul>\n<li><p>The EventDrivenGP virtual hardware runs programs of type EventDrivenGP::Program. These programs are a set of named functions.</p></li>\n</ul>\n</p></li>\n<li><p>Functions<ul>\n<li><p>Functions in EventDrivenGP programs are named and consist of a sequence of instructions. Function names, or affinities, are bit strings whose length are defined by AFFINITY_WIDTH.</p></li>\n</ul>\n</p></li>\n<li><p>Instructions<ul>\n<li><p>EventDrivenGP hardware instructions are managed by an instruction library (InstLib.h).</p></li>\n<li><p>Instructions have IDs, affinities, arguments, and properties.</p></li>\n</ul>\n</p></li>\n<li><p>Affinity<ul>\n<li><p>An affinity is a sequence of bits whose length is determined by AFFINITY_WIDTH (by default, 8).</p></li>\n</ul>\n</p></li>\n<li><p>Core<ul>\n<li><p>A core is a single program call stack where the call stack stores information about the active functions running on the core.</p></li>\n</ul>\n</p></li>\n<li><p>Call State<ul>\n<li><p>Local state information relative to a particular function call. Each call state consists of: Local memory, Input memory, Output memory, a Code Block Stack, a function pointer, and an instruction pointer.</p></li>\n</ul>\n</p></li>\n<li><p>Events<ul>\n<li><p>Events are defined and managed through the an event library (EventLib.h). Events are flexible packages of information that can be used to interact with EventDrivenGP hardware. Events are minimally defined by default as they are heavily dependent on the context of where/how the EventDrivenGP hardware is being used.</p></li>\n<li><p>Events have an associated ID (managed by the event library), an affinity, a memory map, and a set of properties (string set).</p></li>\n<li><p>When an event is triggered the set of dispatcher functions that are registered to that particular event\u2019s type (managed by the event library) are called. Events events are often triggered by instructions or by external processes. For example, the default SendMsg instruction triggers a Message type event which causes all of the Message event dispatchers registered to the hardware\u2019s event library to be called.</p></li>\n<li><p>Each event type has a registered event handler that gets called to handle a dispatched event. </p></li>\n</ul>\n</p></li>\n</ul>\n</p></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv412hash_combineNSt6size_tENSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412hash_combineNSt6size_tENSt6size_tE\">\n<span id=\"_CPPv312hash_combineNSt6size_tENSt6size_tE\"></span><span id=\"_CPPv212hash_combineNSt6size_tENSt6size_tE\"></span><span id=\"hash_combine__std::s.std::sCE\"></span><span class=\"target\" id=\"hash__utils_8hpp_1a6c07387b3e74d926e8db8493a05645be\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash2</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Boost\u2019s implementation of a simple hash-combining function. Taken from <a class=\"reference external\" href=\"https://www.boost.org/doc/libs/1_37_0/doc/html/hash/reference.html#boost.hash_combine\">https://www.boost.org/doc/libs/1_37_0/doc/html/hash/reference.html#boost.hash_combine</a> </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413has_letter_atRKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413has_letter_atRKNSt6stringE6size_t\">\n<span id=\"_CPPv313has_letter_atRKNSt6stringE6size_t\"></span><span id=\"_CPPv213has_letter_atRKNSt6stringE6size_t\"></span><span id=\"has_letter_at__ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a351f9bc79e57c846b631ba6508e75655\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_letter_at</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/bits/api/BitSet.html#_CPPv43old\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43old\">\n<span id=\"_CPPv33old\"></span><span id=\"_CPPv23old\"></span><span id=\"old\"></span><span class=\"target\" id=\"namespaceold\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">old</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412ANSI_NoBlinkv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ANSI_NoBlinkv\">\n<span id=\"_CPPv312ANSI_NoBlinkv\"></span><span id=\"_CPPv212ANSI_NoBlinkv\"></span><span id=\"ANSI_NoBlink\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2fad478931fffd39b031478a18e93fa9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_NoBlink</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00I00E0E17variadic_contains\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00I00E0E17variadic_contains\">\n<span id=\"_CPPv3I00I00E0E17variadic_contains\"></span><span id=\"_CPPv2I00I00E0E17variadic_contains\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Needle</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_same</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__contains\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_contains</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE14uint_bit_countIXL16EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE14uint_bit_countIXL16EEE\">\n<span id=\"_CPPv3IE14uint_bit_countIXL16EEE\"></span><span id=\"_CPPv2IE14uint_bit_countIX16EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structuint__bit__count_3_0116_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uint_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">16</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"dev/getting-started.html#claiming-an-issue-and-starting-to-develop\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id4\" role=\"doc-backlink\">Claiming an issue and starting to develop</a><a class=\"headerlink\" href=\"#claiming-an-issue-and-starting-to-develop\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\">\n<span id=\"_CPPv3I0E16SetDiverseElitesR5WorldI3ORGE8TraitSetI3ORGE6size_t\"></span><span id=\"_CPPv2I0E16SetDiverseElitesR5WorldI3ORGE8TraitSetI3ORGE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a2506f89afe072c87b5581555f85d1fb3\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDiverseElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\" title=\"SetDiverseElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"library/data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16SetDiverseElitesvR5WorldI3ORGE8TraitSetI3ORGE6size_t\" title=\"SetDiverseElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">traits</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">world_size</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This first version will setup a Diverse-Elites world and specify traits to use. </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv42PI\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv42PI\">\n<span id=\"_CPPv32PI\"></span><span id=\"_CPPv22PI\"></span><span id=\"PI__doubleC\"></span><span class=\"target\" id=\"constants_8hpp_1a840013a3a22692ba2273927914021728\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PI</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3.14159265358979</span></span><br/></dt><dd><p>pi </p></dd>", "a[href=\"library/io/api/File.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">File.hpp<a class=\"headerlink\" href=\"#file-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>The File object maintains a simple, in-memory file. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>We need to modify this code so that File can work with Emscripten.</p>\n</dd></dl>\n</p>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGE8TraitSetI3ORGE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a8a1e223e756d35d91736d487f8116286\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"library/data/api/Trait.html#_CPPv4I0E8TraitSet\" title=\"TraitSet\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE8TraitSetI3ORGE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">traits</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a MAP-Elites world, given the provided set of traits. Requires world to already have a size; that size is respected when deciding trait bins. </p></dd>", "a[href=\"library/math/api/RangeSet.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">RangeSet.hpp<a class=\"headerlink\" href=\"#rangeset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A collection of ranges that can be operated on collectively. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv49ANSI_Boldv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49ANSI_Boldv\">\n<span id=\"_CPPv39ANSI_Boldv\"></span><span id=\"_CPPv29ANSI_Boldv\"></span><span id=\"ANSI_Bold\"></span><span class=\"target\" id=\"string__utils_8hpp_1af9d9e1e4430bb3f0701d3f8398607037\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Bold</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE12StreakMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE12StreakMetric\">\n<span id=\"_CPPv3I_6size_tE12StreakMetric\"></span><span id=\"_CPPv2I_6size_tE12StreakMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"matchbin__metrics_8hpp_1a5ada21fcce7072dddda988c894f40c97\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StreakMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE22ApproxDualStreakMetric\" title=\"ApproxDualStreakMetric\"><span class=\"n\"><span class=\"pre\">ApproxDualStreakMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE12StreakMetric\" title=\"StreakMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Matches based on longest streaks of equal and unequal bits in two bitsets. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\">\n<span id=\"_CPPv3I0E13StandardErrorR1C\"></span><span id=\"_CPPv2I0E13StandardErrorR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a9f96ca17fabc416fa2d74dc48609a29b\"></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E12sfinae_decoy\" title=\"sfinae_decoy\"><span class=\"n\"><span class=\"pre\">sfinae_decoy</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardError::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StandardError</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E13StandardError12sfinae_decoyIdN1C10value_typeEER1C\" title=\"StandardError::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the standard error of the values in a container If values are pointers, they will be automatically de-referenced Values must be numeric. </p></dd>", "a[href=\"library/config/api/config.html#_CPPv4NSt12placeholdersE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4NSt12placeholdersE\">\n<span id=\"_CPPv3NSt12placeholdersE\"></span><span id=\"_CPPv2NSt12placeholdersE\"></span><span id=\"std::placeholders\"></span><span class=\"target\" id=\"namespacestd_1_1placeholders\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">placeholders</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415string_pop_lineRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415string_pop_lineRNSt6stringE\">\n<span id=\"_CPPv315string_pop_lineRNSt6stringE\"></span><span id=\"_CPPv215string_pop_lineRNSt6stringE\"></span><span id=\"string_pop_line__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8d1700f1a858a287a585a138343f3efa\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_pop_line</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove a prefix of a string, up to the first newline, and return it. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv411MakeEscapedc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeEscapedc\">\n<span id=\"_CPPv311MakeEscapedc\"></span><span id=\"_CPPv211MakeEscapedc\"></span><span id=\"MakeEscaped__c\"></span><span class=\"target\" id=\"String_8hpp_1a4684555b750708219c80b00908fe30a9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeEscaped</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">c</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I00E16ChangeReturnTypeDa5FUN_T11CONVERTER_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E16ChangeReturnTypeDa5FUN_T11CONVERTER_T\">\n<span id=\"_CPPv3I00E16ChangeReturnType5FUN_T11CONVERTER_T\"></span><span id=\"_CPPv2I00E16ChangeReturnType5FUN_T11CONVERTER_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONVERTER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1a2c5e6f36b90efc12009d09a14b265176\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ChangeReturnType</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E16ChangeReturnTypeDa5FUN_T11CONVERTER_T\" title=\"ChangeReturnType::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E16ChangeReturnTypeDa5FUN_T11CONVERTER_T\" title=\"ChangeReturnType::CONVERTER_T\"><span class=\"n\"><span class=\"pre\">CONVERTER_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">convert_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Change a function\u2019s return type using a converter function. </p></dd>", "a[href=\"library/math/api/stats.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">stats.hpp<a class=\"headerlink\" href=\"#stats-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for calculating various statistics about an ensemble. </p>", "a[href=\"library/math/api/stats.html#_CPPv4I0E14ShannonEntropydR1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14ShannonEntropydR1C\">\n<span id=\"_CPPv3I0E14ShannonEntropyR1C\"></span><span id=\"_CPPv2I0E14ShannonEntropyR1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a2a878401a96b1cb97804c5f5d99d0d40\"></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ShannonEntropy</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E14ShannonEntropydR1C\" title=\"ShannonEntropy::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate Shannon Entropy of the members of the container passed. </p></dd>", "a[href=\"library/tools/api/StaticString.html#_CPPv411ShortString\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ShortString\">\n<span id=\"_CPPv311ShortString\"></span><span id=\"_CPPv211ShortString\"></span><span class=\"target\" id=\"StaticString_8hpp_1ad40e8d35e3b11c572d3fed5dbdfa1257\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ShortString</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E12StaticString\" title=\"StaticString\"><span class=\"n\"><span class=\"pre\">StaticString</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">31</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/OrgInterface.html#_CPPv412OrgInterface\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412OrgInterface\">\n<span id=\"_CPPv312OrgInterface\"></span><span id=\"_CPPv212OrgInterface\"></span><span id=\"OrgInterface\"></span><span class=\"target\" id=\"classOrgInterface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OrgInterface</span></span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E10CopyMemoryv3PtrI1TE3PtrI1TEK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10CopyMemoryv3PtrI1TE3PtrI1TEK6size_t\">\n<span id=\"_CPPv3I0E10CopyMemory3PtrI1TE3PtrI1TEK6size_t\"></span><span id=\"_CPPv2I0E10CopyMemory3PtrI1TE3PtrI1TEK6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a2659ab8c248faabaa8de44e406340f85\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CopyMemory</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10CopyMemoryv3PtrI1TE3PtrI1TEK6size_t\" title=\"CopyMemory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">from_ptr</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10CopyMemoryv3PtrI1TE3PtrI1TEK6size_t\" title=\"CopyMemory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">to_ptr</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_items</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy an array from the provided memory. </p></dd>", "a[href=\"library/web/api/js_utils.html#_CPPv4I00E24pass_array_to_javascriptv1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E24pass_array_to_javascriptv1C\">\n<span id=\"_CPPv3I00E24pass_array_to_javascript1C\"></span><span id=\"_CPPv2I00E24pass_array_to_javascript1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E24pass_array_to_javascriptv1C\" title=\"pass_array_to_javascript::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"js__utils_8hpp_1a2e2b75ae347edddb3054621ed71236fc\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pass_array_to_javascript</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E24pass_array_to_javascriptv1C\" title=\"pass_array_to_javascript::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">values</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function can be called to pass an array, vector, or other container with contiguously stored data into Javascript. The array will be stored in emp.__incoming_array. Currently supports arrays containing all of the types defined in get_type_to_string_map, which are also all of the types that emscripten supports getting via pointer. This function also supports nested arrays, and arrays of objects created with introspective tuple structs. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv49GetExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49GetExceptRKNSt6stringE\">\n<span id=\"_CPPv39GetExceptRKNSt6stringE\"></span><span id=\"_CPPv29GetExceptRKNSt6stringE\"></span><span id=\"GetExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1a8490b33df130adc96ec67f18c0387c52\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the first waiting exception. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414ANSI_Underlinev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414ANSI_Underlinev\">\n<span id=\"_CPPv314ANSI_Underlinev\"></span><span id=\"_CPPv214ANSI_Underlinev\"></span><span id=\"ANSI_Underline\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3aa72d0c48c48ef1d468d0c8ffe66f4d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Underline</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/testing/testing.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Testing<a class=\"headerlink\" href=\"#testing\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/TypeID.html#_CPPv46TypeID\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46TypeID\">\n<span id=\"_CPPv36TypeID\"></span><span id=\"_CPPv26TypeID\"></span><span id=\"TypeID\"></span><span class=\"target\" id=\"structTypeID\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypeID</span></span></span><br/></dt><dd><p>Basic TypeID data structure. </p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E12intersection6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E12intersection6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a351b9191b24a9bdd75d029971842a82c\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv411MakeLiteralRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeLiteralRKNSt6stringE\">\n<span id=\"_CPPv311MakeLiteralRKNSt6stringE\"></span><span id=\"_CPPv211MakeLiteralRKNSt6stringE\"></span><span id=\"MakeLiteral__ssCR\"></span><span class=\"target\" id=\"String_8hpp_1ac6fbea80108e4eee99a25751cb53c593\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeLiteral</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a string or iterable and convert it to a C++-style literal. </p></dd>", "a[href=\"library/evolve/api/Systematics.html#_CPPv410datastruct\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410datastruct\">\n<span id=\"_CPPv310datastruct\"></span><span id=\"_CPPv210datastruct\"></span><span id=\"datastruct\"></span><span class=\"target\" id=\"namespacedatastruct\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">datastruct</span></span></span><br/></dt><dd><p>The systematics manager allows an optional second template type that can store additional data about each taxon in the phylogeny. Here are some structs containing common pieces of additional data to track. Note: You are responsible for filling these in! Adding the template just gives you a place to store your data. </p></dd>", "a[href=\"library/prefab/api/CodeBlock.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">CodeBlock.hpp<a class=\"headerlink\" href=\"#codeblock-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps a HighlightJS code block. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I_bE10url_encodeNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_bE10url_encodeNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3I_bE10url_encodeRKNSt6stringE\"></span><span id=\"_CPPv2I_bE10url_encodeRKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">encode_space</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a88856d273bceed222637887104e5ac13\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">url_encode</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns url encoding of value. See <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Percent-encoding\">https://en.wikipedia.org/wiki/Percent-encoding</a></p></dd>", "a[href=\"library/functional/functional.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/math/api/constants.html#_CPPv41E\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv41E\">\n<span id=\"_CPPv31E\"></span><span id=\"_CPPv21E\"></span><span id=\"E__doubleC\"></span><span class=\"target\" id=\"constants_8hpp_1a52c76c914d06d1353e2d38e8adf1db4d\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">E</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2.71828</span></span><br/></dt><dd><p>e </p></dd>", "a[href=\"library/evolve/api/OrgInterface.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">OrgInterface.hpp<a class=\"headerlink\" href=\"#orginterface-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>An interface between an organism and the outside world. </p>", "a[href=\"library/matching/api/MatchDepository.html#_CPPv4I0000_6size_t_6size_tE15MatchDepository\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0000_6size_t_6size_tE15MatchDepository\">\n<span id=\"_CPPv3I0000_6size_t_6size_tE15MatchDepository\"></span><span id=\"_CPPv2I0000_6size_t_6size_tE15MatchDepository\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Val</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Selector</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Regulator</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RawCacheSize</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RegulatedCacheSize</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classMatchDepository\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MatchDepository</span></span></span><br/></dt><dd></dd>", "a[href=\"library/config/api/ConfigManager.html#_CPPv4I0E13ConfigManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13ConfigManager\">\n<span id=\"_CPPv3I0E13ConfigManager\"></span><span id=\"_CPPv2I0E13ConfigManager\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MANAGED_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classConfigManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConfigManager</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv418ConfigManager_Base\" title=\"ConfigManager_Base\"><span class=\"n\"><span class=\"pre\">ConfigManager_Base</span></span></a><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0I00EDpE28variadic_remove_duplicates_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0I00EDpE28variadic_remove_duplicates_t\">\n<span id=\"_CPPv3I0I00EDpE28variadic_remove_duplicates_t\"></span><span id=\"_CPPv2I0I00EDpE28variadic_remove_duplicates_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1add3b957c4f37a0b410c3d096820c67ec\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_remove_duplicates_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0I00E0E26variadic_remove_duplicates\" title=\"variadic_remove_duplicates\"><span class=\"n\"><span class=\"pre\">variadic_remove_duplicates</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0I00EDpE28variadic_remove_duplicates_t\" title=\"variadic_remove_duplicates_t::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0I00EDpE28variadic_remove_duplicates_t\" title=\"variadic_remove_duplicates_t::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/Style.html#_CPPv45Style\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Style\">\n<span id=\"_CPPv35Style\"></span><span id=\"_CPPv25Style\"></span><span id=\"Style\"></span><span class=\"target\" id=\"classStyle\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Style</span></span></span><br/></dt><dd><p>Class to maintain a map of setting names to values that can be easily ported over to JavaScript. A companial class, Attributes, also exists. </p></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv4I0E7ShufflevR6RandomR6vectorI1TE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7ShufflevR6RandomR6vectorI1TE6size_t\">\n<span id=\"_CPPv3I0E7ShuffleR6RandomR6vectorI1TE6size_t\"></span><span id=\"_CPPv2I0E7ShuffleR6RandomR6vectorI1TE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"random__utils_8hpp_1a4b7b0bfd899fb201859834cd2b722ad6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Shuffle</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7ShufflevR6RandomR6vectorI1TE6size_t\" title=\"Shuffle::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_count</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Randomly reorder all of the elements in a vector. If max_count is provided, just make sure that the first max_count entries are randomly drawn from entire vector. </p></dd>", "a[href=\"library/math/api/Range.html#_CPPv4I_bE8IntRange5RangeIi13INCLUDE_UPPEREii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_bE8IntRange5RangeIi13INCLUDE_UPPEREii\">\n<span id=\"_CPPv3I_bE8IntRangeii\"></span><span id=\"_CPPv2I_bE8IntRangeii\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Range_8hpp_1a0d82a4a7dbefbf9c6123995bd18d3b7e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE5Range\" title=\"Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_bE8IntRange5RangeIi13INCLUDE_UPPEREii\" title=\"IntRange::INCLUDE_UPPER\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IntRange</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_l</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_u</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a new range of type int. </p></dd>", "a[href=\"library/tools/api/MemoryFactory.html#_CPPv4I0E13MemoryFactory\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13MemoryFactory\">\n<span id=\"_CPPv3I0E13MemoryFactory\"></span><span id=\"_CPPv2I0E13MemoryFactory\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"MemoryFactory_8hpp_1a875f3e22fd979034b2a7b987015cb6f2\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MemoryFactory</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">MemFactory_impl</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13MemoryFactory\" title=\"MemoryFactory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">MemFactory_DynamicData</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13MemoryFactory\" title=\"MemoryFactory::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/OEE.html#_CPPv4I000E10OEETracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E10OEETracker\">\n<span id=\"_CPPv3I000E10OEETracker\"></span><span id=\"_CPPv2I000E10OEETracker\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SYSTEMATICS_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SKEL_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E10OEETracker\" title=\"OEETracker::SYSTEMATICS_TYPE\"><span class=\"n\"><span class=\"pre\">SYSTEMATICS_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">info_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SEEN_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7SeenSet\" title=\"SeenSet\"><span class=\"n\"><span class=\"pre\">SeenSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E10OEETracker\" title=\"OEETracker::SKEL_TYPE\"><span class=\"n\"><span class=\"pre\">SKEL_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classOEETracker\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OEETracker</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv423CompressibleBloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv423CompressibleBloomFilter\">\n<span id=\"_CPPv323CompressibleBloomFilter\"></span><span id=\"_CPPv223CompressibleBloomFilter\"></span><span id=\"CompressibleBloomFilter\"></span><span class=\"target\" id=\"classCompressibleBloomFilter\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CompressibleBloomFilter</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><br/></dt><dd><p>A Bloom filter that can be compressed. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv44Draw6CanvasRK6CircleRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Draw6CanvasRK6CircleRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv34Draw6CanvasRK6CircleRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv24Draw6CanvasRK6CircleRKNSt6stringERKNSt6stringE\"></span><span id=\"Draw__Canvas.CircleCR.ssCR.ssCR\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1a622d4ac0dbebeeecf104f1c0fc81d2cd\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/geometry/api/Circle2D.html#_CPPv46Circle\" title=\"Circle\"><span class=\"n\"><span class=\"pre\">Circle</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">circle</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fill</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">line</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a Circle onto the canvas. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\">\n<span id=\"_CPPv3I0DpE6ConcatRK6vectorI1TEDpRK2Vs\"></span><span id=\"_CPPv2I0DpE6ConcatRK6vectorI1TEDpRK2Vs\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Vs</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a336d39771157f1dc92bd25d824257f45\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\" title=\"Concat::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Concat</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\" title=\"Concat::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6Concat6vectorI1TERK6vectorI1TEDpRK2Vs\" title=\"Concat::Vs\"><span class=\"n\"><span class=\"pre\">Vs</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">vs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Concatenate two or more vectors together, creating a new vector. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3MinRK1TRK1TRK1TRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3MinRK1TRK1TRK1TRK1T\">\n<span id=\"_CPPv3I0E3MinRK1TRK1TRK1T\"></span><span id=\"_CPPv2I0E3MinRK1TRK1TRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a3f2e9b17ad873a98e1d80e2371d4edbd\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MinRK1TRK1TRK1TRK1T\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Min</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MinRK1TRK1TRK1TRK1T\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MinRK1TRK1TRK1TRK1T\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3MinRK1TRK1TRK1TRK1T\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in3</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the minimum of three values. </p></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv412ValueDisplay\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ValueDisplay\">\n<span id=\"_CPPv312ValueDisplay\"></span><span id=\"_CPPv212ValueDisplay\"></span><span id=\"ValueDisplay\"></span><span class=\"target\" id=\"classValueDisplay\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValueDisplay</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48ValueBox\" title=\"ValueBox\"><span class=\"n\"><span class=\"pre\">ValueBox</span></span></a><br/></dt><dd><p>Use a ValueDisplay component to display a labeled, static value with a nice description of what this value means.</p><p>We suggest adding the \u201cdisplay_group\u201d class to the enclosing tag around multiple ValueDisplays to align labels and values along a common grid. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412ANSI_Magentav\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ANSI_Magentav\">\n<span id=\"_CPPv312ANSI_Magentav\"></span><span id=\"_CPPv212ANSI_Magentav\"></span><span id=\"ANSI_Magenta\"></span><span class=\"target\" id=\"string__utils_8hpp_1af86fc3ddb08163d9b759250abf1600ed\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Magenta</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv45sliceRKNSt11string_viewER6vectorINSt6stringEEKcK6size_tKbKbKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45sliceRKNSt11string_viewER6vectorINSt6stringEEKcK6size_tKbKbKbKb\">\n<span id=\"_CPPv35sliceRKNSt11string_viewER6vectorINSt6stringEEKcK6size_tKbKbKbKb\"></span><span id=\"_CPPv25sliceRKNSt11string_viewER6vectorINSt6stringEEKcK6size_tKbKbKbKb\"></span><span id=\"slice__std::string_viewCR.vector:ss:R.cC.sC.bC.bC.bC.bC\"></span><span class=\"target\" id=\"string__utils_8hpp_1aaacf93184acb2faebcbbcc426b5ba596\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">slice</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out_set</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'\\n'</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_split</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p><p>Cut up a string based on the provided delimiter; fill them in to the provided vector.</p>\n<p>Cut up a string based on the provided delimiter; fill them in to the provided vector.</p>\n</p></dd>", "a[href=\"library/datastructs/api/SmallVector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SmallVector.hpp<a class=\"headerlink\" href=\"#smallvector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in replacement for std::vector with optimization to handle small vector sizes without dynamic allocation. It contains some number of elements in-place, which allows it to avoid heap allocation when the actual number of elements is below that threshold. This allows normal \u201csmall\u201d cases to be fast without losing generality for large inputs. </p>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E12FindDominant3PtrIN13systematics_t7taxon_tEER13systematics_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12FindDominant3PtrIN13systematics_t7taxon_tEER13systematics_t\">\n<span id=\"_CPPv3I0E12FindDominantR13systematics_t\"></span><span id=\"_CPPv2I0E12FindDominantR13systematics_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">systematics_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a12d48d42b8ec94de67842865f1a6b285\"></span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12FindDominant3PtrIN13systematics_t7taxon_tEER13systematics_t\" title=\"FindDominant::systematics_t\"><span class=\"n\"><span class=\"pre\">systematics_t</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">taxon_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindDominant</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E12FindDominant3PtrIN13systematics_t7taxon_tEER13systematics_t\" title=\"FindDominant::systematics_t\"><span class=\"n\"><span class=\"pre\">systematics_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/polyfill/api/span.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">span.hpp<a class=\"headerlink\" href=\"#span-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Polyfill for C++20 std::span. Since deprecated. </p>", "a[href=\"library/meta/api/meta.html#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\">\n<span id=\"_CPPv3I00000DpE15BuildObjVector4R6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\"></span><span id=\"_CPPv2I00000DpE15BuildObjVector4R6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T3</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T4</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1afd4fb5fe4d8fa86ca45aee4f1d74e149\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector4</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\" title=\"BuildObjVector4::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\" title=\"BuildObjVector4::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\" title=\"BuildObjVector4::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\" title=\"BuildObjVector4::T3\"><span class=\"n\"><span class=\"pre\">T3</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg3</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\" title=\"BuildObjVector4::T4\"><span class=\"n\"><span class=\"pre\">T4</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">arg4</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00000DpE15BuildObjVector4vR6vectorI5OBJ_TER2T1R2T2R2T3R2T4DpR2Ts\" title=\"BuildObjVector4::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/js_utils.html#_CPPv415GetViewPortSizev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415GetViewPortSizev\">\n<span id=\"_CPPv315GetViewPortSizev\"></span><span id=\"_CPPv215GetViewPortSizev\"></span><span id=\"GetViewPortSize\"></span><span class=\"target\" id=\"js__utils_8hpp_1af1215c05ff61c6efd6e06b2a5ef4f822\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetViewPortSize</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Helper function that returns DOM view port size in pixels. </p></dd>", "a[href=\"library/control/control.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Control<a class=\"headerlink\" href=\"#control\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/string_utils.html#_CPPv417ANSI_BrightCyanBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417ANSI_BrightCyanBGv\">\n<span id=\"_CPPv317ANSI_BrightCyanBGv\"></span><span id=\"_CPPv217ANSI_BrightCyanBGv\"></span><span id=\"ANSI_BrightCyanBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2df182231fc7f49a53a7117242cd9c28\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightCyanBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/functional/api/AnyFunction.html#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\">\n<span id=\"_CPPv3I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\"></span><span id=\"_CPPv2I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classDerivedFunction_3_01RETURN_07PARAMS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DerivedFunction</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE15DerivedFunctionIF6RETURNDp6PARAMSEE\" title=\"DerivedFunction&lt;RETURN(PARAMS...)&gt;::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412BaseFunction\" title=\"BaseFunction\"><span class=\"n\"><span class=\"pre\">BaseFunction</span></span></a><br/></dt><dd><p>Specialized form for proper function types. </p></dd>", "a[href=\"library/hardware/api/InstLib.html#_CPPv4I00_6size_tE7InstLib\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE7InstLib\">\n<span id=\"_CPPv3I00_6size_tE7InstLib\"></span><span id=\"_CPPv2I00_6size_tE7InstLib\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HARDWARE_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_COUNT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classInstLib\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InstLib</span></span></span><br/></dt><dd><p>InstLib maintains a set of instructions for use in virtual hardware. </p></dd>", "a[href=\"library/testing/api/unit_tests.html#_CPPv417SetupUnitTestArgs6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417SetupUnitTestArgs6vectorINSt6stringEE\">\n<span id=\"_CPPv317SetupUnitTestArgs6vectorINSt6stringEE\"></span><span id=\"_CPPv217SetupUnitTestArgs6vectorINSt6stringEE\"></span><span id=\"SetupUnitTestArgs__vector:ss:\"></span><span class=\"target\" id=\"unit__tests_8hpp_1a8f0af368506942284ec0b62edbcc715c\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetupUnitTestArgs</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/CanvasAction.html#_CPPv411CanvasImage\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411CanvasImage\">\n<span id=\"_CPPv311CanvasImage\"></span><span id=\"_CPPv211CanvasImage\"></span><span id=\"CanvasImage\"></span><span class=\"target\" id=\"classCanvasImage\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasImage</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412CanvasAction\" title=\"CanvasAction\"><span class=\"n\"><span class=\"pre\">CanvasAction</span></span></a><br/></dt><dd><p>Change the default font to be used. </p></dd>", "a[href=\"library/web/api/Attributes.html#_CPPv410Attributes\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410Attributes\">\n<span id=\"_CPPv310Attributes\"></span><span id=\"_CPPv210Attributes\"></span><span id=\"Attributes\"></span><span class=\"target\" id=\"classAttributes\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Attributes</span></span></span><br/></dt><dd><p>Maintains a map of attribute names to values for use in JavaScript Closely related to Style.h, which is for CSS-values. </p></dd>", "a[href=\"library/in_progress/in_progress.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/string_utils.html#_CPPv415is_literal_charRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415is_literal_charRKNSt6stringE\">\n<span id=\"_CPPv315is_literal_charRKNSt6stringE\"></span><span id=\"_CPPv215is_literal_charRKNSt6stringE\"></span><span id=\"is_literal_char__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a48480a55538449205618aefdd11521d3\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_literal_char</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an input string is properly formatted as a literal character. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E12from_strings6vectorI1TERK6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12from_strings6vectorI1TERK6vectorINSt6stringEE\">\n<span id=\"_CPPv3I0E12from_stringsRK6vectorINSt6stringEE\"></span><span id=\"_CPPv2I0E12from_stringsRK6vectorINSt6stringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a1f406c61967a23b53ae0915df1051357\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12from_strings6vectorI1TERK6vectorINSt6stringEE\" title=\"from_strings::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">from_strings</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">string_v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>The from_strings() function takes a vector of strings and converts them into a vector of the appropriate type. </p></dd>", "a[href=\"dev/contribution-guidelines-and-review.html#general-standards\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">General Standards<a class=\"headerlink\" href=\"#general-standards\" title=\"Link to this heading\">\uf0c1</a></h2><p>All plain-text files should have line widths of 100 characters or less\nunless that is unsupported for the particular file format or creates a\nmajor loss in readability.</p><p>All contributions should have their spelling checked before being\ncommitted to the codebase.  For example, the VSCode plug-in\n\u201cCode Spell Checker\u201d is a good choice.</p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E11HeapExtract1TR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11HeapExtract1TR6vectorI1TE\">\n<span id=\"_CPPv3I0E11HeapExtractR6vectorI1TE\"></span><span id=\"_CPPv2I0E11HeapExtractR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a0d0aec4bcc4cd6ccedc1113234646a5e\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HeapExtract1TR6vectorI1TE\" title=\"HeapExtract::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HeapExtract</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HeapExtract1TR6vectorI1TE\" title=\"HeapExtract::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Extract maximum element from a heap. </p></dd>", "a[href=\"library/datastructs/api/IndexSet.html#_CPPv410IndexRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410IndexRange\">\n<span id=\"_CPPv310IndexRange\"></span><span id=\"_CPPv210IndexRange\"></span><span id=\"IndexRange\"></span><span class=\"target\" id=\"classIndexRange\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRange</span></span></span><br/></dt><dd><p>Index range is a simple pair of values indicating the start and end of a series of indices. </p></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv412hash_combine3PtrIKNSt6size_tEE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412hash_combine3PtrIKNSt6size_tEE6size_t\">\n<span id=\"_CPPv312hash_combine3PtrIKNSt6size_tEE6size_t\"></span><span id=\"_CPPv212hash_combine3PtrIKNSt6size_tEE6size_t\"></span><span id=\"hash_combine__Ptr:std::sC:.s\"></span><span class=\"target\" id=\"hash__utils_8hpp_1aca34322ae5a1a500af546ffe69f47907\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hashes</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_hashes</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Allow hash_combine to take a series of size_t\u2019s to merge into a single hash. </p></dd>", "a[href=\"library/web/api/Attributes.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Attributes.hpp<a class=\"headerlink\" href=\"#attributes-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>An Attributes class for tracking non-style features about HTML objects. </p>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv4IDpE11CombineHashNSt6size_tEDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE11CombineHashNSt6size_tEDpRK2Ts\">\n<span id=\"_CPPv3IDpE11CombineHashDpRK2Ts\"></span><span id=\"_CPPv2IDpE11CombineHashDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"hash__utils_8hpp_1a3dea1908685ba35d5810639ed0f763cb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CombineHash</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE11CombineHashNSt6size_tEDpRK2Ts\" title=\"CombineHash::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Alias hash_combine() to CombineHash()</p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E9ClonePtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9ClonePtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\">\n<span id=\"_CPPv3I0E9ClonePtrsRK6vectorI3PtrI1TEE\"></span><span id=\"_CPPv2I0E9ClonePtrsRK6vectorI3PtrI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a09ef28c752cce3c5e5e5d7389ead4fa2\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9ClonePtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\" title=\"ClonePtrs::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ClonePtrs</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9ClonePtrs6vectorI3PtrI1TEERK6vectorI3PtrI1TEE\" title=\"ClonePtrs::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Copy a vector of objects pointed to by using their Clone() member function; return vector. </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I0E11MapToStringNSt6stringERK5MAP_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11MapToStringNSt6stringERK5MAP_T\">\n<span id=\"_CPPv3I0E11MapToStringRK5MAP_T\"></span><span id=\"_CPPv2I0E11MapToStringRK5MAP_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1ae0b4d089847db8383c636cf81cfc8128\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MapToString</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11MapToStringNSt6stringERK5MAP_T\" title=\"MapToString::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E14LexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14LexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\">\n<span id=\"_CPPv3I0E14LexicaseSelectR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\"></span><span id=\"_CPPv2I0E14LexicaseSelectR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a1126fc827c6efcd6a8fa842049d36efd\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LexicaseSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E14LexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\" title=\"LexicaseSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E14LexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\" title=\"LexicaseSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fit_funs</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">repro_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_funs</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==LEXICASE== Selection runs through multiple fitness functions in a random order for EACH offspring produced. </p></dd>", "a[href=\"library/control/api/Action.html#_CPPv4IDpE6Action\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE6Action\">\n<span id=\"_CPPv3IDpE6Action\"></span><span id=\"_CPPv2IDpE6Action\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classAction\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Action</span></span></span><br/></dt><dd><p>The declaration for Action has any template types; the only defined specializations require a function type to be specified (with void and non-void return type variants.) </p></dd>", "a[href=\"library/evolve/api/World.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World.hpp<a class=\"headerlink\" href=\"#world-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Definition of a base class for a World template for use in evolutionary algorithms. </p><p>A definition of the World template, linking in specialized file handling, iterators, and selection techniques for evolutionary computation applications.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv413ANSI_YellowBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413ANSI_YellowBGv\">\n<span id=\"_CPPv313ANSI_YellowBGv\"></span><span id=\"_CPPv213ANSI_YellowBGv\"></span><span id=\"ANSI_YellowBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a97949542faeb4a6283b5fb1d3de935f0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_YellowBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/polyfill/polyfill.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/string_utils.html#_CPPv411ANSI_Yellowv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ANSI_Yellowv\">\n<span id=\"_CPPv311ANSI_Yellowv\"></span><span id=\"_CPPv211ANSI_Yellowv\"></span><span id=\"ANSI_Yellow\"></span><span class=\"target\" id=\"string__utils_8hpp_1a46cc2815442962bbde6a8fb07f394ed4\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Yellow</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E21CountUniquePhenotypesi3PtrI7taxon_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21CountUniquePhenotypesi3PtrI7taxon_tE\">\n<span id=\"_CPPv3I0E21CountUniquePhenotypes3PtrI7taxon_tE\"></span><span id=\"_CPPv2I0E21CountUniquePhenotypes3PtrI7taxon_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1acdc672e5c850cbe17fb44e78c82fc607\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountUniquePhenotypes</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21CountUniquePhenotypesi3PtrI7taxon_tE\" title=\"CountUniquePhenotypes::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of unique phenotypes that occurred along the given taxon\u2019s lineage. </p></dd>", "a[href=\"library/bits/api/BitVector.html#_CPPv4IE4hashIN3old9BitVectorEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE4hashIN3old9BitVectorEE\">\n<span id=\"_CPPv3IE4hashIN3old9BitVectorEE\"></span><span id=\"_CPPv2IE4hashIN3old9BitVectorEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structhash_3_01old_1_1BitVector_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/BitArray.html#_CPPv43old\" title=\"old\"><span class=\"n\"><span class=\"pre\">old</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N3old9BitVectorE\" title=\"old::BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Hash function to allow BitVector to be used with maps and sets. This is added to the std namespace so that BitVectors can be used in data structures that require hashing (such as unordered_map) </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\">\n<span id=\"_CPPv3I00E8ToVectorRKNSt3mapI7INDEX_T1TEE1T7INDEX_T\"></span><span id=\"_CPPv2I00E8ToVectorRKNSt3mapI7INDEX_T1TEE1T7INDEX_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a3f8b6f3b8d0a2e3de91bedf7cf4bf3ff\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToVector</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">default_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E8ToVector6vectorI1TERKNSt3mapI7INDEX_T1TEE1T7INDEX_T\" title=\"ToVector::INDEX_T\"><span class=\"n\"><span class=\"pre\">INDEX_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">index_cap</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">32768</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a map to a vector. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E7BasePtr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7BasePtr\">\n<span id=\"_CPPv3I0E7BasePtr\"></span><span id=\"_CPPv2I0E7BasePtr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBasePtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BasePtr</span></span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I00E6PowMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E6PowMod\">\n<span id=\"_CPPv3I00E6PowMod\"></span><span id=\"_CPPv2I00E6PowMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Root</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structPowMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PowMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E6PowMod\" title=\"PowMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd></dd>", "a[href=\"library/hardware/api/EventLib.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">EventLib.hpp<a class=\"headerlink\" href=\"#eventlib-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file maintains information about events available in virtual hardware. </p><p>This file is largely based on InstLib.h. </p>", "a[href=\"library/functional/api/memo_function.html#_CPPv4I0E13memo_functionIF1RvEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13memo_functionIF1RvEE\">\n<span id=\"_CPPv3I0E13memo_functionIF1RvEE\"></span><span id=\"_CPPv2I0E13memo_functionIF1RvEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmemo__function_3_01R_07_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">memo_function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13memo_functionIF1RvEE\" title=\"memo_function&lt;R()&gt;::R\"><span class=\"n\"><span class=\"pre\">R</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Zero argument functions are trivial (since they need to cache only a single value), but should still work. </p></dd>", "a[href=\"library/io/api/serialize_macros.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">serialize_macros.hpp<a class=\"headerlink\" href=\"#serialize-macros-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Macros for simplifying to serialization of objects. </p>", "a[href=\"library/config/api/ArgManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ArgManager.hpp<a class=\"headerlink\" href=\"#argmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A tool for sythesizing command-line arguments, URL query params, and config files. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv419ANSI_BrightYellowBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419ANSI_BrightYellowBGv\">\n<span id=\"_CPPv319ANSI_BrightYellowBGv\"></span><span id=\"_CPPv219ANSI_BrightYellowBGv\"></span><span id=\"ANSI_BrightYellowBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a951d445a460ccc354fc2db02a56e14cb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightYellowBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/Ptr.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Ptr.hpp<a class=\"headerlink\" href=\"#ptr-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A wrapper for pointers that does careful memory tracking (but only in debug mode). </p><p>Ptr objects behave as normal pointers under most conditions. However, if a program is compiled with EMP_TRACK_MEM set, then these pointers perform extra tests to ensure that they point to valid memory and that memory is freed before pointers are released.</p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00E11match_constI1TK7MATCH_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11match_constI1TK7MATCH_TE\">\n<span id=\"_CPPv3I00E11match_constI1TK7MATCH_TE\"></span><span id=\"_CPPv2I00E11match_constI1TK7MATCH_TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCH_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structmatch__const_3_01T_00_01const_01MATCH__T_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">match_const</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E11match_constI1TK7MATCH_TE\" title=\"match_const&lt;T, const MATCH_T&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11match_constI1TK7MATCH_TE\" title=\"match_const&lt;T, const MATCH_T&gt;::MATCH_T\"><span class=\"n\"><span class=\"pre\">MATCH_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/Lexer.html#_CPPv411TokenStream\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411TokenStream\">\n<span id=\"_CPPv311TokenStream\"></span><span id=\"_CPPv211TokenStream\"></span><span id=\"TokenStream\"></span><span class=\"target\" id=\"classTokenStream\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TokenStream</span></span></span><br/></dt><dd></dd>", "a[href=\"library/text/api/TextEncoding.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TextEncoding.hpp<a class=\"headerlink\" href=\"#textencoding-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Plugs into Text with the specification of a given encoding. </p>", "a[href=\"library/meta/api/meta.html#_CPPv4I0_6size_tE7GetSize6size_tRA1N_1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE7GetSize6size_tRA1N_1T\">\n<span id=\"_CPPv3I0_6size_tE7GetSizeRA1N_1T\"></span><span id=\"_CPPv2I0_6size_tE7GetSizeRAN_1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aa132a5fc792f00ca5d60a1c9e92a9f74\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetSize</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7GetSize6size_tRA1N_1T\" title=\"GetSize::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">[</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7GetSize6size_tRA1N_1T\" title=\"GetSize::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine the size of a built-in array. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E6NRange6vectorI1TE1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6NRange6vectorI1TE1T1T\">\n<span id=\"_CPPv3I0E6NRange1T1T\"></span><span id=\"_CPPv2I0E6NRange1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ad33e8b1ae5efd25f87fdece83076cb17\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6NRange6vectorI1TE1T1T\" title=\"NRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NRange</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6NRange6vectorI1TE1T1T\" title=\"NRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E6NRange6vectorI1TE1T1T\" title=\"NRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns a vector containing the numbers from. </p></dd>", "a[href=\"library/math/api/stats.html#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\">\n<span id=\"_CPPv3I000E9MaxResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span id=\"_CPPv2I000E9MaxResultRNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"stats_8hpp_1a471275595b10ff4004e306f8b1c99374\"></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxResult</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::RET_TYPE\"><span class=\"n\"><span class=\"pre\">RET_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::ARG_TYPE\"><span class=\"n\"><span class=\"pre\">ARG_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E9MaxResult8RET_TYPERNSt8functionIF8RET_TYPE8ARG_TYPEEEER1C\" title=\"MaxResult::C\"><span class=\"n\"><span class=\"pre\">C</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">elements</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Run the provided function on every member of a container and return the MAXIMUM result. </p></dd>", "a[href=\"library/data/api/DataMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataMap.hpp<a class=\"headerlink\" href=\"#datamap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A DataMap links names to arbitrary object types. </p><p>\nA DataMap links data names to arbitrary object types. Each data map is composed of a MemoryImage (that holds a set of values) and a DataLayout (that maps names and other info to those values.)</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv416to_roman_numeraliRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416to_roman_numeraliRKNSt6stringE\">\n<span id=\"_CPPv316to_roman_numeraliRKNSt6stringE\"></span><span id=\"_CPPv216to_roman_numeraliRKNSt6stringE\"></span><span id=\"to_roman_numeral__i.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ac57ba7e09357db7bcfb2277000aa7ba2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_roman_numeral</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">prefix</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an integer to a roman numeral string. </p></dd>", "a[href=\"library/scholar/api/Bibliography.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bibliography.hpp<a class=\"headerlink\" href=\"#bibliography-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A collection of references. </p>", "a[href=\"library/web/api/color_map.html#_CPPv48ColorRGBiii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ColorRGBiii\">\n<span id=\"_CPPv38ColorRGBiii\"></span><span id=\"_CPPv28ColorRGBiii\"></span><span id=\"ColorRGB__i.i.i\"></span><span class=\"target\" id=\"color__map_8hpp_1a4783b49e875708ceb61b57199c0230d6\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ColorRGB</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">r</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">g</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a string to describe a JS color out of RGB values. </p></dd>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E13LineageLengthi3PtrI7taxon_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13LineageLengthi3PtrI7taxon_tE\">\n<span id=\"_CPPv3I0E13LineageLength3PtrI7taxon_tE\"></span><span id=\"_CPPv2I0E13LineageLength3PtrI7taxon_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1ab0f3a05a067b8d1f2e998089f5325d37\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LineageLength</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13LineageLengthi3PtrI7taxon_tE\" title=\"LineageLength::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of ancestor taxa in <code class=\"docutils literal notranslate\"><span class=\"pre\">taxon</span></code> \u2018s lineage. Requires that taxon is a member of a systematics manager that has ancestor storing turned on </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv412bits_field_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412bits_field_t\">\n<span id=\"_CPPv312bits_field_t\"></span><span id=\"_CPPv212bits_field_t\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1ab0e28239af0db97497873e6da96ee40d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">bits_field_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><br/></dt><dd><p>Use size_t as the default bits field type. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv49MakeRomani\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MakeRomani\">\n<span id=\"_CPPv39MakeRomani\"></span><span id=\"_CPPv29MakeRomani\"></span><span id=\"MakeRoman__i\"></span><span class=\"target\" id=\"String_8hpp_1aa9356d13abe83d629d13c4adc4439e00\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeRoman</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert an integer to a roman numeral string. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E3HasbRK6vectorI1TERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3HasbRK6vectorI1TERK1T\">\n<span id=\"_CPPv3I0E3HasRK6vectorI1TERK1T\"></span><span id=\"_CPPv2I0E3HasRK6vectorI1TERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aea3d144afe75a5514e9b6b5257220969\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3HasbRK6vectorI1TERK1T\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3HasbRK6vectorI1TERK1T\" title=\"Has::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return whether a value exists in a vector. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E15RotateBitsRight1T1T6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15RotateBitsRight1T1T6size_t\">\n<span id=\"_CPPv3I0E15RotateBitsRight1T6size_t\"></span><span id=\"_CPPv2I0E15RotateBitsRight1T6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a459d3d46d0ad82a7bc3b82e504a73e4c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E15RotateBitsRight1T1T6size_t\" title=\"RotateBitsRight::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RotateBitsRight</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E15RotateBitsRight1T1T6size_t\" title=\"RotateBitsRight::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rotate_size</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_Greenv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_Greenv\">\n<span id=\"_CPPv310ANSI_Greenv\"></span><span id=\"_CPPv210ANSI_Greenv\"></span><span id=\"ANSI_Green\"></span><span class=\"target\" id=\"string__utils_8hpp_1ad79a5d9b2351f779ae6c3cffba788b90\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Green</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/base/api/errors.html#_CPPv412GetExceptMapv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412GetExceptMapv\">\n<span id=\"_CPPv312GetExceptMapv\"></span><span id=\"_CPPv212GetExceptMapv\"></span><span id=\"GetExceptMap\"></span><span class=\"target\" id=\"errors_8hpp_1a661f68af8c9fd048f43fe203099daabf\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">multimap</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetExceptMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A map of all exceptions that have occurred and are awaiting to be dealt with. </p></dd>", "a[href=\"library/config/api/config_web_interface.html#_CPPv411ConfigWebUI\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ConfigWebUI\">\n<span id=\"_CPPv311ConfigWebUI\"></span><span id=\"_CPPv211ConfigWebUI\"></span><span id=\"ConfigWebUI\"></span><span class=\"target\" id=\"classConfigWebUI\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ConfigWebUI</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/tuple_utils.html#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\">\n<span id=\"_CPPv3I000E12TupleIterateR6TUP1_TR6TUP2_TRK5FUN_T\"></span><span id=\"_CPPv2I000E12TupleIterateR6TUP1_TR6TUP2_TRK5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUP1_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUP2_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a4e56a9e6622159217458a5993978850f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleIterate</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::TUP1_T\"><span class=\"n\"><span class=\"pre\">TUP1_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::TUP2_T\"><span class=\"n\"><span class=\"pre\">TUP2_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E12TupleIteratevR6TUP1_TR6TUP2_TRK5FUN_T\" title=\"TupleIterate::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a provided function on each pair of elements in two tuples. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I_i_DpiE8tIntMath\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_i_DpiE8tIntMath\">\n<span id=\"_CPPv3I_i_DpiE8tIntMath\"></span><span id=\"_CPPv2I_i_DpiE8tIntMath\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">I</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Is</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtIntMath\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tIntMath</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/constants.html#_CPPv4I0E16InterpolateTabledRR1Tdd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16InterpolateTabledRR1Tdd\">\n<span id=\"_CPPv3I0E16InterpolateTableRR1Tdd\"></span><span id=\"_CPPv2I0E16InterpolateTableRR1Tdd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"constants_8hpp_1a62221fe49c9a42785d4709081f696c99\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InterpolateTable</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E16InterpolateTabledRR1Tdd\" title=\"InterpolateTable::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">table</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tsize</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>The following function takes a table and a position [0.0, 1.0) and intepolates a value. </p></dd>", "a[href=\"library/web/api/Document.html#_CPPv48Document\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Document\">\n<span id=\"_CPPv38Document\"></span><span id=\"_CPPv28Document\"></span><span id=\"Document\"></span><span class=\"target\" id=\"classDocument\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Document</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4N8Document3DivERKNSt6stringE\" title=\"Document::Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd></dd>", "a[href=\"library/text/api/EmphaticEncoding.html#_CPPv416EmphaticEncoding\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416EmphaticEncoding\">\n<span id=\"_CPPv316EmphaticEncoding\"></span><span id=\"_CPPv216EmphaticEncoding\"></span><span id=\"EmphaticEncoding\"></span><span class=\"target\" id=\"classEmphaticEncoding\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EmphaticEncoding</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/text/api/TextEncoding.html#_CPPv412TextEncoding\" title=\"TextEncoding\"><span class=\"n\"><span class=\"pre\">TextEncoding</span></span></a><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E5World\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5World\">\n<span id=\"_CPPv3I0E5World\"></span><span id=\"_CPPv2I0E5World\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorld\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv413shuffle_graphRK5GraphR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413shuffle_graphRK5GraphR6Random\">\n<span id=\"_CPPv313shuffle_graphRK5GraphR6Random\"></span><span id=\"_CPPv213shuffle_graphRK5GraphR6Random\"></span><span id=\"shuffle_graph__GraphCR.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a50b8c91aa25ace652c02352981c96394\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">shuffle_graph</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_graph</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an existing graph, and build a new one that is isomorphic to it, but with randomized vertex IDs. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv44Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringE\">\n<span id=\"_CPPv34Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringE\"></span><span id=\"_CPPv24Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringE\"></span><span id=\"Draw__Canvas.vector:vector:s::CR.vector:ss:CR.ss\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1ab6ded17e55e4bf941fe756ba90d3e690\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">grid</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"black\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a grid onto a canvas, but without cell size provided &amp;#8212; maximize to fill the canvas! </p></dd>", "a[href=\"library/hardware/hardware.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Hardware<a class=\"headerlink\" href=\"#hardware\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E10is_pointer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10is_pointer\">\n<span id=\"_CPPv3I0E10is_pointer\"></span><span id=\"_CPPv2I0E10is_pointer\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a71b111d33d04c7fd7ed53e7bbb158254\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_pointer</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11is_ptr_type\" title=\"is_ptr_type\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10is_pointer\" title=\"is_pointer::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/tuple_utils.html#_CPPv4IDpE9TupleHash\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9TupleHash\">\n<span id=\"_CPPv3IDpE9TupleHash\"></span><span id=\"_CPPv2IDpE9TupleHash\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTupleHash\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleHash</span></span></span><br/></dt><dd><p>Setup tuples to be able to be used in hash tables. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E5ToPtr3PtrI1TEP1Tb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5ToPtr3PtrI1TEP1Tb\">\n<span id=\"_CPPv3I0E5ToPtrP1Tb\"></span><span id=\"_CPPv2I0E5ToPtrP1Tb\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a5471d2fd9ba7bf2cae43d9045c38eef0\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5ToPtr3PtrI1TEP1Tb\" title=\"ToPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToPtr</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E5ToPtr3PtrI1TEP1Tb\" title=\"ToPtr::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">own</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a T* to a Ptr&lt;T&gt;. By default, don\u2019t track. </p></dd>", "a[href=\"library/geometry/api/Circle2D.html#_CPPv4I0E8Circle2D\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8Circle2D\">\n<span id=\"_CPPv3I0E8Circle2D\"></span><span id=\"_CPPv2I0E8Circle2D\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classCircle2D\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Circle2D</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\">\n<span id=\"_CPPv3I00E3HasRK5MAP_TRK5KEY_T\"></span><span id=\"_CPPv2I00E3HasRK5MAP_TRK5KEY_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1af33cf2cef135c26810f9427520e27ce3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Has</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\" title=\"Has::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E3HasbRK5MAP_TRK5KEY_T\" title=\"Has::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map type, and run find to determine if a key is present. </p></dd>", "a[href=\"library/debug/api/debug.html#_CPPv4IDpE15emp_debug_printvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE15emp_debug_printvDpRR2Ts\">\n<span id=\"_CPPv3IDpE15emp_debug_printDpRR2Ts\"></span><span id=\"_CPPv2IDpE15emp_debug_printDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"debug_8hpp_1a9ac0e31e7b1ac834b28a4f7dc6c6c33d\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">emp_debug_print</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE15emp_debug_printvDpRR2Ts\" title=\"emp_debug_print::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/io/io.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/data/api/VarMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">VarMap.hpp<a class=\"headerlink\" href=\"#varmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>VarMaps track arbitrary data by name (slow) or id (faster). </p>", "a[href=\"library/math/api/math.html#_CPPv411FloorDivideii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411FloorDivideii\">\n<span id=\"_CPPv311FloorDivideii\"></span><span id=\"_CPPv211FloorDivideii\"></span><span id=\"FloorDivide__i.i\"></span><span class=\"target\" id=\"math_8hpp_1a4ebc40534baf86ea6553fe7a56f67094\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FloorDivide</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dividend</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">divisor</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Divide one integer by another, rounding towards minus infinity. </p></dd>", "a[href=\"library/tools/api/MemoryFactory.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MemoryFactory.hpp<a class=\"headerlink\" href=\"#memoryfactory-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Recycles memory of a given size rather than continuously re-allocating. </p>", "a[href=\"library/math/api/math.html#_CPPv413RoundedDivide6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413RoundedDivide6size_t6size_t\">\n<span id=\"_CPPv313RoundedDivide6size_t6size_t\"></span><span id=\"_CPPv213RoundedDivide6size_t6size_t\"></span><span id=\"RoundedDivide__s.s\"></span><span class=\"target\" id=\"math_8hpp_1a75e785a5649fdf37e95832061b0e0642\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RoundedDivide</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dividend</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">divisor</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Default integer division is truncated, not rounded. Round the division result instead of truncating it. Rounding ties (i.e., result % divisor == 0.5) will be rounded up. </p></dd>", "a[href=\"library/web/api/CanvasShape.html#_CPPv412CanvasCircle\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CanvasCircle\">\n<span id=\"_CPPv312CanvasCircle\"></span><span id=\"_CPPv212CanvasCircle\"></span><span id=\"CanvasCircle\"></span><span class=\"target\" id=\"classCanvasCircle\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasCircle</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>Track a circle shape to be drawn on a canvas. </p></dd>", "a[href=\"library/geometry/api/Physics2D.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Physics2D.hpp<a class=\"headerlink\" href=\"#physics2d-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Physics2D - handles movement and collissions in a simple 2D world. </p>", "a[href=\"library/base/api/Ptr.html#_CPPv4IE7BasePtrIKvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE7BasePtrIKvE\">\n<span id=\"_CPPv3IE7BasePtrIKvE\"></span><span id=\"_CPPv2IE7BasePtrIKvE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBasePtr_3_01const_01void_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BasePtr</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I_iE15PlaceholderType\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_iE15PlaceholderType\">\n<span id=\"_CPPv3I_iE15PlaceholderType\"></span><span id=\"_CPPv2I_iE15PlaceholderType\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structPlaceholderType\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PlaceholderType</span></span></span><br/></dt><dd><p>Create a placeholder template to substitute for a real type. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412ANSI_Reversev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ANSI_Reversev\">\n<span id=\"_CPPv312ANSI_Reversev\"></span><span id=\"_CPPv212ANSI_Reversev\"></span><span id=\"ANSI_Reverse\"></span><span class=\"target\" id=\"string__utils_8hpp_1a01ffbfbd45d34ce6b0880e312d5276fb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Reverse</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E12RandomSelectvR5WorldI3ORGE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12RandomSelectvR5WorldI3ORGE6size_t6size_t\">\n<span id=\"_CPPv3I0E12RandomSelectR5WorldI3ORGE6size_t6size_t\"></span><span id=\"_CPPv2I0E12RandomSelectR5WorldI3ORGE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1ac06178a1106d7a239f4106bd8e3ca06f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12RandomSelectvR5WorldI3ORGE6size_t6size_t\" title=\"RandomSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">r_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">copy_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==RANDOM== Selection picks an organism with uniform-random probability form the populaiton. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE9DoNothingvDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE9DoNothingvDp2Ts\">\n<span id=\"_CPPv3IDpE9DoNothingDp2Ts\"></span><span id=\"_CPPv2IDpE9DoNothingDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a01c8411f93d08bbba348cd7cef3d870f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DoNothing</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE9DoNothingvDp2Ts\" title=\"DoNothing::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A function that will take any number of argument and do nothing with them. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411ANSI_Strikev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ANSI_Strikev\">\n<span id=\"_CPPv311ANSI_Strikev\"></span><span id=\"_CPPv211ANSI_Strikev\"></span><span id=\"ANSI_Strike\"></span><span class=\"target\" id=\"string__utils_8hpp_1a0fe7300aac6eca9bf445753f85ebbf78\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Strike</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">meta.hpp<a class=\"headerlink\" href=\"#meta-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A bunch of C++ Template Meta-programming tricks. </p><p>Developer notes:<ul class=\"simple\">\n<li><p>Right now test_type&lt;&gt; returns false if a template can\u2019t resolve, but if it\u2019s true it checks if a value field is present; if so that determines success. The reason for this choice was to make sure that true_type and false_type are handled correctly (with built-in type_tratis) </p></li>\n</ul>\n</p>", "a[href=\"library/datastructs/api/SmallFifoMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SmallFifoMap.hpp<a class=\"headerlink\" href=\"#smallfifomap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Store key value pairs in a fixed-sized array, bumping out the oldest value when full. Optimized for small N. Requires N &lt; 256. </p>", "a[href=\"library/web/api/Selector.html#_CPPv48Selector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Selector\">\n<span id=\"_CPPv38Selector\"></span><span id=\"_CPPv28Selector\"></span><span id=\"Selector\"></span><span class=\"target\" id=\"classSelector\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Selector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv48Selector\" title=\"Selector\"><span class=\"n\"><span class=\"pre\">Selector</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/DFA.html#_CPPv43DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43DFA\">\n<span id=\"_CPPv33DFA\"></span><span id=\"_CPPv23DFA\"></span><span class=\"target\" id=\"DFA_8hpp_1ad1c1efdfe02f2da3144dbe50c2e10b8d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DFA</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_i0E4tDFA\" title=\"tDFA\"><span class=\"n\"><span class=\"pre\">tDFA</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Setup DFA to be a simple tDFA with the basic character set for symbols. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415string_get_lineRKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415string_get_lineRKNSt6stringE6size_t\">\n<span id=\"_CPPv315string_get_lineRKNSt6stringE6size_t\"></span><span id=\"_CPPv215string_get_lineRKNSt6stringE6size_t\"></span><span id=\"string_get_line__ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a20af5646ef70c58bed4dff61319dea79\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get_line</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a prefix of a string, up to the first newline (do not modify the original string) </p></dd>", "a[href=\"library/web/api/Listeners.html#_CPPv49Listeners\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49Listeners\">\n<span id=\"_CPPv39Listeners\"></span><span id=\"_CPPv29Listeners\"></span><span id=\"Listeners\"></span><span class=\"target\" id=\"classListeners\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Listeners</span></span></span><br/></dt><dd><p>Track a set of JavaScript Listeners with their callback IDs. </p></dd>", "a[href=\"library/control/api/SignalManager.html#_CPPv413SignalManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413SignalManager\">\n<span id=\"_CPPv313SignalManager\"></span><span id=\"_CPPv213SignalManager\"></span><span id=\"SignalManager\"></span><span class=\"target\" id=\"classSignalManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SignalManager</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SignalManager_Base</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00E11HasToString\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11HasToString\">\n<span id=\"_CPPv3I00E11HasToString\"></span><span id=\"_CPPv2I00E11HasToString\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasToString\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasToString</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/StateGrid.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">StateGrid.hpp<a class=\"headerlink\" href=\"#stategrid-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>StateGrid maintains a rectilinear grid that agents can traverse. </p><p>State grids are a matrix of values, representing states of a 2D environment that an organism can traverse.</p>", "a[href=\"library/control/api/ActionManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ActionManager.hpp<a class=\"headerlink\" href=\"#actionmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>ActionManager collects sets of Actions to be looked up or manipulated later. </p>", "a[href=\"library/prefab/api/CodeBlock.html#_CPPv49CodeBlock\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49CodeBlock\">\n<span id=\"_CPPv39CodeBlock\"></span><span id=\"_CPPv29CodeBlock\"></span><span id=\"CodeBlock\"></span><span class=\"target\" id=\"classCodeBlock\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CodeBlock</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><br/></dt><dd><p>Use CodeBlock class to easily add code to a web application that is highlighted based on the language used. </p></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4N12SimpleParser19PhonyNameDueToError5fun_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SimpleParser19PhonyNameDueToError5fun_tE\">\n<span id=\"_CPPv3N12SimpleParser19PhonyNameDueToError5fun_tE\"></span><span id=\"_CPPv2N12SimpleParser19PhonyNameDueToError5fun_tE\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1a2738993a6d2691b86c8e4e8018481912\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">fun_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/data/api/Datum.html#_CPPv45Datum\" title=\"Datum\"><span class=\"n\"><span class=\"pre\">Datum</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4N12SimpleParser19PhonyNameDueToError5arg_tE\" title=\"SimpleParser::PhonyNameDueToError::arg_t\"><span class=\"n\"><span class=\"pre\">arg_t</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E15is_std_function\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15is_std_function\">\n<span id=\"_CPPv3I0E15is_std_function\"></span><span id=\"_CPPv2I0E15is_std_function\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__std__function\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_std_function</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd><p>Determine if a type passed in is an std::function type (vs a lambda or a raw function) </p></dd>", "a[href=\"library/datastructs/api/QueueCache.html#_CPPv4I00_6size_t00E10QueueCache\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_t00E10QueueCache\">\n<span id=\"_CPPv3I00_6size_t00E10QueueCache\"></span><span id=\"_CPPv2I00_6size_t00E10QueueCache\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DefaultCapacity</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">numeric_limits</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">max</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hash</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">hash</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Pred</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">equal_to</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_t00E10QueueCache\" title=\"QueueCache::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classQueueCache\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">QueueCache</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv4I0E12SelectRandomDaR6RandomRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SelectRandomDaR6RandomRK1T\">\n<span id=\"_CPPv3I0E12SelectRandomR6RandomRK1T\"></span><span id=\"_CPPv2I0E12SelectRandomR6RandomRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"random__utils_8hpp_1acd91a8487e14e4f8cb5605c5c63893bb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SelectRandom</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12SelectRandomDaR6RandomRK1T\" title=\"SelectRandom::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Choose a random element from an indexable container. </p></dd>", "a[href=\"library/functional/api/memo_function.html#_CPPv4I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\">\n<span id=\"_CPPv3I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\"></span><span id=\"_CPPv2I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EXTRA</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmemo__function_3_01R_07A1_00_01A2_00_01EXTRA_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">memo_function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\" title=\"memo_function&lt;R(A1, A2, EXTRA...)&gt;::R\"><span class=\"n\"><span class=\"pre\">R</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\" title=\"memo_function&lt;R(A1, A2, EXTRA...)&gt;::A1\"><span class=\"n\"><span class=\"pre\">A1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\" title=\"memo_function&lt;R(A1, A2, EXTRA...)&gt;::A2\"><span class=\"n\"><span class=\"pre\">A2</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000DpE13memo_functionIF1R2A12A2Dp5EXTRAEE\" title=\"memo_function&lt;R(A1, A2, EXTRA...)&gt;::EXTRA\"><span class=\"n\"><span class=\"pre\">EXTRA</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Memoize functions for when we have more than one argument\u2026 we need to convert inputs to a tuple to make this work. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\">\n<span id=\"_CPPv3IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\"></span><span id=\"_CPPv2IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Rest</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__concat_3_01Variadic_3_01A_8_8_8_01_4_00_01Rest_8_8_8_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_concat</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\" title=\"variadic_concat&lt;Variadic&lt;A...&gt;, Rest...&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\" title=\"variadic_concat&lt;Variadic&lt;A...&gt;, Rest...&gt;::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0DpDpE15variadic_concatI8VariadicIDp1AEDp4RestE\" title=\"variadic_concat&lt;Variadic&lt;A...&gt;, Rest...&gt;::Rest\"><span class=\"n\"><span class=\"pre\">Rest</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411ANSI_CyanBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ANSI_CyanBGv\">\n<span id=\"_CPPv311ANSI_CyanBGv\"></span><span id=\"_CPPv211ANSI_CyanBGv\"></span><span id=\"ANSI_CyanBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1af4d735309e5f09512395ad00bedaee8b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_CyanBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/web.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Web Tools (for use with Emscripten)<a class=\"headerlink\" href=\"#web-tools-for-use-with-emscripten\" title=\"Link to this heading\">\uf0c1</a></h1><h2>D3 Data Visualization Tools<a class=\"headerlink\" href=\"#d3-data-visualization-tools\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/compiler/api/NFA.html#_CPPv49NFA_State\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49NFA_State\">\n<span id=\"_CPPv39NFA_State\"></span><span id=\"_CPPv29NFA_State\"></span><span class=\"target\" id=\"NFA_8hpp_1a853fbe64b1cb376cd90366b8b4b7135f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NFA_State</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E10tNFA_State\" title=\"tNFA_State\"><span class=\"n\"><span class=\"pre\">tNFA_State</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>NFA_State is the most standard tNFA_State setup. </p></dd>", "a[href=\"library/base/api/emscripten_assert.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">emscripten_assert.hpp<a class=\"headerlink\" href=\"#emscripten-assert-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Assert evaluated only in debug mode with Emscripten. </p>", "a[href=\"library/web/api/JSWrap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">JSWrap.hpp<a class=\"headerlink\" href=\"#jswrap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wrap a C++ function and convert it to an integer that can be called from Javascript. </p><p>To wrap a function, call:</p>", "a[href=\"library/datastructs/api/IndexSet.html#_CPPv413IndexRangeSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413IndexRangeSet\">\n<span id=\"_CPPv313IndexRangeSet\"></span><span id=\"_CPPv213IndexRangeSet\"></span><span id=\"IndexRangeSet\"></span><span class=\"target\" id=\"classIndexRangeSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexRangeSet</span></span></span><br/></dt><dd><p>IndexRanges is a class to maintain a series of ranges of indexes. The ranges will always be kept sorted and non-adjacent (i.e., there will always be at least one index missing between two ranges). </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\">\n<span id=\"_CPPv3I00E4FindRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span id=\"_CPPv2I00E4FindRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1acb6aa08d9a389ff147cf5868a8522807\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Find</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"Find::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"Find::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">key</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E4FindDaRK5MAP_TRK5KEY_TRKN5MAP_T11mapped_typeE\" title=\"Find::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">mapped_type</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dval</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take any map, run find() member function, and return the result found (or default value if no results found). </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E15RotateBitsRight1T1T6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15RotateBitsRight1T1T6size_t6size_t\">\n<span id=\"_CPPv3I0E15RotateBitsRight1T6size_t6size_t\"></span><span id=\"_CPPv2I0E15RotateBitsRight1T6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a12a00d31c8a3d2d63119c48918ce8fec\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E15RotateBitsRight1T1T6size_t6size_t\" title=\"RotateBitsRight::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RotateBitsRight</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E15RotateBitsRight1T1T6size_t6size_t\" title=\"RotateBitsRight::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rotate_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bit_count</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E13is_ptr_type_vbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13is_ptr_type_vbv\">\n<span id=\"_CPPv3I0E13is_ptr_type_vv\"></span><span id=\"_CPPv2I0E13is_ptr_type_vv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a68a2051b8df57b7b8704946f1377025e\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type_v</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv416LiveValueDisplay\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416LiveValueDisplay\">\n<span id=\"_CPPv316LiveValueDisplay\"></span><span id=\"_CPPv216LiveValueDisplay\"></span><span id=\"LiveValueDisplay\"></span><span class=\"target\" id=\"classLiveValueDisplay\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LiveValueDisplay</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv48ValueBox\" title=\"ValueBox\"><span class=\"n\"><span class=\"pre\">ValueBox</span></span></a><br/></dt><dd><p>Use a LiveValueDisplay component to display a labeled value which will change over the course of a simulation with a nice description of what this value means. Internally, it manages an Animator to redraw the view at the fastest possible framerate unless independent=false.</p><p>We suggest adding the \u201cdisplay_group\u201d class to the enclosing tag around multiple LiveValueDisplays to align labels and values along a common grid. </p></dd>", "a[href=\"library/web/api/TextFeed.html#_CPPv48TextFeed\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48TextFeed\">\n<span id=\"_CPPv38TextFeed\"></span><span id=\"_CPPv28TextFeed\"></span><span id=\"TextFeed\"></span><span class=\"target\" id=\"classTextFeed\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TextFeed</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv48TextFeed\" title=\"TextFeed\"><span class=\"n\"><span class=\"pre\">TextFeed</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A TextFeed widget handles putting text on a web page that can be controlled and modified. </p></dd>", "a[href=\"library/meta/api/macro_math.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">macro_math.hpp<a class=\"headerlink\" href=\"#macro-math-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Macros to build a pre-processor calculator system. Status: RELEASE. </p><p>Working macros include: EMP_INC(A) : converts to result of A+1 EMP_DEC(A) : converts to result of A-1 EMP_SHIFTL(A) : converts to result of A*2 EMP_SHIFTR(A) : converts to result of A/2</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv414ANSI_SlowBlinkv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414ANSI_SlowBlinkv\">\n<span id=\"_CPPv314ANSI_SlowBlinkv\"></span><span id=\"_CPPv214ANSI_SlowBlinkv\"></span><span id=\"ANSI_SlowBlink\"></span><span class=\"target\" id=\"string__utils_8hpp_1af0831a19417d2b47b0676721921a8dbd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_SlowBlink</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00E8ptr_pair\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8ptr_pair\">\n<span id=\"_CPPv3I00E8ptr_pair\"></span><span id=\"_CPPv2I00E8ptr_pair\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structptr__pair\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ptr_pair</span></span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/errors.html#_CPPv414GetEmptyExceptv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414GetEmptyExceptv\">\n<span id=\"_CPPv314GetEmptyExceptv\"></span><span id=\"_CPPv214GetEmptyExceptv\"></span><span id=\"GetEmptyExcept\"></span><span class=\"target\" id=\"errors_8hpp_1a674c7784868982ed87ce8cb607755afd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetEmptyExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Function to generate an empty exception (returned when an exception is checked, but none exist.) </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0DpErsRNSt7istreamERNSt7istreamER3PtrI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpErsRNSt7istreamERNSt7istreamER3PtrI1TE\">\n<span id=\"_CPPv3I0DpErsRNSt7istreamER3PtrI1TE\"></span><span id=\"_CPPv2I0DpErsRNSt7istreamER3PtrI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Ptr_8hpp_1a59314f99272856431e4158e0fceff0c5\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&gt;&gt;</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">istream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">is</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpErsRNSt7istreamERNSt7istreamER3PtrI1TE\" title=\"operator&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">ptr</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00DpE16has_unique_typesbv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE16has_unique_typesbv\">\n<span id=\"_CPPv3I00DpE16has_unique_typesv\"></span><span id=\"_CPPv2I00DpE16has_unique_typesv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE_LIST</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a79148663f4a03c102721159083bad4c4\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_unique_types</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv411tree_parent6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411tree_parent6size_t\">\n<span id=\"_CPPv311tree_parent6size_t\"></span><span id=\"_CPPv211tree_parent6size_t\"></span><span id=\"tree_parent__sCE\"></span><span class=\"target\" id=\"vector__utils_8hpp_1a2220e9d3e324731e491413bd6991c323\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tree_parent</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_output.html#_CPPv4I0E22AddLineageMutationFileR8DataFileR10WORLD_TYPEiRKNSt6stringE6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E22AddLineageMutationFileR8DataFileR10WORLD_TYPEiRKNSt6stringE6vectorINSt6stringEE\">\n<span id=\"_CPPv3I0E22AddLineageMutationFileR10WORLD_TYPEiRKNSt6stringE6vectorINSt6stringEE\"></span><span id=\"_CPPv2I0E22AddLineageMutationFileR10WORLD_TYPEiRKNSt6stringE6vectorINSt6stringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__output_8hpp_1a50c9851dddb384ce1f14b96b38c3a11b\"></span><a class=\"reference internal\" href=\"library/data/api/DataFile.html#_CPPv48DataFile\" title=\"DataFile\"><span class=\"n\"><span class=\"pre\">DataFile</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddLineageMutationFile</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E22AddLineageMutationFileR8DataFileR10WORLD_TYPEiRKNSt6stringE6vectorINSt6stringEE\" title=\"AddLineageMutationFile::WORLD_TYPE\"><span class=\"n\"><span class=\"pre\">WORLD_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">systematics_id</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fpath</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"lineage_mutations.csv\"</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">mut_types</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"s\"><span class=\"pre\">\"substitution\"</span></span><span class=\"p\"><span class=\"pre\">}</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/geometry/api/Angle2D.html#_CPPv412tan_chart_1K\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412tan_chart_1K\">\n<span id=\"_CPPv312tan_chart_1K\"></span><span id=\"_CPPv212tan_chart_1K\"></span><span id=\"tan_chart_1K__int32_tCA\"></span><span class=\"target\" id=\"Angle2D_8hpp_1a4e193cbb2b6afd3d430553fd71b5fc51\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tan_chart_1K</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">25</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">76</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">101</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">126</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">152</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">178</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">204</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">230</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">256</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">283</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">311</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">338</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">366</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">395</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">424</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">454</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">484</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">515</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">547</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">580</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">614</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">648</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">684</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">721</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">759</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">799</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">840</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">883</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">928</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">975</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1076</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1130</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1187</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1248</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1312</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1381</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1454</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1533</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1617</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1708</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1808</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1916</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2034</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2165</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2310</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2472</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2655</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2862</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3376</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3700</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4088</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4560</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5148</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5901</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6903</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">8302</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10397</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">13882</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">20844</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">41713</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/math/api/constants.html#_CPPv47MIN_INT\" title=\"MIN_INT\"><span class=\"n\"><span class=\"pre\">MIN_INT</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">41712</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">20843</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">13881</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">10396</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">8301</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">6902</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">5900</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">5147</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">4559</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">4087</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">3699</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">3375</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">3099</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2861</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2654</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2471</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2309</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2164</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2033</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1915</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1807</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1707</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1616</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1532</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1453</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1380</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1311</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1247</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1186</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1129</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1075</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">974</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">927</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">882</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">839</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">798</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">758</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">720</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">683</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">647</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">613</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">579</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">546</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">514</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">483</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">453</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">423</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">394</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">365</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">337</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">310</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">282</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">255</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">229</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">203</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">177</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">151</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">125</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">75</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">49</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">24</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">25</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">76</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">101</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">126</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">152</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">178</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">204</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">230</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">256</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">283</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">311</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">338</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">366</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">395</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">424</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">454</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">484</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">515</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">547</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">580</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">614</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">648</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">684</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">721</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">759</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">799</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">840</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">883</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">928</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">975</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1024</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1076</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1130</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1187</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1248</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1312</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1381</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1454</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1533</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1617</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1708</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1808</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1916</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2034</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2165</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2310</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2472</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2655</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2862</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3376</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3700</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4088</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">4560</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5148</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">5901</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">6903</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">8302</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10397</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">13882</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">20844</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">41713</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/math/api/constants.html#_CPPv47MIN_INT\" title=\"MIN_INT\"><span class=\"n\"><span class=\"pre\">MIN_INT</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">41712</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">20843</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">13881</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">10396</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">8301</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">6902</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">5900</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">5147</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">4559</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">4087</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">3699</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">3375</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">3099</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2861</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2654</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2471</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2309</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2164</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">2033</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1915</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1807</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1707</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1616</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1532</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1453</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1380</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1311</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1247</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1186</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1129</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1075</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">1023</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">974</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">927</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">882</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">839</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">798</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">758</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">720</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">683</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">647</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">613</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">579</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">546</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">514</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">483</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">453</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">423</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">394</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">365</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">337</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">310</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">282</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">255</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">229</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">203</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">177</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">151</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">125</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">100</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">75</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">49</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">-</span></span><span class=\"m\"><span class=\"pre\">24</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E10differenceRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E10differenceRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1aa44efff0d32ade9bdbd317ace2d227f1\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but not S2) </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I0E4KeysDaRK5MAP_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4KeysDaRK5MAP_T\">\n<span id=\"_CPPv3I0E4KeysRK5MAP_T\"></span><span id=\"_CPPv2I0E4KeysRK5MAP_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a960bc425ed3dd21c167321beb8a3c0f1\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Keys</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4KeysDaRK5MAP_T\" title=\"Keys::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#efficiency\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Efficiency<a class=\"headerlink\" href=\"#efficiency\" title=\"Link to this heading\">\uf0c1</a></h4><p>Tracking phylogenies can be computationally expensive. We have sought to keep the computational overhead as low as possible.</p><p>We also provide the option to remove all taxa that died before a certain time point (the <a class=\"reference internal\" href=\"library/evolve/api/Systematics.html#_CPPv4N11Systematics12RemoveBeforeEi\" title=\"Systematics::RemoveBefore\"><code class=\"xref cpp cpp-func docutils literal notranslate\"><span class=\"pre\">Systematics::RemoveBefore()</span></code></a> method). Use this with caution, as it will inhibit the use of many phylogenetic topology metrics. In extreme cases it may be necessary to keep your memory footprint sufficiently low, though.</p>", "a[href=\"library/math/api/math.html#_CPPv4I0DpE3Min1T1T1TDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE3Min1T1T1TDp2Ts\">\n<span id=\"_CPPv3I0DpE3Min1T1TDp2Ts\"></span><span id=\"_CPPv2I0DpE3Min1T1TDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1ab63564f26509b039407873776a994231\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE3Min1T1T1TDp2Ts\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Min</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpE3Min1T1T1TDp2Ts\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE3Min1T1T1TDp2Ts\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE3Min1T1T1TDp2Ts\" title=\"Min::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Min of multiple elements is solved recursively. </p></dd>", "a[href=\"library/math/api/CombinedBinomialDistribution.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">CombinedBinomialDistribution.hpp<a class=\"headerlink\" href=\"#combinedbinomialdistribution-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A means of quickly generating binomial random variables while only storing a small number of distributions. </p><p>\nQuick check for theory: <a class=\"reference external\" href=\"https://math.stackexchange.com/questions/1176385/sum-of-two-independent-binomial-variables\">https://math.stackexchange.com/questions/1176385/sum-of-two-independent-binomial-variables</a></p>", "a[href=\"library/meta/meta.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Meta<a class=\"headerlink\" href=\"#meta\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/tools/api/string_utils.html#_CPPv416has_lower_letterRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416has_lower_letterRKNSt6stringE\">\n<span id=\"_CPPv316has_lower_letterRKNSt6stringE\"></span><span id=\"_CPPv216has_lower_letterRKNSt6stringE\"></span><span id=\"has_lower_letter__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a91c0102aa426ed317d815315ee598e5c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_lower_letter</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv4anRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4anRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3anRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2anRK11BloomFilterRK11BloomFilter\"></span><span id=\"and-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1a5441f6b0a6ba8de8439e1d63e6f2f404\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">&amp;</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the intersection of two Bloom filters. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv47slugifyRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47slugifyRKNSt6stringE\">\n<span id=\"_CPPv37slugifyRKNSt6stringE\"></span><span id=\"_CPPv27slugifyRKNSt6stringE\"></span><span id=\"slugify__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1aaa55580aeac58387c707611da1198c72\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">slugify</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string safe(r) </p></dd>", "a[href=\"library/tools/api/hash_namify.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">hash_namify.hpp<a class=\"headerlink\" href=\"#hash-namify-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A method for mapping hash values to intuitive names. </p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E7HeapifyvR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7HeapifyvR6vectorI1TE\">\n<span id=\"_CPPv3I0E7HeapifyR6vectorI1TE\"></span><span id=\"_CPPv2I0E7HeapifyR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ae3662640df9c938c52f39f7e9e114f11\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Heapify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7HeapifyvR6vectorI1TE\" title=\"Heapify::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Heapify all elements in a vector. </p></dd>", "a[href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E26AdditiveCountdownRegulator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E26AdditiveCountdownRegulator\">\n<span id=\"_CPPv3I0E26AdditiveCountdownRegulator\"></span><span id=\"_CPPv2I0E26AdditiveCountdownRegulator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Slope</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAdditiveCountdownRegulator\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AdditiveCountdownRegulator</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E13RegulatorBase\" title=\"RegulatorBase\"><span class=\"n\"><span class=\"pre\">RegulatorBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/Random.html#_CPPv46Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Random\">\n<span id=\"_CPPv36Random\"></span><span id=\"_CPPv26Random\"></span><span id=\"Random\"></span><span class=\"target\" id=\"classRandom\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Random</span></span></span><br/></dt><dd><p>Middle Square Weyl Sequence: A versatile and non-patterned pseudo-random-number generator. Based on: <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Middle-square_method\">https://en.wikipedia.org/wiki/Middle-square_method</a></p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410has_one_ofRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410has_one_ofRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv310has_one_ofRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv210has_one_ofRKNSt6stringERKNSt6stringE\"></span><span id=\"has_one_of__ssCR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a87ece162eb8410e0c0819c14d0ee78e2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_one_of</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">char_set</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if a specified set of characters appears anywhere in a string. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv4IDpE13NotifyWarningvDpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE13NotifyWarningvDpRR2Ts\">\n<span id=\"_CPPv3IDpE13NotifyWarningDpRR2Ts\"></span><span id=\"_CPPv2IDpE13NotifyWarningDpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"errors_8hpp_1a010025334ee21575de210d614eff8ade\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NotifyWarning</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4IDpE13NotifyWarningvDpRR2Ts\" title=\"NotifyWarning::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">msg</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>End user has done something possibly a problem. </p></dd>", "a[href=\"library/control/api/Action.html#_CPPv4I0DpE11make_actionDaRKNSt8functionIF6RETURNDp4ARGSEEERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE11make_actionDaRKNSt8functionIF6RETURNDp4ARGSEEERKNSt6stringE\">\n<span id=\"_CPPv3I0DpE11make_actionRKNSt8functionIF6RETURNDp4ARGSEEERKNSt6stringE\"></span><span id=\"_CPPv2I0DpE11make_actionRKNSt8functionIF6RETURNDp4ARGSEEERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Action_8hpp_1a3eef464f29ed5e26000b23161229d3b5\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">make_action</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE11make_actionDaRKNSt8functionIF6RETURNDp4ARGSEEERKNSt6stringE\" title=\"make_action::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE11make_actionDaRKNSt8functionIF6RETURNDp4ARGSEEERKNSt6stringE\" title=\"make_action::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">name</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build an action object using this function. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416ANSI_BrightGreenv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ANSI_BrightGreenv\">\n<span id=\"_CPPv316ANSI_BrightGreenv\"></span><span id=\"_CPPv216ANSI_BrightGreenv\"></span><span id=\"ANSI_BrightGreen\"></span><span class=\"target\" id=\"string__utils_8hpp_1abe4e3d0fce7e2b434d1453bc77db78fb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightGreen</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413is_whitespaceRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413is_whitespaceRKNSt6stringE\">\n<span id=\"_CPPv313is_whitespaceRKNSt6stringE\"></span><span id=\"_CPPv213is_whitespaceRKNSt6stringE\"></span><span id=\"is_whitespace__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a373a32da6b13ed1bd285ae380980d472\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_whitespace</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00E10type_index\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E10type_index\">\n<span id=\"_CPPv3I00E10type_index\"></span><span id=\"_CPPv2I00E10type_index\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtype__index_3_01T1_00_01T2_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_index</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E10type_index\" title=\"type_index::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10type_index\" title=\"type_index::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/emfunctions.html#_CPPv49SetCursorPKc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49SetCursorPKc\">\n<span id=\"_CPPv39SetCursorPKc\"></span><span id=\"_CPPv29SetCursorPKc\"></span><span id=\"SetCursor__cCP\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a182c3ce14c2ecfb0ae3c16842acd0b5b\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetCursor</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"n sig-param\"><span class=\"pre\">type</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417from_literal_charRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417from_literal_charRKNSt6stringE\">\n<span id=\"_CPPv317from_literal_charRKNSt6stringE\"></span><span id=\"_CPPv217from_literal_charRKNSt6stringE\"></span><span id=\"from_literal_char__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a99f2bd459f9becd21e03ea9fc50ff056\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">from_literal_char</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p><p>Convert a literal character representation to an actual string. (i.e., \u2018A\u2019, \u2018;\u2019, or \u2018</p>\n<p>\u2019)</p>\n</p></dd>", "a[href=\"library/meta/api/ValPack.html#_CPPv4I_Da_Da_DaE12ValPackRange\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_Da_Da_DaE12ValPackRange\">\n<span id=\"_CPPv3I_Da_Da_DaE12ValPackRange\"></span><span id=\"_CPPv2I_Da_Da_DaE12ValPackRange\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">START</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">END</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">STEP</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"ValPack_8hpp_1a6cb1aa78c0e05bc7aa236575c67860ec\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValPackRange</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vp_range</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I_Da_Da_DaE12ValPackRange\" title=\"ValPackRange::START\"><span class=\"n\"><span class=\"pre\">START</span></span></a><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">&gt;=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_Da_Da_DaE12ValPackRange\" title=\"ValPackRange::END\"><span class=\"n\"><span class=\"pre\">END</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_Da_Da_DaE12ValPackRange\" title=\"ValPackRange::START\"><span class=\"n\"><span class=\"pre\">START</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_Da_Da_DaE12ValPackRange\" title=\"ValPackRange::END\"><span class=\"n\"><span class=\"pre\">END</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_Da_Da_DaE12ValPackRange\" title=\"ValPackRange::STEP\"><span class=\"n\"><span class=\"pre\">STEP</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd><p>Generate a ValPack with a specified range of values. </p></dd>", "a[href=\"library/hardware/api/Genome.html#_CPPv4I000E6Genome\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E6Genome\">\n<span id=\"_CPPv3I000E6Genome\"></span><span id=\"_CPPv2I000E6Genome\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INST_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INST_LIB_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SEQUENCE_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E6Genome\" title=\"Genome::INST_T\"><span class=\"n\"><span class=\"pre\">INST_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classGenome\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Genome</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E6Genome\" title=\"Genome::INST_T\"><span class=\"n\"><span class=\"pre\">INST_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/SmallFifoMap.html#_CPPv4I00_6size_tE12SmallFifoMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE12SmallFifoMap\">\n<span id=\"_CPPv3I00_6size_tE12SmallFifoMap\"></span><span id=\"_CPPv2I00_6size_tE12SmallFifoMap\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Value</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallFifoMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallFifoMap</span></span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE6BitSet\">\n<span id=\"_CPPv3I_6size_tE6BitSet\"></span><span id=\"_CPPv2I_6size_tE6BitSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Bits_8hpp_1a4c742749fece7b56c2dc648d7a731504\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits_Data.html#_CPPv4I_6size_tE14Bits_FixedData\" title=\"Bits_FixedData\"><span class=\"n\"><span class=\"pre\">Bits_FixedData</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE6BitSet\" title=\"BitSet::NUM_BITS\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E11is_ptr_typeI3PtrI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_ptr_typeI3PtrI1TEE\">\n<span id=\"_CPPv3I0E11is_ptr_typeI3PtrI1TEE\"></span><span id=\"_CPPv2I0E11is_ptr_typeI3PtrI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__ptr__type_3_01Ptr_3_01T_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_ptr_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11is_ptr_typeI3PtrI1TEE\" title=\"is_ptr_type&lt;Ptr&lt;T&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv4IDpE7AllTruebbDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE7AllTruebbDp2Ts\">\n<span id=\"_CPPv3IDpE7AllTruebDp2Ts\"></span><span id=\"_CPPv2IDpE7AllTruebDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a075f1126bb7a576c0395626114b8c172\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AllTrue</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">result</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE7AllTruebbDp2Ts\" title=\"AllTrue::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">OTHER</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataLayout.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DataLayout.hpp<a class=\"headerlink\" href=\"#datalayout-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A mapping of names to variables stored in a MemoryImage. </p>", "a[href=\"library/web/api/emfunctions.html#_CPPv419GetElementAttributeRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419GetElementAttributeRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv319GetElementAttributeRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv219GetElementAttributeRKNSt6stringERKNSt6stringE\"></span><span id=\"GetElementAttribute__ssCR.ssCR\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a382fb9d51292679c188786c96a14db5f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetElementAttribute</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">attribute</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get the value of. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv44Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdddd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdddd\">\n<span id=\"_CPPv34Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdddd\"></span><span id=\"_CPPv24Draw6CanvasRK6vectorI6vectorI6size_tEERK6vectorINSt6stringEENSt6stringEdddd\"></span><span id=\"Draw__Canvas.vector:vector:s::CR.vector:ss:CR.ss.double.double.double.double\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1a31d4db16ae559c50166fe47fcc10feae\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">grid</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cell_width</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cell_height</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">offset_x</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">offset_y</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a grid onto a canvas. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\">\n<span id=\"_CPPv3I0E11RemoveValueR6vectorI1TERK1T6size_t\"></span><span id=\"_CPPv2I0E11RemoveValueR6vectorI1TERK1T6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a73bb33bf06bc252bbd410a274143bae9\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RemoveValue</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\" title=\"RemoveValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11RemoveValuebR6vectorI1TERK1T6size_t\" title=\"RemoveValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove the first value after start_pos with a given value. Return if removal successful. </p></dd>", "a[href=\"library/base/api/errors.html#_CPPv49PopExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49PopExceptRKNSt6stringE\">\n<span id=\"_CPPv39PopExceptRKNSt6stringE\"></span><span id=\"_CPPv29PopExceptRKNSt6stringE\"></span><span id=\"PopExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1aad6ee82ff22a219a351377433c54bed3\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410ExceptInfo\" title=\"ExceptInfo\"><span class=\"n\"><span class=\"pre\">ExceptInfo</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PopExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get and <em>remove</em> a waiting exception. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412to_titlecaseNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412to_titlecaseNSt6stringE\">\n<span id=\"_CPPv312to_titlecaseNSt6stringE\"></span><span id=\"_CPPv212to_titlecaseNSt6stringE\"></span><span id=\"to_titlecase__ss\"></span><span class=\"target\" id=\"string__utils_8hpp_1a180e705e3e500c304253f5e3628587f2\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_titlecase</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make first letter of each word upper case. </p></dd>", "a[href=\"BuiltWithEmpiricalGallery/index.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Built With Empirical Gallery<a class=\"headerlink\" href=\"#built-with-empirical-gallery\" title=\"Link to this heading\">\uf0c1</a></h1><p>This listing showcases web tools built using Empirical. Put in a PR or\nraise an issue to have <em>your</em> project featured!</p>", "a[href=\"library/evolve/evolve.html#phylostatistics-calculations\"]": "<h4 class=\"tippy-header\" style=\"margin-top: 0;\">Phylostatistics calculations<a class=\"headerlink\" href=\"#phylostatistics-calculations\" title=\"Link to this heading\">\uf0c1</a></h4><p>Phylogenies are very information-dense data structures, but it can sometimes be hard to know how to usefully compare them. A variety of phylogenetic summary statistics (mostly based on topology) have been developed for the purpose of usefully making high-level comparisons. The systematics manager has many of these statistics built-in and can automatically output them. It can even keep running data (mean, variance, maximum, and minimum) on each statistic over time in a highly efficient format.</p><p>Available statistics include:</p>", "a[href=\"library/matching/api/matchbin_selectors.html#_CPPv414CacheStateBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414CacheStateBase\">\n<span id=\"_CPPv314CacheStateBase\"></span><span id=\"_CPPv214CacheStateBase\"></span><span id=\"CacheStateBase\"></span><span class=\"target\" id=\"structCacheStateBase\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CacheStateBase</span></span></span><br/></dt><dd><p>Subclassed by RankedCacheState, RouletteCacheState, SieveCacheState</p></dd>", "a[href=\"library/datastructs/api/BloomFilter.html#_CPPv4orRK11BloomFilterRK11BloomFilter\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4orRK11BloomFilterRK11BloomFilter\">\n<span id=\"_CPPv3orRK11BloomFilterRK11BloomFilter\"></span><span id=\"_CPPv2orRK11BloomFilterRK11BloomFilter\"></span><span id=\"or-operator__BloomFilterCR.BloomFilterCR\"></span><span class=\"target\" id=\"BloomFilter_8hpp_1affc9c2fad7d9c9e3f909afe7ea909e22\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"k\"><span class=\"pre\">operator</span></span><span class=\"o\"><span class=\"pre\">|</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">a</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411BloomFilter\" title=\"BloomFilter\"><span class=\"n\"><span class=\"pre\">BloomFilter</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the union of two Bloom filters. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4IE7BasePtrIvE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE7BasePtrIvE\">\n<span id=\"_CPPv3IE7BasePtrIvE\"></span><span id=\"_CPPv2IE7BasePtrIvE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBasePtr_3_01void_01_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BasePtr</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Base class with functionality only needed in void pointers. </p></dd>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\">\n<span id=\"_CPPv3I_6size_t00E23GenRandSignalGPFunctionR6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\"></span><span id=\"_CPPv2I_6size_t00E23GenRandSignalGPFunctionR6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/MatchBin.html#_CPPv4I0000E8MatchBin\" title=\"MatchBin\"><span class=\"n\"><span class=\"pre\">MatchBin</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric\"><span class=\"n\"><span class=\"pre\">HammingMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0_6size_tE14RankedSelector\" title=\"RankedSelector\"><span class=\"n\"><span class=\"pre\">RankedSelector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E32MultiplicativeCountdownRegulator\" title=\"MultiplicativeCountdownRegulator\"><span class=\"n\"><span class=\"pre\">MultiplicativeCountdownRegulator</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"signalgp__utils_8hpp_1aacaaeb47d670696dc518c63dca2dcfd1\"></span><a class=\"reference internal\" href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::TRAIT_T\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::MATCHBIN_T\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">Function</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenRandSignalGPFunction</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rnd</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/hardware/api/InstLib.html#_CPPv4I00_6size_tE7InstLib\" title=\"InstLib\"><span class=\"n\"><span class=\"pre\">InstLib</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/hardware/api/EventDrivenGP.html#_CPPv4I_6size_t00E16EventDrivenGP_AW\" title=\"EventDrivenGP_AW\"><span class=\"n\"><span class=\"pre\">EventDrivenGP_AW</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::TRAIT_T\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E23GenRandSignalGPFunctionN16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TE8FunctionER6RandomRK7InstLibI16EventDrivenGP_AWI9TAG_WIDTH7TRAIT_T10MATCHBIN_TEE6size_t6size_tii\" title=\"GenRandSignalGPFunction::MATCHBIN_T\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">inst_lib</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_inst_cnt</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_inst_cnt</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">32</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_arg_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_arg_val</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">15</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random SignalGP function (templated off of tag width). </p></dd>", "a[href=\"library/debug/api/alert.html#_CPPv48AlertObj\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48AlertObj\">\n<span id=\"_CPPv38AlertObj\"></span><span id=\"_CPPv28AlertObj\"></span><span id=\"AlertObj\"></span><span class=\"target\" id=\"structAlertObj\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlertObj</span></span></span><br/></dt><dd><p>An object that will automatically output a message during construction or destruction, usually for use in debugging to disentangle timings. </p></dd>", "a[href=\"library/datastructs/api/map_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">map_utils.hpp<a class=\"headerlink\" href=\"#map-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate maps. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\">\n<span id=\"_CPPv3IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\"></span><span id=\"_CPPv2IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U0</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__intersection_3_01Cmp_00_01Variadic_3_01U0_8_8_8_01_4_00_01U1_00_01U_8_8_8_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_intersection</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::Variadic\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::U0\"><span class=\"n\"><span class=\"pre\">U0</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::U1\"><span class=\"n\"><span class=\"pre\">U1</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IIDpE0I00E0Dp0DpE21variadic_intersectionI3Cmp8VariadicIDp2U0E2U1Dp1UE\" title=\"variadic_intersection&lt;Cmp, Variadic&lt;U0...&gt;, U1, U...&gt;::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/data/api/SimpleParser.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SimpleParser.hpp<a class=\"headerlink\" href=\"#simpleparser-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Parser to convert function descriptions to lambdas using maps for variable lookup. </p><p>\nA fully functional parser that will convert a string-description of a function to a C++ lambda. A map-typed object should be passed in to provide values associated with variables. Allowed map types include std::map&lt;std::string,T&gt;, std::unordered_map&lt;std::string,T&gt;, DataMap, and (soon) derivations from AnnotatedType. For standard maps, T must be convertable to Datum.</p>", "a[href=\"library/tools/api/String.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">String.hpp<a class=\"headerlink\" href=\"#string-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Simple class to facilitate string manipulations. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Make constexpr </p>\n<p>Make handle non-\u2018char\u2019 strings (i.e., use CharT template parameter) </p>\n<p>Make handle allocators </p>\n<p>Make work more broadly with stringviews </p>\n<p>Maybe add special construct types like RESERVE, REPEAT, and TO_STRING for special builds?</p>\n</dd></dl>\n</p>", "a[href=\"library/geometry/api/Physics2D.html#_CPPv4I0E9Physics2D\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9Physics2D\">\n<span id=\"_CPPv3I0E9Physics2D\"></span><span id=\"_CPPv2I0E9Physics2D\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPhysics2D\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Physics2D</span></span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv415RandomBitVectorR6Random6size_td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415RandomBitVectorR6Random6size_td\">\n<span id=\"_CPPv315RandomBitVectorR6Random6size_td\"></span><span id=\"_CPPv215RandomBitVectorR6Random6size_td\"></span><span id=\"RandomBitVector__RandomR.s.double\"></span><span class=\"target\" id=\"random__utils_8hpp_1a30ff98e925590494f265c74561adddda\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv49BitVector\" title=\"BitVector\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomBitVector</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">size</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.5</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a random BitVector of the specified size. </p></dd>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\">\n<span id=\"_CPPv3I00DpE8MergeDFARR2T1RR2T2DpRR2Ts\"></span><span id=\"_CPPv2I00DpE8MergeDFARR2T1RR2T2DpRR2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T2</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"group__lexer__utilities_1gab95c63a8f97e717e82b5450c0fa1db62\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MergeDFA</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\" title=\"MergeDFA::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\" title=\"MergeDFA::T2\"><span class=\"n\"><span class=\"pre\">T2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00DpE8MergeDFA3DFARR2T1RR2T2DpRR2Ts\" title=\"MergeDFA::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">others</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Merge multiple automata (DFA, NFA, RegEx) into one DFA. </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E6MaxRefRK1TRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6MaxRefRK1TRK1T\">\n<span id=\"_CPPv3I0E6MaxRefRK1T\"></span><span id=\"_CPPv2I0E6MaxRefRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a6ff252f9eaf830c73a87b3d1d735f160\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6MaxRefRK1TRK1T\" title=\"MaxRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6MaxRefRK1TRK1T\" title=\"MaxRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>MaxRef works like Max, but never copies any inputs; always treats as references. MaxRef of only one element returns reference to that element itself! </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416ANSI_BrightWhitev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ANSI_BrightWhitev\">\n<span id=\"_CPPv316ANSI_BrightWhitev\"></span><span id=\"_CPPv216ANSI_BrightWhitev\"></span><span id=\"ANSI_BrightWhite\"></span><span class=\"target\" id=\"string__utils_8hpp_1a3415f7cea8b6f4e5be465c964f03975c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightWhite</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E7FindMin1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7FindMin1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E7FindMinRK6vectorI1TE\"></span><span id=\"_CPPv2I0E7FindMinRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a18e2f47e87446c429a9219206fbb0b68\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMin1TRK6vectorI1TE\" title=\"FindMin::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMin</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMin1TRK6vectorI1TE\" title=\"FindMin::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the minimum value in a vector. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv48is_digitc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48is_digitc\">\n<span id=\"_CPPv38is_digitc\"></span><span id=\"_CPPv28is_digitc\"></span><span id=\"is_digit__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a2249fed59567c115278ccde87c97a55f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_digit</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417has_nonwhitespaceRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417has_nonwhitespaceRKNSt6stringE\">\n<span id=\"_CPPv317has_nonwhitespaceRKNSt6stringE\"></span><span id=\"_CPPv217has_nonwhitespaceRKNSt6stringE\"></span><span id=\"has_nonwhitespace__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a43ceaa6096a926f6cc505cf2f42f1980\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_nonwhitespace</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/debug/debug.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Debug<a class=\"headerlink\" href=\"#debug\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/TypePack.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TypePack.hpp<a class=\"headerlink\" href=\"#typepack-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of types that can be manipulated at compile time (good for metaprogramming) </p><p>TypePacks are static structures that provide a large set of mechanisms to access and adjust the included types.</p>", "a[href=\"library/datastructs/api/ra_set.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ra_set.hpp<a class=\"headerlink\" href=\"#ra-set-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file defines a Random Access Set template. </p>", "a[href=\"library/datastructs/api/vector_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">vector_utils.hpp<a class=\"headerlink\" href=\"#vector-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate vector. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>consider adding a work-around to avoid vector&lt;bool&gt; ? </p>\n<p>speed up Append to count all additions at once, resize, and fill them in. </p>\n</dd></dl>\n</p>", "a[href=\"library/tools/api/char_utils.html#_CPPv413LetterCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413LetterCharSetv\">\n<span id=\"_CPPv313LetterCharSetv\"></span><span id=\"_CPPv213LetterCharSetv\"></span><span id=\"LetterCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1af52abca9355118eeb22f8d8969f79370\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LetterCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/api/events.html#_CPPv413KeyboardEvent\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413KeyboardEvent\">\n<span id=\"_CPPv313KeyboardEvent\"></span><span id=\"_CPPv213KeyboardEvent\"></span><span id=\"KeyboardEvent\"></span><span class=\"target\" id=\"structKeyboardEvent\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KeyboardEvent</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Event\" title=\"Event\"><span class=\"n\"><span class=\"pre\">Event</span></span></a><br/></dt><dd><p>Keyboard-specific information about web events. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E10type_index\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10type_index\">\n<span id=\"_CPPv3I0E10type_index\"></span><span id=\"_CPPv2I0E10type_index\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T1</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtype__index_3_01T1_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_index</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10type_index\" title=\"type_index::T1\"><span class=\"n\"><span class=\"pre\">T1</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/tuple_utils.html#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\">\n<span id=\"_CPPv3I00E12TupleIterateR7TUPLE_TRK5FUN_T\"></span><span id=\"_CPPv2I00E12TupleIterateR7TUPLE_TRK5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"tuple__utils_8hpp_1a25ed5449a8aa424858a55dfa93c16a87\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TupleIterate</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\" title=\"TupleIterate::TUPLE_T\"><span class=\"n\"><span class=\"pre\">TUPLE_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">tup</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E12TupleIteratevR7TUPLE_TRK5FUN_T\" title=\"TupleIterate::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a provided function on each element of a tuple. </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv415pow2_chart_bits\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415pow2_chart_bits\">\n<span id=\"_CPPv315pow2_chart_bits\"></span><span id=\"_CPPv215pow2_chart_bits\"></span><span id=\"pow2_chart_bits__doubleCA\"></span><span class=\"target\" id=\"constants_8hpp_1ab0faa85c93a33f36775b2cc7150a8b50\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pow2_chart_bits</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">{</span></span><span class=\"m\"><span class=\"pre\">1.4142135623730951</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.1892071150027210</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0905077326652577</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0442737824274138</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0218971486541166</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0108892860517005</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0054299011128027</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0027112750502025</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0013547198921082</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0006771306930664</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0003385080526823</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0001692397053021</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000846162726944</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000423072413958</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000211533969647</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000105766425498</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000052883072919</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000026441501502</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000013220742012</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000006610368821</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000003305183864</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000001652591795</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000826295863</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000413147923</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000206573960</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000103286979</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000051643489</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000025821745</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000012910872</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000006455436</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000003227718</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1.0000000001613858</span></span><span class=\"p\"><span class=\"pre\">}</span></span><br/></dt><dd><p>Table to provide results of Pow2 for values of bits (0.1, 0.01, 0.001, etc, in binary) </p></dd>", "a[href=\"library/compiler/api/NFA.html#_CPPv4I_6size_t0E10tNFA_State\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E10tNFA_State\">\n<span id=\"_CPPv3I_6size_t0E10tNFA_State\"></span><span id=\"_CPPv2I_6size_t0E10tNFA_State\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_SYMBOLS</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">128</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">STOP_TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint8_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classtNFA__State\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tNFA_State</span></span></span><br/></dt><dd><p>Information about the current full state (i.e., set of legal states) of an NFA. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48is_lowerRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48is_lowerRKNSt6stringE\">\n<span id=\"_CPPv38is_lowerRKNSt6stringE\"></span><span id=\"_CPPv28is_lowerRKNSt6stringE\"></span><span id=\"is_lower__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8a53f14f5a12a9403d5ebbfc8aad75ff\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_lower</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if there are only lowercase letters in a string. </p></dd>", "a[href=\"library/web/api/CanvasShape.html#_CPPv413CanvasPolygon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413CanvasPolygon\">\n<span id=\"_CPPv313CanvasPolygon\"></span><span id=\"_CPPv213CanvasPolygon\"></span><span id=\"CanvasPolygon\"></span><span class=\"target\" id=\"classCanvasPolygon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasPolygon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>An arbitrary-sized polygon to be drawn on a canvas. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IDpE17variadic_concat_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE17variadic_concat_t\">\n<span id=\"_CPPv3IDpE17variadic_concat_t\"></span><span id=\"_CPPv2IDpE17variadic_concat_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadics</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a06749a582161167a2a1c5bcbafc3d824\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_concat_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4IDpE15variadic_concat\" title=\"variadic_concat\"><span class=\"n\"><span class=\"pre\">variadic_concat</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE17variadic_concat_t\" title=\"variadic_concat_t::Variadics\"><span class=\"n\"><span class=\"pre\">Variadics</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/TypePack.html#_CPPv4IDpE8TypePack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE8TypePack\">\n<span id=\"_CPPv3IDpE8TypePack\"></span><span id=\"_CPPv2IDpE8TypePack\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structTypePack\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TypePack</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E12replace_varsNSt6stringERKNSt6stringERK5MAP_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12replace_varsNSt6stringERKNSt6stringERK5MAP_T\">\n<span id=\"_CPPv3I0E12replace_varsRKNSt6stringERK5MAP_T\"></span><span id=\"_CPPv2I0E12replace_varsRKNSt6stringERK5MAP_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1ad942a8f902331e44ae3a4d5df4c8334c\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">replace_vars</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12replace_varsNSt6stringERKNSt6stringERK5MAP_T\" title=\"replace_vars::MAP_T\"><span class=\"n\"><span class=\"pre\">MAP_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">var_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find any instances of ${X} and replace with dictionary lookup of X. </p></dd>", "a[href=\"library/geometry/api/Point2D.html#_CPPv45Point\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Point\">\n<span id=\"_CPPv35Point\"></span><span id=\"_CPPv25Point\"></span><span class=\"target\" id=\"Point2D_8hpp_1ad902349a5bcb1e04b85f04979d7de16f\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Point</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7Point2D\" title=\"Point2D\"><span class=\"n\"><span class=\"pre\">Point2D</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv46ChooseR6Random6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46ChooseR6Random6size_t6size_t\">\n<span id=\"_CPPv36ChooseR6Random6size_t6size_t\"></span><span id=\"_CPPv26ChooseR6Random6size_t6size_t\"></span><span id=\"Choose__RandomR.s.s\"></span><span class=\"target\" id=\"random__utils_8hpp_1a14ae0d70253c2f770c2a36cabb9ab5e2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Choose</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">K</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv49MakeUpperRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MakeUpperRK6String\">\n<span id=\"_CPPv39MakeUpperRK6String\"></span><span id=\"_CPPv29MakeUpperRK6String\"></span><span id=\"MakeUpper__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1a2d22a6c479eecdbc70bdf678fe62e13d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeUpper</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a string to all uppercase. </p></dd>", "a[href=\"library/prefab/api/Collapse.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Collapse.hpp<a class=\"headerlink\" href=\"#collapse-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Sets up a collapsable DOM element. </p>", "a[href=\"library/math/api/CombinedBinomialDistribution.html#_CPPv43emp\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43emp\">\n<span id=\"_CPPv33emp\"></span><span id=\"_CPPv23emp\"></span><span id=\"emp\"></span><span class=\"target\" id=\"namespaceemp\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">emp</span></span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World.html#_CPPv4I0E5World\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5World\">\n<span id=\"_CPPv3I0E5World\"></span><span id=\"_CPPv2I0E5World\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classWorld\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World</span></span></span><br/></dt><dd><p>Setup a World with a population of organisms that can evolve or deal with ecological effects. </p><p>There are three ways that organisms can enter the population:<ul class=\"simple\">\n<li><p>InjectAt(org, pos) - place the organism at the specified position in the population.</p></li>\n<li><p>Inject(org) - place the organism using a default postion (given other settings).</p></li>\n<li><p>DoBirth(org, parent_pos) - place the organism using current birth settings.</p></li>\n</ul>\n</p><p>If the population is in EA mode (with synchronous generations), DoBirth will place offspring in a \u201cnext generation\u201d placeholder population. Update() will move orgs into primary population.</p><p>Organisms have a series of functions that are called on them that are chosen:</p><p>FITNESS: Most selection methods require a fitness function to help determine who should be replicated. Other systems merely use fitness as a measured output. 0. If you explicitly set the fitness function using SetFitFun(), it will have priority.<ol class=\"loweralpha simple\">\n<li><p>If the organism type has a \u201cGetFitness()\u201d member function, use it!</p></li>\n<li><p>If the organism type can be cast to double, use it!</p></li>\n<li><p>Start with a fitness function that throws an assert indicating function must be set.</p></li>\n</ol>\n</p><p>MUTATIONS: The mutation function determines a main source of variation for most evolving systems. 0. If you set the mutation function using SetMutFun(), it will have priority.<ol class=\"loweralpha simple\">\n<li><p>Or DoMutations(random) member function.</p></li>\n<li><p>Empty, with assert.</p></li>\n</ol>\n</p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E15BuildObjVector1vR6vectorI5OBJ_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15BuildObjVector1vR6vectorI5OBJ_TE\">\n<span id=\"_CPPv3I0E15BuildObjVector1R6vectorI5OBJ_TE\"></span><span id=\"_CPPv2I0E15BuildObjVector1R6vectorI5OBJ_TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1aee33979764f355000b2ed73b3eb85b0f\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BuildObjVector1</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E15BuildObjVector1vR6vectorI5OBJ_TE\" title=\"BuildObjVector1::OBJ_T\"><span class=\"n\"><span class=\"pre\">OBJ_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Group types in a parameter pack to build a vector of a designated type. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I_6size_t0E15int_bit_count_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E15int_bit_count_t\">\n<span id=\"_CPPv3I_6size_t0E15int_bit_count_t\"></span><span id=\"_CPPv2I_6size_t0E15int_bit_count_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BIT_COUNT</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DEFAULT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1ad60275d9652d050e9436bbab728dc208\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_bit_count_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E13int_bit_count\" title=\"int_bit_count\"><span class=\"n\"><span class=\"pre\">int_bit_count</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E15int_bit_count_t\" title=\"int_bit_count_t::BIT_COUNT\"><span class=\"n\"><span class=\"pre\">BIT_COUNT</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t0E15int_bit_count_t\" title=\"int_bit_count_t::DEFAULT\"><span class=\"n\"><span class=\"pre\">DEFAULT</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/RegEx.html#_CPPv45RegEx\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45RegEx\">\n<span id=\"_CPPv35RegEx\"></span><span id=\"_CPPv25RegEx\"></span><span id=\"RegEx\"></span><span class=\"target\" id=\"classRegEx\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RegEx</span></span></span><br/></dt><dd><p>A basic regular expression handler. </p></dd>", "a[href=\"dev/getting-started.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id1\" role=\"doc-backlink\">Getting started with Empirical development</a><a class=\"headerlink\" href=\"#getting-started-with-empirical-development\" title=\"Link to this heading\">\uf0c1</a></h1><p>This document is intended to help those just getting started with\nEmpirical development. It details the initial one-time dependency\ninstalls and any similar routines necessary to get started with\ndevelopment.</p><p>Start by making your own copy of Empirical and setting yourself up for\ndevelopment; then, build Empirical and run the tests; and finally, claim\nan issue and start developing!</p>", "a[href=\"library/tools/api/String.html#_CPPv4I0E4Join6StringRK11CONTAINER_TNSt6stringENSt6stringENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4Join6StringRK11CONTAINER_TNSt6stringENSt6stringENSt6stringE\">\n<span id=\"_CPPv3I0E4JoinRK11CONTAINER_TNSt6stringENSt6stringENSt6stringE\"></span><span id=\"_CPPv2I0E4JoinRK11CONTAINER_TNSt6stringENSt6stringENSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1a8eaf0a8e4125ea148f9be0689f6f22d2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Join</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4Join6StringRK11CONTAINER_TNSt6stringENSt6stringENSt6stringE\" title=\"Join::CONTAINER_T\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">join_str</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">open</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">close</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function returns values from a container as a single string separated by a given delimeter and with optional surrounding strings. </p></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\">\n<span id=\"_CPPv3I000E5AllOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span id=\"_CPPv2I000E5AllOfRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a3b696476533b932b72a134d091b43433\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AllOf</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AllOf::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AllOf::ELEMENT_T\"><span class=\"n\"><span class=\"pre\">ELEMENT_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">c</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E5AllOfbRKNSt3mapI5KEY_T9ELEMENT_TEE5FUN_T\" title=\"AllOf::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/TypeTracker.html#_CPPv416TrackedInfo_Base\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416TrackedInfo_Base\">\n<span id=\"_CPPv316TrackedInfo_Base\"></span><span id=\"_CPPv216TrackedInfo_Base\"></span><span id=\"TrackedInfo_Base\"></span><span class=\"target\" id=\"structTrackedInfo__Base\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedInfo_Base</span></span></span><br/></dt><dd><p>The proxy base class of any type to be tracked. </p><p>Subclassed by TrackedInfo_Value&lt; REAL_T, ID &gt;</p></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E17World_MinDistInfo\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17World_MinDistInfo\">\n<span id=\"_CPPv3I0E17World_MinDistInfo\"></span><span id=\"_CPPv2I0E17World_MinDistInfo\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structWorld__MinDistInfo\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">World_MinDistInfo</span></span></span><br/></dt><dd><p>Build a class to track distances between organisms. </p><p>DiverseElites is similar to MAP-Elites, but rather than merely keep the elites on a pre-defined grid, it merely tries to maintain maximal distance between elites in trait space. The main advantages to this technique are (1) It\u2019s easy to build up an inital population that grows in diversity over time, and (2) You don\u2019t need to predefine box sizes or even limits to trait values. Set the population to use a DiverseElites structure. This means that organism placement has two key components: 1: Organism position is in continuous space based on phenotypic traits. 2: When the population is full, nearby organisms must battle to keep their position.</p><p>Note: Since organisms compete with their predecessors for space in the populations, synchronous generations do not make sense. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE43ExactStreakDistribution_ConstructOnFirstUseRK23ExactStreakDistributionI1NEv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE43ExactStreakDistribution_ConstructOnFirstUseRK23ExactStreakDistributionI1NEv\">\n<span id=\"_CPPv3I_6size_tE43ExactStreakDistribution_ConstructOnFirstUsev\"></span><span id=\"_CPPv2I_6size_tE43ExactStreakDistribution_ConstructOnFirstUsev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"matchbin__metrics_8hpp_1a3018e5b2df75d983c2bb8eb90c023235\"></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE23ExactStreakDistribution\" title=\"ExactStreakDistribution\"><span class=\"n\"><span class=\"pre\">ExactStreakDistribution</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE43ExactStreakDistribution_ConstructOnFirstUseRK23ExactStreakDistributionI1NEv\" title=\"ExactStreakDistribution_ConstructOnFirstUse::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExactStreakDistribution_ConstructOnFirstUse</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE8BitArray\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE8BitArray\">\n<span id=\"_CPPv3I_6size_tE8BitArray\"></span><span id=\"_CPPv2I_6size_tE8BitArray\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Bits_8hpp_1a39d3ab7f966a4fdb613b405f00c1077b\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitArray</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits_Data.html#_CPPv4I_6size_tE14Bits_FixedData\" title=\"Bits_FixedData\"><span class=\"n\"><span class=\"pre\">Bits_FixedData</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE8BitArray\" title=\"BitArray::NUM_BITS\"><span class=\"n\"><span class=\"pre\">NUM_BITS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/geometry/api/Circle2D.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Circle2D.hpp<a class=\"headerlink\" href=\"#circle2d-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A class to manage circles in a 2D plane. </p>", "a[href=\"library/meta/api/type_traits.html#_CPPv4II00E0DpE14variadic_union\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4II00E0DpE14variadic_union\">\n<span id=\"_CPPv3II00E0DpE14variadic_union\"></span><span id=\"_CPPv2II00E0DpE14variadic_union\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__union\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_union</span></span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv49BitVector\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49BitVector\">\n<span id=\"_CPPv39BitVector\"></span><span id=\"_CPPv29BitVector\"></span><span class=\"target\" id=\"Bits_8hpp_1a5d2f930a5e5d86a910b3a02d7e94dd13\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitVector</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits_Data.html#_CPPv418Bits_WatermarkData\" title=\"Bits_WatermarkData\"><span class=\"n\"><span class=\"pre\">Bits_WatermarkData</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv420MakeFromLiteral_CharRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv420MakeFromLiteral_CharRK6String\">\n<span id=\"_CPPv320MakeFromLiteral_CharRK6String\"></span><span id=\"_CPPv220MakeFromLiteral_CharRK6String\"></span><span id=\"MakeFromLiteral_Char__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1a6b48af8c7f680c15345edb79be2141dd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeFromLiteral_Char</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p><p>Convert a literal character representation to an actual string. (i.e., \u2018A\u2019, \u2018;\u2019, or \u2018</p>\n<p>\u2019)</p>\n</p></dd>", "a[href=\"library/geometry/api/Surface.html#_CPPv4IDpE7Surface\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE7Surface\">\n<span id=\"_CPPv3IDpE7Surface\"></span><span id=\"_CPPv2IDpE7Surface\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPES</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSurface\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Surface</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E9set_union6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E9set_union6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a3ee7a5a9bf4ee410571ccb36d2ca075c\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4II00E0DpE23variadic_intersection_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4II00E0DpE23variadic_intersection_t\">\n<span id=\"_CPPv3II00E0DpE23variadic_intersection_t\"></span><span id=\"_CPPv2II00E0DpE23variadic_intersection_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">U</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1a283e86e779ee18f9dd1e66670e63568a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_intersection_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4II00E0DpE21variadic_intersection\" title=\"variadic_intersection\"><span class=\"n\"><span class=\"pre\">variadic_intersection</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4II00E0DpE23variadic_intersection_t\" title=\"variadic_intersection_t::Cmp\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4II00E0DpE23variadic_intersection_t\" title=\"variadic_intersection_t::U\"><span class=\"n\"><span class=\"pre\">U</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E7HeapifybR6vectorI1TE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7HeapifybR6vectorI1TE6size_t\">\n<span id=\"_CPPv3I0E7HeapifyR6vectorI1TE6size_t\"></span><span id=\"_CPPv2I0E7HeapifyR6vectorI1TE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a55e8e7ced57347dc549c94e48e9a9bba\"></span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Heapify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7HeapifybR6vectorI1TE6size_t\" title=\"Heapify::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Heapify an individual node in a vector. </p></dd>", "a[href=\"library/datastructs/api/SmallVector.html#_CPPv4I0_bE23SmallVectorTemplateBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE23SmallVectorTemplateBase\">\n<span id=\"_CPPv3I0_bE23SmallVectorTemplateBase\"></span><span id=\"_CPPv2I0_bE23SmallVectorTemplateBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_trivially_copyable</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSmallVectorTemplateBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateBase</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E25SmallVectorTemplateCommon\" title=\"SmallVectorTemplateCommon\"><span class=\"n\"><span class=\"pre\">SmallVectorTemplateCommon</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE23SmallVectorTemplateBase\" title=\"SmallVectorTemplateBase::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>SmallVectorTemplateBase&lt;TriviallyCopyable = false&gt; - This is where we put method implementations that are designed to work with non-POD-like T\u2019s. </p></dd>", "a[href=\"library/datastructs/api/span_utils.html#_CPPv4St\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4St\">\n<span id=\"_CPPv3St\"></span><span id=\"_CPPv2St\"></span><span id=\"std\"></span><span class=\"target\" id=\"namespacestd\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">std</span></span></span><br/></dt><dd><p>STL namespace. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv4I_6size_t_6size_tE4Drawv6CanvasRK9BitMatrixI4COLS4ROWSEdd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t_6size_tE4Drawv6CanvasRK9BitMatrixI4COLS4ROWSEdd\">\n<span id=\"_CPPv3I_6size_t_6size_tE4Draw6CanvasRK9BitMatrixI4COLS4ROWSEdd\"></span><span id=\"_CPPv2I_6size_t_6size_tE4Draw6CanvasRK9BitMatrixI4COLS4ROWSEdd\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">COLS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ROWS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"canvas__utils_8hpp_1aaffc820c62b75723acc7907132ab45b0\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/BitMatrix.html#_CPPv4I_6size_t_6size_tE9BitMatrix\" title=\"BitMatrix\"><span class=\"n\"><span class=\"pre\">BitMatrix</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t_6size_tE4Drawv6CanvasRK9BitMatrixI4COLS4ROWSEdd\" title=\"Draw::COLS\"><span class=\"n\"><span class=\"pre\">COLS</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t_6size_tE4Drawv6CanvasRK9BitMatrixI4COLS4ROWSEdd\" title=\"Draw::ROWS\"><span class=\"n\"><span class=\"pre\">ROWS</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">matrix</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">w</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">h</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a BitMatrix onto a canvas using black and white squares (can specify cell width and height) Draw a Circle onto the canvas. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv410PtrTracker\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410PtrTracker\">\n<span id=\"_CPPv310PtrTracker\"></span><span id=\"_CPPv210PtrTracker\"></span><span id=\"PtrTracker\"></span><span class=\"target\" id=\"classPtrTracker\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PtrTracker</span></span></span><br/></dt><dd><p>Facilitate tracking of all Ptr objects in this run. </p></dd>", "a[href=\"library/geometry/api/Point2D.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Point2D.hpp<a class=\"headerlink\" href=\"#point2d-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple class to track value pairs of any kind, optimized for points in 2D Space. </p>", "a[href=\"library/math/api/math.html#_CPPv414UnbiasedDivideiiR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414UnbiasedDivideiiR6Random\">\n<span id=\"_CPPv314UnbiasedDivideiiR6Random\"></span><span id=\"_CPPv214UnbiasedDivideiiR6Random\"></span><span id=\"UnbiasedDivide__i.i.RandomR\"></span><span class=\"target\" id=\"math_8hpp_1a491d56170a1dce133ed1d886f34bbbe6\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnbiasedDivide</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">dividend</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">divisor</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">r</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Regular integer division is truncated, not rounded. Round the division result instead of truncating it. Rounding ties (i.e., result % divisor == 0.5) are broken by coin toss. </p></dd>", "a[href=\"library/prefab/api/ValueBox.html#_CPPv48ValueBox\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ValueBox\">\n<span id=\"_CPPv38ValueBox\"></span><span id=\"_CPPv28ValueBox\"></span><span id=\"ValueBox\"></span><span class=\"target\" id=\"classValueBox\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ValueBox</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>ValueBox is the base class for a component to show information. At its core it has a label, a description, and a value to display.</p><p>ValueBoxes and derived classes placed in component with the \u201csettings_group\u201d or \u201cdisplay_group\u201d class will align to a grid. </p><p>Subclassed by BoolValueControl, LiveValueDisplay, ValueControl, ValueDisplay</p></dd>", "a[href=\"library/games/api/Othello.html#_CPPv412Othello_Base\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412Othello_Base\">\n<span id=\"_CPPv312Othello_Base\"></span><span id=\"_CPPv212Othello_Base\"></span><span id=\"Othello_Base\"></span><span class=\"target\" id=\"structOthello__Base\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Othello_Base</span></span></span><br/></dt><dd><p>Base class for all sizes of Othello games. </p><p>NOTE: This game could be made more black-box.<ul class=\"simple\">\n<li><p>Hide almost everything. Only give users access to game-advancing functions (don\u2019t allow willy-nilly board manipulation, etc). This would let us make lots of assumptions about calculating flip lists, scores, etc, which would speed up asking for flip lists, etc. multiple times during a turn. </p></li>\n</ul>\n</p><p>Subclassed by Othello_Game&lt; BOARD_SIZE &gt;</p></dd>", "a[href=\"library/math/api/constants.html#_CPPv4I0E8MaxValue1Tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8MaxValue1Tv\">\n<span id=\"_CPPv3I0E8MaxValuev\"></span><span id=\"_CPPv2I0E8MaxValuev\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"constants_8hpp_1aa19af77945a88e3c1dc88ea4693edc2b\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8MaxValue1Tv\" title=\"MaxValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaxValue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine the maximum value for any type. </p></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv412szudzik_hash8uint32_t8uint32_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412szudzik_hash8uint32_t8uint32_t\">\n<span id=\"_CPPv312szudzik_hash8uint32_t8uint32_t\"></span><span id=\"_CPPv212szudzik_hash8uint32_t8uint32_t\"></span><span id=\"szudzik_hash__uint32_t.uint32_t\"></span><span class=\"target\" id=\"hash__utils_8hpp_1a06b7b3fbca659dae55c50ee377cf5f63\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint64_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">szudzik_hash</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">a_</span></span>, <span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">b_</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Generate a unique long from a pair of ints. </p></dd>", "a[href=\"library/io/api/File.html#_CPPv44File\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44File\">\n<span id=\"_CPPv34File\"></span><span id=\"_CPPv24File\"></span><span id=\"File\"></span><span class=\"target\" id=\"classFile\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">File</span></span></span><br/></dt><dd><p>A class to maintain files for loading, writing, storing, and easy access to components. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00E13match_const_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E13match_const_t\">\n<span id=\"_CPPv3I00E13match_const_t\"></span><span id=\"_CPPv2I00E13match_const_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCH_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1af5f237189150fd7dcbd6b46a66e86f34\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">match_const_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E11match_const\" title=\"match_const\"><span class=\"n\"><span class=\"pre\">match_const</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13match_const_t\" title=\"match_const_t::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E13match_const_t\" title=\"match_const_t::MATCH_T\"><span class=\"n\"><span class=\"pre\">MATCH_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/base/base.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0E7FlatMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7FlatMod\">\n<span id=\"_CPPv3I0E7FlatMod\"></span><span id=\"_CPPv2I0E7FlatMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DimMetric</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structFlatMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FlatMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple_size</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FlatMod\" title=\"FlatMod::DimMetric\"><span class=\"n\"><span class=\"pre\">DimMetric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">query_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7FlatMod\" title=\"FlatMod::DimMetric\"><span class=\"n\"><span class=\"pre\">DimMetric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">query_t</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">GetCTSize</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tuple_size</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FlatMod\" title=\"FlatMod::DimMetric\"><span class=\"n\"><span class=\"pre\">DimMetric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tag_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7FlatMod\" title=\"FlatMod::DimMetric\"><span class=\"n\"><span class=\"pre\">DimMetric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tag_t</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value_type</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">GetCTSize</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411view_stringRKNSt11string_viewE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411view_stringRKNSt11string_viewE6size_t6size_t\">\n<span id=\"_CPPv311view_stringRKNSt11string_viewE6size_t6size_t\"></span><span id=\"_CPPv211view_stringRKNSt11string_viewE6size_t6size_t\"></span><span id=\"view_string__std::string_viewCR.s.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1af2206c2f306f90fee9a9c33be5732aee\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">npos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a string_view on a string from a starting point with a given size. </p></dd>", "a[href=\"library/datastructs/api/Bool.html#_CPPv44Bool\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Bool\">\n<span id=\"_CPPv34Bool\"></span><span id=\"_CPPv24Bool\"></span><span id=\"Bool\"></span><span class=\"target\" id=\"classBool\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Bool</span></span></span><br/></dt><dd><p>A simple replacement for bool type that doesn\u2019t trip up std::vector. </p></dd>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I_6size_tE18GenRandSignalGPTag6BitSetI9TAG_WIDTHER6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE18GenRandSignalGPTag6BitSetI9TAG_WIDTHER6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\">\n<span id=\"_CPPv3I_6size_tE18GenRandSignalGPTagR6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\"></span><span id=\"_CPPv2I_6size_tE18GenRandSignalGPTagR6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"signalgp__utils_8hpp_1a295101794d6598e49653570f9170410d\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE18GenRandSignalGPTag6BitSetI9TAG_WIDTHER6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\" title=\"GenRandSignalGPTag::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenRandSignalGPTag</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rnd</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE18GenRandSignalGPTag6BitSetI9TAG_WIDTHER6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\" title=\"GenRandSignalGPTag::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">unique_from</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE18GenRandSignalGPTag6BitSetI9TAG_WIDTHER6RandomRK6vectorI6BitSetI9TAG_WIDTHEE\" title=\"GenRandSignalGPTag::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate one random SignalGP tag (BitSet&lt;TAG_WIDTH&gt;). Given a vector of other tags (unique_from), this function will guarantee the tag generated is unique with respect to those tags. </p></dd>", "a[href=\"library/tools/api/keyname_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">keyname_utils.hpp<a class=\"headerlink\" href=\"#keyname-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Utility functions that support the keyname file naming convention. </p><p>Plays nice with the Python package keyname. <a class=\"reference external\" href=\"https://github.com/mmore500/keyname\">https://github.com/mmore500/keyname</a></p>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0E12HardStartMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12HardStartMod\">\n<span id=\"_CPPv3I0E12HardStartMod\"></span><span id=\"_CPPv2I0E12HardStartMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHardStartMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HardStartMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12HardStartMod\" title=\"HardStartMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E12intersectionRNSt3setI1TEERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E12intersectionRNSt3setI1TEERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a1f5b05e51d70b526d7884d02baf5a8bd\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">intersection</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12intersectionNSt3setI1TEERNSt3setI1TEERNSt3setI1TEE\" title=\"intersection::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set intersection of s1 and s2 (elements that are in both S1 and S2) </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\">\n<span id=\"_CPPv3I0E5ToMapRK6vectorI1TE\"></span><span id=\"_CPPv2I0E5ToMapRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1adfe77c7f8224eb83ee314cf42f8fb5b3\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\" title=\"ToMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5ToMapNSt3mapI6size_t1TEERK6vectorI1TE\" title=\"ToMap::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_vec</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector into a map. </p></dd>", "a[href=\"library/control/api/Action.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Action.hpp<a class=\"headerlink\" href=\"#action-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A mechanism to abstract functions from their underlying type and provide run-time names. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Create an ActionDefaults class that can take fewer args than expected and fill in rest. </p>\n<p>Allow for named arguments to facilitate interpreted functions. </p>\n</dd></dl>\n</p>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E14RotateBitsLeft1T1T6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14RotateBitsLeft1T1T6size_t6size_t\">\n<span id=\"_CPPv3I0E14RotateBitsLeft1T6size_t6size_t\"></span><span id=\"_CPPv2I0E14RotateBitsLeft1T6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1accbdb76a298d9c7499a825afa9bbf886\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E14RotateBitsLeft1T1T6size_t6size_t\" title=\"RotateBitsLeft::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RotateBitsLeft</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E14RotateBitsLeft1T1T6size_t6size_t\" title=\"RotateBitsLeft::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rotate_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">bit_count</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv410PullModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410PullModule\">\n<span id=\"_CPPv310PullModule\"></span><span id=\"_CPPv210PullModule\"></span><span id=\"PullModule\"></span><span class=\"target\" id=\"classPullModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PullModule</span></span></span><br/></dt><dd><p>== data::Pull == This module makes it possible to give the DataNode a function that it can call to calculate new values or sets of values that it will then track. These functions are called every time the PullData method is called on this node, and the values they return are measured as specified by the other modules in this node. To use this class, add data::Pull to the template arguments on your DataNode. Do not use the PullModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E10HeapInsertvR6vectorI1TE1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10HeapInsertvR6vectorI1TE1T\">\n<span id=\"_CPPv3I0E10HeapInsertR6vectorI1TE1T\"></span><span id=\"_CPPv2I0E10HeapInsertR6vectorI1TE1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ae969dc9a73886eab921014c8affc76ca\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HeapInsert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10HeapInsertvR6vectorI1TE1T\" title=\"HeapInsert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0E10HeapInsertvR6vectorI1TE1T\" title=\"HeapInsert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert a new element into a heap. </p></dd>", "a[href=\"library/meta/api/TypePack.html#_CPPv46null_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46null_t\">\n<span id=\"_CPPv36null_t\"></span><span id=\"_CPPv26null_t\"></span><span id=\"null_t\"></span><span class=\"target\" id=\"structnull__t\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">null_t</span></span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/Bits.html#_CPPv48BitValue\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48BitValue\">\n<span id=\"_CPPv38BitValue\"></span><span id=\"_CPPv28BitValue\"></span><span class=\"target\" id=\"Bits_8hpp_1a98b3a55a4ece20d20648c3899a156f32\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BitValue</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE4Bits\" title=\"Bits\"><span class=\"n\"><span class=\"pre\">Bits</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits_Data.html#_CPPv416Bits_DynamicData\" title=\"Bits_DynamicData\"><span class=\"n\"><span class=\"pre\">Bits_DynamicData</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv44Draw6CanvasRK9StateGridRK6vectorINSt6stringEENSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Draw6CanvasRK9StateGridRK6vectorINSt6stringEENSt6stringE\">\n<span id=\"_CPPv34Draw6CanvasRK9StateGridRK6vectorINSt6stringEENSt6stringE\"></span><span id=\"_CPPv24Draw6CanvasRK9StateGridRK6vectorINSt6stringEENSt6stringE\"></span><span id=\"Draw__Canvas.StateGridCR.vector:ss:CR.ss\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1a85d731d539b97d00c40d98b5c4b11a0b\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/evolve/api/StateGrid.html#_CPPv49StateGrid\" title=\"StateGrid\"><span class=\"n\"><span class=\"pre\">StateGrid</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">state_grid</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"black\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a state grid onto a canvas. </p></dd>", "a[href=\"library/prefab/api/FontAwesomeIcon.html#_CPPv415FontAwesomeIcon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415FontAwesomeIcon\">\n<span id=\"_CPPv315FontAwesomeIcon\"></span><span id=\"_CPPv215FontAwesomeIcon\"></span><span id=\"FontAwesomeIcon\"></span><span class=\"target\" id=\"classFontAwesomeIcon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FontAwesomeIcon</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Element.html#_CPPv47Element\" title=\"Element\"><span class=\"n\"><span class=\"pre\">Element</span></span></a><br/></dt><dd><p>Use FontAwesomeIcon class to add a glyph from the FontAwesome library to your web app. (<a class=\"reference external\" href=\"https://fontawesome.com/v4.7.0/icons/\">https://fontawesome.com/v4.7.0/icons/</a>) </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv4I0E4Drawv6CanvasRK9Surface2DI9BODY_TYPEE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4Drawv6CanvasRK9Surface2DI9BODY_TYPEE6size_t\">\n<span id=\"_CPPv3I0E4Draw6CanvasRK9Surface2DI9BODY_TYPEE6size_t\"></span><span id=\"_CPPv2I0E4Draw6CanvasRK9Surface2DI9BODY_TYPEE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BODY_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"canvas__utils_8hpp_1a86fae816af6feb8542599272f6ec62fe\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/geometry/api/Surface2D.html#_CPPv4I0E9Surface2D\" title=\"Surface2D\"><span class=\"n\"><span class=\"pre\">Surface2D</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E4Drawv6CanvasRK9Surface2DI9BODY_TYPEE6size_t\" title=\"Draw::BODY_TYPE\"><span class=\"n\"><span class=\"pre\">BODY_TYPE</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">surface</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_colors</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a Surface2D, just specifying the number of colors (and using a generated hue map). The surface has a range of circle bodies, each with a color id. </p></dd>", "a[href=\"library/bits/api/BitSet.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BitSet.hpp<a class=\"headerlink\" href=\"#bitset-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in replacement for std::bitset, with additional bit magic features; aliases BitArray. Status: RELEASE. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E4joinNSt6stringERK11CONTAINER_TNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4joinNSt6stringERK11CONTAINER_TNSt6stringE\">\n<span id=\"_CPPv3I0E4joinRK11CONTAINER_TNSt6stringE\"></span><span id=\"_CPPv2I0E4joinRK11CONTAINER_TNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1ab6bb5ba2c814ff57bb81be1f00b8a2e9\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">join</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4joinNSt6stringERK11CONTAINER_TNSt6stringE\" title=\"join::CONTAINER_T\"><span class=\"n\"><span class=\"pre\">CONTAINER_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">container</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">join_str</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function returns values from a container as a single string separated by a given delimeter. </p></dd>", "a[href=\"library/math/api/Random.html#_CPPv416RandomStdAdaptor\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416RandomStdAdaptor\">\n<span id=\"_CPPv316RandomStdAdaptor\"></span><span id=\"_CPPv216RandomStdAdaptor\"></span><span id=\"RandomStdAdaptor\"></span><span class=\"target\" id=\"structRandomStdAdaptor\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RandomStdAdaptor</span></span></span><br/></dt><dd><p>This is an adaptor to make Random behave like a proper STL random number generator. </p></dd>", "a[href=\"library/web/api/CanvasShape.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">CanvasShape.hpp<a class=\"headerlink\" href=\"#canvasshape-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Define simple shapes to draw on a canvas. </p><p>Canvas shapes can be defined in detail, describing how they modify a canvas.</p>", "a[href=\"library/data/api/Trait.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Trait.hpp<a class=\"headerlink\" href=\"#trait-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Directly measure a target quality about a type of object. </p><p>These objects are able to measure a specific trait on another object. They (will eventually) interface smoothly with DataNodes for data collection. </p>", "a[href=\"library/matching/api/matchbin_regulators.html#_CPPv4I000E13RegulatorBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E13RegulatorBase\">\n<span id=\"_CPPv3I000E13RegulatorBase\"></span><span id=\"_CPPv2I000E13RegulatorBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_t_</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">adj_t_</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_t_</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structRegulatorBase\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RegulatorBase</span></span></span><br/></dt><dd><p>Abstract base class for regulators. </p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv4I0_Dp4dataE11DataArchive\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_Dp4dataE11DataArchive\">\n<span id=\"_CPPv3I0_Dp4dataE11DataArchive\"></span><span id=\"_CPPv2I0_Dp4dataE11DataArchive\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MODS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"DataNode_8hpp_1a306d8d252e9e96a418707e65f12fa613\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DataArchive</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE8DataNode\" title=\"DataNode\"><span class=\"n\"><span class=\"pre\">DataNode</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE11DataArchive\" title=\"DataArchive::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data4InfoE\" title=\"data::Info\"><span class=\"n\"><span class=\"pre\">Info</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data7ArchiveE\" title=\"data::Archive\"><span class=\"n\"><span class=\"pre\">Archive</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv44data\" title=\"data\"><span class=\"n\"><span class=\"pre\">data</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N4data9FullRangeE\" title=\"data::FullRange\"><span class=\"n\"><span class=\"pre\">FullRange</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_Dp4dataE11DataArchive\" title=\"DataArchive::MODS\"><span class=\"n\"><span class=\"pre\">MODS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>A node that stores all data it receives in an archive (vector of vectors). The inner vectors are groups of data that were received between resets. This node also keeps a record of the min, max, count, and total of each vector, so you don\u2019t have to recalculate it later. Additionally, it allows you to give it a name, description, and keyword. </p></dd>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv46to_NFARK3DFA\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46to_NFARK3DFA\">\n<span id=\"_CPPv36to_NFARK3DFA\"></span><span id=\"_CPPv26to_NFARK3DFA\"></span><span id=\"to_NFA__DFACR\"></span><span class=\"target\" id=\"group__lexer__utilities_1ga83dca02a7f1443e14dfab94c293bcddb\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/NFA.html#_CPPv43NFA\" title=\"NFA\"><span class=\"n\"><span class=\"pre\">NFA</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_NFA</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/compiler/api/DFA.html#_CPPv43DFA\" title=\"DFA\"><span class=\"n\"><span class=\"pre\">DFA</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dfa</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Systematic up-conversion of DFA to NFA\u2026 </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48ANSI_ESCv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48ANSI_ESCv\">\n<span id=\"_CPPv38ANSI_ESCv\"></span><span id=\"_CPPv28ANSI_ESCv\"></span><span id=\"ANSI_ESCCE\"></span><span class=\"target\" id=\"string__utils_8hpp_1a6c391c70a78d967048d846445aa7ee93\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_ESC</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IDpE8ShowType\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE8ShowType\">\n<span id=\"_CPPv3IDpE8ShowType\"></span><span id=\"_CPPv2IDpE8ShowType\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structShowType\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ShowType</span></span></span><br/></dt><dd><p>A struct declaration with no definition to show a type name in a compile time error. </p></dd>", "a[href=\"library/web/api/color_map.html#_CPPv49GetHSLMap6size_tddiiii\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49GetHSLMap6size_tddiiii\">\n<span id=\"_CPPv39GetHSLMap6size_tddiiii\"></span><span id=\"_CPPv29GetHSLMap6size_tddiiii\"></span><span id=\"GetHSLMap__s.double.double.i.i.i.i\"></span><span class=\"target\" id=\"color__map_8hpp_1ad40b72053cdecf6481e8bbb3ea62a57d\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GetHSLMap</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">map_size</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_h</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.0</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_h</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">360.0</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_s</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_s</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">100</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">min_l</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_l</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">50</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate a vector of color strings providing ranges of all of hue, satuation and luminosity. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E3Sum1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Sum1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E3SumRK6vectorI1TE\"></span><span id=\"_CPPv2I0E3SumRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1ace91b531d342555583ad92b013eb1067\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Sum1TRK6vectorI1TE\" title=\"Sum::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sum</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E3Sum1TRK6vectorI1TE\" title=\"Sum::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Sum all of the contents of a vector. </p></dd>", "a[href=\"library/web/api/web.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">web.hpp<a class=\"headerlink\" href=\"#web-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Main file to include the entire Empirical web framework; for now, just an alias for Document.h. </p>", "a[href=\"library/meta/api/ValPack.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ValPack.hpp<a class=\"headerlink\" href=\"#valpack-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of values that can be manipulated at compile time (good for metaprogramming) </p><p>Any built-in type can be added to ValPack to be manipulated at compile time. </p>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv422build_graph_clique_set6size_t6size_tR6Randomd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv422build_graph_clique_set6size_t6size_tR6Randomd\">\n<span id=\"_CPPv322build_graph_clique_set6size_t6size_tR6Randomd\"></span><span id=\"_CPPv222build_graph_clique_set6size_t6size_tR6Randomd\"></span><span id=\"build_graph_clique_set__s.s.RandomR.double\"></span><span class=\"target\" id=\"graph__utils_8hpp_1ad9a0b182bfc05519644c82f198f5f34d\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_clique_set</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">clique_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">clique_count</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extra_prob</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0.5</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a set of cliques (such that one member of each can be part of an independent set) and then links them together </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411view_slicesRKNSt11string_viewEcKbKbKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411view_slicesRKNSt11string_viewEcKbKbKbKb\">\n<span id=\"_CPPv311view_slicesRKNSt11string_viewEcKbKbKbKb\"></span><span id=\"_CPPv211view_slicesRKNSt11string_viewEcKbKbKbKb\"></span><span id=\"view_slices__std::string_viewCR.c.bC.bC.bC.bC\"></span><span class=\"target\" id=\"string__utils_8hpp_1afd6f91a3ae88cced15d7f6eed727196b\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_slices</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'\\n'</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Slice a string without passing in result vector (may be less efficient). </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4I0E11from_string1TRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11from_string1TRKNSt6stringE\">\n<span id=\"_CPPv3I0E11from_stringRKNSt6stringE\"></span><span id=\"_CPPv2I0E11from_stringRKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a649cfbfc1adcaba25d1dae8091fccc3c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11from_string1TRKNSt6stringE\" title=\"from_string::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">from_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function tries to convert a string into any type you\u2019re looking for\u2026 You just need to specify the out type as the template argument. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv414NUM_FIELD_BITS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414NUM_FIELD_BITS\">\n<span id=\"_CPPv314NUM_FIELD_BITS\"></span><span id=\"_CPPv214NUM_FIELD_BITS\"></span><span id=\"NUM_FIELD_BITS__s\"></span><span class=\"target\" id=\"bitset__utils_8hpp_1aed470878f9dd47b428c92e80a90785de\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_FIELD_BITS</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">sizeof</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv412bits_field_t\" title=\"bits_field_t\"><span class=\"n\"><span class=\"pre\">bits_field_t</span></span></a><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">8</span></span><br/></dt><dd><p>Track the number of bits in a single bit field. </p></dd>", "a[href=\"library/web/api/Style.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Style.hpp<a class=\"headerlink\" href=\"#style-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A CSS class for tracking font style, etc. </p>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E14RouletteSelectvR5WorldI3ORGE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E14RouletteSelectvR5WorldI3ORGE6size_t\">\n<span id=\"_CPPv3I0E14RouletteSelectR5WorldI3ORGE6size_t\"></span><span id=\"_CPPv2I0E14RouletteSelectR5WorldI3ORGE6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a4018e506c61574684ae59913a8fff14b\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RouletteSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E14RouletteSelectvR5WorldI3ORGE6size_t\" title=\"RouletteSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==ROULETTE== Selection (aka Fitness-Proportional Selection) chooses organisms to reproduce based on their current fitness. </p></dd>", "a[href=\"library/datastructs/api/TimeQueue.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TimeQueue.hpp<a class=\"headerlink\" href=\"#timequeue-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A priority queue for timings, always marching forward. </p><p>\nA TimeQueue maintains a fast priority queue where a user inserts a set of items with a time that they should be triggered and can request information of which comes next.</p>", "a[href=\"library/math/api/math.html#_CPPv49Factoriali\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49Factoriali\">\n<span id=\"_CPPv39Factoriali\"></span><span id=\"_CPPv29Factoriali\"></span><span id=\"Factorial__iCE\"></span><span class=\"target\" id=\"math_8hpp_1a48c178b8093a587714e508a3d1faa9fe\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Factorial</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">i</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/matching/matching.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Matching<a class=\"headerlink\" href=\"#matching\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/geometry/api/Body2D.html#_CPPv412CircleBody2D\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412CircleBody2D\">\n<span id=\"_CPPv312CircleBody2D\"></span><span id=\"_CPPv212CircleBody2D\"></span><span id=\"CircleBody2D\"></span><span class=\"target\" id=\"classCircleBody2D\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CircleBody2D</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411Body2D_Base\" title=\"Body2D_Base\"><span class=\"n\"><span class=\"pre\">Body2D_Base</span></span></a><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I00I00E0E17variadic_index_of\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00I00E0E17variadic_index_of\">\n<span id=\"_CPPv3I00I00E0E17variadic_index_of\"></span><span id=\"_CPPv2I00I00E0E17variadic_index_of\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Needle</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Haystack</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_same</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__index__of\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_index_of</span></span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/Resource.html#_CPPv48Resource\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Resource\">\n<span id=\"_CPPv38Resource\"></span><span id=\"_CPPv28Resource\"></span><span id=\"Resource\"></span><span class=\"target\" id=\"classResource\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Resource</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\">\n<span id=\"_CPPv3I00E8FindEvalRK6vectorI1TERK3FUN6size_t\"></span><span id=\"_CPPv2I00E8FindEvalRK6vectorI1TERK3FUN6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a0550b47bed442410c7921b63c92d3b3c\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindEval</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\" title=\"FindEval::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8FindEvaliRK6vectorI1TERK3FUN6size_t\" title=\"FindEval::FUN\"><span class=\"n\"><span class=\"pre\">FUN</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the first index where the provided function returns true; return -1 otherwise. </p></dd>", "a[href=\"library/math/api/Distribution.html#_CPPv412Distribution\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412Distribution\">\n<span id=\"_CPPv312Distribution\"></span><span id=\"_CPPv212Distribution\"></span><span id=\"Distribution\"></span><span class=\"target\" id=\"classDistribution\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Distribution</span></span></span><br/></dt><dd><p>Subclassed by Binomial, NegativeBinomial, Uniform</p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416find_paren_matchNSt11string_viewEK6size_tKcKcKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416find_paren_matchNSt11string_viewEK6size_tKcKcKb\">\n<span id=\"_CPPv316find_paren_matchNSt11string_viewEK6size_tKcKcKb\"></span><span id=\"_CPPv216find_paren_matchNSt11string_viewEK6size_tKcKcKb\"></span><span id=\"find_paren_match__std::string_view.sC.cC.cC.bC\"></span><span class=\"target\" id=\"string__utils_8hpp_1ac8fc33e1befcb5b3cc9533979894d9f6\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_paren_match</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">open</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'('</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">close</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">')'</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/web/web.html#d3-data-visualization-tools\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">D3 Data Visualization Tools<a class=\"headerlink\" href=\"#d3-data-visualization-tools\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\">\n<span id=\"_CPPv3I0E6insertRNSt3setI1TEERKNSt3setI1TEE\"></span><span id=\"_CPPv2I0E6insertRNSt3setI1TEERKNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1ad8d2198a8bda743a036f342219394c79\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">insert</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\" title=\"insert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E6insertvRNSt3setI1TEERKNSt3setI1TEE\" title=\"insert::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Insert the full contents of s2 into s1. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416has_alphanumericRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416has_alphanumericRKNSt6stringE\">\n<span id=\"_CPPv316has_alphanumericRKNSt6stringE\"></span><span id=\"_CPPv216has_alphanumericRKNSt6stringE\"></span><span id=\"has_alphanumeric__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a1cf0d5e5ea1e7acea9d73c7a06d5bf71\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_alphanumeric</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/DataFile.html#_CPPv4I0E21MakeContainerDataFile17ContainerDataFileI9CONTAINERENSt8functionIF9CONTAINERvEEERKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21MakeContainerDataFile17ContainerDataFileI9CONTAINERENSt8functionIF9CONTAINERvEEERKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv3I0E21MakeContainerDataFileNSt8functionIF9CONTAINERvEEERKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv2I0E21MakeContainerDataFileNSt8functionIF9CONTAINERvEEERKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"DataFile_8hpp_1a83a6e44a7aec2489d7e6f54a31300e9b\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E17ContainerDataFile\" title=\"ContainerDataFile\"><span class=\"n\"><span class=\"pre\">ContainerDataFile</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21MakeContainerDataFile17ContainerDataFileI9CONTAINERENSt8functionIF9CONTAINERvEEERKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE\" title=\"MakeContainerDataFile::CONTAINER\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeContainerDataFile</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21MakeContainerDataFile17ContainerDataFileI9CONTAINERENSt8functionIF9CONTAINERvEEERKNSt6stringERKNSt6stringERKNSt6stringERKNSt6stringE\" title=\"MakeContainerDataFile::CONTAINER\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">filename</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">b</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\",\"</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">e</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\\n\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convenience function for building a container data file. </p></dd>", "a[href=\"library/tools/api/unique.html#_CPPv49UniqueValv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49UniqueValv\">\n<span id=\"_CPPv39UniqueValv\"></span><span id=\"_CPPv29UniqueValv\"></span><span id=\"UniqueVal\"></span><span class=\"target\" id=\"unique_8hpp_1a9c83ef016af7ebdeed2d70d7d4a4b01a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UniqueVal</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A function that will always return a unique value (and trip an assert if it can\u2019t\u2026) </p></dd>", "a[href=\"library/math/api/constants.html#_CPPv414log2_chart_1_2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414log2_chart_1_2\">\n<span id=\"_CPPv314log2_chart_1_2\"></span><span id=\"_CPPv214log2_chart_1_2\"></span><span id=\"log2_chart_1_2__doubleCA\"></span><span class=\"target\" id=\"constants_8hpp_1a8c9d3bc2d73b1ce80cfbbc4756612357\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">log2_chart_1_2</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><br/></dt><dd><p>Large table to log base-2 results. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I00E10BaseMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E10BaseMetric\">\n<span id=\"_CPPv3I00E10BaseMetric\"></span><span id=\"_CPPv2I00E10BaseMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Query</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tag</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structBaseMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></span><br/></dt><dd><p>Abstract base class for metrics. </p></dd>", "a[href=\"library/tools/api/StaticString.html#_CPPv4I_6size_t0E12StaticString\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t0E12StaticString\">\n<span id=\"_CPPv3I_6size_t0E12StaticString\"></span><span id=\"_CPPv2I_6size_t0E12StaticString\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NUM_CHARS</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CHAR_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classStaticString\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StaticString</span></span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/RawImage.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">RawImage.hpp<a class=\"headerlink\" href=\"#rawimage-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Handle the fundamental loading of an image (without Widget tracking) </p>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0_6size_tE10MeanDimMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE10MeanDimMod\">\n<span id=\"_CPPv3I0_6size_tE10MeanDimMod\"></span><span id=\"_CPPv2I0_6size_tE10MeanDimMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Dim</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structMeanDimMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MeanDimMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE10MeanDimMod\" title=\"MeanDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">query_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE10MeanDimMod\" title=\"MeanDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE10MeanDimMod\" title=\"MeanDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tag_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE10MeanDimMod\" title=\"MeanDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE13HammingMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE13HammingMetric\">\n<span id=\"_CPPv3I_6size_tE13HammingMetric\"></span><span id=\"_CPPv2I_6size_tE13HammingMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHammingMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HammingMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Metric for MatchBin stored in the struct so we can template on it Returns the number of bits not in common between two BitSets </p></dd>", "a[href=\"library/web/api/Font.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Font.hpp<a class=\"headerlink\" href=\"#font-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Maintains basic information about a font to be used in HTML. </p>", "a[href=\"library/compiler/api/Lexer.html#_CPPv45Lexer\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Lexer\">\n<span id=\"_CPPv35Lexer\"></span><span id=\"_CPPv25Lexer\"></span><span id=\"Lexer\"></span><span class=\"target\" id=\"classLexer\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Lexer</span></span></span><br/></dt><dd><p>A lexer with a set of token types (and associated regular expressions) </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415is_alphanumericRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415is_alphanumericRKNSt6stringE\">\n<span id=\"_CPPv315is_alphanumericRKNSt6stringE\"></span><span id=\"_CPPv215is_alphanumericRKNSt6stringE\"></span><span id=\"is_alphanumeric__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a6d80436cb1f5fe3b7ab26031f3f70b63\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_alphanumeric</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if string is only letters or digits. </p></dd>", "a[href=\"library/control/api/Signal.html#_CPPv4IDpE6SignalIFvDp4ARGSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE6SignalIFvDp4ARGSEE\">\n<span id=\"_CPPv3IDpE6SignalIFvDp4ARGSEE\"></span><span id=\"_CPPv2IDpE6SignalIFvDp4ARGSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSignal_3_01void_07ARGS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Signal</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4IDpE6SignalIFvDp4ARGSEE\" title=\"Signal&lt;void(ARGS...)&gt;::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410SignalBase\" title=\"SignalBase\"><span class=\"n\"><span class=\"pre\">SignalBase</span></span></a><br/></dt><dd><p>Signals with void return. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0I00E0E26variadic_remove_duplicates\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0I00E0E26variadic_remove_duplicates\">\n<span id=\"_CPPv3I0I00E0E26variadic_remove_duplicates\"></span><span id=\"_CPPv2I0I00E0E26variadic_remove_duplicates\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Variadic</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Cmp</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_same</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structvariadic__remove__duplicates\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">variadic_remove_duplicates</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0DpE12is_invocable\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE12is_invocable\">\n<span id=\"_CPPv3I0DpE12is_invocable\"></span><span id=\"_CPPv2I0DpE12is_invocable\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Fn</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Args</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__invocable\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_invocable</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">decltypedetail</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">is_invocable_helper</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">value</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE12is_invocable\" title=\"is_invocable::Fn\"><span class=\"n\"><span class=\"pre\">Fn</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE12is_invocable\" title=\"is_invocable::Args\"><span class=\"n\"><span class=\"pre\">Args</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E7is_spanINSt4spanI1TEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7is_spanINSt4spanI1TEEE\">\n<span id=\"_CPPv3I0E7is_spanINSt4spanI1TEEE\"></span><span id=\"_CPPv2I0E7is_spanINSt4spanI1TEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__span_3_01std_1_1span_3_01T_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_span</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7is_spanINSt4spanI1TEEE\" title=\"is_span&lt;std::span&lt;T&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/evolve.html#systematics-manager-properties\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Systematics manager properties<a class=\"headerlink\" href=\"#systematics-manager-properties\" title=\"Link to this heading\">\uf0c1</a></h3><p>A <a class=\"reference internal\" href=\"library/evolve/api/Systematics.html#_CPPv4I000E11Systematics\" title=\"Systematics\"><code class=\"xref cpp cpp-class docutils literal notranslate\"><span class=\"pre\">Systematics</span></code></a> manager object maintains the following information (plus the phylogeny itself):</p>", "a[href=\"QuickStartGuides/4-UsingProjectTemplate.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Using the Project Template<a class=\"headerlink\" href=\"#using-the-project-template\" title=\"Link to this heading\">\uf0c1</a></h1><p>Goals of the project template - Simple web interface - Easy toggle -\nEasy debug</p><p>Organizing core code files</p>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\">\n<span id=\"_CPPv3I0E7FlattenRK6vectorI6vectorI1TEE\"></span><span id=\"_CPPv2I0E7FlattenRK6vectorI6vectorI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a7a8f06161f12018974429b4d71be53a2\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\" title=\"Flatten::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Flatten</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7Flatten6vectorI1TERK6vectorI6vectorI1TEE\" title=\"Flatten::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">vv</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Collapse a vector of vectors into a single vector. </p></dd>", "a[href=\"library/tools/api/timing.html#_CPPv47TimeFunNSt8functionIFvvEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47TimeFunNSt8functionIFvvEEE\">\n<span id=\"_CPPv37TimeFunNSt8functionIFvvEEE\"></span><span id=\"_CPPv27TimeFunNSt8functionIFvvEEE\"></span><span class=\"target\" id=\"timing_8hpp_1abc60d47ba21c8f103afa81393890a27a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TimeFun</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A function timer that takes a functor an identifies how long it takes to complete when run. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE19SymmetricWrapMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE19SymmetricWrapMetric\">\n<span id=\"_CPPv3I_6size_tE19SymmetricWrapMetric\"></span><span id=\"_CPPv2I_6size_tE19SymmetricWrapMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structSymmetricWrapMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SymmetricWrapMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE19SymmetricWrapMetric\" title=\"SymmetricWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE19SymmetricWrapMetric\" title=\"SymmetricWrapMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Metric gives the absolute value of the difference between the integer representations of the BitSets with wrap from zero to the maximum value the BitSet can represent. Adapted from Downing, Keith L. Intelligence emerging: adaptivity and search in evolving neural systems. MIT Press, 2015. </p></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0DpE23TriggerOnLexicaseSelectvR1TDpRR4ARGS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE23TriggerOnLexicaseSelectvR1TDpRR4ARGS\">\n<span id=\"_CPPv3I0DpE23TriggerOnLexicaseSelectR1TDpRR4ARGS\"></span><span id=\"_CPPv2I0DpE23TriggerOnLexicaseSelectR1TDpRR4ARGS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1ad2519232d5ca8392e207b897a3b11217\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TriggerOnLexicaseSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0DpE23TriggerOnLexicaseSelectvR1TDpRR4ARGS\" title=\"TriggerOnLexicaseSelect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">target</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE23TriggerOnLexicaseSelectvR1TDpRR4ARGS\" title=\"TriggerOnLexicaseSelect::ARGS\"><span class=\"n\"><span class=\"pre\">ARGS</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv4I0E4HashNSt6size_tERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E4HashNSt6size_tERK1T\">\n<span id=\"_CPPv3I0E4HashRK1T\"></span><span id=\"_CPPv2I0E4HashRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"hash__utils_8hpp_1af91507e033cc52d5483cf97953f89d86\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hash</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E4HashNSt6size_tERK1T\" title=\"Hash::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">x</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv4I0E7ShufflevR6RandomR6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7ShufflevR6RandomR6vectorI1TE\">\n<span id=\"_CPPv3I0E7ShuffleR6RandomR6vectorI1TE\"></span><span id=\"_CPPv2I0E7ShuffleR6RandomR6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"random__utils_8hpp_1a1c488a12f6ca7638d902b2952fc1a5cd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Shuffle</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7ShufflevR6RandomR6vectorI1TE\" title=\"Shuffle::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/command_line.html#_CPPv42cl\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv42cl\">\n<span id=\"_CPPv32cl\"></span><span id=\"_CPPv22cl\"></span><span id=\"cl\"></span><span class=\"target\" id=\"namespacecl\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">cl</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv48is_upperRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48is_upperRKNSt6stringE\">\n<span id=\"_CPPv38is_upperRKNSt6stringE\"></span><span id=\"_CPPv28is_upperRKNSt6stringE\"></span><span id=\"is_upper__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a48da0c785dc46449e722a820616c6d4a\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_upper</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if there are only uppercase letters in a string. </p></dd>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I_6size_tE19GenRandSignalGPTags6vectorI6BitSetI9TAG_WIDTHEER6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE19GenRandSignalGPTags6vectorI6BitSetI9TAG_WIDTHEER6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\">\n<span id=\"_CPPv3I_6size_tE19GenRandSignalGPTagsR6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\"></span><span id=\"_CPPv2I_6size_tE19GenRandSignalGPTagsR6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"signalgp__utils_8hpp_1af2654873fe10a7453951330940ec3f82\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE19GenRandSignalGPTags6vectorI6BitSetI9TAG_WIDTHEER6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\" title=\"GenRandSignalGPTags::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">GenRandSignalGPTags</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">rnd</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">count</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">guarantee_unique</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE19GenRandSignalGPTags6vectorI6BitSetI9TAG_WIDTHEER6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\" title=\"GenRandSignalGPTags::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">unique_from</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE19GenRandSignalGPTags6vectorI6BitSetI9TAG_WIDTHEER6Random6size_tbRK6vectorI6BitSetI9TAG_WIDTHEE\" title=\"GenRandSignalGPTags::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Generate \u2018count\u2019 number of random SignalGP tags (BitSet&lt;TAG_WIDTH&gt;). Given a vector of other tags (unique_from), this function will guarantee the tags generated are unique with respect to those tags. </p></dd>", "a[href=\"library/prefab/api/LoadingIcon.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">LoadingIcon.hpp<a class=\"headerlink\" href=\"#loadingicon-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps Font Awesome\u2019s loading glyph. </p>", "a[href=\"library/web/api/js_utils.html#_CPPv4I00E22pass_map_to_javascriptvRK3mapI5KEY_T5VAL_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E22pass_map_to_javascriptvRK3mapI5KEY_T5VAL_TE\">\n<span id=\"_CPPv3I00E22pass_map_to_javascriptRK3mapI5KEY_T5VAL_TE\"></span><span id=\"_CPPv2I00E22pass_map_to_javascriptRK3mapI5KEY_T5VAL_TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VAL_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"js__utils_8hpp_1ae2aed21c9588a42fb25346d88901fbbb\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pass_map_to_javascript</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/map.html#_CPPv4I00DpE3map\" title=\"map\"><span class=\"n\"><span class=\"pre\">map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E22pass_map_to_javascriptvRK3mapI5KEY_T5VAL_TE\" title=\"pass_map_to_javascript::KEY_T\"><span class=\"n\"><span class=\"pre\">KEY_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E22pass_map_to_javascriptvRK3mapI5KEY_T5VAL_TE\" title=\"pass_map_to_javascript::VAL_T\"><span class=\"n\"><span class=\"pre\">VAL_T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">dict</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This function can be called to pass a map into JavaScript. The resulting JavaScript object will be stored in emp.__incoming_map. </p></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I0000E11ChangeTypesDa5FUN_T13R_CONVERTER_T13P_CONVERTER_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0000E11ChangeTypesDa5FUN_T13R_CONVERTER_T13P_CONVERTER_T\">\n<span id=\"_CPPv3I0000E11ChangeTypes5FUN_T13R_CONVERTER_T13P_CONVERTER_T\"></span><span id=\"_CPPv2I0000E11ChangeTypes5FUN_T13R_CONVERTER_T13P_CONVERTER_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">NEW_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">R_CONVERTER_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">P_CONVERTER_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1ae01afc29ca32d35fd66980902792a859\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ChangeTypes</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0000E11ChangeTypesDa5FUN_T13R_CONVERTER_T13P_CONVERTER_T\" title=\"ChangeTypes::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0000E11ChangeTypesDa5FUN_T13R_CONVERTER_T13P_CONVERTER_T\" title=\"ChangeTypes::R_CONVERTER_T\"><span class=\"n\"><span class=\"pre\">R_CONVERTER_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ret_convert_fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0000E11ChangeTypesDa5FUN_T13R_CONVERTER_T13P_CONVERTER_T\" title=\"ChangeTypes::P_CONVERTER_T\"><span class=\"n\"><span class=\"pre\">P_CONVERTER_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">param_convert_fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert both return type AND parameter type. Convert a function\u2019s arguments using a templated lambda. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I00E10type_decoy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E10type_decoy\">\n<span id=\"_CPPv3I00E10type_decoy\"></span><span id=\"_CPPv2I00E10type_decoy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EVAL_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"meta_8hpp_1a692bf7297a0cd5d74bba4736d80d2614\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_decoy</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10type_decoy\" title=\"type_decoy::REAL_TYPE\"><span class=\"n\"><span class=\"pre\">REAL_TYPE</span></span></a><br/></dt><dd></dd>", "a[href=\"library/web/api/DocuExtras.html#_CPPv410DocuExtras\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410DocuExtras\">\n<span id=\"_CPPv310DocuExtras\"></span><span id=\"_CPPv210DocuExtras\"></span><span id=\"DocuExtras\"></span><span class=\"target\" id=\"classDocuExtras\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DocuExtras</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">private</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Widget.html#_CPPv46Widget\" title=\"Widget\"><span class=\"n\"><span class=\"pre\">Widget</span></span></a><br/></dt><dd><p>A widget to track a div in an HTML file, and all of its contents. </p></dd>", "a[href=\"library/prefab/api/LoadingModal.html#_CPPv417CloseLoadingModalv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417CloseLoadingModalv\">\n<span id=\"_CPPv317CloseLoadingModalv\"></span><span id=\"_CPPv217CloseLoadingModalv\"></span><span id=\"CloseLoadingModal\"></span><span class=\"target\" id=\"LoadingModal_8hpp_1aade0ed7b8fcf273dd91da7a857a678e4\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CloseLoadingModal</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>This method does not belong to a class, but it is used to close a loading modal that is added with the LoadingModal.js script. See the prefab demo site for more details on how to implement the Loading Modal in your web app. <a class=\"reference external\" href=\"https://devosoft.github.io/empirical-prefab-demo\">https://devosoft.github.io/empirical-prefab-demo</a></p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411ANSI_NoBoldv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ANSI_NoBoldv\">\n<span id=\"_CPPv311ANSI_NoBoldv\"></span><span id=\"_CPPv211ANSI_NoBoldv\"></span><span id=\"ANSI_NoBold\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2b34af9320e81e18c91425985fd58f23\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_NoBold</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/compiler/api/DFA.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DFA.hpp<a class=\"headerlink\" href=\"#dfa-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A Deterministic Finite Automata simulator. </p>", "a[href=\"library/in_progress/api/struct.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">struct.hpp<a class=\"headerlink\" href=\"#struct-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/math/api/math.html#_CPPv47AllTruev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47AllTruev\">\n<span id=\"_CPPv37AllTruev\"></span><span id=\"_CPPv27AllTruev\"></span><span id=\"AllTrueCE\"></span><span class=\"target\" id=\"math_8hpp_1a9d7e61f0a4104b01129ef7c2f67d58ca\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AllTrue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Combine bools to AND them all together. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416ANSI_NoUnderlinev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ANSI_NoUnderlinev\">\n<span id=\"_CPPv316ANSI_NoUnderlinev\"></span><span id=\"_CPPv216ANSI_NoUnderlinev\"></span><span id=\"ANSI_NoUnderline\"></span><span class=\"target\" id=\"string__utils_8hpp_1a662e48ee8747cc60dcf031fcb2d2d7fb\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_NoUnderline</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E9set_union6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E9set_union6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a6f77621c5b881676269a61b90814714e\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv412LowerCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412LowerCharSetv\">\n<span id=\"_CPPv312LowerCharSetv\"></span><span id=\"_CPPv212LowerCharSetv\"></span><span id=\"LowerCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1a09431166d4a12b8c10c3a3f2b4d9ec15\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LowerCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E7FindMax1TRK6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7FindMax1TRK6vectorI1TE\">\n<span id=\"_CPPv3I0E7FindMaxRK6vectorI1TE\"></span><span id=\"_CPPv2I0E7FindMaxRK6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a028f3f671acf665529301e96f6ce70c4\"></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMax1TRK6vectorI1TE\" title=\"FindMax::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMax</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E7FindMax1TRK6vectorI1TE\" title=\"FindMax::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the maximum value in a vector. </p></dd>", "a[href=\"library/control/api/SignalControl.html#_CPPv413SignalControl\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413SignalControl\">\n<span id=\"_CPPv313SignalControl\"></span><span id=\"_CPPv213SignalControl\"></span><span id=\"SignalControl\"></span><span class=\"target\" id=\"classSignalControl\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SignalControl</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">SignalControl_Base</span></span><br/></dt><dd></dd>", "a[href=\"library/in_progress/api/Ptr-overload-fix.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Ptr-overload-fix.hpp<a class=\"headerlink\" href=\"#ptr-overload-fix-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/tools/api/string_utils.html#_CPPv413has_one_of_atRKNSt6stringERKNSt6stringE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413has_one_of_atRKNSt6stringERKNSt6stringE6size_t\">\n<span id=\"_CPPv313has_one_of_atRKNSt6stringERKNSt6stringE6size_t\"></span><span id=\"_CPPv213has_one_of_atRKNSt6stringERKNSt6stringE6size_t\"></span><span id=\"has_one_of_at__ssCR.ssCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1ad2343f0e35c61522a7f99b660b6ec42c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">has_one_of_at</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">opts</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/meta/api/TypePack.html#_CPPv4I0E11is_TypePack\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11is_TypePack\">\n<span id=\"_CPPv3I0E11is_TypePack\"></span><span id=\"_CPPv2I0E11is_TypePack\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structis__TypePack\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_TypePack</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd><p>A type trait to determine if a template that we are looking at is some kind of type pack. </p></dd>", "a[href=\"library/hardware/api/VirtualCPU.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">VirtualCPU.hpp<a class=\"headerlink\" href=\"#virtualcpu-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple virtual CPU styled after the original and extended Avidian architectures. @TODO. </p><p><ul class=\"simple\">\n<li><p>Expanded heads?</p></li>\n<li><p>expanded_nop_args useful?</p></li>\n<li><p>Consider changing default return value for search functions</p></li>\n<li><p>Consider switching to (or adding an optional mode) where nops are only curated as-needed instead of all at once </p></li>\n</ul>\n</p>", "a[href=\"library/io/api/ascii_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">ascii_utils.hpp<a class=\"headerlink\" href=\"#ascii-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools for working with ascii output. </p>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\">\n<span id=\"_CPPv3I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\"></span><span id=\"_CPPv2I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CLASS_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAM1_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structFunInfo_3_01RETURN__T_07CLASS__T_1_1_5_08_07PARAM1__T_00_01PARAM__Ts_8_8_8_08_01const_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FunInfo</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (CLASS_T::*)(PARAM1_T, PARAM_Ts...) const&gt;::RETURN_T\"><span class=\"n\"><span class=\"pre\">RETURN_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (CLASS_T::*)(PARAM1_T, PARAM_Ts...) const&gt;::CLASS_T\"><span class=\"n\"><span class=\"pre\">CLASS_T</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"p\"><span class=\"pre\">*</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (CLASS_T::*)(PARAM1_T, PARAM_Ts...) const&gt;::PARAM1_T\"><span class=\"n\"><span class=\"pre\">PARAM1_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I000DpE7FunInfoIM7CLASS_TKF8RETURN_T8PARAM1_TDp8PARAM_TsEE\" title=\"FunInfo&lt;RETURN_T (CLASS_T::*)(PARAM1_T, PARAM_Ts...) const&gt;::PARAM_Ts\"><span class=\"n\"><span class=\"pre\">PARAM_Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I_iE8tIntMath\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_iE8tIntMath\">\n<span id=\"_CPPv3I_iE8tIntMath\"></span><span id=\"_CPPv2I_iE8tIntMath\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">I</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtIntMath_3_01I_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tIntMath</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_iE8tIntMath\" title=\"tIntMath::I\"><span class=\"n\"><span class=\"pre\">I</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411view_slicesRKNSt11string_viewER6vectorINSt11string_viewEEcKbKbKbKb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411view_slicesRKNSt11string_viewER6vectorINSt11string_viewEEcKbKbKbKb\">\n<span id=\"_CPPv311view_slicesRKNSt11string_viewER6vectorINSt11string_viewEEcKbKbKbKb\"></span><span id=\"_CPPv211view_slicesRKNSt11string_viewER6vectorINSt11string_viewEEcKbKbKbKb\"></span><span id=\"view_slices__std::string_viewCR.vector:std::string_view:R.c.bC.bC.bC.bC\"></span><span class=\"target\" id=\"string__utils_8hpp_1a0ebbb72b0798f09eee7205f10ab6a071\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_slices</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">out_set</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"sc\"><span class=\"pre\">'\\n'</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">keep_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Create a set of string_views based on the provided delimiter; fill them in to the provided vector. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\">\n<span id=\"_CPPv3I0DpE4SortR6vectorI1TEDp2Ts\"></span><span id=\"_CPPv2I0DpE4SortR6vectorI1TEDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a8fb7146ff842b82cdc07d4c2284c1c09\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Sort</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\" title=\"Sort::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0DpE4SortvR6vectorI1TEDp2Ts\" title=\"Sort::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A quick shortcut for sorting a vector. </p></dd>", "a[href=\"library/evolve/api/World_output.html#_CPPv4I00E10AddOEEFileR8DataFileR10WORLD_TYPER8OEE_TYPEKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E10AddOEEFileR8DataFileR10WORLD_TYPER8OEE_TYPEKNSt6stringE\">\n<span id=\"_CPPv3I00E10AddOEEFileR10WORLD_TYPER8OEE_TYPEKNSt6stringE\"></span><span id=\"_CPPv2I00E10AddOEEFileR10WORLD_TYPER8OEE_TYPEKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OEE_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__output_8hpp_1a9a59bbcaaf42684470738912feb4d802\"></span><a class=\"reference internal\" href=\"library/data/api/DataFile.html#_CPPv48DataFile\" title=\"DataFile\"><span class=\"n\"><span class=\"pre\">DataFile</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AddOEEFile</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E10AddOEEFileR8DataFileR10WORLD_TYPER8OEE_TYPEKNSt6stringE\" title=\"AddOEEFile::WORLD_TYPE\"><span class=\"n\"><span class=\"pre\">WORLD_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E10AddOEEFileR8DataFileR10WORLD_TYPER8OEE_TYPEKNSt6stringE\" title=\"AddOEEFile::OEE_TYPE\"><span class=\"n\"><span class=\"pre\">OEE_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">oee_tracker</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fpath</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"oee_data.csv\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/spatial_stats.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">spatial_stats.hpp<a class=\"headerlink\" href=\"#spatial-stats-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for calculating various spatial statistics. </p>", "a[href=\"library/web/api/Canvas.html#_CPPv46Canvas\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Canvas\">\n<span id=\"_CPPv36Canvas\"></span><span id=\"_CPPv26Canvas\"></span><span id=\"Canvas\"></span><span class=\"target\" id=\"classCanvas\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">internal</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">WidgetFacet</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Manage an HTML Canvas object. </p></dd>", "a[href=\"library/base/api/vector.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">vector.hpp<a class=\"headerlink\" href=\"#vector-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A drop-in wrapper for std::vector; adds on bounds checking in debug mode. </p><p>\nThis class is a drop-in wrapper for std::vector, adding on bounds checking, both for the indexing operator and for the use of iterators (ensure that iterators do not outlive the version of vector for which it was created.) If EMP_NDEBUG is set then it reverts back to std::vector.</p>", "a[href=\"library/tools/api/string_utils.html#_CPPv49is_digitsRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49is_digitsRKNSt6stringE\">\n<span id=\"_CPPv39is_digitsRKNSt6stringE\"></span><span id=\"_CPPv29is_digitsRKNSt6stringE\"></span><span id=\"is_digits__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a6c175a1424e435dba38c472eaf2f5535\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_digits</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if there are only digits in a string. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414ANSI_NoReversev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414ANSI_NoReversev\">\n<span id=\"_CPPv314ANSI_NoReversev\"></span><span id=\"_CPPv214ANSI_NoReversev\"></span><span id=\"ANSI_NoReverse\"></span><span class=\"target\" id=\"string__utils_8hpp_1a20d9f0c90fff7a4f18aa96b19f0c7da0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_NoReverse</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\">\n<span id=\"_CPPv3I0E9set_unionRNSt3setI1TEE6vectorI1TE\"></span><span id=\"_CPPv2I0E9set_unionRNSt3setI1TEE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1ae984dce9f9e71f0dbc948076d94d2828\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">set_union</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9set_unionNSt3setI1TEERNSt3setI1TEE6vectorI1TE\" title=\"set_union::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set union of s1 and s2 (elements that are in either S1 or S2) </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE14uint_bit_countIXL8EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE14uint_bit_countIXL8EEE\">\n<span id=\"_CPPv3IE14uint_bit_countIXL8EEE\"></span><span id=\"_CPPv2IE14uint_bit_countIX8EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structuint__bit__count_3_018_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">uint_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">8</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/base/api/array.html#_CPPv4I00E14array_iterator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E14array_iterator\">\n<span id=\"_CPPv3I00E14array_iterator\"></span><span id=\"_CPPv2I00E14array_iterator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ITERATOR_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARRAY_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structarray__iterator\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">array_iterator</span></span></span><br/></dt><dd><p>Setup an iterator wrapper to check validity. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4I0E15dependent_false\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15dependent_false\">\n<span id=\"_CPPv3I0E15dependent_false\"></span><span id=\"_CPPv2I0E15dependent_false\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structdependent__false\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">dependent_false</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd><p>A false type that does NOT resolve in unexecuted if-constexpr branches. By Brian Bi; from: <a class=\"reference external\" href=\"https://stackoverflow.com/questions/69501472/best-way-to-trigger-a-compile-time-error-if-no-if-constexprs-succeed\">https://stackoverflow.com/questions/69501472/best-way-to-trigger-a-compile-time-error-if-no-if-constexprs-succeed</a></p></dd>", "a[href=\"library/prefab/api/FontAwesomeIcon.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">FontAwesomeIcon.hpp<a class=\"headerlink\" href=\"#fontawesomeicon-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps Font Awesome\u2019s icons. </p>", "a[href=\"library/in_progress/api/class.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">class.hpp<a class=\"headerlink\" href=\"#class-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/evolve/api/StateGrid.html#_CPPv415StateGridStatus\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415StateGridStatus\">\n<span id=\"_CPPv315StateGridStatus\"></span><span id=\"_CPPv215StateGridStatus\"></span><span id=\"StateGridStatus\"></span><span class=\"target\" id=\"classStateGridStatus\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">StateGridStatus</span></span></span><br/></dt><dd><p>Information about a particular agent on a state grid. </p></dd>", "a[href=\"library/bits/api/BitMatrix.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">BitMatrix.hpp<a class=\"headerlink\" href=\"#bitmatrix-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A COL x ROW matrix of bits and provides easy indexing and manipulation. </p>", "a[href=\"library/web/api/emfunctions.html#_CPPv49DelayCallRKNSt8functionIFvvEEEi\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49DelayCallRKNSt8functionIFvvEEEi\">\n<span id=\"_CPPv39DelayCallRKNSt8functionIFvvEEEi\"></span><span id=\"_CPPv29DelayCallRKNSt8functionIFvvEEEi\"></span><span class=\"target\" id=\"emfunctions_8hpp_1a8836c5e63dda0a1a34660fe0a0c9cfb4\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DelayCall</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_fun</span></span>, <span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delay</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Call a function after a specified amount of time. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">matchbin_metrics.hpp<a class=\"headerlink\" href=\"#matchbin-metrics-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Metric structs that can be plugged into MatchBin. </p>", "a[href=\"library/evolve/api/Systematics.html#_CPPv4I0E15SystematicsBase\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15SystematicsBase\">\n<span id=\"_CPPv3I0E15SystematicsBase\"></span><span id=\"_CPPv2I0E15SystematicsBase\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSystematicsBase\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SystematicsBase</span></span></span><br/></dt><dd><p>A base class for Systematics, maintaining information common to all systematics managers and providing virtual functions. </p><p>Subclassed by Systematics&lt; ORG, ORG_INFO, DATA_STRUCT &gt;</p></dd>", "a[href=\"library/math/api/constants.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">constants.hpp<a class=\"headerlink\" href=\"#constants-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Commonly used constant values. Status: RELEASE. </p>", "a[href=\"library/math/api/math.html#_CPPv4I0DpE6MinRefRK1TRK1TRK1TDpRK2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE6MinRefRK1TRK1TRK1TDpRK2Ts\">\n<span id=\"_CPPv3I0DpE6MinRefRK1TRK1TDpRK2Ts\"></span><span id=\"_CPPv2I0DpE6MinRefRK1TRK1TDpRK2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1aa67b39038813acab5fd52b1016ea225c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MinRefRK1TRK1TRK1TDpRK2Ts\" title=\"MinRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MinRef</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MinRefRK1TRK1TRK1TDpRK2Ts\" title=\"MinRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MinRefRK1TRK1TRK1TDpRK2Ts\" title=\"MinRef::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0DpE6MinRefRK1TRK1TRK1TDpRK2Ts\" title=\"MinRef::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>MinRef of multiple elements returns reference to minimum value. </p></dd>", "a[href=\"library/math/api/info_theory.html#_CPPv48Entropy2Kd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48Entropy2Kd\">\n<span id=\"_CPPv38Entropy2Kd\"></span><span id=\"_CPPv28Entropy2Kd\"></span><span id=\"Entropy2__doubleCCE\"></span><span class=\"target\" id=\"info__theory_8hpp_1a0bb1bb57a63214ecb2364c385096c82c\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Entropy2</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">p</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Calculate the entropy when their are two possibile states based on one state\u2019s probability. </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0_6size_tE7UnifMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE7UnifMod\">\n<span id=\"_CPPv3I0_6size_tE7UnifMod\"></span><span id=\"_CPPv2I0_6size_tE7UnifMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Samples</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">10000</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structUnifMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UnifMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE7UnifMod\" title=\"UnifMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd><p>Reshape metric\u2019s probability distribution to be approximately uniform. Sample from the original distribution to create a percentile map, and then, at runtime, put raw matches through the percentile map to approximate a uniform distribution. </p></dd>", "a[href=\"dev/getting-started.html#one-time-preparation\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><a class=\"toc-backref\" href=\"#id2\" role=\"doc-backlink\">One-time Preparation</a><a class=\"headerlink\" href=\"#one-time-preparation\" title=\"Link to this heading\">\uf0c1</a></h2><p>b.  Run the install-dependencies maketarget:</p>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE23ExactStreakDistribution\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE23ExactStreakDistribution\">\n<span id=\"_CPPv3I_6size_tE23ExactStreakDistribution\"></span><span id=\"_CPPv2I_6size_tE23ExactStreakDistribution\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structExactStreakDistribution\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ExactStreakDistribution</span></span></span><br/></dt><dd><p>Compute the probability of K or more heads in a row out of N flips. Adapted from <a class=\"reference external\" href=\"https://www.askamathematician.com/2010/07/q-whats-the-chance-of-getting-a-run-of-k-successes-in-n-bernoulli-trials-why-use-approximations-when-the-exact-answer-is-known/\">https://www.askamathematician.com/2010/07/q-whats-the-chance-of-getting-a-run-of-k-successes-in-n-bernoulli-trials-why-use-approximations-when-the-exact-answer-is-known/</a> Helper class for exact streak metrics </p></dd>", "a[href=\"library/data/api/VarMap.html#_CPPv46VarMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46VarMap\">\n<span id=\"_CPPv36VarMap\"></span><span id=\"_CPPv26VarMap\"></span><span id=\"VarMap\"></span><span class=\"target\" id=\"classVarMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">VarMap</span></span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E9element_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9element_t\">\n<span id=\"_CPPv3I0E9element_t\"></span><span id=\"_CPPv2I0E9element_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"type__traits_8hpp_1aa3aea0094c14feb263318b9859d8cf10\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">element_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12element_type\" title=\"element_type\"><span class=\"n\"><span class=\"pre\">element_type</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9element_t\" title=\"element_t::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416ANSI_BrightRedBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ANSI_BrightRedBGv\">\n<span id=\"_CPPv316ANSI_BrightRedBGv\"></span><span id=\"_CPPv216ANSI_BrightRedBGv\"></span><span id=\"ANSI_BrightRedBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a0959d29b0c96df1b00827f31e8fa523d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightRedBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv4IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tENSt6size_tEDp2Ts\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tENSt6size_tEDp2Ts\">\n<span id=\"_CPPv3IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tEDp2Ts\"></span><span id=\"_CPPv2IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tEDp2Ts\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"hash__utils_8hpp_1a544252fbd20a6e87a823ffee9a6ec168\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash2</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash3</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE12hash_combineNSt6size_tENSt6size_tENSt6size_tENSt6size_tEDp2Ts\" title=\"hash_combine::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">extras</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Allow hash_combine to work with more than two input values. </p></dd>", "a[href=\"library/datastructs/api/span_utils.html#_CPPv4I0E5PrintvRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5PrintvRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\">\n<span id=\"_CPPv3I0E5PrintRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\"></span><span id=\"_CPPv2I0E5PrintRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"span__utils_8hpp_1a8491adab78a97af7e08d61cab47654f7\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">span</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5PrintvRKNSt4spanI1TEERNSt7ostreamERKNSt6stringE\" title=\"Print::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">spacer</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print the contents of a span. </p></dd>", "a[href=\"library/games/games.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I_6size_t00E15SignalGPMutator\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_t00E15SignalGPMutator\">\n<span id=\"_CPPv3I_6size_t00E15SignalGPMutator\"></span><span id=\"_CPPv2I_6size_t00E15SignalGPMutator\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TRAIT_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MATCHBIN_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/MatchBin.html#_CPPv4I0000E8MatchBin\" title=\"MatchBin\"><span class=\"n\"><span class=\"pre\">MatchBin</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE13HammingMetric\" title=\"HammingMetric\"><span class=\"n\"><span class=\"pre\">HammingMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E15SignalGPMutator\" title=\"SignalGPMutator::TAG_WIDTH\"><span class=\"n\"><span class=\"pre\">TAG_WIDTH</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_selectors.html#_CPPv4I0_6size_tE14RankedSelector\" title=\"RankedSelector\"><span class=\"n\"><span class=\"pre\">RankedSelector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ratio</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">2</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/matching/api/matchbin_regulators.html#_CPPv4I0E32MultiplicativeCountdownRegulator\" title=\"MultiplicativeCountdownRegulator\"><span class=\"n\"><span class=\"pre\">MultiplicativeCountdownRegulator</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSignalGPMutator\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SignalGPMutator</span></span></span><br/></dt><dd><p>The SignalGPMutator class provides a manager for applying (and minimally tracking) mutations for SignalGP programs.<ul class=\"simple\">\n<li><p>A SignalGPMutator object has two major components:<ul>\n<li><p>A set of mutators</p></li>\n<li><p>And, a set of generic mutator parameters</p></li>\n</ul>\n</p></li>\n<li><p>Additionally, a SignalGPMutator object keeps track of a standard set of SignalGP-specific program constraints to be used by mutators when modifying a program.</p></li>\n<li><p>Mutators associated a name and a description with a function that mutates a SignalGP program.</p></li>\n<li><p>Parameters associate a name, a parameter ID, and a description with a parameter value.</p></li>\n<li><p>When a SignalGPMutator object is \u2018applied\u2019 (ApplyMutators) to a SignalGP program, it applies all mutators to the program in the order they were added to the SignalGPMutator object.</p></li>\n<li><p>Each mutator reports the number of mutations caused by that mutator; this is tracked and can be extracted using the GetLastMutationCnt function.</p></li>\n<li><p>By default a SignalGPMutator object has the capacity for the following mutations:<ul>\n<li><p>Whole-function duplication and deletion (each applied per-function)</p></li>\n<li><p>Slip mutations (applied per-function)</p></li>\n<li><p>Function-tag bit-flips (applied per-bit)</p></li>\n<li><p>Single-instruction substitution (applied per-instruction)</p></li>\n<li><p>Single-instruction insertions and deletions (each applied per-instruction)</p></li>\n<li><p>Instruction-tag bit-flips (applied per-bit)</p></li>\n<li><p>Instruction-argument substitutions (applied per-argument) NOTE: could use some feedback on this!</p></li>\n<li><p>Not loving the inconsistency between rates and constraints at the moment. </p></li>\n</ul>\n</p></li>\n</ul>\n</p></dd>", "a[href=\"library/web/api/Canvas.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Canvas.hpp<a class=\"headerlink\" href=\"#canvas-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Manage an HTML canvas object. </p>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E16TournamentSelectvR5WorldI3ORGE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E16TournamentSelectvR5WorldI3ORGE6size_t6size_t\">\n<span id=\"_CPPv3I0E16TournamentSelectR5WorldI3ORGE6size_t6size_t\"></span><span id=\"_CPPv2I0E16TournamentSelectR5WorldI3ORGE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1aae21b194aec2caf5d078452db81f6885\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TournamentSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E16TournamentSelectvR5WorldI3ORGE6size_t6size_t\" title=\"TournamentSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">t_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tourny_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==TOURNAMENT== Selection creates a tournament with a random sub-set of organisms, finds the one with the highest fitness, and moves it to the next generation. User provides the world (with a fitness function), the tournament size, and (optionally) the number of tournaments to run. </p></dd>", "a[href=\"library/base/api/array.html#_CPPv4I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\">\n<span id=\"_CPPv3I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\"></span><span id=\"_CPPv2I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">N</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structstd_1_1tuple__size_3_01array_3_01T_00_01N_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">tuple_size</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE5array\" title=\"array\"><span class=\"n\"><span class=\"pre\">array</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\" title=\"std::tuple_size&lt;array&lt;T, N&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\" title=\"std::tuple_size&lt;array&lt;T, N&gt;&gt;::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">integral_constant</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tENSt10tuple_sizeI5arrayI1T1NEEE\" title=\"std::tuple_size&lt;array&lt;T, N&gt;&gt;::N\"><span class=\"n\"><span class=\"pre\">N</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E5CountiRK6vectorI1TERK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5CountiRK6vectorI1TERK1T\">\n<span id=\"_CPPv3I0E5CountRK6vectorI1TERK1T\"></span><span id=\"_CPPv2I0E5CountRK6vectorI1TERK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a1e01d5a9a511ec4c3053f6a382a30dac\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Count</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5CountiRK6vectorI1TERK1T\" title=\"Count::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">vec</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E5CountiRK6vectorI1TERK1T\" title=\"Count::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return number of times a value occurs in a vector. </p></dd>", "a[href=\"library/meta/api/meta.html#_CPPv4IE10type_indexIE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE10type_indexIE\">\n<span id=\"_CPPv3IE10type_indexIE\"></span><span id=\"_CPPv2IE10type_indexIE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structtype__index_3_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">type_index</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\">\n<span id=\"_CPPv3I0E20symmetric_difference6vectorI1TERNSt3setI1TEE\"></span><span id=\"_CPPv2I0E20symmetric_difference6vectorI1TERNSt3setI1TEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a22ecce9044016a6416dfff777ab469d5\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">symmetric_difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E20symmetric_differenceNSt3setI1TEE6vectorI1TERNSt3setI1TEE\" title=\"symmetric_difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set symmetric_difference of s1 and s2 (elements that are in either S1 or S2 but not both) </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3Abs1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Abs1T1T\">\n<span id=\"_CPPv3I0E3Abs1T\"></span><span id=\"_CPPv2I0E3Abs1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1aff6ea01b395c48120e9f95a58000139d\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3Abs1T1T\" title=\"Abs::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Abs</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Abs1T1T\" title=\"Abs::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the absolute value for any variable. </p></dd>", "a[href=\"library/web/d3/d3.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">D3 Wrapper<a class=\"headerlink\" href=\"#d3-wrapper\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E5PrintvRK6vectorI1TERNSt7ostreamERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E5PrintvRK6vectorI1TERNSt7ostreamERKNSt6stringE\">\n<span id=\"_CPPv3I0E5PrintRK6vectorI1TERNSt7ostreamERKNSt6stringE\"></span><span id=\"_CPPv2I0E5PrintRK6vectorI1TERNSt7ostreamERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aa3011faf1fb8d9b2ef343593c844d236\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Print</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E5PrintvRK6vectorI1TERNSt7ostreamERKNSt6stringE\" title=\"Print::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">ostream</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">os</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">cout</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">spacer</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"</span> <span class=\"pre\">\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Print the contents of a vector. </p></dd>", "a[href=\"library/web/api/js_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">js_utils.hpp<a class=\"headerlink\" href=\"#js-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Tools for passing data between C++ and Javascript. </p>", "a[href=\"library/compiler/api/lexer_utils.html#_CPPv49DFAStatus\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49DFAStatus\">\n<span id=\"_CPPv39DFAStatus\"></span><span id=\"_CPPv29DFAStatus\"></span><span id=\"DFAStatus\"></span><span class=\"target\" id=\"structDFAStatus\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DFAStatus</span></span></span><br/></dt><dd><p>Structure to track the current status of a DFA. </p></dd>", "a[href=\"library/datastructs/api/IndexMap.html#_CPPv48IndexMap\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48IndexMap\">\n<span id=\"_CPPv38IndexMap\"></span><span id=\"_CPPv28IndexMap\"></span><span id=\"IndexMap\"></span><span class=\"target\" id=\"classIndexMap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">IndexMap</span></span></span><br/></dt><dd><p>A map of weighted indices. If a random index is selected, the probability of an index being returned is directly proportional to its weight. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv49is_one_ofcRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49is_one_ofcRKNSt6stringE\">\n<span id=\"_CPPv39is_one_ofcRKNSt6stringE\"></span><span id=\"_CPPv29is_one_ofcRKNSt6stringE\"></span><span id=\"is_one_of__c.ssCR\"></span><span class=\"target\" id=\"char__utils_8hpp_1aec7c524146de76e9ff27c9ed68cd0948\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_one_of</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">char_set</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if a character is in a set of characters (represented as a string) </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv412ANSI_WhiteBGv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ANSI_WhiteBGv\">\n<span id=\"_CPPv312ANSI_WhiteBGv\"></span><span id=\"_CPPv212ANSI_WhiteBGv\"></span><span id=\"ANSI_WhiteBG\"></span><span class=\"target\" id=\"string__utils_8hpp_1a977dde2f25dd970d79615f264f35134d\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_WhiteBG</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv413is_whitespacec\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413is_whitespacec\">\n<span id=\"_CPPv313is_whitespacec\"></span><span id=\"_CPPv213is_whitespacec\"></span><span id=\"is_whitespace__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1ab836c9bab8dcaeb8737b34d573af321e\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_whitespace</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E12FindMinIndex6size_tRK1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12FindMinIndex6size_tRK1T\">\n<span id=\"_CPPv3I0E12FindMinIndexRK1T\"></span><span id=\"_CPPv2I0E12FindMinIndexRK1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a14c17aea057f86ecf5ddc62a5d8eacfb\"></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindMinIndex</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E12FindMinIndex6size_tRK1T\" title=\"FindMinIndex::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the index with the minimal value (picks first in cases of a tie). </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv49ANSI_Bluev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49ANSI_Bluev\">\n<span id=\"_CPPv39ANSI_Bluev\"></span><span id=\"_CPPv29ANSI_Bluev\"></span><span id=\"ANSI_Blue\"></span><span class=\"target\" id=\"string__utils_8hpp_1aa49018705df0a3d271d47fc139887b8c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Blue</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv423diagnose_literal_stringRKNSt6stringERKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv423diagnose_literal_stringRKNSt6stringERKNSt6stringE\">\n<span id=\"_CPPv323diagnose_literal_stringRKNSt6stringERKNSt6stringE\"></span><span id=\"_CPPv223diagnose_literal_stringRKNSt6stringERKNSt6stringE\"></span><span id=\"diagnose_literal_string__ssCR.ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a7d524a848e0eecccc8eb81a6e8939afd\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">diagnose_literal_string</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">value</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">quote_marks</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"s\"><span class=\"pre\">\"\\\"\"</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Test if an input string is properly formatted as a literal string. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\">\n<span id=\"_CPPv3I00E13FindIntersectRK6vectorI1TERK2C2\"></span><span id=\"_CPPv2I00E13FindIntersectRK6vectorI1TERK2C2\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">C2</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1aeae0877915673ee462d3ae1546cb1e74\"></span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\" title=\"FindIntersect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindIntersect</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\" title=\"FindIntersect::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E13FindIntersect6vectorI1TERK6vectorI1TERK2C2\" title=\"FindIntersect::C2\"><span class=\"n\"><span class=\"pre\">C2</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Find the intersection between this vector and another container. </p></dd>", "a[href=\"library/web/api/CanvasShape.html#_CPPv410CanvasText\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410CanvasText\">\n<span id=\"_CPPv310CanvasText\"></span><span id=\"_CPPv210CanvasText\"></span><span id=\"CanvasText\"></span><span class=\"target\" id=\"classCanvasText\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CanvasText</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv411CanvasShape\" title=\"CanvasShape\"><span class=\"n\"><span class=\"pre\">CanvasShape</span></span></a><br/></dt><dd><p>Text to be written on a canvas. </p></dd>", "a[href=\"library/evolve/api/World_reflect.html#_CPPv4I00E16SetDefaultFitFunvR5WORLD\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E16SetDefaultFitFunvR5WORLD\">\n<span id=\"_CPPv3I00E16SetDefaultFitFunR5WORLD\"></span><span id=\"_CPPv2I00E16SetDefaultFitFunR5WORLD\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__reflect_8hpp_1aee71009578050e82d24ff8061cfbb560\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDefaultFitFun</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E16SetDefaultFitFunvR5WORLD\" title=\"SetDefaultFitFun::WORLD\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/hash_namify.html#_CPPv411hash_namifyK6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411hash_namifyK6size_t\">\n<span id=\"_CPPv311hash_namifyK6size_t\"></span><span id=\"_CPPv211hash_namifyK6size_t\"></span><span id=\"hash_namify__sC\"></span><span class=\"target\" id=\"hash__namify_8hpp_1a4ec2223097a8cd32aebc8190637d5c69\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_namify</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/Trait.html#_CPPv4I0E8TraitSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8TraitSet\">\n<span id=\"_CPPv3I0E8TraitSet\"></span><span id=\"_CPPv2I0E8TraitSet\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TARGET_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTraitSet\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TraitSet</span></span></span><br/></dt><dd><p>A TraitSet houses a collection of traits and can trigger them to all be evaluated at once. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4IE13int_bit_countIXL16EEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE13int_bit_countIXL16EEE\">\n<span id=\"_CPPv3IE13int_bit_countIXL16EEE\"></span><span id=\"_CPPv2IE13int_bit_countIX16EE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structint__bit__count_3_0116_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">int_bit_count</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">16</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/hardware/api/VirtualCPU.html#_CPPv43emp\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv43emp\">\n<span id=\"_CPPv33emp\"></span><span id=\"_CPPv23emp\"></span><span id=\"emp\"></span><span class=\"target\" id=\"namespaceemp\"></span><span class=\"k\"><span class=\"pre\">namespace</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">emp</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv4IDpE13MakeFormatted6StringRKNSt6stringEDp4Args\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE13MakeFormatted6StringRKNSt6stringEDp4Args\">\n<span id=\"_CPPv3IDpE13MakeFormattedRKNSt6stringEDp4Args\"></span><span id=\"_CPPv2IDpE13MakeFormattedRKNSt6stringEDp4Args\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Args</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"String_8hpp_1a820bacaee337f525b34d753d1b6ba5c5\"></span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeFormatted</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">format</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE13MakeFormatted6StringRKNSt6stringEDp4Args\" title=\"MakeFormatted::Args\"><span class=\"n\"><span class=\"pre\">Args</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">args</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Apply sprintf-like formatting to a string. See <a class=\"reference external\" href=\"https://en.cppreference.com/w/cpp/io/c/fprintf\">https://en.cppreference.com/w/cpp/io/c/fprintf</a>. Adapted from <a class=\"reference external\" href=\"https://stackoverflow.com/a/26221725\">https://stackoverflow.com/a/26221725</a>. </p></dd>", "a[href=\"library/data/api/DataFile.html#_CPPv4I0E17ContainerDataFile\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E17ContainerDataFile\">\n<span id=\"_CPPv3I0E17ContainerDataFile\"></span><span id=\"_CPPv2I0E17ContainerDataFile\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CONTAINER</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classContainerDataFile\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ContainerDataFile</span></span></span><br/></dt><dd><p>Sometimes you may want a data file where a set of functions is run on every item in a container every time you write to the file. ContainerDataFiles do that.</p><p>Note: CONTAINER type can be a pointer to a container and the datafile will handle dereferencing it appropriately. </p></dd>", "a[href=\"library/datastructs/api/valsort_map.html#_CPPv4I00E11valsort_map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E11valsort_map\">\n<span id=\"_CPPv3I00E11valsort_map\"></span><span id=\"_CPPv2I00E11valsort_map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classvalsort__map\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">valsort_map</span></span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/hash_utils.html#_CPPv412hash_combineNSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412hash_combineNSt6size_tE\">\n<span id=\"_CPPv312hash_combineNSt6size_tE\"></span><span id=\"_CPPv212hash_combineNSt6size_tE\"></span><span id=\"hash_combine__std::sCE\"></span><span class=\"target\" id=\"hash__utils_8hpp_1ab8cf43524ab493d31b8274aca0a1f684\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash_combine</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">hash1</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>If hash_combine has a single value, there\u2019s nothing to combine; just return it! </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E11ReverseBits1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11ReverseBits1T1T\">\n<span id=\"_CPPv3I0E11ReverseBits1T\"></span><span id=\"_CPPv2I0E11ReverseBits1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a3c06449082a990e395bbd2f960914736\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E11ReverseBits1T1T\" title=\"ReverseBits::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ReverseBits</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E11ReverseBits1T1T\" title=\"ReverseBits::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E23OptimizedLexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E23OptimizedLexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\">\n<span id=\"_CPPv3I0E23OptimizedLexicaseSelectR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\"></span><span id=\"_CPPv2I0E23OptimizedLexicaseSelectR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a33cd0cc2a2c9d4db48b785d45ab7d6b5\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OptimizedLexicaseSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E23OptimizedLexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\" title=\"OptimizedLexicaseSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E23OptimizedLexicaseSelectvR5WorldI3ORGERK6vectorINSt8functionIFdRK3ORGEEEE6size_t6size_t\" title=\"OptimizedLexicaseSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fit_funs</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">repro_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">max_funs</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==OPTIMIZED LEXICASE== Is the same as regular lexicase, but determines how many unique genotypes there are </p></dd>", "a[href=\"library/functional/api/flex_function.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">flex_function.hpp<a class=\"headerlink\" href=\"#flex-function-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Based on std::function, but holds default parameter values for calls with fewer args. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv412string_vec_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412string_vec_t\">\n<span id=\"_CPPv312string_vec_t\"></span><span id=\"_CPPv212string_vec_t\"></span><span class=\"target\" id=\"string__utils_8hpp_1aa31dad2dbd415393974e3fc4d9bdbe0d\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/map_utils.html#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\">\n<span id=\"_CPPv3I00E8flip_mapRK3mapI1A1BE\"></span><span id=\"_CPPv2I00E8flip_mapRK3mapI1A1BE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">A</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">B</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"map__utils_8hpp_1a158ef47863d1731cc88934461efb6071\"></span><a class=\"reference internal\" href=\"library/base/api/map.html#_CPPv4I00DpE8multimap\" title=\"multimap\"><span class=\"n\"><span class=\"pre\">multimap</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flip_map</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/map.html#_CPPv4I00DpE3map\" title=\"map\"><span class=\"n\"><span class=\"pre\">map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::A\"><span class=\"n\"><span class=\"pre\">A</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E8flip_map8multimapI1B1AERK3mapI1A1BE\" title=\"flip_map::B\"><span class=\"n\"><span class=\"pre\">B</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">src</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take an map&lt;A,B&gt; and return the flipped map (now multimap to be safe): multimap&lt;B,A&gt; </p></dd>", "a[href=\"library/web/api/events.html#_CPPv4I0E15OnDocumentReadyvRR8FUN_TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E15OnDocumentReadyvRR8FUN_TYPE\">\n<span id=\"_CPPv3I0E15OnDocumentReadyRR8FUN_TYPE\"></span><span id=\"_CPPv2I0E15OnDocumentReadyRR8FUN_TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"events_8hpp_1a1e2b9795a8c9a92ec7df07f9eb92dd4c\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OnDocumentReady</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E15OnDocumentReadyvRR8FUN_TYPE\" title=\"OnDocumentReady::FUN_TYPE\"><span class=\"n\"><span class=\"pre\">FUN_TYPE</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Runs the specified function when the document is finished loading and being set up. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414to_ansi_italicRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414to_ansi_italicRKNSt6stringE\">\n<span id=\"_CPPv314to_ansi_italicRKNSt6stringE\"></span><span id=\"_CPPv214to_ansi_italicRKNSt6stringE\"></span><span id=\"to_ansi_italic__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1af2df8e5dd2857c56138716a37709410f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_ansi_italic</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">_in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Make a string appear italics when printed to the command line. </p></dd>", "a[href=\"library/math/api/random_utils.html#_CPPv46ChooseR6Random6size_t6size_tRNSt6vectorI6size_tEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46ChooseR6Random6size_t6size_tRNSt6vectorI6size_tEE\">\n<span id=\"_CPPv36ChooseR6Random6size_t6size_tRNSt6vectorI6size_tEE\"></span><span id=\"_CPPv26ChooseR6Random6size_t6size_tRNSt6vectorI6size_tEE\"></span><span id=\"Choose__RandomR.s.s.std::vector:s:R\"></span><span class=\"target\" id=\"random__utils_8hpp_1a7b8950de5666cb2df814bfee9d246224\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Choose</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">N</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">K</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">vector</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">choices</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Choose K positions from N possibilities. </p></dd>", "a[href=\"library/meta/api/TypeID.html#_CPPv4I00E17HasEMPGetTypeName\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E17HasEMPGetTypeName\">\n<span id=\"_CPPv3I00E17HasEMPGetTypeName\"></span><span id=\"_CPPv2I00E17HasEMPGetTypeName\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasEMPGetTypeName\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasEMPGetTypeName</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">false_type</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv411ANSI_Italicv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ANSI_Italicv\">\n<span id=\"_CPPv311ANSI_Italicv\"></span><span id=\"_CPPv211ANSI_Italicv\"></span><span id=\"ANSI_Italic\"></span><span class=\"target\" id=\"string__utils_8hpp_1a19a3aaedbfa1942466500cd7fb7cf2f0\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Italic</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/datastructs/api/graph_utils.html#_CPPv416build_graph_ring6size_tR6Random\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416build_graph_ring6size_tR6Random\">\n<span id=\"_CPPv316build_graph_ring6size_tR6Random\"></span><span id=\"_CPPv216build_graph_ring6size_tR6Random\"></span><span id=\"build_graph_ring__s.RandomR\"></span><span class=\"target\" id=\"graph__utils_8hpp_1a5fa52fdb419e3b99dba2716f061b46d5\"></span><a class=\"reference internal\" href=\"library/datastructs/api/Graph.html#_CPPv45Graph\" title=\"Graph\"><span class=\"n\"><span class=\"pre\">Graph</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">build_graph_ring</span></span></span><span class=\"sig-paren\">(</span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">v_count</span></span>, <a class=\"reference internal\" href=\"library/math/api/Random.html#_CPPv46Random\" title=\"Random\"><span class=\"n\"><span class=\"pre\">Random</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">random</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Construct a graph where all vertics are degree two and form a single ring. </p></dd>", "a[href=\"library/datastructs/api/span_utils.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">span_utils.hpp<a class=\"headerlink\" href=\"#span-utils-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A set of simple functions to manipulate std::span. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv49ANSI_Cyanv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49ANSI_Cyanv\">\n<span id=\"_CPPv39ANSI_Cyanv\"></span><span id=\"_CPPv29ANSI_Cyanv\"></span><span id=\"ANSI_Cyan\"></span><span class=\"target\" id=\"string__utils_8hpp_1a2a88c85e9cd08b1c4785b0ef8250206b\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Cyan</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv413MakeTrimFrontRK6StringRK7CharSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413MakeTrimFrontRK6StringRK7CharSet\">\n<span id=\"_CPPv313MakeTrimFrontRK6StringRK7CharSet\"></span><span id=\"_CPPv213MakeTrimFrontRK6StringRK7CharSet\"></span><span id=\"MakeTrimFront__StringCR.CharSetCR\"></span><span class=\"target\" id=\"String_8hpp_1aff173f79a73cefd712a7f1068824a2b5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeTrimFront</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">chars</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/tools/api/char_utils.html#_CPPv417WhitespaceCharSetv\" title=\"WhitespaceCharSet\"><span class=\"n\"><span class=\"pre\">WhitespaceCharSet</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/math.html#_CPPv46ToggleRb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46ToggleRb\">\n<span id=\"_CPPv36ToggleRb\"></span><span id=\"_CPPv26ToggleRb\"></span><span id=\"Toggle__bR\"></span><span class=\"target\" id=\"math_8hpp_1a767bbd4f86428649687a79130d6f034f\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Toggle</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_bool</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Toggle an input bool. </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv411MakeWebSafeRK6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411MakeWebSafeRK6String\">\n<span id=\"_CPPv311MakeWebSafeRK6String\"></span><span id=\"_CPPv211MakeWebSafeRK6String\"></span><span id=\"MakeWebSafe__StringCR\"></span><span class=\"target\" id=\"String_8hpp_1a28a2847fdf39f9979c78a2fd81c14e94\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeWebSafe</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Take a string and replace reserved HTML characters with character entities. </p></dd>", "a[href=\"library/base/api/MapProxy.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MapProxy.hpp<a class=\"headerlink\" href=\"#mapproxy-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A proxy for indecies returned from any map type to ensure they are initialized. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_Whitev\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_Whitev\">\n<span id=\"_CPPv310ANSI_Whitev\"></span><span id=\"_CPPv210ANSI_Whitev\"></span><span id=\"ANSI_White\"></span><span class=\"target\" id=\"string__utils_8hpp_1a52d02fef39d4cbd45c56e974a8bb163c\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_White</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/functional/api/GenericFunction.html#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\">\n<span id=\"_CPPv3I0DpE8FunctionIF6RETURNDp6PARAMSEE\"></span><span id=\"_CPPv2I0DpE8FunctionIF6RETURNDp6PARAMSEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classFunction_3_01RETURN_07PARAMS_8_8_8_08_4\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Function</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::RETURN\"><span class=\"n\"><span class=\"pre\">RETURN</span></span></a><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"#_CPPv4I0DpE8FunctionIF6RETURNDp6PARAMSEE\" title=\"Function&lt;RETURN(PARAMS...)&gt;::PARAMS\"><span class=\"n\"><span class=\"pre\">PARAMS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv415GenericFunction\" title=\"GenericFunction\"><span class=\"n\"><span class=\"pre\">GenericFunction</span></span></a><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv415to_english_listRK12string_vec_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv415to_english_listRK12string_vec_t\">\n<span id=\"_CPPv315to_english_listRK12string_vec_t\"></span><span id=\"_CPPv215to_english_listRK12string_vec_t\"></span><span id=\"to_english_list__string_vec_tCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1ad52a6e4d34aa05936c1bc75cee1c941a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">to_english_list</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv412string_vec_t\" title=\"string_vec_t\"><span class=\"n\"><span class=\"pre\">string_vec_t</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">strings</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Convert a vector of strings to an English list, such as \u201cone, two, three, and four.\u201d. </p></dd>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E24remove_std_function_typeINSt8functionI1TEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E24remove_std_function_typeINSt8functionI1TEEE\">\n<span id=\"_CPPv3I0E24remove_std_function_typeINSt8functionI1TEEE\"></span><span id=\"_CPPv2I0E24remove_std_function_typeINSt8functionI1TEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structremove__std__function__type_3_01std_1_1function_3_01T_01_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">remove_std_function_type</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">function</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E24remove_std_function_typeINSt8functionI1TEEE\" title=\"remove_std_function_type&lt;std::function&lt;T&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E7MaskLow4TYPENSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E7MaskLow4TYPENSt6size_tE\">\n<span id=\"_CPPv3I0E7MaskLowNSt6size_tE\"></span><span id=\"_CPPv2I0E7MaskLowNSt6size_tE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1adaa8ec664d009695eb54d151046921c6\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E7MaskLow4TYPENSt6size_tE\" title=\"MaskLow::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaskLow</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">num_bits</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Quick bit-mask generator for low bits. </p></dd>", "a[href=\"library/web/api/events.html#_CPPv410MouseEvent\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410MouseEvent\">\n<span id=\"_CPPv310MouseEvent\"></span><span id=\"_CPPv210MouseEvent\"></span><span id=\"MouseEvent\"></span><span class=\"target\" id=\"structMouseEvent\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MouseEvent</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv45Event\" title=\"Event\"><span class=\"n\"><span class=\"pre\">Event</span></span></a><br/></dt><dd><p>Mouse-specific information about web events. </p></dd>", "a[href=\"dev/contribution-guidelines-and-review.html#c-standards\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">C++ standards<a class=\"headerlink\" href=\"#c-standards\" title=\"Link to this heading\">\uf0c1</a></h2><p>We use C++17 features throughout the project and currently that is the\nde-facto standard version to use.</p><p>All code should be in header files for ease of inclusion into Emscripten\nprojects.</p>", "a[href=\"library/datastructs/api/IndexMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">IndexMap.hpp<a class=\"headerlink\" href=\"#indexmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A simple class to weight items differently within a container and return the correct index. </p><p>\nAn IndexMap is a container where each item has a specified weight (specified as a double). The total weight of the container determines the max index point. When indexing into the container, each item is represented by a range of values equal to it\u2019s weight. Randomly indexing into the container will provide either item with a probability proportional to its weight.</p>", "a[href=\"library/hardware/api/Genome.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Genome.hpp<a class=\"headerlink\" href=\"#genome-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This is a simple, container for a series of instructions. </p>", "a[href=\"library/hardware/api/AvidaCPU_InstLib.html#_CPPv4I00_6size_tE16AvidaCPU_InstLib\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00_6size_tE16AvidaCPU_InstLib\">\n<span id=\"_CPPv3I00_6size_tE16AvidaCPU_InstLib\"></span><span id=\"_CPPv2I00_6size_tE16AvidaCPU_InstLib\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HARDWARE_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_T</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ARG_COUNT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structAvidaCPU__InstLib\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AvidaCPU_InstLib</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/hardware/api/InstLib.html#_CPPv4I00_6size_tE7InstLib\" title=\"InstLib\"><span class=\"n\"><span class=\"pre\">InstLib</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00_6size_tE16AvidaCPU_InstLib\" title=\"AvidaCPU_InstLib::HARDWARE_T\"><span class=\"n\"><span class=\"pre\">HARDWARE_T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">3</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>AvidaCPU_InstLib is a pure-virtual class that defines a series of instructions that can be used with AvidaCPU_Base or any of its derived classes. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Ptr\">\n<span id=\"_CPPv3I0E3Ptr\"></span><span id=\"_CPPv2I0E3Ptr\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classPtr\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/Systematics.html#_CPPv4I00E5Taxon\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E5Taxon\">\n<span id=\"_CPPv3I00E5Taxon\"></span><span id=\"_CPPv2I00E5Taxon\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG_INFO</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">DATA_STRUCT</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv410datastruct\" title=\"datastruct\"><span class=\"n\"><span class=\"pre\">datastruct</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><a class=\"reference internal\" href=\"#_CPPv4N10datastruct7no_dataE\" title=\"datastruct::no_data\"><span class=\"n\"><span class=\"pre\">no_data</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classTaxon\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Taxon</span></span></span><br/></dt><dd><p>A Taxon represents a type of organism in a phylogeny. </p><p>\nGenotypes are the most commonly used Taxon; in general taxa can be anything from a shared genome sequence, a phenotypic trait, or a even a position in the world (if you want to track an evolutionary pathway) </p></dd>", "a[href=\"library/tools/api/String.html#_CPPv49MakeCounti6String\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49MakeCounti6String\">\n<span id=\"_CPPv39MakeCounti6String\"></span><span id=\"_CPPv29MakeCounti6String\"></span><span id=\"MakeCount__i.String\"></span><span class=\"target\" id=\"String_8hpp_1a83048374b94135f7f329bdec6975e7c5\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeCount</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">item</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv4IDpE8is_validbRKNSt6stringEDp4FUNS\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IDpE8is_validbRKNSt6stringEDp4FUNS\">\n<span id=\"_CPPv3IDpE8is_validRKNSt6stringEDp4FUNS\"></span><span id=\"_CPPv2IDpE8is_validRKNSt6stringEDp4FUNS\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUNS</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"string__utils_8hpp_1a5402f8047183572d876dd5481f0fb47b\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_valid</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <a class=\"reference internal\" href=\"#_CPPv4IDpE8is_validbRKNSt6stringEDp4FUNS\" title=\"is_valid::FUNS\"><span class=\"n\"><span class=\"pre\">FUNS</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">funs</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>For a string to be valid, each character must pass at least one provided function. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv410ANSI_Blackv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ANSI_Blackv\">\n<span id=\"_CPPv310ANSI_Blackv\"></span><span id=\"_CPPv210ANSI_Blackv\"></span><span id=\"ANSI_Black\"></span><span class=\"target\" id=\"string__utils_8hpp_1a8bbe52efe7d83a530eed22dd7a0549cf\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_Black</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/Card.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Card.hpp<a class=\"headerlink\" href=\"#card-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Wraps a Bootstrap card. </p>", "a[href=\"library/web/api/TextArea.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">TextArea.hpp<a class=\"headerlink\" href=\"#textarea-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Specs for the TextArea widget. </p><p><dl>\n<dt class=\"sig sig-object cpp\">\n<em><span class=\"pre\">Todo:</span></em></dt>\n<dd><p>Callback does a lot of string-copies at the moment; should be streamlined. </p>\n</dd></dl>\n</p>", "a[href=\"library/functional/api/flex_function.html#_CPPv4I0E13flex_function\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13flex_function\">\n<span id=\"_CPPv3I0E13flex_function\"></span><span id=\"_CPPv2I0E13flex_function\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classflex__function\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">flex_function</span></span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416string_get_rangeRKNSt6stringENSt6size_tENSt6size_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416string_get_rangeRKNSt6stringENSt6size_tENSt6size_tE\">\n<span id=\"_CPPv316string_get_rangeRKNSt6stringENSt6size_tENSt6size_tE\"></span><span id=\"_CPPv216string_get_rangeRKNSt6stringENSt6size_tENSt6size_tE\"></span><span id=\"string_get_range__ssCR.std::s.std::s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a0456fe23dd1dd56f06cccd39f4a54374\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">string_get_range</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">end_pos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Get a segment from the beginning of a string as another string, leaving original untouched. </p></dd>", "a[href=\"library/base/api/MapProxy.html#_CPPv4I0E8MapProxy\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8MapProxy\">\n<span id=\"_CPPv3I0E8MapProxy\"></span><span id=\"_CPPv2I0E8MapProxy\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classMapProxy\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MapProxy</span></span></span><br/></dt><dd></dd>", "a[href=\"library/in_progress/api/SimpleParser.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">SimpleParser.hpp<a class=\"headerlink\" href=\"#simpleparser-hpp\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"bibliography.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Bibliography<a class=\"headerlink\" href=\"#bibliography\" title=\"Link to this heading\">\uf0c1</a></h1>", "a[href=\"library/base/api/errors.html#_CPPv411ClearExceptRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv411ClearExceptRKNSt6stringE\">\n<span id=\"_CPPv311ClearExceptRKNSt6stringE\"></span><span id=\"_CPPv211ClearExceptRKNSt6stringE\"></span><span id=\"ClearExcept__ssCR\"></span><span class=\"target\" id=\"errors_8hpp_1accb602bd42fc51f23c982d9c340e15ab\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ClearExcept</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">id</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all waiting exceptions of the desginated type. </p></dd>", "a[href=\"dev/adding-documentation.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Empirical Documentation Documentation<a class=\"headerlink\" href=\"#empirical-documentation-documentation\" title=\"Link to this heading\">\uf0c1</a></h1><p>This is a quick primer on how to document things within Empirical.</p><p>Empirical makes use of the Sphinx documentation system based off of XML\ninformation gathered from Doxygen via a plugin named Breathe. This means\nthat Doxygen will automatically build documentation for anything written\nin a C++ source file and Sphinx will be used to organize how that\ndocumentation is displayed.</p>", "a[href=\"library/evolve/api/World_reflect.html#_CPPv4I00E18SetDefaultPrintFunvR5WORLD\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E18SetDefaultPrintFunvR5WORLD\">\n<span id=\"_CPPv3I00E18SetDefaultPrintFunR5WORLD\"></span><span id=\"_CPPv2I00E18SetDefaultPrintFunR5WORLD\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__reflect_8hpp_1a226e4c26c650f85277a62a3de69528ce\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetDefaultPrintFun</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E18SetDefaultPrintFunvR5WORLD\" title=\"SetDefaultPrintFun::WORLD\"><span class=\"n\"><span class=\"pre\">WORLD</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/evolve/api/SystematicsAnalysis.html#_CPPv4I0E13CountMutStepsi3PtrI7taxon_tE6vectorINSt6stringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E13CountMutStepsi3PtrI7taxon_tE6vectorINSt6stringEE\">\n<span id=\"_CPPv3I0E13CountMutSteps3PtrI7taxon_tE6vectorINSt6stringEE\"></span><span id=\"_CPPv2I0E13CountMutSteps3PtrI7taxon_tE6vectorINSt6stringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"SystematicsAnalysis_8hpp_1a537c9b66f6af5f354d25533c2032d1db\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CountMutSteps</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/Ptr.html#_CPPv4I0E3Ptr\" title=\"Ptr\"><span class=\"n\"><span class=\"pre\">Ptr</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E13CountMutStepsi3PtrI7taxon_tE6vectorINSt6stringEE\" title=\"CountMutSteps::taxon_t\"><span class=\"n\"><span class=\"pre\">taxon_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">taxon</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">types</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Returns the total number of times a mutation of the types <code class=\"docutils literal notranslate\"><span class=\"pre\">types</span></code> that along the given taxon \u2018s lineage. (Different from CountMuts in that CountMuts sums them whereas CountMutSteps would count two simultaneous mutations of the same type as one event) </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E6Square1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E6Square1T1T\">\n<span id=\"_CPPv3I0E6Square1T\"></span><span id=\"_CPPv2I0E6Square1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a5991753a77c5963e007d26ab024846d7\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E6Square1T1T\" title=\"Square::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Square</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E6Square1T1T\" title=\"Square::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>A simple function to square a value. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv47CharSet\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47CharSet\">\n<span id=\"_CPPv37CharSet\"></span><span id=\"_CPPv27CharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1af0361e9ffdb173bc1b6e16faf490989c\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE11CharSetBase\" title=\"CharSetBase\"><span class=\"n\"><span class=\"pre\">CharSetBase</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I_6size_tE17HammingCumuMetric\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I_6size_tE17HammingCumuMetric\">\n<span id=\"_CPPv3I_6size_tE17HammingCumuMetric\"></span><span id=\"_CPPv2I_6size_tE17HammingCumuMetric\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Width</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHammingCumuMetric\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HammingCumuMetric</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE17HammingCumuMetric\" title=\"HammingCumuMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4I_6size_tE6BitSet\" title=\"BitSet\"><span class=\"n\"><span class=\"pre\">BitSet</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I_6size_tE17HammingCumuMetric\" title=\"HammingCumuMetric::Width\"><span class=\"n\"><span class=\"pre\">Width</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd><p>Matches based on the number of bits in common between the two bitsets. Normalized so that each match score represents the cumulative probability of an as-good or better match. </p></dd>", "a[href=\"library/matching/api/matchbin_selectors.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">matchbin_selectors.hpp<a class=\"headerlink\" href=\"#matchbin-selectors-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Selector structs that can be plugged into MatchBin. </p>", "a[href=\"library/geometry/geometry.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/compiler/api/Lexer.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Lexer.hpp<a class=\"headerlink\" href=\"#lexer-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>A general-purpose, fast lexer. </p><p>\nBuild a lexer that can convert input strings or streams into a series of provided tokens.</p>", "a[href=\"library/meta/api/TypeID.html#_CPPv414SetupTypeNamesv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414SetupTypeNamesv\">\n<span id=\"_CPPv314SetupTypeNamesv\"></span><span id=\"_CPPv214SetupTypeNamesv\"></span><span id=\"SetupTypeNames\"></span><span class=\"target\" id=\"TypeID_8hpp_1a28dc7f20f4109d44521460898f062f14\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetupTypeNames</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a bunch of standard type names to be more readable. </p></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4I0E8MaskUsed4TYPE4TYPE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E8MaskUsed4TYPE4TYPE\">\n<span id=\"_CPPv3I0E8MaskUsed4TYPE\"></span><span id=\"_CPPv2I0E8MaskUsed4TYPE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a27e8697b5ae404f6fdc27e9fd9aa5abb\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E8MaskUsed4TYPE4TYPE\" title=\"MaskUsed::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MaskUsed</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E8MaskUsed4TYPE4TYPE\" title=\"MaskUsed::TYPE\"><span class=\"n\"><span class=\"pre\">TYPE</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">val</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/config/api/config.html#_CPPv46Config\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv46Config\">\n<span id=\"_CPPv36Config\"></span><span id=\"_CPPv26Config\"></span><span id=\"Config\"></span><span class=\"target\" id=\"classConfig\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Config</span></span></span><br/></dt><dd><p>Master configuration class that manages all of the settings. </p></dd>", "a[href=\"library/datastructs/api/StringMap.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">StringMap.hpp<a class=\"headerlink\" href=\"#stringmap-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>An std::unordered_map wrapper that deals smoothly with strings and fast compile-time optimizations. </p><p>StringMap is setup to be a generic dictionary that can link strings to objects of any other desginated type. It is more powerful than std::unordered_map because it will accept strings wrapped in the EMP_STRING_ID macro, which is hashed at compile-time instead of run-time.</p>", "a[href=\"library/hardware/hardware.html#api\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/web/api/emfunctions.html#_CPPv49text2htmlRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49text2htmlRKNSt6stringE\">\n<span id=\"_CPPv39text2htmlRKNSt6stringE\"></span><span id=\"_CPPv29text2htmlRKNSt6stringE\"></span><span id=\"text2html__ssCR\"></span><span class=\"target\" id=\"emfunctions_8hpp_1ae0e0f832df59d248cc00297ce2e1d250\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">text2html</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">text</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"dev/contribution-guidelines-and-review.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Coding guidelines and review checklist<a class=\"headerlink\" href=\"#coding-guidelines-and-review-checklist\" title=\"Link to this heading\">\uf0c1</a></h1><p>This document is for those who want to contribute code or documentation\nfixes to the Empirical project and describes our coding standards as\nwell as our code review process.</p><p>This document has been adapted from the <a class=\"reference external\" href=\"https://khmer.readthedocs.org/en/v1.4.1/dev/coding-guidelines-and-review.html\">khmer\nproject</a></p>", "a[href=\"library/tools/api/char_utils.html#_CPPv49is_letterc\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49is_letterc\">\n<span id=\"_CPPv39is_letterc\"></span><span id=\"_CPPv29is_letterc\"></span><span id=\"is_letter__c\"></span><span class=\"target\" id=\"char__utils_8hpp_1a3b9de46afc2d638d6e26736bfb03a3cd\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_letter</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">test_char</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/String.html#_CPPv4IENSt4hashI6StringEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IENSt4hashI6StringEE\">\n<span id=\"_CPPv3IENSt4hashI6StringEE\"></span><span id=\"_CPPv2IENSt4hashI6StringEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structstd_1_1hash_3_01String_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">hash</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv46String\" title=\"String\"><span class=\"n\"><span class=\"pre\">String</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/web/api/events.html#_CPPv45Event\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Event\">\n<span id=\"_CPPv35Event\"></span><span id=\"_CPPv25Event\"></span><span id=\"Event\"></span><span class=\"target\" id=\"structEvent\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Event</span></span></span><br/></dt><dd><p>Data common to all web events. </p><p>Subclassed by KeyboardEvent, MouseEvent, WheelEvent</p></dd>", "a[href=\"library/datastructs/api/set_utils.html#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\">\n<span id=\"_CPPv3I0E10difference6vectorI1TE6vectorI1TE\"></span><span id=\"_CPPv2I0E10difference6vectorI1TE6vectorI1TE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"set__utils_8hpp_1a78f1049de31392871eb54379b80255a8\"></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">set</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">difference</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s1</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E10differenceNSt3setI1TEE6vectorI1TE6vectorI1TE\" title=\"difference::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">s2</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Compute the set difference of s1 and s2 (elements that are in S1 but no S2) </p></dd>", "a[href=\"library/evolve/api/World_structure.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">World_structure.hpp<a class=\"headerlink\" href=\"#world-structure-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Functions for popular world structure methods. </p>", "a[href=\"library/math/api/Random.html#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\">\n<span id=\"_CPPv3I000E23sample_with_replacement15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\"></span><span id=\"_CPPv2I000E23sample_with_replacement15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ForwardIterator</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">OutputIterator</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">RNG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Random_8hpp_1aa797ed2399f9b332d6ad966f5b048542\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">sample_with_replacement</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::ForwardIterator\"><span class=\"n\"><span class=\"pre\">ForwardIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">first</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::ForwardIterator\"><span class=\"n\"><span class=\"pre\">ForwardIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">last</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::OutputIterator\"><span class=\"n\"><span class=\"pre\">OutputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">ofirst</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::OutputIterator\"><span class=\"n\"><span class=\"pre\">OutputIterator</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">olast</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I000E23sample_with_replacementv15ForwardIterator15ForwardIterator14OutputIterator14OutputIterator3RNG\" title=\"sample_with_replacement::RNG\"><span class=\"n\"><span class=\"pre\">RNG</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">rng</span></span><span class=\"sig-paren\">)</span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">noexcept</span></span><br/></dt><dd><p>Draw a sample (with replacement) from an input range, copying to the output range. </p></dd>", "a[href=\"library/datastructs/datastructs.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Data structures<a class=\"headerlink\" href=\"#data-structures\" title=\"Link to this heading\">\uf0c1</a></h1><h2>API<a class=\"headerlink\" href=\"#api\" title=\"Link to this heading\">\uf0c1</a></h2>", "a[href=\"library/meta/api/type_traits.html#_CPPv4I0E11HasToDoubleI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToDoubleEEEE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E11HasToDoubleI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToDoubleEEEE\">\n<span id=\"_CPPv3I0E11HasToDoubleI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToDoubleEEEE\"></span><span id=\"_CPPv2I0E11HasToDoubleI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToDoubleEEEE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structHasToDouble_3_01decoy__t_3_01T_00_01decltype_07std_1_1declval_3_01T_01_4_07_08_8ToDouble_07_08_08_4_01_4\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HasToDouble</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/meta/api/meta.html#_CPPv4I00E7decoy_t\" title=\"decoy_t\"><span class=\"n\"><span class=\"pre\">decoy_t</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HasToDoubleI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToDoubleEEEE\" title=\"HasToDouble&lt;decoy_t&lt;T, decltype(std::declval&lt;T&gt;().ToDouble())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">decltype</span></span><span class=\"p\"><span class=\"pre\">(</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">declval</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E11HasToDoubleI7decoy_tI1TDTcldtclNSt7declvalI1TEEE8ToDoubleEEEE\" title=\"HasToDouble&lt;decoy_t&lt;T, decltype(std::declval&lt;T&gt;().ToDouble())&gt;&gt;::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">.</span></span><span class=\"n\"><span class=\"pre\">ToDouble</span></span><span class=\"p\"><span class=\"pre\">(</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">)</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">true_type</span></span><br/></dt><dd></dd>", "a[href=\"library/config/api/ArgManager.html#_CPPv410ArgManager\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410ArgManager\">\n<span id=\"_CPPv310ArgManager\"></span><span id=\"_CPPv210ArgManager\"></span><span id=\"ArgManager\"></span><span class=\"target\" id=\"classArgManager\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ArgManager</span></span></span><br/></dt><dd><p>Manager for command line arguments and URL query params. </p></dd>", "a[href=\"library/prefab/api/CommentBox.html#_CPPv410CommentBox\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410CommentBox\">\n<span id=\"_CPPv310CommentBox\"></span><span id=\"_CPPv210CommentBox\"></span><span id=\"CommentBox\"></span><span class=\"target\" id=\"classCommentBox\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CommentBox</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>Use CommentBox class to create a light grey \u201ccomment bubble\u201d. Optionally, it can contain text and other web elements. </p></dd>", "a[href=\"library/config/api/FlagManager.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">FlagManager.hpp<a class=\"headerlink\" href=\"#flagmanager-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>This file contains tools for dealing with command-line flags (from argv and argc). </p><p>\nThe FlagManager class will take command line arguments (either in its constructor or with the AddFlags() function) and process them appropriately.</p>", "a[href=\"library/hardware/api/signalgp_utils.html#_CPPv4I0E21SignalGPMutatorFacade\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21SignalGPMutatorFacade\">\n<span id=\"_CPPv3I0E21SignalGPMutatorFacade\"></span><span id=\"_CPPv2I0E21SignalGPMutatorFacade\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Hardware</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classSignalGPMutatorFacade\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SignalGPMutatorFacade</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I_6size_t00E15SignalGPMutator\" title=\"SignalGPMutator\"><span class=\"n\"><span class=\"pre\">SignalGPMutator</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21SignalGPMutatorFacade\" title=\"SignalGPMutatorFacade::Hardware\"><span class=\"n\"><span class=\"pre\">Hardware</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">affinity_width</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E21SignalGPMutatorFacade\" title=\"SignalGPMutatorFacade::Hardware\"><span class=\"n\"><span class=\"pre\">Hardware</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">trait_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E21SignalGPMutatorFacade\" title=\"SignalGPMutatorFacade::Hardware\"><span class=\"n\"><span class=\"pre\">Hardware</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">matchbin_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/MatchBin.html#_CPPv4I0000E12BaseMatchBin\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0000E12BaseMatchBin\">\n<span id=\"_CPPv3I0000E12BaseMatchBin\"></span><span id=\"_CPPv2I0000E12BaseMatchBin\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Val</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Query</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Tag</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Regulator</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classBaseMatchBin\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BaseMatchBin</span></span></span><br/></dt><dd><p>Abstract base class for MatchBin. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv417view_string_frontRKNSt11string_viewE6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417view_string_frontRKNSt11string_viewE6size_t\">\n<span id=\"_CPPv317view_string_frontRKNSt11string_viewE6size_t\"></span><span id=\"_CPPv217view_string_frontRKNSt11string_viewE6size_t\"></span><span id=\"view_string_front__std::string_viewCR.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1a77d660d5668063e30cb27994518e0dba\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string_front</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">npos</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Provide a string_view on a string from the beginning to a given size. </p></dd>", "a[href=\"library/tools/api/value_utils.html#_CPPv4IE8ToDoubleINSt6stringEEdRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE8ToDoubleINSt6stringEEdRKNSt6stringE\">\n<span id=\"_CPPv3IE8ToDoubleINSt6stringEERKNSt6stringE\"></span><span id=\"_CPPv2IE8ToDoubleINSt6stringEERKNSt6stringE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"value__utils_8hpp_1a467b85864f63cbd8a5ab04de923a4581\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ToDouble</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/value_utils.html#_CPPv4I0E10FromDouble1Td\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E10FromDouble1Td\">\n<span id=\"_CPPv3I0E10FromDoubled\"></span><span id=\"_CPPv2I0E10FromDoubled\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"value__utils_8hpp_1a996930cfa54efbcb8fc88313eb838652\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E10FromDouble1Td\" title=\"FromDouble::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FromDouble</span></span></span><span class=\"sig-paren\">(</span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/bits/api/bitset_utils.html#_CPPv4IE13UIntMaskFirstIXL0EEE8uint32_tv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4IE13UIntMaskFirstIXL0EEE8uint32_tv\">\n<span id=\"_CPPv3IE13UIntMaskFirstIXL0EEEv\"></span><span id=\"_CPPv2IE13UIntMaskFirstIX0EEv\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"bitset__utils_8hpp_1a19c03fa3fe7fa2f334bbcfef096defe6\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">uint32_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UIntMaskFirst</span></span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Create an empty bit mask (all zeros) </p></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv450ignore_semicolon_to_follow_TriggerOnLexicaseSelect\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv450ignore_semicolon_to_follow_TriggerOnLexicaseSelect\">\n<span id=\"_CPPv350ignore_semicolon_to_follow_TriggerOnLexicaseSelect\"></span><span id=\"_CPPv250ignore_semicolon_to_follow_TriggerOnLexicaseSelect\"></span><span id=\"ignore_semicolon_to_follow_TriggerOnLexicaseSelect__i\"></span><span class=\"target\" id=\"World__select_8hpp_1ad2030f72e8e7e0e0b5cb79d19186417c\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ignore_semicolon_to_follow_TriggerOnLexicaseSelect</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><br/></dt><dd></dd>", "a[href=\"library/prefab/api/Modal.html#_CPPv45Modal\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Modal\">\n<span id=\"_CPPv35Modal\"></span><span id=\"_CPPv25Modal\"></span><span id=\"Modal\"></span><span class=\"target\" id=\"classModal\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Modal</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/web/api/Div.html#_CPPv43Div\" title=\"Div\"><span class=\"n\"><span class=\"pre\">Div</span></span></a><br/></dt><dd><p>Use Modal class to add a Bootstrap style pop-up modal to your web app. </p></dd>", "a[href=\"library/base/api/Ptr.html#_CPPv49PtrStatus\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv49PtrStatus\">\n<span id=\"_CPPv39PtrStatus\"></span><span id=\"_CPPv29PtrStatus\"></span><span class=\"target\" id=\"Ptr_8hpp_1a980d8ba8d0fe849626d7732339fa7d15\"></span><span class=\"k\"><span class=\"pre\">enum</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">PtrStatus</span></span></span><br/></dt><dd><p><em>Values:</em></p></dd>", "a[href=\"library/text/api/HTMLEncoding.html#_CPPv48HTMLText\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48HTMLText\">\n<span id=\"_CPPv38HTMLText\"></span><span id=\"_CPPv28HTMLText\"></span><span class=\"target\" id=\"HTMLEncoding_8hpp_1a1dcccc7349d50f5a60ae06343bd0af65\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">HTMLText</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">EncodedText</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv412HTMLEncoding\" title=\"HTMLEncoding\"><span class=\"n\"><span class=\"pre\">HTMLEncoding</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/meta/api/FunInfo.html#_CPPv4I00E9BindFirstDa5FUN_TRR7BOUND_T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E9BindFirstDa5FUN_TRR7BOUND_T\">\n<span id=\"_CPPv3I00E9BindFirst5FUN_TRR7BOUND_T\"></span><span id=\"_CPPv2I00E9BindFirst5FUN_TRR7BOUND_T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BOUND_T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"FunInfo_8hpp_1ac0244036d9c1c7741a080e13391119ba\"></span><span class=\"kt\"><span class=\"pre\">auto</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">BindFirst</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I00E9BindFirstDa5FUN_TRR7BOUND_T\" title=\"BindFirst::FUN_T\"><span class=\"n\"><span class=\"pre\">FUN_T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">fun</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I00E9BindFirstDa5FUN_TRR7BOUND_T\" title=\"BindFirst::BOUND_T\"><span class=\"n\"><span class=\"pre\">BOUND_T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">bound</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Lock in the first argument of a function. </p></dd>", "a[href=\"library/datastructs/api/vector_utils.html#_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\">\n<span id=\"_CPPv3I0E9FindValueRK6vectorI1TERK1T6size_t\"></span><span id=\"_CPPv2I0E9FindValueRK6vectorI1TERK1T6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"vector__utils_8hpp_1a3bd32316b181e882939d06ea4e2586f0\"></span><span class=\"kt\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">FindValue</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\" title=\"FindValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">v</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E9FindValueiRK6vectorI1TERK1T6size_t\" title=\"FindValue::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">val</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return the first position of a value in a vector (or -1 if none exists) </p></dd>", "a[href=\"library/math/api/math.html#_CPPv4I0E3Min1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E3Min1T1T\">\n<span id=\"_CPPv3I0E3Min1T\"></span><span id=\"_CPPv2I0E3Min1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"math_8hpp_1a1cc270ad39c6feb6f381763aba865937\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0E3Min1T1T\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Min</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0E3Min1T1T\" title=\"Min::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Min of only one element is that element itself! </p></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I0_6size_tE15EuclideanDimMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_6size_tE15EuclideanDimMod\">\n<span id=\"_CPPv3I0_6size_tE15EuclideanDimMod\"></span><span id=\"_CPPv2I0_6size_tE15EuclideanDimMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Dim</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structEuclideanDimMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">EuclideanDimMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E10BaseMetric\" title=\"BaseMetric\"><span class=\"n\"><span class=\"pre\">BaseMetric</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE15EuclideanDimMod\" title=\"EuclideanDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">query_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE15EuclideanDimMod\" title=\"EuclideanDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">array</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE15EuclideanDimMod\" title=\"EuclideanDimMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">tag_t</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_6size_tE15EuclideanDimMod\" title=\"EuclideanDimMod::Dim\"><span class=\"n\"><span class=\"pre\">Dim</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv419AlphanumericCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv419AlphanumericCharSetv\">\n<span id=\"_CPPv319AlphanumericCharSetv\"></span><span id=\"_CPPv219AlphanumericCharSetv\"></span><span id=\"AlphanumericCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1a4a96547e898cdf1a21f0d0081f7a4c6f\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">AlphanumericCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/math/api/constants.html#_CPPv414pow2_chart_0_1\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414pow2_chart_0_1\">\n<span id=\"_CPPv314pow2_chart_0_1\"></span><span id=\"_CPPv214pow2_chart_0_1\"></span><span id=\"pow2_chart_0_1__doubleCA\"></span><span class=\"target\" id=\"constants_8hpp_1a0334a8edddd75926dbe986265cf13358\"></span><span class=\"k\"><span class=\"pre\">constexpr</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">pow2_chart_0_1</span></span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">]</span></span><br/></dt><dd><p>Table to provide results of Pow2 from 0 to 1. </p></dd>", "a[href=\"library/evolve/api/World_structure.html#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E12SetMapElitesvR5WorldI3ORGE\">\n<span id=\"_CPPv3I0E12SetMapElitesR5WorldI3ORGE\"></span><span id=\"_CPPv2I0E12SetMapElitesR5WorldI3ORGE\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__structure_8hpp_1a9b3014a70b9d5a73ab91bf35b7748d4a\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SetMapElites</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E12SetMapElitesvR5WorldI3ORGE\" title=\"SetMapElites::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Setup a MAP-Elites world, given the provided worlds already has size AND set of phenotypes. Requires world to already have a size; that size is respected when deciding trait bins. </p></dd>", "a[href=\"library/geometry/api/Angle2D.html#_CPPv45Angle\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv45Angle\">\n<span id=\"_CPPv35Angle\"></span><span id=\"_CPPv25Angle\"></span><span id=\"Angle\"></span><span class=\"target\" id=\"classAngle\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Angle</span></span></span><br/></dt><dd></dd>", "a[href=\"dev/contribution-guidelines-and-review.html#guidelines-based-on-emscripten-limitations\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Guidelines based on Emscripten Limitations<a class=\"headerlink\" href=\"#guidelines-based-on-emscripten-limitations\" title=\"Link to this heading\">\uf0c1</a></h2><p>Please see the <a class=\"reference external\" href=\"https://kripken.github.io/emscripten-site/docs/porting/guidelines/portability_guidelines.html\">Emscripten doc\npage</a>\nfor a full list.</p>", "a[href=\"library/base/api/errors.html#_CPPv412ClearExceptsv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412ClearExceptsv\">\n<span id=\"_CPPv312ClearExceptsv\"></span><span id=\"_CPPv212ClearExceptsv\"></span><span id=\"ClearExcepts\"></span><span class=\"target\" id=\"errors_8hpp_1aa10b3ec653b246ba2759910a2e2a02e2\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ClearExcepts</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all waiting exceptions. </p></dd>", "a[href=\"QuickStartGuides/1-HelloWorld.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Hello World<a class=\"headerlink\" href=\"#hello-world\" title=\"Link to this heading\">\uf0c1</a></h1><p>Empirical allows you to compile your C++ to target</p>", "a[href=\"library/tools/api/TypeTracker.html#_CPPv410TrackedVar\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410TrackedVar\">\n<span id=\"_CPPv310TrackedVar\"></span><span id=\"_CPPv210TrackedVar\"></span><span id=\"TrackedVar\"></span><span class=\"target\" id=\"structTrackedVar\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TrackedVar</span></span></span><br/></dt><dd><p>The actual TrackedVar object that manages a Ptr to the value. </p></dd>", "a[href=\"library/base/api/map.html#_CPPv4I00DpE3map\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00DpE3map\">\n<span id=\"_CPPv3I00DpE3map\"></span><span id=\"_CPPv2I00DpE3map\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Key</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Ts</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"classmap\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">map</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">map</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I00DpE3map\" title=\"map::Key\"><span class=\"n\"><span class=\"pre\">Key</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE3map\" title=\"map::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00DpE3map\" title=\"map::Ts\"><span class=\"n\"><span class=\"pre\">Ts</span></span></a><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv414view_string_toRKNSt11string_viewEKc6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv414view_string_toRKNSt11string_viewEKc6size_t\">\n<span id=\"_CPPv314view_string_toRKNSt11string_viewEKc6size_t\"></span><span id=\"_CPPv214view_string_toRKNSt11string_viewEKc6size_t\"></span><span id=\"view_string_to__std::string_viewCR.cC.s\"></span><span class=\"target\" id=\"string__utils_8hpp_1ac35c762cea45c2403497f1fbf607e52a\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">view_string_to</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">delim</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">start_pos</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">0</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Return a view of the prefix of the input string up to a specified delimeter. If the delimeter is not found, return the entire input string. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv416ANSI_BrightBlackv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv416ANSI_BrightBlackv\">\n<span id=\"_CPPv316ANSI_BrightBlackv\"></span><span id=\"_CPPv216ANSI_BrightBlackv\"></span><span id=\"ANSI_BrightBlack\"></span><span class=\"target\" id=\"string__utils_8hpp_1a5d6d50b6e3321f68f81228267da0f471\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ANSI_BrightBlack</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv47justifyRNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv47justifyRNSt6stringE\">\n<span id=\"_CPPv37justifyRNSt6stringE\"></span><span id=\"_CPPv27justifyRNSt6stringE\"></span><span id=\"justify__ssR\"></span><span class=\"target\" id=\"string__utils_8hpp_1a4bdba6cdd814cc8bfe457d562f212d73\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">justify</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Remove all whitespace at both the beginning and the end of a string. </p></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4N12SimpleParser19PhonyNameDueToError7value_tE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SimpleParser19PhonyNameDueToError7value_tE\">\n<span id=\"_CPPv3N12SimpleParser19PhonyNameDueToError7value_tE\"></span><span id=\"_CPPv2N12SimpleParser19PhonyNameDueToError7value_tE\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1a41833a56d5604246bf7b7b123484354a\"></span><span class=\"k\"><span class=\"pre\">using</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">value_t</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0EN12SimpleParser9ValueTypeE\" title=\"SimpleParser::ValueType\"><span class=\"n\"><span class=\"pre\">ValueType</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4N12SimpleParser19PhonyNameDueToError5arg_tE\" title=\"SimpleParser::PhonyNameDueToError::arg_t\"><span class=\"n\"><span class=\"pre\">arg_t</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/></dt><dd></dd>", "a[href=\"library/matching/api/matchbin_metrics.html#_CPPv4I00E6LogMod\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I00E6LogMod\">\n<span id=\"_CPPv3I00E6LogMod\"></span><span id=\"_CPPv2I00E6LogMod\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Metric</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Base</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"structLogMod\"></span><span class=\"k\"><span class=\"pre\">struct</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LogMod</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I00E6LogMod\" title=\"LogMod::Metric\"><span class=\"n\"><span class=\"pre\">Metric</span></span></a><br/></dt><dd></dd>", "a[href=\"library/web/api/init.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">init.hpp<a class=\"headerlink\" href=\"#init-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Define Initialize() and other functions to set up Empirical to build Emscripten projects. </p><p>Init.hpp should always be included if you are compiling Empirical\u2019s web tools with Emscripten. It handles making sure that behind the scenes stuff is all set up properly. It also defines some useful stubs and dummy functions so that your code will still be possible to comple with a normal C++ compiler (although the web part won\u2019t do anything, of course). These stubs are also helpful for avoiding confusion in linters and IDEs. </p>", "a[href=\"library/data/api/DataNode.html#_CPPv44data\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44data\">\n<span id=\"_CPPv34data\"></span><span id=\"_CPPv24data\"></span><span class=\"target\" id=\"DataNode_8hpp_1a511ae0b1c13f95e5f08f1a0dd3da3d93\"></span><span class=\"k\"><span class=\"pre\">enum</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">data</span></span></span><br/></dt><dd><p>A set of modifiers are available do describe DataNode. </p><p><em>Values:</em></p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv413CurrentModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413CurrentModule\">\n<span id=\"_CPPv313CurrentModule\"></span><span id=\"_CPPv213CurrentModule\"></span><span id=\"CurrentModule\"></span><span class=\"target\" id=\"classCurrentModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">CurrentModule</span></span></span><br/></dt><dd><p>== data::Current == This module lets you track the current (i.e. most recently added) value To use this class, add data::Current to the template arguments on your DataNode. Do not use the CurrentModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/data/api/DataNode.html#_CPPv410InfoModule\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv410InfoModule\">\n<span id=\"_CPPv310InfoModule\"></span><span id=\"_CPPv210InfoModule\"></span><span id=\"InfoModule\"></span><span class=\"target\" id=\"classInfoModule\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">InfoModule</span></span></span><br/></dt><dd><p>== data::Info == This module adds information such as a name, description, and keyword for this node. To use this class, add data::Info to the template arguments on your DataNode. Do not use the InfoModule class directly - it is a simplification for documentation purposes and does not actually exist. </p></dd>", "a[href=\"library/web/api/canvas_utils.html#_CPPv44Draw6CanvasRK6vectorI6size_tE6size_tRK6vectorINSt6stringEENSt6stringEdddd\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv44Draw6CanvasRK6vectorI6size_tE6size_tRK6vectorINSt6stringEENSt6stringEdddd\">\n<span id=\"_CPPv34Draw6CanvasRK6vectorI6size_tE6size_tRK6vectorINSt6stringEENSt6stringEdddd\"></span><span id=\"_CPPv24Draw6CanvasRK6vectorI6size_tE6size_tRK6vectorINSt6stringEENSt6stringEdddd\"></span><span id=\"Draw__Canvas.vector:s:CR.s.vector:ss:CR.ss.double.double.double.double\"></span><span class=\"target\" id=\"canvas__utils_8hpp_1ae620a87b38a10021f18019b350baced4\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">Draw</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/web/api/Canvas.html#_CPPv46Canvas\" title=\"Canvas\"><span class=\"n\"><span class=\"pre\">Canvas</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">canvas</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">grid</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">grid_cols</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">color_map</span></span>, <a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">line_color</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cell_width</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">cell_height</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">offset_x</span></span>, <span class=\"kt\"><span class=\"pre\">double</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">offset_y</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Draw a vector onto a canvas as a grid. </p></dd>", "a[href=\"library/evolve/api/World_select.html#_CPPv4I0E21LocalTournamentSelectvR5WorldI3ORGE6size_t6size_t\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0E21LocalTournamentSelectvR5WorldI3ORGE6size_t6size_t\">\n<span id=\"_CPPv3I0E21LocalTournamentSelectR5WorldI3ORGE6size_t6size_t\"></span><span id=\"_CPPv2I0E21LocalTournamentSelectR5WorldI3ORGE6size_t6size_t\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">ORG</span></span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"World__select_8hpp_1a730f4d0c77c1be0935d94ff774952a3e\"></span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">LocalTournamentSelect</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/evolve/api/World.html#_CPPv4I0E5World\" title=\"World\"><span class=\"n\"><span class=\"pre\">World</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0E21LocalTournamentSelectvR5WorldI3ORGE6size_t6size_t\" title=\"LocalTournamentSelect::ORG\"><span class=\"n\"><span class=\"pre\">ORG</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">world</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">t_size</span></span>, <span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">tourny_count</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"m\"><span class=\"pre\">1</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>==LOCAL TOURNAMENT== Selection creates a tournament with a random sub-set of organisms that are neighbor to a random organism, finds the one with the highest fitness, and moves it to the next generation. User provides the world (with a fitness function), the tournament size, and (optionally) the number of tournaments to run. </p></dd>", "a[href=\"library/tools/api/string_utils.html#_CPPv413is_identifierRKNSt6stringE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv413is_identifierRKNSt6stringE\">\n<span id=\"_CPPv313is_identifierRKNSt6stringE\"></span><span id=\"_CPPv213is_identifierRKNSt6stringE\"></span><span id=\"is_identifier__ssCR\"></span><span class=\"target\" id=\"string__utils_8hpp_1aec9482171608dfae0fee9cf50f77e575\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">is_identifier</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">str</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Determine if string is only letters, digits, or underscore (\u2018_\u2019). </p></dd>", "a[href=\"library/math/api/Range.html#_CPPv4I0_bE9MakeRange5RangeI1T13INCLUDE_UPPERE1T1T\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4I0_bE9MakeRange5RangeI1T13INCLUDE_UPPERE1T1T\">\n<span id=\"_CPPv3I0_bE9MakeRange1T1T\"></span><span id=\"_CPPv2I0_bE9MakeRange1T1T\"></span><span class=\"k\"><span class=\"pre\">template</span></span><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"k\"><span class=\"pre\">typename</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">T</span></span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">true</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><br/><span class=\"target\" id=\"Range_8hpp_1adf0b62c034a4ec29478a650d99412ca4\"></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE5Range\" title=\"Range\"><span class=\"n\"><span class=\"pre\">Range</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"#_CPPv4I0_bE9MakeRange5RangeI1T13INCLUDE_UPPERE1T1T\" title=\"MakeRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv4I0_bE9MakeRange5RangeI1T13INCLUDE_UPPERE1T1T\" title=\"MakeRange::INCLUDE_UPPER\"><span class=\"n\"><span class=\"pre\">INCLUDE_UPPER</span></span></a><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">MakeRange</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#_CPPv4I0_bE9MakeRange5RangeI1T13INCLUDE_UPPERE1T1T\" title=\"MakeRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_l</span></span>, <a class=\"reference internal\" href=\"#_CPPv4I0_bE9MakeRange5RangeI1T13INCLUDE_UPPERE1T1T\" title=\"MakeRange::T\"><span class=\"n\"><span class=\"pre\">T</span></span></a><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">_u</span></span><span class=\"sig-paren\">)</span><br/></dt><dd><p>Build a new range with auto-detected type. </p></dd>", "a[href=\"library/tools/api/char_utils.html#_CPPv412UpperCharSetv\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv412UpperCharSetv\">\n<span id=\"_CPPv312UpperCharSetv\"></span><span id=\"_CPPv212UpperCharSetv\"></span><span id=\"UpperCharSet\"></span><span class=\"target\" id=\"char__utils_8hpp_1a17316bf5cbfa32052369ecf863526c71\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv47CharSet\" title=\"CharSet\"><span class=\"n\"><span class=\"pre\">CharSet</span></span></a><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">UpperCharSet</span></span></span><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/text/api/Text.html#_CPPv417TextEncoding_None\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv417TextEncoding_None\">\n<span id=\"_CPPv317TextEncoding_None\"></span><span id=\"_CPPv217TextEncoding_None\"></span><span id=\"TextEncoding_None\"></span><span class=\"target\" id=\"classTextEncoding__None\"></span><span class=\"k\"><span class=\"pre\">class</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">TextEncoding_None</span></span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">public</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#_CPPv422TextEncoding_Interface\" title=\"TextEncoding_Interface\"><span class=\"n\"><span class=\"pre\">TextEncoding_Interface</span></span></a><br/></dt><dd></dd>", "a[href=\"library/web/api/DocuExtras.html\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">DocuExtras.hpp<a class=\"headerlink\" href=\"#docuextras-hpp\" title=\"Link to this heading\">\uf0c1</a></h1><p>Control the styling and attributes of an existing div without nuking the content inside it. </p>", "a[href=\"library/tools/api/string_utils.html#_CPPv48find_allNSt11string_viewEcR6vectorI6size_tEKbbbb\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv48find_allNSt11string_viewEcR6vectorI6size_tEKbbbb\">\n<span id=\"_CPPv38find_allNSt11string_viewEcR6vectorI6size_tEKbbbb\"></span><span id=\"_CPPv28find_allNSt11string_viewEcR6vectorI6size_tEKbbbb\"></span><span id=\"find_all__std::string_view.c.vector:s:R.bC.b.b.b\"></span><span class=\"target\" id=\"string__utils_8hpp_1ae548133d6858741a2b3917d40af4be0e\"></span><span class=\"k\"><span class=\"pre\">static</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">void</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">find_all</span></span></span><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string_view</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">in_string</span></span>, <span class=\"kt\"><span class=\"pre\">char</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">target</span></span>, <a class=\"reference internal\" href=\"library/base/api/vector.html#_CPPv4I0DpE6vector\" title=\"vector\"><span class=\"n\"><span class=\"pre\">vector</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><span class=\"n\"><span class=\"pre\">size_t</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">results</span></span>, <span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_quotes</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_parens</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_braces</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span>, <span class=\"kt\"><span class=\"pre\">bool</span></span><span class=\"w\"> </span><span class=\"n sig-param\"><span class=\"pre\">skip_brackets</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"k\"><span class=\"pre\">false</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>", "a[href=\"library/data/api/SimpleParser.html#_CPPv4N12SimpleParser19PhonyNameDueToError11SymbolTableERK6ra_mapINSt6stringE7VALUE_TE\"]": "<dt class=\"sig sig-object cpp\" id=\"_CPPv4N12SimpleParser19PhonyNameDueToError11SymbolTableERK6ra_mapINSt6stringE7VALUE_TE\">\n<span id=\"_CPPv3N12SimpleParser19PhonyNameDueToError11SymbolTableERK6ra_mapINSt6stringE7VALUE_TE\"></span><span id=\"_CPPv2N12SimpleParser19PhonyNameDueToError11SymbolTableERK6ra_mapINSt6stringE7VALUE_TE\"></span><span id=\"SimpleParser::PhonyNameDueToError::SymbolTable__ra_map:ss.VALUE_T:CR\"></span><span class=\"target\" id=\"structSimpleParser_1_1SymbolTable_3_01ra__map_3_01std_1_1string_00_01VALUE__T_01_4_00_01DUMMY__T_01_4_1aa7edc25a18d31bff73c604c8e121bc90\"></span><span class=\"k\"><span class=\"pre\">inline</span></span><span class=\"w\"> </span><span class=\"sig-name descname\"><span class=\"n\"><span class=\"pre\">SymbolTable</span></span></span><span class=\"sig-paren\">(</span><span class=\"k\"><span class=\"pre\">const</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"library/datastructs/api/ra_map.html#_CPPv4I00000E6ra_map\" title=\"ra_map\"><span class=\"n\"><span class=\"pre\">ra_map</span></span></a><span class=\"p\"><span class=\"pre\">&lt;</span></span><a class=\"reference internal\" href=\"library/bits/api/Bits.html#_CPPv4St\" title=\"std\"><span class=\"n\"><span class=\"pre\">std</span></span></a><span class=\"p\"><span class=\"pre\">::</span></span><span class=\"n\"><span class=\"pre\">string</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">VALUE_T</span></span><span class=\"p\"><span class=\"pre\">&gt;</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">&amp;</span></span><span class=\"n sig-param\"><span class=\"pre\">in_map</span></span><span class=\"sig-paren\">)</span><br/></dt><dd></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
