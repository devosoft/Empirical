-= Active Projects =-
TubeCode
PuzzleEngine (was EvoPuzzler)
Evoke

-= Questions =-
Best way to convert to a c++ literal independent of type?
How to dynamically change an include file?

-= Fixes =-
Make emp_assert handle extra arguments outside of just Emscripten mode.
Make JSWrap more flexible for different types of functions that can get passed into it.

-= Improvements =-
Allow default UI::Style overall and for each object type.
-Create a UI::StyleGroup that elements can be added to and altered as one (use proper CSS class?)
Allow Signal links to be REMOVED or REPLACED
Allow Signal triggers to be chained (with a single trigger being able to chain to a series of others)
Allow Signal links to be named?

-= Improvements to Consider =-
Why are styles applied AFTER GetHTML is run; can't they be done at the same time?
Try out Ptr class to see if it can catch mis-handled pointers
InstLib: Can we lock a set of instruction at compile time?  Or at least put them in a fixed array?
Change HardwareCPU to something like Hardware_SimpleCPU and Instruction to Instruction_SimpleCPU

-= New Elements =-
Forms
JQuerryUI Tabs?
Span (?) for future manual references
Dynamic web link? (Easy to change and verify, rather than embeded in text.)

-= General tools to build =-
A data management system that can track data by:
  - Temporal series (values over time)
  - Batch (where a batch reset occurs periodically)
  - Log (tracking particular events when they occur)
  All output files should have headers that allow them to be read back in more easily.

-= Evolution-specific Tools =-
Organism Object (Contains Genome and templated on virtual hardware type)
Genotype manager (for organisms with identical genomes)
Phenotype summary to include in the genotype
Phylogeny/lineage manager with multiple modes of purging (and link to phenotypes?)
Clade manager that will mark into phenotypes which clades they are associated with

-= Optimizations to Explore =-
Should quick-lookup for sin, cos, tan be at higher resolution (now it's 256 entires)?
Fix how sectors are handled in surfaces to be more dynamic based on sizes of organisms.
- Consider sorting organisms by size and processing smallest first?
  Then any particular comparison is only up against as small or smaller.
- Test only objects that have moved (against all objects)
- Sort all objects within bands?


-= Specific ideas for Configurtion tools =-
* Build an HTML object to automatically allow adjustment of settings in a running ap.
* Allow other commands to redirect the rest of the line to a specific object for processing.
* Auto-generation of config file entries beyond just "set"
* See about uniting library user config file and end user config file into consistent format.

-= Documentation =-
* Overview of web framework with examples.
* How to setup and use the config tools.

-= Librarys to consider wrapping =-
FabricJS
PaperJS -- VERY impressive demos!!  (PLUS best benchmarks next to native canvas)
oCanvas

http://www.graphdracula.net/  - build vertices & edges easily!
Box2D
Processing.JS
ChartJS
jqPlot
JQuery Sparklines -- Inline graphs

D3

-= Frameworks to consider wrapping =-
Ionic
Ember -- read strong arguments from developer; built to be practical in getting good aps fast.
